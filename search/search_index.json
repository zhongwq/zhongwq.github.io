{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Zhong Wenqian A student major in Software Engineering in SYSU(Sun Yat-sen University). Contact me Email: 1316628630@qq.com Github: zhongwq@github","title":"Home"},{"location":"#zhong-wenqian","text":"A student major in Software Engineering in SYSU(Sun Yat-sen University).","title":"Zhong Wenqian"},{"location":"#contact-me","text":"Email: 1316628630@qq.com Github: zhongwq@github","title":"Contact me"},{"location":"Leetcode Note/Leetcoe 327.Count of Range Sum \u9898\u89e3/","text":"Leetcoe 327.Count of Range Sum \u9898\u89e3 \u9898\u76ee\u94fe\u63a5 Leetcode 327. Count of Range Sum \u9898\u76ee\u5185\u5bb9 Given an integer array nums, return the number of range sums that lie in [lower, upper] inclusive. Range sum S(i, j) is defined as the sum of the elements in nums between indices i and j (i \u2264 j), inclusive. Note: A naive algorithm of O(n^2) is trivial. You MUST do better than that. Example: Input: nums = [-2,5,-1], lower = -2, upper = 2, Output: 3 Explanation: The three ranges are : [0,0], [2,2], [0,2] and their respective sums are: -2, -1, 2. \u89e3\u9898\u601d\u8def \u9996\u5148\uff0c\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u7684\u6c42\u548c\uff0c\u6211\u60f3\u5230\u7684\u662f\u5148\u628a\u6211\u4eec\u7684\u8f93\u5165\u7684\u6570\u7ec4\u8f6c\u5316\u6210\u4e00\u4e2a\u4ee3\u8868\u524di\u4e2a\u6570\u4e4b\u548c\u7684\u6570\u7ec4Sum,\u518d\u5bf9\u8be5\u6570\u7ec4\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u4e3a\u6211\u4eec\u6c42\u7b2cj\u4f4d\u5230\u7b2ci\u4f4d\u7684\u548c\u53ea\u9700\u8981\u6c42Sum(j,i) = Sum(j) - Sum(i)\u5373\u53ef\u6c42\u5230[i, j) \u8303\u56f4\u7684\u6570\u5b57\u4e4b\u548c\uff0c\u5373\u7b2ci\u4e2a\u6570\u5b57\u5230\u7b2cj-1\u4e2a\u6570\u5b57\u4e4b\u548c\u3002 \u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\uff0c\u6211\u7684Sum\u6570\u7ec4\u4e2d\uff0cSum[0]\u8bbe\u4e3a0\uff0cSum[i]\u51c6\u786e\u8868\u793a\u5230\u7b2c\u51e0\u4e2a\u6570\u5b57\u4e4b\u548c = Sum[i] - Sum[0] \u6709\u4e86\u4ee5\u4e0a\u7684\u8f6c\u53d8\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u6c42\u6cd5\u5c31\u7b80\u5355\u4e86 \u7531\u4e8e\u6211\u662f\u4e3a\u4e86\u7ec3\u4e60\u5f52\u5e76\u7b97\u6cd5\u4e3a\u76ee\u7684\u9009\u62e9\u7684\u8fd9\u4e2a\u9898\u76ee\uff0c\u6240\u4ee5\u6211\u5728\u89e3\u51b3\u65f6\u7528\u5230\u4e86\u7c7b\u4f3c\u5f52\u5e76\u7684\u601d\u8def\u3002 \u901a\u8fc7\u4e0d\u65ad\u628a\u95ee\u9898\u62c6\u5206\u6210\u524d\u4e00\u534a\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570+\u540e\u4e00\u534a\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570+\u5f53\u524d\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570\uff0c\u5e76\u5728\u62c6\u5206\u5230\u53ea\u5269\u4e0b\u4e00\u4e2a\u6570\u5b57\u7684\u65f6\u5019return,\u901a\u8fc7\u8fd9\u6837\u7684\u5f52\u5e76\u7b97\u6cd5\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\u3002 \u56e0\u4e3a\u5728\u5408\u5e76\u65f6\uff0c\u524d\u4e00\u534a\u548c\u540e\u4e00\u822c\u7684\u6570\u91cf\u5df2\u8ba1\u7b97\u51fa\u4e14\u6570\u7ec4\u6709\u5e8f\uff0c\u56e0\u6b64\uff0c\u5f53\u524d\u8303\u56f4\u4e2d\u8ba1\u7b97\u4e2a\u6570\u548c\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u90fd\u5747\u662fO(N)\uff0c\u6240\u4ee5\u6574\u4f53\u7684\u590d\u6742\u5ea6\u4e3aO(N*logN) \u9898\u76ee\u4ee3\u7801 class Solution { public : int mergeAnlyse ( vector < long >& sum , int lower , int upper , int l , int r ) { if ( r - l <= 1 ) return 0 ; int mid = ( r + l ) / 2 , m = mid , n = mid , ans = 0 ; ans = mergeAnlyse ( sum , lower , upper , l , mid ) + mergeAnlyse ( sum , lower , upper , mid , r ); //\u95ee\u9898\u62c6\u5206 for ( int i = l ; i < mid ; i ++ ) { while ( m < r && sum [ m ] - sum [ i ] < lower ) m ++ ; while ( n < r && sum [ n ] - sum [ i ] <= upper ) n ++ ; ans += n - m ; } //\u901a\u8fc7\u904d\u5386\u5bfb\u627e\u5f53\u524d\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570 inplace_merge ( sum . begin () + l , sum . begin () + mid , sum . begin () + r ); //\u4f7f\u7528STL\u5e93\u4e2d\u7684\u51fd\u6570\u5b9e\u73b0\u5f52\u5e76 return ans ; } int countRangeSum ( vector < int >& nums , int lower , int upper ) { int len = nums . size (); vector < long > tmp ( len + 1 , 0 ); for ( int i = 0 ; i < len ; i ++ ) tmp [ i + 1 ] = tmp [ i ] + nums [ i ]; return mergeAnlyse ( tmp , lower , upper , 0 , len + 1 ); } }; \u603b\u7ed3 \u4e2a\u4eba\u89c9\u5f97\u8fd9\u4e2a\u9898\u76ee\u7684\u5173\u952e\u70b9\u5176\u5b9e\u5c31\u5728\u4e8e\u628a\u539f\u5148\u6570\u7ec4\u8f6c\u53d8\u6210\u4e00\u4e2a\u548c\u7684\u6570\u7ec4\u65b9\u4fbf\u8ba1\u7b97\u7b2ci\u4e2a\u6570\u5b57\u5230\u7b2cj-1\u4e2a\u6570\u5b57\u4e4b\u548c\u8fd9\u4e2a\u505a\u9898\u6280\u5de7\uff0c\u800c\u5f52\u5e76\u7b97\u6cd5\u65b9\u9762\u7684\u96be\u5ea6\u5e76\u4e0d\u5927\uff0c\u53ea\u8981\u61c2\u5f97\u5728\u6211\u4eec\u7684\u5f52\u5e76\u7b97\u6cd5\u4e2d\u7ed3\u5408\u5f52\u5e76\u6392\u5e8f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6bcf\u4e00\u6b21\u5bfb\u627e\u7b26\u5408\u8303\u56f4\u4e2a\u6570\u7684\u65f6\u5019\u90fd\u53ef\u4ee5\u901a\u8fc7O(N)\u7684\u590d\u6742\u5ea6\u5c31\u5f97\u5230\u7ed3\u679c\uff0c\u4ece\u800c\u4f7f\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u964d\u4f4e\u5230O(N*LogN)","title":"Leetcoe 327.Count of Range Sum \u9898\u89e3"},{"location":"Leetcode Note/Leetcoe 327.Count of Range Sum \u9898\u89e3/#leetcoe-327count-of-range-sum","text":"","title":"Leetcoe 327.Count of Range Sum \u9898\u89e3"},{"location":"Leetcode Note/Leetcoe 327.Count of Range Sum \u9898\u89e3/#_1","text":"Leetcode 327. Count of Range Sum","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcoe 327.Count of Range Sum \u9898\u89e3/#_2","text":"Given an integer array nums, return the number of range sums that lie in [lower, upper] inclusive. Range sum S(i, j) is defined as the sum of the elements in nums between indices i and j (i \u2264 j), inclusive. Note: A naive algorithm of O(n^2) is trivial. You MUST do better than that. Example: Input: nums = [-2,5,-1], lower = -2, upper = 2, Output: 3 Explanation: The three ranges are : [0,0], [2,2], [0,2] and their respective sums are: -2, -1, 2.","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcoe 327.Count of Range Sum \u9898\u89e3/#_3","text":"\u9996\u5148\uff0c\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u7684\u6c42\u548c\uff0c\u6211\u60f3\u5230\u7684\u662f\u5148\u628a\u6211\u4eec\u7684\u8f93\u5165\u7684\u6570\u7ec4\u8f6c\u5316\u6210\u4e00\u4e2a\u4ee3\u8868\u524di\u4e2a\u6570\u4e4b\u548c\u7684\u6570\u7ec4Sum,\u518d\u5bf9\u8be5\u6570\u7ec4\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u4e3a\u6211\u4eec\u6c42\u7b2cj\u4f4d\u5230\u7b2ci\u4f4d\u7684\u548c\u53ea\u9700\u8981\u6c42Sum(j,i) = Sum(j) - Sum(i)\u5373\u53ef\u6c42\u5230[i, j) \u8303\u56f4\u7684\u6570\u5b57\u4e4b\u548c\uff0c\u5373\u7b2ci\u4e2a\u6570\u5b57\u5230\u7b2cj-1\u4e2a\u6570\u5b57\u4e4b\u548c\u3002 \u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\uff0c\u6211\u7684Sum\u6570\u7ec4\u4e2d\uff0cSum[0]\u8bbe\u4e3a0\uff0cSum[i]\u51c6\u786e\u8868\u793a\u5230\u7b2c\u51e0\u4e2a\u6570\u5b57\u4e4b\u548c = Sum[i] - Sum[0] \u6709\u4e86\u4ee5\u4e0a\u7684\u8f6c\u53d8\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u6c42\u6cd5\u5c31\u7b80\u5355\u4e86 \u7531\u4e8e\u6211\u662f\u4e3a\u4e86\u7ec3\u4e60\u5f52\u5e76\u7b97\u6cd5\u4e3a\u76ee\u7684\u9009\u62e9\u7684\u8fd9\u4e2a\u9898\u76ee\uff0c\u6240\u4ee5\u6211\u5728\u89e3\u51b3\u65f6\u7528\u5230\u4e86\u7c7b\u4f3c\u5f52\u5e76\u7684\u601d\u8def\u3002 \u901a\u8fc7\u4e0d\u65ad\u628a\u95ee\u9898\u62c6\u5206\u6210\u524d\u4e00\u534a\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570+\u540e\u4e00\u534a\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570+\u5f53\u524d\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570\uff0c\u5e76\u5728\u62c6\u5206\u5230\u53ea\u5269\u4e0b\u4e00\u4e2a\u6570\u5b57\u7684\u65f6\u5019return,\u901a\u8fc7\u8fd9\u6837\u7684\u5f52\u5e76\u7b97\u6cd5\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\u3002 \u56e0\u4e3a\u5728\u5408\u5e76\u65f6\uff0c\u524d\u4e00\u534a\u548c\u540e\u4e00\u822c\u7684\u6570\u91cf\u5df2\u8ba1\u7b97\u51fa\u4e14\u6570\u7ec4\u6709\u5e8f\uff0c\u56e0\u6b64\uff0c\u5f53\u524d\u8303\u56f4\u4e2d\u8ba1\u7b97\u4e2a\u6570\u548c\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u90fd\u5747\u662fO(N)\uff0c\u6240\u4ee5\u6574\u4f53\u7684\u590d\u6742\u5ea6\u4e3aO(N*logN)","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcoe 327.Count of Range Sum \u9898\u89e3/#_4","text":"class Solution { public : int mergeAnlyse ( vector < long >& sum , int lower , int upper , int l , int r ) { if ( r - l <= 1 ) return 0 ; int mid = ( r + l ) / 2 , m = mid , n = mid , ans = 0 ; ans = mergeAnlyse ( sum , lower , upper , l , mid ) + mergeAnlyse ( sum , lower , upper , mid , r ); //\u95ee\u9898\u62c6\u5206 for ( int i = l ; i < mid ; i ++ ) { while ( m < r && sum [ m ] - sum [ i ] < lower ) m ++ ; while ( n < r && sum [ n ] - sum [ i ] <= upper ) n ++ ; ans += n - m ; } //\u901a\u8fc7\u904d\u5386\u5bfb\u627e\u5f53\u524d\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570 inplace_merge ( sum . begin () + l , sum . begin () + mid , sum . begin () + r ); //\u4f7f\u7528STL\u5e93\u4e2d\u7684\u51fd\u6570\u5b9e\u73b0\u5f52\u5e76 return ans ; } int countRangeSum ( vector < int >& nums , int lower , int upper ) { int len = nums . size (); vector < long > tmp ( len + 1 , 0 ); for ( int i = 0 ; i < len ; i ++ ) tmp [ i + 1 ] = tmp [ i ] + nums [ i ]; return mergeAnlyse ( tmp , lower , upper , 0 , len + 1 ); } };","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcoe 327.Count of Range Sum \u9898\u89e3/#_5","text":"\u4e2a\u4eba\u89c9\u5f97\u8fd9\u4e2a\u9898\u76ee\u7684\u5173\u952e\u70b9\u5176\u5b9e\u5c31\u5728\u4e8e\u628a\u539f\u5148\u6570\u7ec4\u8f6c\u53d8\u6210\u4e00\u4e2a\u548c\u7684\u6570\u7ec4\u65b9\u4fbf\u8ba1\u7b97\u7b2ci\u4e2a\u6570\u5b57\u5230\u7b2cj-1\u4e2a\u6570\u5b57\u4e4b\u548c\u8fd9\u4e2a\u505a\u9898\u6280\u5de7\uff0c\u800c\u5f52\u5e76\u7b97\u6cd5\u65b9\u9762\u7684\u96be\u5ea6\u5e76\u4e0d\u5927\uff0c\u53ea\u8981\u61c2\u5f97\u5728\u6211\u4eec\u7684\u5f52\u5e76\u7b97\u6cd5\u4e2d\u7ed3\u5408\u5f52\u5e76\u6392\u5e8f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6bcf\u4e00\u6b21\u5bfb\u627e\u7b26\u5408\u8303\u56f4\u4e2a\u6570\u7684\u65f6\u5019\u90fd\u53ef\u4ee5\u901a\u8fc7O(N)\u7684\u590d\u6742\u5ea6\u5c31\u5f97\u5230\u7ed3\u679c\uff0c\u4ece\u800c\u4f7f\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u964d\u4f4e\u5230O(N*LogN)","title":"\u603b\u7ed3"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb01-GUI\u4e95\u5b57\u68cb/","text":"\u5b66\u4e60\u7b14\u8bb01-GUI\u4e95\u5b57\u68cb 1. \u7b80\u7b54\u9898 \u89e3\u91ca \u6e38\u620f\u5bf9\u8c61\uff08GameObjects\uff09 \u548c \u8d44\u6e90\uff08Assets\uff09\u7684\u533a\u522b\u4e0e\u8054\u7cfb\u3002 \u8d44\u6e90(Assets)\u662f\u5305\u542b\u5728\u6e38\u620f\u6587\u4ef6\u4e2d\uff0c\u4e3a\u6e38\u620f\u5bf9\u8c61\u6240\u4f7f\u7528\u7684\uff0c\u4e00\u4e2a\u8d44\u6e90\u53ef\u4ee5\u88ab\u4e00\u4e2a\u6216\u591a\u4e2a\u5bf9\u8c61\u4f7f\u7528\u3002\u800c\u5bf9\u8c61\u51fa\u73b0\u5728\u6e38\u620f\u573a\u666f(Scene)\u4e2d\uff0c\u662fComponents\u3001\u8d44\u6e90\u6574\u5408\u5728\u4e00\u8d77\u7684\u7ed3\u679c\u3002 \u4e0b\u8f7d\u51e0\u4e2a\u6e38\u620f\u6848\u4f8b\uff0c\u5206\u522b\u603b\u7ed3\u8d44\u6e90\u3001\u5bf9\u8c61\u7ec4\u7ec7\u7684\u7ed3\u6784 \u5206\u6790\u4e0b\u8f7d\u7684\u6e38\u620f\u6848\u4f8b 1.\u8d44\u6e90\u6587\u4ef6\u5939\u901a\u5e38\u6709\u5bf9\u8c61\u3001\u6750\u8d28\u3001\u573a\u666f\u3001\u58f0\u97f3\u3001\u9884\u8bbe\u3001\u8d34\u56fe\u3001\u811a\u672c\u3001\u52a8\u4f5c\uff0c\u5728\u8fd9\u4e9b\u6587\u4ef6\u5939\u4e0b\u53ef\u4ee5\u7ee7\u7eed\u5212\u5206\u3002 2.\u5bf9\u8c61\u4e2d\u4e00\u822c\u6709\u73a9\u5bb6\u3001\u654c\u4eba\u3001\u73af\u5883\u3001\u6444\u50cf\u673a\u548c\u97f3\u4e50\u7b49\u865a\u62df\u7236\u7c7b\uff0c\u8fd9\u4e9b\u7236\u7c7b\u672c\u8eab\u6ca1\u6709\u5b9e\u4f53\uff0c\u4f46\u4ed6\u4eec\u7684\u5b50\u7c7b\u5305\u542b\u4e86\u6e38\u620f\u4e2d\u4f1a\u51fa\u73b0\u7684\u5bf9\u8c61\u3002 \u7f16\u5199\u4e00\u4e2a\u4ee3\u7801\uff0c\u4f7f\u7528 debug \u8bed\u53e5\u6765\u9a8c\u8bc1 MonoBehaviour \u57fa\u672c\u884c\u4e3a\u6216\u4e8b\u4ef6\u89e6\u53d1\u7684\u6761\u4ef6 \u57fa\u672c\u884c\u4e3a\u5305\u62ec Awake() Start() Update() FixedUpdate() LateUpdate() \u5e38\u7528\u4e8b\u4ef6\u5305\u62ec OnGUI() OnDisable() OnEnable() public class testBasicBehaviour : MonoBehaviour { void Awake () { Debug . Log ( \"onAwake\" ); } void Start () { Debug . Log ( \"onStart\" ); } void Update () { Debug . Log ( \"onUpdate\" ); } void FixedUpdate () { Debug . Log ( \"onFixedUpdate\" ); } void LateUpdate () { Debug . Log ( \"onLateUpdate\" ); } void OnGUI () { Debug . Log ( \"onGUI\" ); } void Reset () { Debug . Log ( \"onReset\" ); } void OnDisable () { Debug . Log ( \"onDisable\" ); } void OnDestroy () { Debug . Log ( \"onDestroy\" ); } } \u67e5\u627e\u811a\u672c\u624b\u518c\uff0c\u4e86\u89e3 GameObject\uff0cTransform\uff0cComponent \u5bf9\u8c61 \u5206\u522b\u7ffb\u8bd1\u5b98\u65b9\u5bf9\u4e09\u4e2a\u5bf9\u8c61\u7684\u63cf\u8ff0\uff08Description\uff09 \u6e38\u620f\u5bf9\u8c61\u5728Unity\u4e2d\u662f\u4ee3\u8868\u7740\u6e38\u620f\u7269\u4ef6\u3001\u9053\u5177\u4ee5\u53ca\u6e38\u620f\u573a\u666f\u7684\u57fa\u672c\u5bf9\u8c61\u3002\u5b83\u4eec\u672c\u8eab\u6ca1\u6709\u5b8c\u6210\u592a\u591a\u5185\u5bb9\uff0c\u4f46\u5b83\u4eec\u5145\u5f53\u7740\u7ec4\u4ef6\u7684\u5bb9\u5668\uff0c\u8ba9\u5f00\u53d1\u8005\u5b9e\u73b0\u771f\u6b63\u7684\u529f\u80fd\u3002 Transform\u5c5e\u6027\u5b9a\u4e49\u4e86\u7ec4\u4ef6\u7684\u4f4d\u7f6e\uff0c\u65cb\u8f6c\u89d2\u5ea6\uff0c\u5404\u4e2a\u65b9\u5411\u7684\u5927\u5c0f\u6bd4\u4f8b\uff08\u7f29\u653e\uff09\u3002\u6bcf\u4e00\u4e2a\u6e38\u620f\u5bf9\u8c61(GameObject)\u90fd\u6709\u7740\u4e00\u4e2aTransform\u3002 \u7ec4\u4ef6\u662f\u6e38\u620f\u4e2d\u7269\u4f53\u548c\u884c\u4e3a\u7684\u87ba\u6bcd\u548c\u87ba\u6813, \u5b83\u4eec\u662f\u6bcf\u4e2a\u6e38\u620f\u5bf9\u8c61\u7684\u529f\u80fd\u5757\u3002\u4e00\u4e2a\u6e38\u620f\u5bf9\u8c61\u662f\u8bb8\u591a\u4e0d\u540c\u7684\u7ec4\u4ef6\u7684\u5bb9\u5668\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u7684\u6e38\u620f\u5bf9\u8c61\u81ea\u52a8\u62e5\u6709Transform\u7ec4\u4ef6\u3002\u8fd9\u662f\u56e0\u4e3aTransform\u7ec4\u4ef6\u51b3\u5b9a\u4e86\u6e38\u620f\u5bf9\u8c61\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u65cb\u8f6c\u548c\u7f29\u653e\u3002\u6ca1\u6709Transform\u7ec4\u4ef6\u7684\u6e38\u620f\u5bf9\u8c61\uff0c\u4e0d\u4f1a\u5728World\u4e2d\u5b58\u5728\u3002 \u63cf\u8ff0\u4e0b\u56fe\u4e2d table \u5bf9\u8c61\uff08\u5b9e\u4f53\uff09\u7684\u5c5e\u6027\u3001table \u7684 Transform \u7684\u5c5e\u6027\u3001 table \u7684 \u90e8\u4ef6 \u8be5table\u5bf9\u8c61\u7684\u5c5e\u6027\uff08component\uff09\u6709\u5982\u4e0b: > 1. Transform\u63cf\u8ff0\u4e86table\u5bf9\u8c61\u7684\u4f4d\u7f6e\uff0c\u65cb\u8f6c\u89d2\u5ea6\uff0c\u7f29\u653e, \u56fe\u4e2d\u7684\u5c5e\u6027\u4e3a,\u4f4d\u7f6e(0,0,0), \u65cb\u8f6c(0,0,0),\u6bd4\u4f8b\u4e3a(100%, 100%, 100%); Mesh Filter\u7f51\u683c\u8fc7\u6ee4\u5668\u63cf\u8ff0\u4e86\u51e0\u4f55\u4f53\u7684\u5f62\u72b6,\u56fe\u4e2dtable\u4e3aCube\uff08\u7acb\u65b9\u4f53\uff09 Box Colider\u5219\u63cf\u8ff0\u4e86\u7269\u4f53\u7684\u78b0\u649e\u8303\u56f4\uff0c\u56fe\u4e2d\u7684\u78b0\u649e\u8303\u56f4\u4e3a\u4ee5(0,0,0),(1,0,0),(0,1,0),(1,1,0),(0,0,1),(1,0,1),(0,1,1),(1,1,1)\u4e3a\u9876\u70b9\u7684\u4e00\u4e2a\u6b63\u65b9\u4f53 Mesh Renderer\u7f51\u683c\u6e32\u67d3\u5668\u5219\u4ece\u7f51\u683c\u8fc7\u6ee4\u5668\u4e2d\u83b7\u5f97\u51e0\u4f55\u4f53\u7684\u5f62\u72b6\u7136\u540e\u6839\u636e\u8981\u6c42\u8fdb\u884c\u6e32\u67d3\u3002\u56fe\u4e2d\u7684\u5c5e\u6027\u4e3a Cast Shadows(\u6295\u5c04\u9634\u5f71\u65b9\u5f0f)\u5f00\u542f,\u63a5\u53d7\u9634\u5f71 Motion Vectors\uff08\u8fd0\u52a8\u5411\u91cf\u751f\u6210\u65b9\u5f0f\uff09\u4e3aPerObject Motion\uff08\u4f1a\u6e32\u67d3\u51fa\u4e00\u4e2a\u201c\u6bcf\u4e2a\u5bf9\u8c61\u201d\u8fd0\u52a8\u5411\u91cf\u901a\u9053\uff09\uff0c\u6750\u8d28\u4e3a\u9ed8\u8ba4\u6750\u8d28\uff0cLight Probes\uff08\u5149\u63a2\u5934\u63d2\u503c\u65b9\u5f0f\uff09\u4ee5\u53caReflection Probes\uff08\u53cd\u5c04\u63a2\u5934\u90fd\u4e3a\u6df7\u5408\uff09\uff0cAnchor Override\u4e3a\u5f53\u4f7f\u7528\u5149\u63a2\u5934\u6216\u53cd\u5c04\u63a2\u5934\u7cfb\u7edf\u65f6\uff0c\u7528\u6765\u51b3\u5b9a\u63d2\u503c\u4f4d\u7f6e\u7684Transform\uff0c\u56fe\u4e2d\u672a\u5b9a\u4e49\u8be5Transform\u3002 \u7528 UML \u56fe\u63cf\u8ff0 \u4e09\u8005\u7684\u5173\u7cfb\uff08\u8bf7\u4f7f\u7528 UMLet 14.1.1 stand-alone\u7248\u672c\u51fa\u56fe\uff09 \u6574\u7406\u76f8\u5173\u5b66\u4e60\u8d44\u6599\uff0c\u7f16\u5199\u7b80\u5355\u4ee3\u7801\u9a8c\u8bc1\u4ee5\u4e0b\u6280\u672f\u7684\u5b9e\u73b0\uff1a(\u67e5\u627e\u5bf9\u8c61\u3001\u6dfb\u52a0\u5b50\u5bf9\u8c61\u3001\u904d\u5386\u5bf9\u8c61\u6811\u3001\u6e05\u9664\u6240\u6709\u5b50\u5bf9\u8c61) //\u67e5\u627e\u5bf9\u8c61 public static GameObject Find ( string name ) //\u901a\u8fc7\u540d\u5b57\u67e5\u627e public static GameObject FindWithTag ( string tag ) //\u901a\u8fc7\u6807\u7b7e\u67e5\u627e\u5355\u4e2a\u5bf9\u8c61 public static GameObject [] FindGameObjectsWithTag ( string tag ) //\u901a\u8fc7\u6807\u7b7e\u67e5\u627e\u591a\u4e2a\u5bf9\u8c61 //\u6dfb\u52a0\u5b50\u5bf9\u8c61 public static GameObect CreatePrimitive ( PrimitiveTypetype ) //\u904d\u5386\u5bf9\u8c61\u6811 foreach ( Transform child in transform ) { Debug . Log ( child . gameObject . name ); } //\u6e05\u9664\u6240\u6709\u5b50\u5bf9\u8c61 foreach ( Transform child in transform ) { Destroy ( child . gameObject ); } \u9884\u8bbe\uff08Prefabs\uff09\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u4e0e\u5bf9\u8c61\u514b\u9686 (clone or copy or Instantiate of Unity Object) \u5173\u7cfb\uff1f Unity\u901a\u8fc7\u9884\u8bbe\uff08Prefabs\uff09\u5b8c\u6574\u5730\u50a8\u5b58\u4e86\u5bf9\u8c61\u7684\u7ec4\u4ef6\u3001\u5c5e\u6027\u7b49\u5185\u5bb9\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u521b\u5efa\u5177\u6709\u76f8\u540c\u5c5e\u6027\u7684\u5bf9\u8c61,\u65b9\u4fbf\u4e86\u5bf9\u8c61\u7684\u590d\u7528\u3002\u5bf9\u8c61\u514b\u9686\u4e0e\u9884\u8bbe\u4e0d\u540c\u7684\u5730\u65b9\u5c31\u5728\u4e8e\uff0c\u9884\u8bbe\u4e0e\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u662f\u4e00\u81f4\u7684\uff0c\u9884\u8bbe\u53d1\u751f\u53d8\u5316\uff0c\u6240\u6709\u901a\u8fc7\u5176\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u90fd\u4f1a\u4ea7\u751f\u53d8\u5316\uff0c\u800c\u5bf9\u8c61\u514b\u9686\u672c\u4f53\u548c\u514b\u9686\u51fa\u7684\u5bf9\u8c61\u4e0d\u540c\uff0c\u5176\u4e0d\u53d7\u672c\u4f53\u6539\u53d8\u5f71\u54cd\u3002 \u5c1d\u8bd5\u89e3\u91ca\u7ec4\u5408\u6a21\u5f0f\uff08Composite Pattern / \u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff09\u3002\u4f7f\u7528 BroadcastMessage() \u65b9\u6cd5 \u5411\u5b50\u5bf9\u8c61\u53d1\u9001\u6d88\u606f \u7ec4\u5408\u6a21\u5f0f\u5141\u8bb8\u7528\u6237\u5c06\u5bf9\u8c61\u7ec4\u5408\u6210\u6811\u5f62\u7ed3\u6784\u6765\u8868\u73b0\u201d\u90e8\u5206-\u6574\u4f53\u201c\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u4f7f\u5f97\u5ba2\u6237\u4ee5\u4e00\u81f4\u7684\u65b9\u5f0f\u5904\u7406\u5355\u4e2a\u5bf9\u8c61\u4ee5\u53ca\u5bf9\u8c61\u7684\u7ec4\u5408\u3002\u7ec4\u5408\u6a21\u5f0f\u5b9e\u73b0\u7684\u6700\u5173\u952e\u7684\u5730\u65b9\u662f\u2014\u2014\u7b80\u5355\u5bf9\u8c61\u548c\u590d\u5408\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u76f8\u540c\u7684\u63a5\u53e3\u3002\u8fd9\u5c31\u662f\u7ec4\u5408\u6a21\u5f0f\u80fd\u591f\u5c06\u7ec4\u5408\u5bf9\u8c61\u548c\u7b80\u5355\u5bf9\u8c61\u8fdb\u884c\u4e00\u81f4\u5904\u7406\u7684\u539f\u56e0\u3002 //\u7236\u5bf9\u8c61 public class child : MonoBehaviour { void Start () { this . BroadcastMessage ( \"getMessage\" , \"test\" ); } void getMessage ( string msg ) { Debug . Log ( \"Get msg: \" + msg ); } } //\u5b50\u5bf9\u8c61 public class child : MonoBehaviour { void getMessage ( string msg ) { Debug . Log ( \"Get msg: \" + msg ); } } 2.\u7f16\u7a0b\u5b9e\u8df5\uff0c\u5c0f\u6e38\u620f \u5b9e\u8df5\u90e8\u5206\u9009\u62e9\u7684\u6e38\u620f\u5185\u5bb9\u4e3a: \u4e95\u5b57\u68cb \u9996\u5148\uff0c\u6839\u636e\u8001\u5e08\u7684\u53ea\u80fd\u4f7f\u7528IMGUI\u6784\u5efaUI\u7684\u8981\u6c42\uff0c\u5b66\u4e60\u4e86OnGUI\u7684\u7528\u6cd5\uff0c\u5f97\u77e5OnGUI\u5c31\u662f\u4e00\u4e2aUnity\u63d0\u4f9b\u7684\u7528\u4e8e\u7ed8\u5236\u6bcf\u4e00\u5e27\u754c\u9762\u7684\u51fd\u6570\uff0c\u548cUpdate\u4e00\u6837\u5728\u6bcf\u4e00\u5e27\u90fd\u4f1a\u88ab\u8c03\u7528\u3002\u7406\u89e3\u539f\u7406\u4e4b\u540e\u5c31\u5341\u5206\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u597d\u68cb\u76d8\u7684\u72b6\u6001\uff0c\u8bb0\u5f55\u597d\u68cb\u76d8\u7684\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7GUI\u51fd\u6570\u628a\u5f53\u524d\u7684\u68cb\u76d8\u6e32\u67d3\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\uff0c\u7f16\u7a0b\u96be\u5ea6\u5e76\u4e0d\u5927\uff0c\u6240\u4ee5\u9996\u5148\u5728\u7c7b\u4e2d\u5b9a\u4e49\u597d\u9700\u8981\u7528\u5230\u7684\u6570\u636e\uff0c\u5e76\u5b8c\u6210\u521d\u59cb\u5316\u7684\u51fd\u6570 private int [,] gameBoxStatus = new int [ 3 , 3 ]; //\u7528\u4e8e\u4fdd\u5b58\u68cb\u76d8\u6570\u636e private int gameStatus = 0 ; //\u8bb0\u5f55\u6e38\u620f\u72b6\u6001 private int term = 1 ; //\u8bb0\u5f55\u5f53\u524d\u8f6e\u5230\u54ea\u4e2a\u73a9\u5bb6 void initialGameInfo () { gameStatus = 0 ; term = 1 ; for ( int i = 0 ; i < 3 ; i ++) for ( int j = 0 ; j < 3 ; j ++) gameBoxStatus [ i , j ] = 0 ; } \u5199\u597d\u8fd9\u4e2a\u4e4b\u540e\u5c31\u662fOnGUI\u90e8\u5206\u7684\u5f00\u53d1\u4e86,\u5176\u5b9e\u5173\u952e\u7684\u5c31\u662f\u6839\u636e\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u7528\u4e00\u4e2a\u4e24\u91cd\u5faa\u73af\u6e32\u67d3\u51fa\u68cb\u76d8\uff0cOnGUI\u4ee3\u7801\u5982\u4e0b void OnGUI () { GUIStyle headerStyle = new GUIStyle (); headerStyle . normal . textColor = new Color ( 255 , 255 , 255 ); headerStyle . fontSize = 40 ; GUIStyle gameInfoStyle = new GUIStyle (); gameInfoStyle . normal . textColor = new Color ( 255 , 255 , 255 ); gameInfoStyle . fontSize = 25 ; GUI . Label ( new Rect ( 300 , 60 , 200 , 100 ), \"Simple Chess Game\" , headerStyle ); /** * gameStatus == 0, \u4ee3\u8868\u6e38\u620f\u72b6\u6001\u4e3a\u9009\u62e9\u8c01\u5148\u4e0b\u7684\u72b6\u6001\uff0c\u672a\u5f00\u59cb\u6e38\u620f; * gameStatus == 1, \u4ee3\u8868\u6e38\u620f\u5df2\u5f00\u59cb\uff0c\u6e32\u67d3\u51fa\u68cb\u76d8 * gameStatus == 3, \u4ee3\u8868\u6e38\u620f\u5df2\u7ecf\u7ed3\u675f\uff0c\u6e32\u67d3\u51fa\u6e38\u620f\u7ed3\u679c */ if ( gameStatus == 0 ) { GUI . Label ( new Rect ( xpos , ypos , 100 , 50 ), \"Who first?\" , gameInfoStyle ); if ( GUI . Button ( new Rect ( xpos , ypos + 60 , 100 , 50 ), \"O\" )) { term = 1 ; gameStatus = 1 ; } if ( GUI . Button ( new Rect ( xpos , ypos + 120 , 100 , 50 ), \"X\" )) { term = 2 ; gameStatus = 1 ; } } else if ( gameStatus == 1 ) { if ( GUI . Button ( new Rect ( xpos + 25 , ypos + 180 , 100 , 50 ), \"Reset\" )) initialGameInfo (); int result = checkWin (); //\u68c0\u67e5\u662f\u5426\u4ea7\u751f\u6e38\u620f\u7ed3\u679c if ( result == 1 ) { Winner = 1 ; gameStatus = 2 ; } else if ( result == 2 ) { Winner = 2 ; gameStatus = 2 ; } else if ( result == 3 ) { Winner = 0 ; gameStatus = 2 ; } for ( int i = 0 ; i < 3 ; i ++) for ( int j = 0 ; j < 3 ; j ++) { if ( gameBoxStatus [ i , j ] == 1 ) GUI . Button ( new Rect ( xpos + i * 50 , ypos + j * 50 , 50 , 50 ), \"O\" ); if ( gameBoxStatus [ i , j ] == 2 ) GUI . Button ( new Rect ( xpos + i * 50 , ypos + j * 50 , 50 , 50 ), \"X\" ); if ( GUI . Button ( new Rect ( xpos + i * 50 , ypos + j * 50 , 50 , 50 ), \"\" )) { if ( result == 0 ) { gameBoxStatus [ i , j ] = term ; term = ( term == 2 ) ? 1 : 2 ; } } } } else { if ( Winner == 0 ) { GUI . Label ( new Rect ( xpos + 10 , ypos , 100 , 50 ), \"No one wins!\" , gameInfoStyle ); } else if ( Winner == 1 ) { GUI . Label ( new Rect ( xpos + 10 , ypos , 100 , 50 ), \"O wins!\" , gameInfoStyle ); } else { GUI . Label ( new Rect ( xpos + 10 , ypos , 100 , 50 ), \"X wins!\" , gameInfoStyle ); } if ( GUI . Button ( new Rect ( xpos , ypos + 70 , 100 , 50 ), \"Reset\" )) initialGameInfo (); } } \u5728\u5b8c\u6210\u4e86OnGUI\u4ee5\u53ca\u521d\u59cb\u5316\u51fd\u6570\u540e\uff0c\u5c31\u5269\u4e0bCheckWin\u51fd\u6570\u4e86\uff0c\u5176\u5b9e\u4e5f\u6bd4\u8f83\u7b80\u5355\u5177\u4f53\u4ee3\u7801\u5982\u4e0b,\u5c31\u662f\u5faa\u73af\u5404\u4e2a\u7ed3\u679c\u770b\u6709\u6ca1\u6ee1\u8db3\u80dc\u5229\u6761\u4ef6\uff0c\u4ee5\u53ca\u5224\u65ad\u5f53\u524d\u662f\u5426\u5e73\u5c40\uff0c\u8fd4\u56de\u6e38\u620f\u7ed3\u679c(0:\u6e38\u620f\u672a\u7ed3\u675f\uff0c1:\u80dc\u8005\u4e3a1(O), 2: \u80dc\u8005\u4e3a2(X)) int checkWin () { for ( int i = 0 ; i < 3 ; i ++) { if ( gameBoxStatus [ 0 , i ] != 0 && gameBoxStatus [ 0 , i ] == gameBoxStatus [ 1 , i ] && gameBoxStatus [ 1 , i ] == gameBoxStatus [ 2 , i ]) return gameBoxStatus [ 0 , i ]; if ( gameBoxStatus [ i , 0 ] != 0 && gameBoxStatus [ i , 0 ] == gameBoxStatus [ i , 1 ] && gameBoxStatus [ i , 1 ] == gameBoxStatus [ i , 2 ]) return gameBoxStatus [ i , 0 ]; } if (( gameBoxStatus [ 1 , 1 ] != 0 && gameBoxStatus [ 0 , 0 ] == gameBoxStatus [ 1 , 1 ] && gameBoxStatus [ 1 , 1 ] == gameBoxStatus [ 2 , 2 ]) || ( gameBoxStatus [ 0 , 2 ] == gameBoxStatus [ 1 , 1 ] && gameBoxStatus [ 1 , 1 ] == gameBoxStatus [ 2 , 0 ])) return gameBoxStatus [ 1 , 1 ]; bool flag = true ; for ( int i = 0 ; i < 3 ; i ++) for ( int j = 0 ; j < 3 ; j ++) { if ( gameBoxStatus [ i , j ] == 0 ) { flag = false ; } } return ( flag ) ? 3 : 0 ; } V2\u7248\u672c\u4e2d\u65b0\u52a0\u5165\u4e86\u8ba1\u5206\u7684\u529f\u80fd\uff0c\u5b9e\u73b0\u90e8\u5206\u4e5f\u5341\u5206\u7b80\u6613\uff0c\u5728\u672c\u7c7b\u4e2d\u6dfb\u52a0Oscore, Xscore\u53d8\u91cf\uff0c\u7136\u540e\u901a\u8fc7\u5bf9\u8fd9\u4e24\u4e2a\u53d8\u91cf\u7684\u7ef4\u62a4\u5373\u53ef\u5b8c\u6210\u8be5\u529f\u80fd\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cOnGUI\u662f\u6bcf\u4e00\u5e27\u5237\u65b0\u7684\uff0c\u6240\u4ee5\u51b3\u51fa\u80dc\u8005\u4e4b\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u4fdd\u8bc1\u589e\u52a0score\u7684\u4ee3\u7801\u53ea\u88ab\u6267\u884c\u4e00\u6b21\u3002\u4ee3\u7801\u5c31\u4e0d\u518d\u5728\u8fd9\u91cc\u8d58\u8ff0\u4e86\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u901a\u8fc7\u6211\u7684github\u67e5\u770b\u5b8c\u6574\u7684\u4ee3\u7801\uff0c\u4f20\u9001\u95e8\u5c31\u5728\u9875\u5c3e\ud83d\ude43 \u5230\u8fd9\u91cc\u6574\u4e2a\u6e38\u620f\u5c31\u5b8c\u6210\u4e86\uff0c\u6e38\u620f\u7684\u6574\u4e2a\u4ee3\u7801\u6211\u5c31\u4e0d\u5728\u8fd9\u91cc\u8d34\u51fa\u6765\u4e86\uff0c\u8bbf\u95ee\u6211\u7684Github\u5c31\u53ef\u4ee5\u770b\u5230\u4ee3\u7801\u4ee5\u53ca\u6f14\u793a\u89c6\u9891\u4e86,\u4e0b\u9762\u662f\u94fe\u63a5: github@zhongwq/Unity3D-Learning/week1","title":"\u5b66\u4e60\u7b14\u8bb01-GUI\u4e95\u5b57\u68cb"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb01-GUI\u4e95\u5b57\u68cb/#1-gui","text":"","title":"\u5b66\u4e60\u7b14\u8bb01-GUI\u4e95\u5b57\u68cb"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb01-GUI\u4e95\u5b57\u68cb/#1","text":"\u89e3\u91ca \u6e38\u620f\u5bf9\u8c61\uff08GameObjects\uff09 \u548c \u8d44\u6e90\uff08Assets\uff09\u7684\u533a\u522b\u4e0e\u8054\u7cfb\u3002 \u8d44\u6e90(Assets)\u662f\u5305\u542b\u5728\u6e38\u620f\u6587\u4ef6\u4e2d\uff0c\u4e3a\u6e38\u620f\u5bf9\u8c61\u6240\u4f7f\u7528\u7684\uff0c\u4e00\u4e2a\u8d44\u6e90\u53ef\u4ee5\u88ab\u4e00\u4e2a\u6216\u591a\u4e2a\u5bf9\u8c61\u4f7f\u7528\u3002\u800c\u5bf9\u8c61\u51fa\u73b0\u5728\u6e38\u620f\u573a\u666f(Scene)\u4e2d\uff0c\u662fComponents\u3001\u8d44\u6e90\u6574\u5408\u5728\u4e00\u8d77\u7684\u7ed3\u679c\u3002 \u4e0b\u8f7d\u51e0\u4e2a\u6e38\u620f\u6848\u4f8b\uff0c\u5206\u522b\u603b\u7ed3\u8d44\u6e90\u3001\u5bf9\u8c61\u7ec4\u7ec7\u7684\u7ed3\u6784 \u5206\u6790\u4e0b\u8f7d\u7684\u6e38\u620f\u6848\u4f8b 1.\u8d44\u6e90\u6587\u4ef6\u5939\u901a\u5e38\u6709\u5bf9\u8c61\u3001\u6750\u8d28\u3001\u573a\u666f\u3001\u58f0\u97f3\u3001\u9884\u8bbe\u3001\u8d34\u56fe\u3001\u811a\u672c\u3001\u52a8\u4f5c\uff0c\u5728\u8fd9\u4e9b\u6587\u4ef6\u5939\u4e0b\u53ef\u4ee5\u7ee7\u7eed\u5212\u5206\u3002 2.\u5bf9\u8c61\u4e2d\u4e00\u822c\u6709\u73a9\u5bb6\u3001\u654c\u4eba\u3001\u73af\u5883\u3001\u6444\u50cf\u673a\u548c\u97f3\u4e50\u7b49\u865a\u62df\u7236\u7c7b\uff0c\u8fd9\u4e9b\u7236\u7c7b\u672c\u8eab\u6ca1\u6709\u5b9e\u4f53\uff0c\u4f46\u4ed6\u4eec\u7684\u5b50\u7c7b\u5305\u542b\u4e86\u6e38\u620f\u4e2d\u4f1a\u51fa\u73b0\u7684\u5bf9\u8c61\u3002 \u7f16\u5199\u4e00\u4e2a\u4ee3\u7801\uff0c\u4f7f\u7528 debug \u8bed\u53e5\u6765\u9a8c\u8bc1 MonoBehaviour \u57fa\u672c\u884c\u4e3a\u6216\u4e8b\u4ef6\u89e6\u53d1\u7684\u6761\u4ef6 \u57fa\u672c\u884c\u4e3a\u5305\u62ec Awake() Start() Update() FixedUpdate() LateUpdate() \u5e38\u7528\u4e8b\u4ef6\u5305\u62ec OnGUI() OnDisable() OnEnable() public class testBasicBehaviour : MonoBehaviour { void Awake () { Debug . Log ( \"onAwake\" ); } void Start () { Debug . Log ( \"onStart\" ); } void Update () { Debug . Log ( \"onUpdate\" ); } void FixedUpdate () { Debug . Log ( \"onFixedUpdate\" ); } void LateUpdate () { Debug . Log ( \"onLateUpdate\" ); } void OnGUI () { Debug . Log ( \"onGUI\" ); } void Reset () { Debug . Log ( \"onReset\" ); } void OnDisable () { Debug . Log ( \"onDisable\" ); } void OnDestroy () { Debug . Log ( \"onDestroy\" ); } } \u67e5\u627e\u811a\u672c\u624b\u518c\uff0c\u4e86\u89e3 GameObject\uff0cTransform\uff0cComponent \u5bf9\u8c61 \u5206\u522b\u7ffb\u8bd1\u5b98\u65b9\u5bf9\u4e09\u4e2a\u5bf9\u8c61\u7684\u63cf\u8ff0\uff08Description\uff09 \u6e38\u620f\u5bf9\u8c61\u5728Unity\u4e2d\u662f\u4ee3\u8868\u7740\u6e38\u620f\u7269\u4ef6\u3001\u9053\u5177\u4ee5\u53ca\u6e38\u620f\u573a\u666f\u7684\u57fa\u672c\u5bf9\u8c61\u3002\u5b83\u4eec\u672c\u8eab\u6ca1\u6709\u5b8c\u6210\u592a\u591a\u5185\u5bb9\uff0c\u4f46\u5b83\u4eec\u5145\u5f53\u7740\u7ec4\u4ef6\u7684\u5bb9\u5668\uff0c\u8ba9\u5f00\u53d1\u8005\u5b9e\u73b0\u771f\u6b63\u7684\u529f\u80fd\u3002 Transform\u5c5e\u6027\u5b9a\u4e49\u4e86\u7ec4\u4ef6\u7684\u4f4d\u7f6e\uff0c\u65cb\u8f6c\u89d2\u5ea6\uff0c\u5404\u4e2a\u65b9\u5411\u7684\u5927\u5c0f\u6bd4\u4f8b\uff08\u7f29\u653e\uff09\u3002\u6bcf\u4e00\u4e2a\u6e38\u620f\u5bf9\u8c61(GameObject)\u90fd\u6709\u7740\u4e00\u4e2aTransform\u3002 \u7ec4\u4ef6\u662f\u6e38\u620f\u4e2d\u7269\u4f53\u548c\u884c\u4e3a\u7684\u87ba\u6bcd\u548c\u87ba\u6813, \u5b83\u4eec\u662f\u6bcf\u4e2a\u6e38\u620f\u5bf9\u8c61\u7684\u529f\u80fd\u5757\u3002\u4e00\u4e2a\u6e38\u620f\u5bf9\u8c61\u662f\u8bb8\u591a\u4e0d\u540c\u7684\u7ec4\u4ef6\u7684\u5bb9\u5668\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u7684\u6e38\u620f\u5bf9\u8c61\u81ea\u52a8\u62e5\u6709Transform\u7ec4\u4ef6\u3002\u8fd9\u662f\u56e0\u4e3aTransform\u7ec4\u4ef6\u51b3\u5b9a\u4e86\u6e38\u620f\u5bf9\u8c61\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u65cb\u8f6c\u548c\u7f29\u653e\u3002\u6ca1\u6709Transform\u7ec4\u4ef6\u7684\u6e38\u620f\u5bf9\u8c61\uff0c\u4e0d\u4f1a\u5728World\u4e2d\u5b58\u5728\u3002 \u63cf\u8ff0\u4e0b\u56fe\u4e2d table \u5bf9\u8c61\uff08\u5b9e\u4f53\uff09\u7684\u5c5e\u6027\u3001table \u7684 Transform \u7684\u5c5e\u6027\u3001 table \u7684 \u90e8\u4ef6 \u8be5table\u5bf9\u8c61\u7684\u5c5e\u6027\uff08component\uff09\u6709\u5982\u4e0b: > 1. Transform\u63cf\u8ff0\u4e86table\u5bf9\u8c61\u7684\u4f4d\u7f6e\uff0c\u65cb\u8f6c\u89d2\u5ea6\uff0c\u7f29\u653e, \u56fe\u4e2d\u7684\u5c5e\u6027\u4e3a,\u4f4d\u7f6e(0,0,0), \u65cb\u8f6c(0,0,0),\u6bd4\u4f8b\u4e3a(100%, 100%, 100%); Mesh Filter\u7f51\u683c\u8fc7\u6ee4\u5668\u63cf\u8ff0\u4e86\u51e0\u4f55\u4f53\u7684\u5f62\u72b6,\u56fe\u4e2dtable\u4e3aCube\uff08\u7acb\u65b9\u4f53\uff09 Box Colider\u5219\u63cf\u8ff0\u4e86\u7269\u4f53\u7684\u78b0\u649e\u8303\u56f4\uff0c\u56fe\u4e2d\u7684\u78b0\u649e\u8303\u56f4\u4e3a\u4ee5(0,0,0),(1,0,0),(0,1,0),(1,1,0),(0,0,1),(1,0,1),(0,1,1),(1,1,1)\u4e3a\u9876\u70b9\u7684\u4e00\u4e2a\u6b63\u65b9\u4f53 Mesh Renderer\u7f51\u683c\u6e32\u67d3\u5668\u5219\u4ece\u7f51\u683c\u8fc7\u6ee4\u5668\u4e2d\u83b7\u5f97\u51e0\u4f55\u4f53\u7684\u5f62\u72b6\u7136\u540e\u6839\u636e\u8981\u6c42\u8fdb\u884c\u6e32\u67d3\u3002\u56fe\u4e2d\u7684\u5c5e\u6027\u4e3a Cast Shadows(\u6295\u5c04\u9634\u5f71\u65b9\u5f0f)\u5f00\u542f,\u63a5\u53d7\u9634\u5f71 Motion Vectors\uff08\u8fd0\u52a8\u5411\u91cf\u751f\u6210\u65b9\u5f0f\uff09\u4e3aPerObject Motion\uff08\u4f1a\u6e32\u67d3\u51fa\u4e00\u4e2a\u201c\u6bcf\u4e2a\u5bf9\u8c61\u201d\u8fd0\u52a8\u5411\u91cf\u901a\u9053\uff09\uff0c\u6750\u8d28\u4e3a\u9ed8\u8ba4\u6750\u8d28\uff0cLight Probes\uff08\u5149\u63a2\u5934\u63d2\u503c\u65b9\u5f0f\uff09\u4ee5\u53caReflection Probes\uff08\u53cd\u5c04\u63a2\u5934\u90fd\u4e3a\u6df7\u5408\uff09\uff0cAnchor Override\u4e3a\u5f53\u4f7f\u7528\u5149\u63a2\u5934\u6216\u53cd\u5c04\u63a2\u5934\u7cfb\u7edf\u65f6\uff0c\u7528\u6765\u51b3\u5b9a\u63d2\u503c\u4f4d\u7f6e\u7684Transform\uff0c\u56fe\u4e2d\u672a\u5b9a\u4e49\u8be5Transform\u3002 \u7528 UML \u56fe\u63cf\u8ff0 \u4e09\u8005\u7684\u5173\u7cfb\uff08\u8bf7\u4f7f\u7528 UMLet 14.1.1 stand-alone\u7248\u672c\u51fa\u56fe\uff09 \u6574\u7406\u76f8\u5173\u5b66\u4e60\u8d44\u6599\uff0c\u7f16\u5199\u7b80\u5355\u4ee3\u7801\u9a8c\u8bc1\u4ee5\u4e0b\u6280\u672f\u7684\u5b9e\u73b0\uff1a(\u67e5\u627e\u5bf9\u8c61\u3001\u6dfb\u52a0\u5b50\u5bf9\u8c61\u3001\u904d\u5386\u5bf9\u8c61\u6811\u3001\u6e05\u9664\u6240\u6709\u5b50\u5bf9\u8c61) //\u67e5\u627e\u5bf9\u8c61 public static GameObject Find ( string name ) //\u901a\u8fc7\u540d\u5b57\u67e5\u627e public static GameObject FindWithTag ( string tag ) //\u901a\u8fc7\u6807\u7b7e\u67e5\u627e\u5355\u4e2a\u5bf9\u8c61 public static GameObject [] FindGameObjectsWithTag ( string tag ) //\u901a\u8fc7\u6807\u7b7e\u67e5\u627e\u591a\u4e2a\u5bf9\u8c61 //\u6dfb\u52a0\u5b50\u5bf9\u8c61 public static GameObect CreatePrimitive ( PrimitiveTypetype ) //\u904d\u5386\u5bf9\u8c61\u6811 foreach ( Transform child in transform ) { Debug . Log ( child . gameObject . name ); } //\u6e05\u9664\u6240\u6709\u5b50\u5bf9\u8c61 foreach ( Transform child in transform ) { Destroy ( child . gameObject ); } \u9884\u8bbe\uff08Prefabs\uff09\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u4e0e\u5bf9\u8c61\u514b\u9686 (clone or copy or Instantiate of Unity Object) \u5173\u7cfb\uff1f Unity\u901a\u8fc7\u9884\u8bbe\uff08Prefabs\uff09\u5b8c\u6574\u5730\u50a8\u5b58\u4e86\u5bf9\u8c61\u7684\u7ec4\u4ef6\u3001\u5c5e\u6027\u7b49\u5185\u5bb9\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u521b\u5efa\u5177\u6709\u76f8\u540c\u5c5e\u6027\u7684\u5bf9\u8c61,\u65b9\u4fbf\u4e86\u5bf9\u8c61\u7684\u590d\u7528\u3002\u5bf9\u8c61\u514b\u9686\u4e0e\u9884\u8bbe\u4e0d\u540c\u7684\u5730\u65b9\u5c31\u5728\u4e8e\uff0c\u9884\u8bbe\u4e0e\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u662f\u4e00\u81f4\u7684\uff0c\u9884\u8bbe\u53d1\u751f\u53d8\u5316\uff0c\u6240\u6709\u901a\u8fc7\u5176\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u90fd\u4f1a\u4ea7\u751f\u53d8\u5316\uff0c\u800c\u5bf9\u8c61\u514b\u9686\u672c\u4f53\u548c\u514b\u9686\u51fa\u7684\u5bf9\u8c61\u4e0d\u540c\uff0c\u5176\u4e0d\u53d7\u672c\u4f53\u6539\u53d8\u5f71\u54cd\u3002 \u5c1d\u8bd5\u89e3\u91ca\u7ec4\u5408\u6a21\u5f0f\uff08Composite Pattern / \u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff09\u3002\u4f7f\u7528 BroadcastMessage() \u65b9\u6cd5 \u5411\u5b50\u5bf9\u8c61\u53d1\u9001\u6d88\u606f \u7ec4\u5408\u6a21\u5f0f\u5141\u8bb8\u7528\u6237\u5c06\u5bf9\u8c61\u7ec4\u5408\u6210\u6811\u5f62\u7ed3\u6784\u6765\u8868\u73b0\u201d\u90e8\u5206-\u6574\u4f53\u201c\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u4f7f\u5f97\u5ba2\u6237\u4ee5\u4e00\u81f4\u7684\u65b9\u5f0f\u5904\u7406\u5355\u4e2a\u5bf9\u8c61\u4ee5\u53ca\u5bf9\u8c61\u7684\u7ec4\u5408\u3002\u7ec4\u5408\u6a21\u5f0f\u5b9e\u73b0\u7684\u6700\u5173\u952e\u7684\u5730\u65b9\u662f\u2014\u2014\u7b80\u5355\u5bf9\u8c61\u548c\u590d\u5408\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u76f8\u540c\u7684\u63a5\u53e3\u3002\u8fd9\u5c31\u662f\u7ec4\u5408\u6a21\u5f0f\u80fd\u591f\u5c06\u7ec4\u5408\u5bf9\u8c61\u548c\u7b80\u5355\u5bf9\u8c61\u8fdb\u884c\u4e00\u81f4\u5904\u7406\u7684\u539f\u56e0\u3002 //\u7236\u5bf9\u8c61 public class child : MonoBehaviour { void Start () { this . BroadcastMessage ( \"getMessage\" , \"test\" ); } void getMessage ( string msg ) { Debug . Log ( \"Get msg: \" + msg ); } } //\u5b50\u5bf9\u8c61 public class child : MonoBehaviour { void getMessage ( string msg ) { Debug . Log ( \"Get msg: \" + msg ); } }","title":"1. \u7b80\u7b54\u9898"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb01-GUI\u4e95\u5b57\u68cb/#2","text":"\u5b9e\u8df5\u90e8\u5206\u9009\u62e9\u7684\u6e38\u620f\u5185\u5bb9\u4e3a: \u4e95\u5b57\u68cb \u9996\u5148\uff0c\u6839\u636e\u8001\u5e08\u7684\u53ea\u80fd\u4f7f\u7528IMGUI\u6784\u5efaUI\u7684\u8981\u6c42\uff0c\u5b66\u4e60\u4e86OnGUI\u7684\u7528\u6cd5\uff0c\u5f97\u77e5OnGUI\u5c31\u662f\u4e00\u4e2aUnity\u63d0\u4f9b\u7684\u7528\u4e8e\u7ed8\u5236\u6bcf\u4e00\u5e27\u754c\u9762\u7684\u51fd\u6570\uff0c\u548cUpdate\u4e00\u6837\u5728\u6bcf\u4e00\u5e27\u90fd\u4f1a\u88ab\u8c03\u7528\u3002\u7406\u89e3\u539f\u7406\u4e4b\u540e\u5c31\u5341\u5206\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u597d\u68cb\u76d8\u7684\u72b6\u6001\uff0c\u8bb0\u5f55\u597d\u68cb\u76d8\u7684\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7GUI\u51fd\u6570\u628a\u5f53\u524d\u7684\u68cb\u76d8\u6e32\u67d3\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\uff0c\u7f16\u7a0b\u96be\u5ea6\u5e76\u4e0d\u5927\uff0c\u6240\u4ee5\u9996\u5148\u5728\u7c7b\u4e2d\u5b9a\u4e49\u597d\u9700\u8981\u7528\u5230\u7684\u6570\u636e\uff0c\u5e76\u5b8c\u6210\u521d\u59cb\u5316\u7684\u51fd\u6570 private int [,] gameBoxStatus = new int [ 3 , 3 ]; //\u7528\u4e8e\u4fdd\u5b58\u68cb\u76d8\u6570\u636e private int gameStatus = 0 ; //\u8bb0\u5f55\u6e38\u620f\u72b6\u6001 private int term = 1 ; //\u8bb0\u5f55\u5f53\u524d\u8f6e\u5230\u54ea\u4e2a\u73a9\u5bb6 void initialGameInfo () { gameStatus = 0 ; term = 1 ; for ( int i = 0 ; i < 3 ; i ++) for ( int j = 0 ; j < 3 ; j ++) gameBoxStatus [ i , j ] = 0 ; } \u5199\u597d\u8fd9\u4e2a\u4e4b\u540e\u5c31\u662fOnGUI\u90e8\u5206\u7684\u5f00\u53d1\u4e86,\u5176\u5b9e\u5173\u952e\u7684\u5c31\u662f\u6839\u636e\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u7528\u4e00\u4e2a\u4e24\u91cd\u5faa\u73af\u6e32\u67d3\u51fa\u68cb\u76d8\uff0cOnGUI\u4ee3\u7801\u5982\u4e0b void OnGUI () { GUIStyle headerStyle = new GUIStyle (); headerStyle . normal . textColor = new Color ( 255 , 255 , 255 ); headerStyle . fontSize = 40 ; GUIStyle gameInfoStyle = new GUIStyle (); gameInfoStyle . normal . textColor = new Color ( 255 , 255 , 255 ); gameInfoStyle . fontSize = 25 ; GUI . Label ( new Rect ( 300 , 60 , 200 , 100 ), \"Simple Chess Game\" , headerStyle ); /** * gameStatus == 0, \u4ee3\u8868\u6e38\u620f\u72b6\u6001\u4e3a\u9009\u62e9\u8c01\u5148\u4e0b\u7684\u72b6\u6001\uff0c\u672a\u5f00\u59cb\u6e38\u620f; * gameStatus == 1, \u4ee3\u8868\u6e38\u620f\u5df2\u5f00\u59cb\uff0c\u6e32\u67d3\u51fa\u68cb\u76d8 * gameStatus == 3, \u4ee3\u8868\u6e38\u620f\u5df2\u7ecf\u7ed3\u675f\uff0c\u6e32\u67d3\u51fa\u6e38\u620f\u7ed3\u679c */ if ( gameStatus == 0 ) { GUI . Label ( new Rect ( xpos , ypos , 100 , 50 ), \"Who first?\" , gameInfoStyle ); if ( GUI . Button ( new Rect ( xpos , ypos + 60 , 100 , 50 ), \"O\" )) { term = 1 ; gameStatus = 1 ; } if ( GUI . Button ( new Rect ( xpos , ypos + 120 , 100 , 50 ), \"X\" )) { term = 2 ; gameStatus = 1 ; } } else if ( gameStatus == 1 ) { if ( GUI . Button ( new Rect ( xpos + 25 , ypos + 180 , 100 , 50 ), \"Reset\" )) initialGameInfo (); int result = checkWin (); //\u68c0\u67e5\u662f\u5426\u4ea7\u751f\u6e38\u620f\u7ed3\u679c if ( result == 1 ) { Winner = 1 ; gameStatus = 2 ; } else if ( result == 2 ) { Winner = 2 ; gameStatus = 2 ; } else if ( result == 3 ) { Winner = 0 ; gameStatus = 2 ; } for ( int i = 0 ; i < 3 ; i ++) for ( int j = 0 ; j < 3 ; j ++) { if ( gameBoxStatus [ i , j ] == 1 ) GUI . Button ( new Rect ( xpos + i * 50 , ypos + j * 50 , 50 , 50 ), \"O\" ); if ( gameBoxStatus [ i , j ] == 2 ) GUI . Button ( new Rect ( xpos + i * 50 , ypos + j * 50 , 50 , 50 ), \"X\" ); if ( GUI . Button ( new Rect ( xpos + i * 50 , ypos + j * 50 , 50 , 50 ), \"\" )) { if ( result == 0 ) { gameBoxStatus [ i , j ] = term ; term = ( term == 2 ) ? 1 : 2 ; } } } } else { if ( Winner == 0 ) { GUI . Label ( new Rect ( xpos + 10 , ypos , 100 , 50 ), \"No one wins!\" , gameInfoStyle ); } else if ( Winner == 1 ) { GUI . Label ( new Rect ( xpos + 10 , ypos , 100 , 50 ), \"O wins!\" , gameInfoStyle ); } else { GUI . Label ( new Rect ( xpos + 10 , ypos , 100 , 50 ), \"X wins!\" , gameInfoStyle ); } if ( GUI . Button ( new Rect ( xpos , ypos + 70 , 100 , 50 ), \"Reset\" )) initialGameInfo (); } } \u5728\u5b8c\u6210\u4e86OnGUI\u4ee5\u53ca\u521d\u59cb\u5316\u51fd\u6570\u540e\uff0c\u5c31\u5269\u4e0bCheckWin\u51fd\u6570\u4e86\uff0c\u5176\u5b9e\u4e5f\u6bd4\u8f83\u7b80\u5355\u5177\u4f53\u4ee3\u7801\u5982\u4e0b,\u5c31\u662f\u5faa\u73af\u5404\u4e2a\u7ed3\u679c\u770b\u6709\u6ca1\u6ee1\u8db3\u80dc\u5229\u6761\u4ef6\uff0c\u4ee5\u53ca\u5224\u65ad\u5f53\u524d\u662f\u5426\u5e73\u5c40\uff0c\u8fd4\u56de\u6e38\u620f\u7ed3\u679c(0:\u6e38\u620f\u672a\u7ed3\u675f\uff0c1:\u80dc\u8005\u4e3a1(O), 2: \u80dc\u8005\u4e3a2(X)) int checkWin () { for ( int i = 0 ; i < 3 ; i ++) { if ( gameBoxStatus [ 0 , i ] != 0 && gameBoxStatus [ 0 , i ] == gameBoxStatus [ 1 , i ] && gameBoxStatus [ 1 , i ] == gameBoxStatus [ 2 , i ]) return gameBoxStatus [ 0 , i ]; if ( gameBoxStatus [ i , 0 ] != 0 && gameBoxStatus [ i , 0 ] == gameBoxStatus [ i , 1 ] && gameBoxStatus [ i , 1 ] == gameBoxStatus [ i , 2 ]) return gameBoxStatus [ i , 0 ]; } if (( gameBoxStatus [ 1 , 1 ] != 0 && gameBoxStatus [ 0 , 0 ] == gameBoxStatus [ 1 , 1 ] && gameBoxStatus [ 1 , 1 ] == gameBoxStatus [ 2 , 2 ]) || ( gameBoxStatus [ 0 , 2 ] == gameBoxStatus [ 1 , 1 ] && gameBoxStatus [ 1 , 1 ] == gameBoxStatus [ 2 , 0 ])) return gameBoxStatus [ 1 , 1 ]; bool flag = true ; for ( int i = 0 ; i < 3 ; i ++) for ( int j = 0 ; j < 3 ; j ++) { if ( gameBoxStatus [ i , j ] == 0 ) { flag = false ; } } return ( flag ) ? 3 : 0 ; } V2\u7248\u672c\u4e2d\u65b0\u52a0\u5165\u4e86\u8ba1\u5206\u7684\u529f\u80fd\uff0c\u5b9e\u73b0\u90e8\u5206\u4e5f\u5341\u5206\u7b80\u6613\uff0c\u5728\u672c\u7c7b\u4e2d\u6dfb\u52a0Oscore, Xscore\u53d8\u91cf\uff0c\u7136\u540e\u901a\u8fc7\u5bf9\u8fd9\u4e24\u4e2a\u53d8\u91cf\u7684\u7ef4\u62a4\u5373\u53ef\u5b8c\u6210\u8be5\u529f\u80fd\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cOnGUI\u662f\u6bcf\u4e00\u5e27\u5237\u65b0\u7684\uff0c\u6240\u4ee5\u51b3\u51fa\u80dc\u8005\u4e4b\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u4fdd\u8bc1\u589e\u52a0score\u7684\u4ee3\u7801\u53ea\u88ab\u6267\u884c\u4e00\u6b21\u3002\u4ee3\u7801\u5c31\u4e0d\u518d\u5728\u8fd9\u91cc\u8d58\u8ff0\u4e86\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u901a\u8fc7\u6211\u7684github\u67e5\u770b\u5b8c\u6574\u7684\u4ee3\u7801\uff0c\u4f20\u9001\u95e8\u5c31\u5728\u9875\u5c3e\ud83d\ude43 \u5230\u8fd9\u91cc\u6574\u4e2a\u6e38\u620f\u5c31\u5b8c\u6210\u4e86\uff0c\u6e38\u620f\u7684\u6574\u4e2a\u4ee3\u7801\u6211\u5c31\u4e0d\u5728\u8fd9\u91cc\u8d34\u51fa\u6765\u4e86\uff0c\u8bbf\u95ee\u6211\u7684Github\u5c31\u53ef\u4ee5\u770b\u5230\u4ee3\u7801\u4ee5\u53ca\u6f14\u793a\u89c6\u9891\u4e86,\u4e0b\u9762\u662f\u94fe\u63a5: github@zhongwq/Unity3D-Learning/week1","title":"2.\u7f16\u7a0b\u5b9e\u8df5\uff0c\u5c0f\u6e38\u620f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/","text":"\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f \u6e38\u620f\u8981\u6c42 \u6e38\u620f\u89c4\u5219 \u521b\u5efa\u4e00\u4e2a\u5730\u56fe\u548c\u82e5\u5e72\u5de1\u903b\u5175(\u4f7f\u7528\u52a8\u753b)\uff1b \u6bcf\u4e2a\u5de1\u903b\u5175\u8d70\u4e00\u4e2a3~5\u4e2a\u8fb9\u7684\u51f8\u591a\u8fb9\u578b\uff0c\u4f4d\u7f6e\u6570\u636e\u662f\u76f8\u5bf9\u5730\u5740\u3002\u5373\u6bcf\u6b21\u786e\u5b9a\u4e0b\u4e00\u4e2a\u76ee\u6807\u4f4d\u7f6e\uff0c\u7528\u81ea\u5df1\u5f53\u524d\u4f4d\u7f6e\u4e3a\u539f\u70b9\u8ba1\u7b97\uff1b \u5de1\u903b\u5175\u78b0\u649e\u5230\u969c\u788d\u7269\uff0c\u5219\u4f1a\u81ea\u52a8\u9009\u4e0b\u4e00\u4e2a\u70b9\u4e3a\u76ee\u6807\uff1b \u5de1\u903b\u5175\u5728\u8bbe\u5b9a\u8303\u56f4\u5185\u611f\u77e5\u5230\u73a9\u5bb6\uff0c\u4f1a\u81ea\u52a8\u8ffd\u51fb\u73a9\u5bb6;\u5931\u53bb\u73a9\u5bb6\u76ee\u6807\u540e\uff0c\u7ee7\u7eed\u5de1\u903b\uff1b \u8ba1\u5206\uff1a\u73a9\u5bb6\u6bcf\u6b21\u7529\u6389\u4e00\u4e2a\u5de1\u903b\u5175\u8ba1\u4e00\u5206\uff0c\u4e0e\u5de1\u903b\u5175\u78b0\u649e\u6e38\u620f\u7ed3\u675f\uff1b \u6e38\u620f\u8bbe\u8ba1\u8981\u6c42 \u5fc5\u987b\u4f7f\u7528\u8ba2\u9605\u4e0e\u53d1\u5e03\u6a21\u5f0f\u4f20\u6d88\u606f \u5de5\u5382\u6a21\u5f0f\u751f\u4ea7\u5de1\u903b\u5175 \u6e38\u620f\u6539\u8fdb\u3001\u6548\u679c\u3001\u6f14\u793a\u89c6\u9891 \u6539\u8fdb\u90e8\u5206\u5b9e\u73b0\u4e86\u7528\u6237\u89c6\u89d2\u7684\u53ef\u5207\u6362(\u6309\"space\"\u5207\u6362)\uff0c\u4e14\u4ea4\u4e92\u65b9\u5f0f\u968f\u89c6\u89d2\u53d8\u5316\uff0c\u589e\u5f3a\u4e86\u6e38\u620f\u7684\u4ea4\u4e92\u6027\u3002 \u6f14\u793a\u89c6\u9891 \u5b8c\u6574\u4ee3\u7801 github@zhongwq/Unity3D-Learning/Homework6 \u6e38\u620fUML\u56fe \u6e38\u620f\u5b9e\u73b0 PlayerController PlayerController\u4e3b\u8981\u5b9e\u73b0\u7684\u662f\u7528\u6237\u63a7\u5236\u73a9\u5bb6\uff0c\u4ee5\u53ca\u8c03\u7528\u53d1\u5e03\u8005\u5728\u4e8b\u4ef6\u89e6\u53d1\u65f6\u53d1\u5e03\u6d88\u606f public class PlayerController : MonoBehaviour { public Camera subCamera ; private Animator animator ; private AnimatorStateInfo stateInfo ; private Vector3 velocity ; private int angle ; private float rotateSpeed = 15f ; private float rotateSpeed_Sub = 60f ; private float runSpeed = 3f ; // Use this for initialization void Start () { animator = GetComponent < Animator > (); angle = 1 ; } void OnTriggerEnter ( Collider other ) { // \u8fdb\u5165\u88ab\u76d1\u63a7\u7684Area\u5219\u53d1\u5e03\u4fe1\u606f if ( other . gameObject . CompareTag ( \"Area\" )) { Publisher publish = Publisher . getInstance (); int areaIndex = other . gameObject . name [ other . gameObject . name . Length - 1 ]- '0' ; publish . notify ( ActionType . ENTER , areaIndex , this . gameObject ); } } void OnCollisionEnter ( Collision collision ) { // \u4e0ePatrol\u78b0\u649e\u540e\u53d1\u5e03\u4fe1\u606f if ( collision . gameObject . CompareTag ( \"Patrol\" ) && animator . GetBool ( \"live\" )) { animator . SetBool ( \"live\" , false ); Publisher publish = Publisher . getInstance (); publish . notify ( ActionType . DEAD , 0 , null ); } } // Update is called once per frame void FixedUpdate () { // \u5f53\u7528\u6237\u6309\u4e0b\u7a7a\u683c\uff0c\u6539\u53d8\u6e38\u620f\u89c6\u89d2\uff0c\u901a\u8fc7\u6539\u53d8\u5b50\u6444\u50cf\u5934\u7684\u6df1\u5ea6\u5b9e\u73b0 if ( Input . GetKeyDown ( \"space\" )) { if ( angle == 1 ) { subCamera . depth = - 1 ; angle = 3 ; } else { angle = 1 ; subCamera . depth = - 2 ; } } if (! animator . GetBool ( \"live\" )) return ; float x = Input . GetAxis ( \"Horizontal\" ); float z = Input . GetAxis ( \"Vertical\" ); if ( x == 0 && z == 0 ) { animator . SetBool ( \"Run\" , false ); return ; } else { if ( angle == 1 ) { // \u4fef\u89c6\u89c6\u89d2\u7684\u4ea4\u4e92\u65b9\u5f0f\uff08WSAD\u5206\u522b\u4e3a\u4e0a\u4e0b\u5de6\u53f3\uff09 animator . SetBool ( \"Run\" , true ); velocity = new Vector3 ( x , 0 , z ); if ( x != 0 || z != 0 ) { Quaternion rotation = Quaternion . LookRotation ( velocity ); if ( transform . rotation != rotation ) transform . rotation = Quaternion . Slerp ( transform . rotation , rotation , Time . fixedDeltaTime * rotateSpeed ); } this . transform . position += velocity * Time . fixedDeltaTime * runSpeed ; } else { // \u7b2c\u4e09\u4eba\u79f0\u89c6\u89d2\u7684\u4ea4\u4e92\u65b9\u5f0f(WS\u524d\u8fdb\u3001\u540e\u9000, AD\u5de6\u53f3\u65cb\u8f6c\u65b9\u5411) if ( z != 0 ) animator . SetBool ( \"Run\" , true ); transform . Translate ( 0 , 0 , z * runSpeed * Time . fixedDeltaTime ); transform . Rotate ( 0 , x * rotateSpeed_Sub * Time . fixedDeltaTime , 0 ); } } // \u907f\u514d\u78b0\u649e\u5e26\u6765\u7684\u5f71\u54cd if ( transform . localEulerAngles . x != 0 || transform . localEulerAngles . z != 0 ) { transform . localEulerAngles = new Vector3 ( 0 , transform . localEulerAngles . y , 0 ); } if ( transform . position . y != 0 ) { transform . position = new Vector3 ( transform . position . x , 0 , transform . position . z ); } } } Patrol\u90e8\u5206 PatrolActionManager \u8fd9\u91cc\u4e3b\u8981\u5c31\u662f\u63d0\u4f9b\u7ed9PatrolCrtl\u7684\u52a8\u4f5c\u7ba1\u7406\u5668\uff0c\u65b9\u4fbf\u4e86PatrolCrtl\u5bf9\u4e8ePatrol\u52a8\u4f5c\u7684\u6dfb\u52a0\u3001\u5220\u9664\uff0c\u800c\u6bcf\u6b21\u521b\u5efa\u52a8\u4f5c\u90fd\u4f1a\u8fd4\u56de\u521b\u5efa\u7684\u52a8\u4f5c\u4f5c\u4e3aPatrolCrtl\u7684currentAction\u65b9\u4fbf\u5176\u5bf9\u5176\u8fdb\u884c\u9500\u6bc1,\u65e0\u9700\u518d\u4ea4\u7ed9\u52a8\u4f5c\u7ba1\u7406\u5668\u9500\u6bc1\uff0c\u90a3\u6837\u8fd8\u589e\u52a0\u4e86\u904d\u5386\u7684\u5f00\u9500\u3002 \u5404Action\u7684\u5b9e\u73b0\u5341\u5206\u7b80\u5355\uff0c\u8fd9\u91cc\u4e0d\u591a\u8d58\u8ff0\uff0c\u5b8c\u6574\u4ee3\u7801\u53ef\u89c1Github public class PatrolActionManager : SSActionManager { public IdleAction toIdle ( GameObject obj , Animator animator , ActionCallback callback ) { IdleAction tmp = IdleAction . GetIdleAction ( Random . Range ( 1 , 2 ), animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toLeft ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . left * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toRight ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . right * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toForward ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . forward * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toBack ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . back * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public RunAction getTarget ( GameObject player , GameObject obj , Animator animator , ActionCallback callback ) { RunAction tmp = RunAction . GetRunAction ( player . transform , 2.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public IdleAction Stop ( GameObject obj , Animator animator , ActionCallback callback ) { IdleAction tmp = IdleAction . GetIdleAction (- 1f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } } PatrolCtrl \u8fd9\u4e2a\u7c7b\u4e3b\u8981\u4f5c\u7528\u5c31\u662f\u7ed1\u5728Patrol\u4e0a\uff0c\u63a7\u5236Patrol\u7684\u52a8\u4f5c\uff0c\u5e76\u4f5c\u4e3a\u4e00\u4e2aObserver\u76d1\u542c\u4e8b\u4ef6\uff0c\u6267\u884c\u76f8\u5e94\u52a8\u4f5c\u3002 public class PatrolCtrl : MonoBehaviour , ActionCallback , Observer { public enum ActionStatus : int { IDLE , TOLEFT , TOFORWARD , TORIGHT , TOBACK } private Animator animator ; private SSAction currentAction ; private ActionStatus status ; private PatrolActionManager patrolActionManager ; // Use this for initialization void Start () { animator = this . gameObject . GetComponent < Animator > (); patrolActionManager = Singleton < PatrolActionManager >. Instance ; Publisher publisher = Publisher . getInstance (); publisher . add ( this ); status = ActionStatus . IDLE ; currentAction = patrolActionManager . toIdle ( gameObject , animator , this ); } void FixedUpdate () { if ( transform . localEulerAngles . x != 0 || transform . localEulerAngles . z != 0 ) { transform . localEulerAngles = new Vector3 ( 0 , transform . localEulerAngles . y , 0 ); } if ( transform . position . y != 0 ) { transform . position = new Vector3 ( transform . position . x , 0 , transform . position . z ); } gameObject . GetComponent < Rigidbody >(). velocity = new Vector3 ( 0 , 0 , 0 ); } public void initial () { status = ActionStatus . IDLE ; currentAction = patrolActionManager . toIdle ( gameObject , animator , this ); } public void removeAction () { if ( currentAction ) currentAction . destroy = true ; } // When action done do next action public void actionDone ( SSAction source ) { status = status == ActionStatus . TOBACK ? ActionStatus . TOLEFT : ( ActionStatus )(( int ) status + 1 ); switch ( status ) { case ActionStatus . TOLEFT : currentAction = patrolActionManager . toLeft ( gameObject , animator , this ); break ; case ActionStatus . TORIGHT : currentAction = patrolActionManager . toRight ( gameObject , animator , this ); break ; case ActionStatus . TOFORWARD : currentAction = patrolActionManager . toForward ( gameObject , animator , this ); break ; case ActionStatus . TOBACK : currentAction = patrolActionManager . toBack ( gameObject , animator , this ); break ; } } private void turn () { currentAction . destroy = true ; switch ( status ) { case ActionStatus . TOLEFT : status = ActionStatus . TORIGHT ; currentAction = patrolActionManager . toRight ( gameObject , animator , this ); break ; case ActionStatus . TORIGHT : status = ActionStatus . TOLEFT ; currentAction = patrolActionManager . toLeft ( gameObject , animator , this );; break ; case ActionStatus . TOFORWARD : status = ActionStatus . TOBACK ; currentAction = patrolActionManager . toBack ( gameObject , animator , this ); break ; case ActionStatus . TOBACK : status = ActionStatus . TOFORWARD ; currentAction = patrolActionManager . toForward ( gameObject , animator , this ); break ; } } private void OnCollisionEnter ( Collision collision ) { if ( collision . gameObject . CompareTag ( \"Wall\" )) turn (); } private void OnTriggerEnter ( Collider other ) { if ( other . gameObject . CompareTag ( \"Door\" )) turn (); } public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { if ( position == this . gameObject . name [ this . gameObject . name . Length - 1 ] - '0' ) { currentAction . destroy = true ; currentAction = patrolActionManager . getTarget ( actor , gameObject , animator , this ); } } else { currentAction = patrolActionManager . Stop ( gameObject , animator , this ); } } } \u8ba2\u9605\u4e0e\u53d1\u5e03\u8005\u90e8\u5206 \u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u7684\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b\uff0c\u4f5c\u4e3a\u8ba2\u9605\u8005\u7684\u7c7b\u53ea\u9700\u8981\u7ee7\u627fObserver\u5e76\u5b9e\u73b0\u5176\u4e2d\u7684\u63a5\u53e3\u5373\u53ef\u4f5c\u4e3a\u8ba2\u9605\u8005\u53d1\u6325\u4f5c\u7528\u3002 \u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u8fd9\u79cd\u6a21\u5f0f\u7684\u4e3b\u8981\u4f5c\u7528\u6211\u4e2a\u4eba\u89c9\u5f97\u662f\u65b9\u4fbf\u5b9e\u73b0\u7ec4\u4ef6\u7684\u5206\u79bb\uff0c\u5e76\u5b9e\u73b0\u5206\u79bb\u540e\u7ec4\u4ef6\u7684\u8026\u5408\uff0c\u907f\u514d\u4e86\u591a\u4e2a\u529f\u80fd\u5199\u5728\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u6291\u6216\u662f\u9700\u8981\u624b\u52a8\u7ed1\u5b9a\u591a\u4e2a\u7c7b\u7684\u60c5\u51b5\uff0c\u4f7f\u5f97\u6211\u4eec\u7a0b\u5e8f\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\uff0c\u7a0b\u5e8f\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\u6613\u4e8e\u7406\u89e3 Observer public interface Observer { void notified ( ActionType type , int position , GameObject actor ); } Publisher public enum ActionType { ENTER , EXIT , DEAD } public class Publisher { private delegate void ActionUpdate ( ActionType type , int position , GameObject actor ); private ActionUpdate updateList ; private static Publisher _instance ; public static Publisher getInstance () { if ( _instance == null ) _instance = new Publisher (); return _instance ; } public void notify ( ActionType type , int position , GameObject actor ) { if ( updateList != null ) updateList ( type , position , actor ); } public void add ( Observer observer ) { updateList += observer . notified ; } public void delete ( Observer observer ) { updateList -= observer . notified ; } } \u4f7f\u7528\u53d1\u5e03\u8005\u529f\u80fd\u7684\u4ee3\u7801 void OnTriggerEnter ( Collider other ) { // \u8fdb\u5165\u88ab\u76d1\u63a7\u7684Area\u5219\u53d1\u5e03\u4fe1\u606f if ( other . gameObject . CompareTag ( \"Area\" )) { Publisher publish = Publisher . getInstance (); int areaIndex = other . gameObject . name [ other . gameObject . name . Length - 1 ]- '0' ; publish . notify ( ActionType . ENTER , areaIndex , this . gameObject ); } } void OnTriggerExit ( Collider other ) { // \u9003\u79bb\u65f6\u53d1\u5e03\u4fe1\u606f if ( other . gameObject . CompareTag ( \"Area\" )) { Publisher publish = Publisher . getInstance (); publish . notify ( ActionType . EXIT , - 1 , this . gameObject ); } } void OnCollisionEnter ( Collision collision ) { // \u4e0ePatrol\u78b0\u649e\u540e\u53d1\u5e03\u4fe1\u606f if ( collision . gameObject . CompareTag ( \"Patrol\" ) && animator . GetBool ( \"live\" )) { animator . SetBool ( \"live\" , false ); Publisher publish = Publisher . getInstance (); publish . notify ( ActionType . DEAD , 0 , null ); } } \u4f7f\u7528\u8ba2\u9605\u8005\u529f\u80fd\u7684\u4ee3\u7801 // PatrolCtrl.cs public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { if ( position == this . gameObject . name [ this . gameObject . name . Length - 1 ] - '0' ) { currentAction . destroy = true ; currentAction = patrolActionManager . getTarget ( actor , gameObject , animator , this ); } } else if ( type == ActionType . DEAD ) { currentAction = patrolActionManager . Stop ( gameObject , animator , this ); } } // FirstController.cs public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { scoreRecorder . addScore (); } else if ( type == ActionType . DEAD ) { gameStatus = 1 ; factory . freeAllObj (); } } // ScoreRecorder public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . EXIT ) { addScore (); } } ScoreRecorder \u8fd9\u6b21\u7684\u8ba1\u5206\u5458\u65e0\u987b\u518d\u5728FirstController\u4e2d\u63a7\u5236\uff0c\u5176\u4f5c\u4e3a\u4e00\u4e2a\u89c2\u5bdf\u8005\u53ef\u4ee5\u76d1\u542c\u5f97\u5206\u4e8b\u4ef6\uff0c\u4ece\u800c\u81ea\u5df1\u6539\u53d8\u5f97\u5206 public class ScoreRecorder : Observer { public int score = 0 ; private int status = 0 ; // \u4f7f\u8fdb\u51fa\u914d\u5bf9\uff0c\u907f\u514dReset\u65f6\u52a0\u591a\u4e00\u5206 Text gameInfo ; private static ScoreRecorder instance ; public static ScoreRecorder getInstance () { if ( instance == null ) { instance = new ScoreRecorder (); } return instance ; } private ScoreRecorder () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/ScoreInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text > (); gameInfo . text = \"\" + score ; status = 0 ; Publisher publish = Publisher . getInstance (); publish . add ( this ); } public void addScore () { score += 1 ; gameInfo . text = \"\" + score ; } public int getScore () { return score ; } public void reset () { score = 0 ; status = 0 ; gameInfo . text = \"\" + score ; } public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { status = 1 ; } else if ( type == ActionType . EXIT && status == 1 ) { addScore (); } } } \u5230\u8fd9\u91cc\uff0c\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u57fa\u672c\u5b8c\u6210\u4e86 \u603b\u7ed3 \u901a\u8fc7\u8fd9\u6b21\u4f5c\u4e1a\uff0c\u6211\u4e86\u89e3\u5230\u4e86\u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u6a21\u5f0f\u7684\u4f7f\u7528\uff0c\u5b66\u4f1a\u4e86\u5229\u7528\u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u6a21\u5f0f\u5bf9\u6e38\u620f\u7684\u5404\u4e2a\u90e8\u5206\u8fdb\u884c\"\u89e3\u8026\"\u3002","title":"\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#10-","text":"","title":"\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_1","text":"\u6e38\u620f\u89c4\u5219 \u521b\u5efa\u4e00\u4e2a\u5730\u56fe\u548c\u82e5\u5e72\u5de1\u903b\u5175(\u4f7f\u7528\u52a8\u753b)\uff1b \u6bcf\u4e2a\u5de1\u903b\u5175\u8d70\u4e00\u4e2a3~5\u4e2a\u8fb9\u7684\u51f8\u591a\u8fb9\u578b\uff0c\u4f4d\u7f6e\u6570\u636e\u662f\u76f8\u5bf9\u5730\u5740\u3002\u5373\u6bcf\u6b21\u786e\u5b9a\u4e0b\u4e00\u4e2a\u76ee\u6807\u4f4d\u7f6e\uff0c\u7528\u81ea\u5df1\u5f53\u524d\u4f4d\u7f6e\u4e3a\u539f\u70b9\u8ba1\u7b97\uff1b \u5de1\u903b\u5175\u78b0\u649e\u5230\u969c\u788d\u7269\uff0c\u5219\u4f1a\u81ea\u52a8\u9009\u4e0b\u4e00\u4e2a\u70b9\u4e3a\u76ee\u6807\uff1b \u5de1\u903b\u5175\u5728\u8bbe\u5b9a\u8303\u56f4\u5185\u611f\u77e5\u5230\u73a9\u5bb6\uff0c\u4f1a\u81ea\u52a8\u8ffd\u51fb\u73a9\u5bb6;\u5931\u53bb\u73a9\u5bb6\u76ee\u6807\u540e\uff0c\u7ee7\u7eed\u5de1\u903b\uff1b \u8ba1\u5206\uff1a\u73a9\u5bb6\u6bcf\u6b21\u7529\u6389\u4e00\u4e2a\u5de1\u903b\u5175\u8ba1\u4e00\u5206\uff0c\u4e0e\u5de1\u903b\u5175\u78b0\u649e\u6e38\u620f\u7ed3\u675f\uff1b \u6e38\u620f\u8bbe\u8ba1\u8981\u6c42 \u5fc5\u987b\u4f7f\u7528\u8ba2\u9605\u4e0e\u53d1\u5e03\u6a21\u5f0f\u4f20\u6d88\u606f \u5de5\u5382\u6a21\u5f0f\u751f\u4ea7\u5de1\u903b\u5175","title":"\u6e38\u620f\u8981\u6c42"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_2","text":"\u6539\u8fdb\u90e8\u5206\u5b9e\u73b0\u4e86\u7528\u6237\u89c6\u89d2\u7684\u53ef\u5207\u6362(\u6309\"space\"\u5207\u6362)\uff0c\u4e14\u4ea4\u4e92\u65b9\u5f0f\u968f\u89c6\u89d2\u53d8\u5316\uff0c\u589e\u5f3a\u4e86\u6e38\u620f\u7684\u4ea4\u4e92\u6027\u3002 \u6f14\u793a\u89c6\u9891","title":"\u6e38\u620f\u6539\u8fdb\u3001\u6548\u679c\u3001\u6f14\u793a\u89c6\u9891"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_3","text":"github@zhongwq/Unity3D-Learning/Homework6","title":"\u5b8c\u6574\u4ee3\u7801"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#uml","text":"","title":"\u6e38\u620fUML\u56fe"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_4","text":"","title":"\u6e38\u620f\u5b9e\u73b0"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#playercontroller","text":"PlayerController\u4e3b\u8981\u5b9e\u73b0\u7684\u662f\u7528\u6237\u63a7\u5236\u73a9\u5bb6\uff0c\u4ee5\u53ca\u8c03\u7528\u53d1\u5e03\u8005\u5728\u4e8b\u4ef6\u89e6\u53d1\u65f6\u53d1\u5e03\u6d88\u606f public class PlayerController : MonoBehaviour { public Camera subCamera ; private Animator animator ; private AnimatorStateInfo stateInfo ; private Vector3 velocity ; private int angle ; private float rotateSpeed = 15f ; private float rotateSpeed_Sub = 60f ; private float runSpeed = 3f ; // Use this for initialization void Start () { animator = GetComponent < Animator > (); angle = 1 ; } void OnTriggerEnter ( Collider other ) { // \u8fdb\u5165\u88ab\u76d1\u63a7\u7684Area\u5219\u53d1\u5e03\u4fe1\u606f if ( other . gameObject . CompareTag ( \"Area\" )) { Publisher publish = Publisher . getInstance (); int areaIndex = other . gameObject . name [ other . gameObject . name . Length - 1 ]- '0' ; publish . notify ( ActionType . ENTER , areaIndex , this . gameObject ); } } void OnCollisionEnter ( Collision collision ) { // \u4e0ePatrol\u78b0\u649e\u540e\u53d1\u5e03\u4fe1\u606f if ( collision . gameObject . CompareTag ( \"Patrol\" ) && animator . GetBool ( \"live\" )) { animator . SetBool ( \"live\" , false ); Publisher publish = Publisher . getInstance (); publish . notify ( ActionType . DEAD , 0 , null ); } } // Update is called once per frame void FixedUpdate () { // \u5f53\u7528\u6237\u6309\u4e0b\u7a7a\u683c\uff0c\u6539\u53d8\u6e38\u620f\u89c6\u89d2\uff0c\u901a\u8fc7\u6539\u53d8\u5b50\u6444\u50cf\u5934\u7684\u6df1\u5ea6\u5b9e\u73b0 if ( Input . GetKeyDown ( \"space\" )) { if ( angle == 1 ) { subCamera . depth = - 1 ; angle = 3 ; } else { angle = 1 ; subCamera . depth = - 2 ; } } if (! animator . GetBool ( \"live\" )) return ; float x = Input . GetAxis ( \"Horizontal\" ); float z = Input . GetAxis ( \"Vertical\" ); if ( x == 0 && z == 0 ) { animator . SetBool ( \"Run\" , false ); return ; } else { if ( angle == 1 ) { // \u4fef\u89c6\u89c6\u89d2\u7684\u4ea4\u4e92\u65b9\u5f0f\uff08WSAD\u5206\u522b\u4e3a\u4e0a\u4e0b\u5de6\u53f3\uff09 animator . SetBool ( \"Run\" , true ); velocity = new Vector3 ( x , 0 , z ); if ( x != 0 || z != 0 ) { Quaternion rotation = Quaternion . LookRotation ( velocity ); if ( transform . rotation != rotation ) transform . rotation = Quaternion . Slerp ( transform . rotation , rotation , Time . fixedDeltaTime * rotateSpeed ); } this . transform . position += velocity * Time . fixedDeltaTime * runSpeed ; } else { // \u7b2c\u4e09\u4eba\u79f0\u89c6\u89d2\u7684\u4ea4\u4e92\u65b9\u5f0f(WS\u524d\u8fdb\u3001\u540e\u9000, AD\u5de6\u53f3\u65cb\u8f6c\u65b9\u5411) if ( z != 0 ) animator . SetBool ( \"Run\" , true ); transform . Translate ( 0 , 0 , z * runSpeed * Time . fixedDeltaTime ); transform . Rotate ( 0 , x * rotateSpeed_Sub * Time . fixedDeltaTime , 0 ); } } // \u907f\u514d\u78b0\u649e\u5e26\u6765\u7684\u5f71\u54cd if ( transform . localEulerAngles . x != 0 || transform . localEulerAngles . z != 0 ) { transform . localEulerAngles = new Vector3 ( 0 , transform . localEulerAngles . y , 0 ); } if ( transform . position . y != 0 ) { transform . position = new Vector3 ( transform . position . x , 0 , transform . position . z ); } } }","title":"PlayerController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#patrol","text":"","title":"Patrol\u90e8\u5206"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#patrolactionmanager","text":"\u8fd9\u91cc\u4e3b\u8981\u5c31\u662f\u63d0\u4f9b\u7ed9PatrolCrtl\u7684\u52a8\u4f5c\u7ba1\u7406\u5668\uff0c\u65b9\u4fbf\u4e86PatrolCrtl\u5bf9\u4e8ePatrol\u52a8\u4f5c\u7684\u6dfb\u52a0\u3001\u5220\u9664\uff0c\u800c\u6bcf\u6b21\u521b\u5efa\u52a8\u4f5c\u90fd\u4f1a\u8fd4\u56de\u521b\u5efa\u7684\u52a8\u4f5c\u4f5c\u4e3aPatrolCrtl\u7684currentAction\u65b9\u4fbf\u5176\u5bf9\u5176\u8fdb\u884c\u9500\u6bc1,\u65e0\u9700\u518d\u4ea4\u7ed9\u52a8\u4f5c\u7ba1\u7406\u5668\u9500\u6bc1\uff0c\u90a3\u6837\u8fd8\u589e\u52a0\u4e86\u904d\u5386\u7684\u5f00\u9500\u3002 \u5404Action\u7684\u5b9e\u73b0\u5341\u5206\u7b80\u5355\uff0c\u8fd9\u91cc\u4e0d\u591a\u8d58\u8ff0\uff0c\u5b8c\u6574\u4ee3\u7801\u53ef\u89c1Github public class PatrolActionManager : SSActionManager { public IdleAction toIdle ( GameObject obj , Animator animator , ActionCallback callback ) { IdleAction tmp = IdleAction . GetIdleAction ( Random . Range ( 1 , 2 ), animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toLeft ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . left * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toRight ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . right * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toForward ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . forward * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toBack ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . back * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public RunAction getTarget ( GameObject player , GameObject obj , Animator animator , ActionCallback callback ) { RunAction tmp = RunAction . GetRunAction ( player . transform , 2.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public IdleAction Stop ( GameObject obj , Animator animator , ActionCallback callback ) { IdleAction tmp = IdleAction . GetIdleAction (- 1f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } }","title":"PatrolActionManager"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#patrolctrl","text":"\u8fd9\u4e2a\u7c7b\u4e3b\u8981\u4f5c\u7528\u5c31\u662f\u7ed1\u5728Patrol\u4e0a\uff0c\u63a7\u5236Patrol\u7684\u52a8\u4f5c\uff0c\u5e76\u4f5c\u4e3a\u4e00\u4e2aObserver\u76d1\u542c\u4e8b\u4ef6\uff0c\u6267\u884c\u76f8\u5e94\u52a8\u4f5c\u3002 public class PatrolCtrl : MonoBehaviour , ActionCallback , Observer { public enum ActionStatus : int { IDLE , TOLEFT , TOFORWARD , TORIGHT , TOBACK } private Animator animator ; private SSAction currentAction ; private ActionStatus status ; private PatrolActionManager patrolActionManager ; // Use this for initialization void Start () { animator = this . gameObject . GetComponent < Animator > (); patrolActionManager = Singleton < PatrolActionManager >. Instance ; Publisher publisher = Publisher . getInstance (); publisher . add ( this ); status = ActionStatus . IDLE ; currentAction = patrolActionManager . toIdle ( gameObject , animator , this ); } void FixedUpdate () { if ( transform . localEulerAngles . x != 0 || transform . localEulerAngles . z != 0 ) { transform . localEulerAngles = new Vector3 ( 0 , transform . localEulerAngles . y , 0 ); } if ( transform . position . y != 0 ) { transform . position = new Vector3 ( transform . position . x , 0 , transform . position . z ); } gameObject . GetComponent < Rigidbody >(). velocity = new Vector3 ( 0 , 0 , 0 ); } public void initial () { status = ActionStatus . IDLE ; currentAction = patrolActionManager . toIdle ( gameObject , animator , this ); } public void removeAction () { if ( currentAction ) currentAction . destroy = true ; } // When action done do next action public void actionDone ( SSAction source ) { status = status == ActionStatus . TOBACK ? ActionStatus . TOLEFT : ( ActionStatus )(( int ) status + 1 ); switch ( status ) { case ActionStatus . TOLEFT : currentAction = patrolActionManager . toLeft ( gameObject , animator , this ); break ; case ActionStatus . TORIGHT : currentAction = patrolActionManager . toRight ( gameObject , animator , this ); break ; case ActionStatus . TOFORWARD : currentAction = patrolActionManager . toForward ( gameObject , animator , this ); break ; case ActionStatus . TOBACK : currentAction = patrolActionManager . toBack ( gameObject , animator , this ); break ; } } private void turn () { currentAction . destroy = true ; switch ( status ) { case ActionStatus . TOLEFT : status = ActionStatus . TORIGHT ; currentAction = patrolActionManager . toRight ( gameObject , animator , this ); break ; case ActionStatus . TORIGHT : status = ActionStatus . TOLEFT ; currentAction = patrolActionManager . toLeft ( gameObject , animator , this );; break ; case ActionStatus . TOFORWARD : status = ActionStatus . TOBACK ; currentAction = patrolActionManager . toBack ( gameObject , animator , this ); break ; case ActionStatus . TOBACK : status = ActionStatus . TOFORWARD ; currentAction = patrolActionManager . toForward ( gameObject , animator , this ); break ; } } private void OnCollisionEnter ( Collision collision ) { if ( collision . gameObject . CompareTag ( \"Wall\" )) turn (); } private void OnTriggerEnter ( Collider other ) { if ( other . gameObject . CompareTag ( \"Door\" )) turn (); } public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { if ( position == this . gameObject . name [ this . gameObject . name . Length - 1 ] - '0' ) { currentAction . destroy = true ; currentAction = patrolActionManager . getTarget ( actor , gameObject , animator , this ); } } else { currentAction = patrolActionManager . Stop ( gameObject , animator , this ); } } }","title":"PatrolCtrl"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_5","text":"\u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u7684\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b\uff0c\u4f5c\u4e3a\u8ba2\u9605\u8005\u7684\u7c7b\u53ea\u9700\u8981\u7ee7\u627fObserver\u5e76\u5b9e\u73b0\u5176\u4e2d\u7684\u63a5\u53e3\u5373\u53ef\u4f5c\u4e3a\u8ba2\u9605\u8005\u53d1\u6325\u4f5c\u7528\u3002 \u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u8fd9\u79cd\u6a21\u5f0f\u7684\u4e3b\u8981\u4f5c\u7528\u6211\u4e2a\u4eba\u89c9\u5f97\u662f\u65b9\u4fbf\u5b9e\u73b0\u7ec4\u4ef6\u7684\u5206\u79bb\uff0c\u5e76\u5b9e\u73b0\u5206\u79bb\u540e\u7ec4\u4ef6\u7684\u8026\u5408\uff0c\u907f\u514d\u4e86\u591a\u4e2a\u529f\u80fd\u5199\u5728\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u6291\u6216\u662f\u9700\u8981\u624b\u52a8\u7ed1\u5b9a\u591a\u4e2a\u7c7b\u7684\u60c5\u51b5\uff0c\u4f7f\u5f97\u6211\u4eec\u7a0b\u5e8f\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\uff0c\u7a0b\u5e8f\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\u6613\u4e8e\u7406\u89e3","title":"\u8ba2\u9605\u4e0e\u53d1\u5e03\u8005\u90e8\u5206"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#observer","text":"public interface Observer { void notified ( ActionType type , int position , GameObject actor ); }","title":"Observer"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#publisher","text":"public enum ActionType { ENTER , EXIT , DEAD } public class Publisher { private delegate void ActionUpdate ( ActionType type , int position , GameObject actor ); private ActionUpdate updateList ; private static Publisher _instance ; public static Publisher getInstance () { if ( _instance == null ) _instance = new Publisher (); return _instance ; } public void notify ( ActionType type , int position , GameObject actor ) { if ( updateList != null ) updateList ( type , position , actor ); } public void add ( Observer observer ) { updateList += observer . notified ; } public void delete ( Observer observer ) { updateList -= observer . notified ; } }","title":"Publisher"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_6","text":"void OnTriggerEnter ( Collider other ) { // \u8fdb\u5165\u88ab\u76d1\u63a7\u7684Area\u5219\u53d1\u5e03\u4fe1\u606f if ( other . gameObject . CompareTag ( \"Area\" )) { Publisher publish = Publisher . getInstance (); int areaIndex = other . gameObject . name [ other . gameObject . name . Length - 1 ]- '0' ; publish . notify ( ActionType . ENTER , areaIndex , this . gameObject ); } } void OnTriggerExit ( Collider other ) { // \u9003\u79bb\u65f6\u53d1\u5e03\u4fe1\u606f if ( other . gameObject . CompareTag ( \"Area\" )) { Publisher publish = Publisher . getInstance (); publish . notify ( ActionType . EXIT , - 1 , this . gameObject ); } } void OnCollisionEnter ( Collision collision ) { // \u4e0ePatrol\u78b0\u649e\u540e\u53d1\u5e03\u4fe1\u606f if ( collision . gameObject . CompareTag ( \"Patrol\" ) && animator . GetBool ( \"live\" )) { animator . SetBool ( \"live\" , false ); Publisher publish = Publisher . getInstance (); publish . notify ( ActionType . DEAD , 0 , null ); } }","title":"\u4f7f\u7528\u53d1\u5e03\u8005\u529f\u80fd\u7684\u4ee3\u7801"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_7","text":"// PatrolCtrl.cs public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { if ( position == this . gameObject . name [ this . gameObject . name . Length - 1 ] - '0' ) { currentAction . destroy = true ; currentAction = patrolActionManager . getTarget ( actor , gameObject , animator , this ); } } else if ( type == ActionType . DEAD ) { currentAction = patrolActionManager . Stop ( gameObject , animator , this ); } } // FirstController.cs public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { scoreRecorder . addScore (); } else if ( type == ActionType . DEAD ) { gameStatus = 1 ; factory . freeAllObj (); } } // ScoreRecorder public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . EXIT ) { addScore (); } }","title":"\u4f7f\u7528\u8ba2\u9605\u8005\u529f\u80fd\u7684\u4ee3\u7801"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#scorerecorder","text":"\u8fd9\u6b21\u7684\u8ba1\u5206\u5458\u65e0\u987b\u518d\u5728FirstController\u4e2d\u63a7\u5236\uff0c\u5176\u4f5c\u4e3a\u4e00\u4e2a\u89c2\u5bdf\u8005\u53ef\u4ee5\u76d1\u542c\u5f97\u5206\u4e8b\u4ef6\uff0c\u4ece\u800c\u81ea\u5df1\u6539\u53d8\u5f97\u5206 public class ScoreRecorder : Observer { public int score = 0 ; private int status = 0 ; // \u4f7f\u8fdb\u51fa\u914d\u5bf9\uff0c\u907f\u514dReset\u65f6\u52a0\u591a\u4e00\u5206 Text gameInfo ; private static ScoreRecorder instance ; public static ScoreRecorder getInstance () { if ( instance == null ) { instance = new ScoreRecorder (); } return instance ; } private ScoreRecorder () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/ScoreInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text > (); gameInfo . text = \"\" + score ; status = 0 ; Publisher publish = Publisher . getInstance (); publish . add ( this ); } public void addScore () { score += 1 ; gameInfo . text = \"\" + score ; } public int getScore () { return score ; } public void reset () { score = 0 ; status = 0 ; gameInfo . text = \"\" + score ; } public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { status = 1 ; } else if ( type == ActionType . EXIT && status == 1 ) { addScore (); } } } \u5230\u8fd9\u91cc\uff0c\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u57fa\u672c\u5b8c\u6210\u4e86","title":"ScoreRecorder"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_8","text":"\u901a\u8fc7\u8fd9\u6b21\u4f5c\u4e1a\uff0c\u6211\u4e86\u89e3\u5230\u4e86\u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u6a21\u5f0f\u7684\u4f7f\u7528\uff0c\u5b66\u4f1a\u4e86\u5229\u7528\u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u6a21\u5f0f\u5bf9\u6e38\u620f\u7684\u5404\u4e2a\u90e8\u5206\u8fdb\u884c\"\u89e3\u8026\"\u3002","title":"\u603b\u7ed3"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/","text":"\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c \u8981\u6c42 \u53c2\u8003 http://i-remember.fr/en \u8fd9\u7c7b\u7f51\u7ad9\uff0c\u4f7f\u7528\u7c92\u5b50\u6d41\u7f16\u7a0b\u63a7\u5236\u5236\u4f5c\u4e00\u4e9b\u6548\u679c\uff0c \u5982\u201c\u7c92\u5b50\u5149\u73af\u201d \u5b9e\u73b0\u6548\u679c \u6f14\u793a\u89c6\u9891 \u5b9e\u73b0\u8fc7\u7a0b \u8bbe\u8ba1\u601d\u8def \u4ed4\u7ec6\u89c2\u5bdfI Remember\u7684\u7c92\u5b50\u5149\u73af\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5176\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5206\u6210\u8f83\u5bc6\u96c6\u7684\u4e00\u90e8\u5206\u4ee5\u53ca\u8f83\u4e3a\u7a00\u758f\u7684\u4e00\u90e8\u5206\uff0c\u800c\u5bc6\u96c6\u7684\u7a84\u73af\u662f\u6709\u4e00\u4e2a\u5bf9\u79f0\u7684\u7f3a\u53e3\u7684\u3002\u800c\u5176\u5149\u73af\u4f1a\u6839\u636e\u4e0d\u540c\u60c5\u51b5\u6536\u7f29\u3002 \u6240\u4ee5\u6211\u4eec\u5728\u5904\u7406\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c06\u6211\u4eec\u7684Particle\u6570\u7ec4\u5206\u6210\u524d\u548c\u540e\u4e24\u90e8\u5206\u6765\u8fdb\u884c\u5904\u7406\u3002 if ( i < particleNum * 1 / 2 ) { //\u5c06\u524d\u534a\u90e8\u5206\u7528\u4e8e\u8f83\u5bbd\u7684\u90a3\u4e2a\u73af ... } else { //\u540e\u534a\u90e8\u5206\u7528\u4e8e\u7a84\u73af ... } \u6211\u4eec\u53ea\u9700\u63a7\u5236\u4e24\u90e8\u5206\u5206\u5e03\u7684\u534a\u5f84\u65e2\u53ef\u4ee5\u5b9e\u73b0\u5176\u5206\u5e03\u7a00\u758f\u4ee5\u53ca\u5bc6\u96c6\u3002 \u90a3\u4e48\uff0c\u7a84\u73af\u7684\u8f83\u7a00\u758f\u7684\u7f3a\u53e3\u600e\u4e48\u505a\u5462\uff0c\u5176\u5b9e\u4e5f\u4e0d\u96be\uff0c\u53ea\u7528\u505a\u597dangle\u7684\u5206\u5e03\u5c31\u53ef\u4ee5\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\u3002 if ( i < particleNum * 1 / 2 ) { //\u5c06\u524d\u534a\u90e8\u5206\u7528\u4e8e\u8f83\u5bbd\u7684\u90a3\u4e2a\u73af maxR = outMaxR ; minR = outMinR ; randomAngle = Random . Range ( 0.0f , 360.0f ); } else { //\u540e\u534a\u90e8\u5206\u7528\u4e8e\u7a84\u73af,\u6839\u636eI Remember,\u7a84\u73af\u5e26\u7f3a\u53e3\uff0c\u56e0\u6b64\u6211\u4eec\u8bbe\u7f6e\u4e00\u534a\u54110\u5ea6\u96c6\u4e2d\u3001\u4e00\u534a\u5411180\u5ea6\u96c6\u4e2d\uff0c\u4f7f\u5f9790\u5ea6\u548c-90\u5ea6\u5f62\u6210\u4e24\u4e2a\u5bf9\u79f0\u7f3a\u53e3 maxR = inMaxR ; minR = inMinR ; float minAngle = Random . Range (- 90f , 0.0f ); float maxAngle = Random . Range ( 0.0f , 90f ); float angle = Random . Range ( minAngle , maxAngle ); randomAngle = i % 2 == 0 ? angle : angle - 180 ; //\u5229\u7528\u5bf9\u79f0\u6765\u8bbe\u7f6e\u53e6\u4e00\u534a\u7c92\u5b50 } \u4ee5\u4e0a\u65f6\u4e00\u4e9b\u57fa\u672c\u7684\u601d\u8def\u4e0b\u9762\u6211\u4eec\u8bf4\u8bf4\u53e6\u5916\u4e00\u4e9b\u5173\u952e\u7684\u90e8\u5206 \u8bbe\u7f6e\u7c92\u5b50\u7684\u5404\u5c5e\u6027 \u7c92\u5b50\u8f6c\u52a8 \u8fd9\u90e8\u5206\u5c31\u662f\u901a\u8fc7\u7a84\u73af\uff0c\u5bbd\u73af\u8c03\u8282\u8f6c\u52a8(angle)\u53d8\u5316\u7684\u5e45\u5ea6 // \u7a84\u73af\u8f6c\u52a8\u901f\u5ea6\u66f4\u5feb if ( i > particleNum * 1 / 2 ) speed = 0.1f ; else speed = 0.05f ; posArray [ i ]. angle -= speed ; posArray [ i ]. angle = posArray [ i ]. angle % 360 ; ... particleArray [ i ]. position = new Vector3 ( posArray [ i ]. cur_r * Mathf . Cos ( rad ), posArray [ i ]. cur_r * Mathf . Sin ( rad ), 0f ); \u7c92\u5b50\u7684\u7f29\u653e \u5f53\u7528\u6237\u70b9\u51fbChange\u6309\u94ae\u540e\uff0c\u6211\u4eec\u6839\u636eflag\u6765\u8bbe\u7f6e\u7c92\u5b50\u7684\u534a\u5f84\u6765\u63a7\u5236\u7c92\u5b50\u7684\"\u6536\u7f29\"\u3002 if ( flag == 0 ) { //\u7c92\u5b50\u5411\u4e2d\u95f4\u6536\u7f29 if ( posArray [ i ]. cur_r > posArray [ i ]. combine_r + 0.05f ) { //\u4e24\u5c42\u73af\u7684\u6536\u7f29\u901f\u5ea6\u4e0d\u540c if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } else if ( posArray [ i ]. cur_r < posArray [ i ]. combine_r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } } else if ( flag == 1 ) { //\u7c92\u5b50\u8303\u56f4\u6269\u5927 if ( posArray [ i ]. cur_r < posArray [ i ]. r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } else if ( posArray [ i ]. cur_r > posArray [ i ]. r + 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } } \u5b8c\u6574\u4ee3\u7801 public class RingOfParticle : MonoBehaviour { public class particlePos { public float r = 0.0f ; //\u521d\u59cb\u5316\u534a\u5f84 public float combine_r = 0.0f ; //\u96c6\u5408\u540e\u7684\u534a\u5f84 public float cur_r = 0.0f ; //\u8bb0\u5f55\u7c92\u5b50\u5f53\u524d\u65f6\u523b\u534a\u5f84 public float angle = 0.0f ; public particlePos ( float radiu , float angle , float combine ) { r = radiu ; this . angle = angle ; combine_r = combine ; cur_r = radiu ; } } public ParticleSystem particleSystem ; public int particleNum = 10000 ; public float outMinR = 5.0f ; public float outMaxR = 10.0f ; public float inMinR = 6.0f ; public float inMaxR = 9.0f ; public float speed = 0.1f ; public int flag ; private ParticleSystem . Particle [] particleArray ; private particlePos [] posArray ; void OnGUI () { if ( GUI . Button ( new Rect ( 0 , 15 , 100 , 30 ), \"Change\" )) { flag = ( flag == - 1 )? 0 : 1 - flag ; } } // Use this for initialization void Start () { flag = - 1 ; posArray = new particlePos [ particleNum ]; particleArray = new ParticleSystem . Particle [ particleNum ]; particleSystem . maxParticles = particleNum ; particleSystem . Emit ( particleNum ); particleSystem . GetParticles ( particleArray ); for ( int i = 0 ; i < particleNum ; i ++) { float randomAngle ; // \u8bbe\u7f6e\u7c92\u5b50\u7684\u968f\u673a\u89d2\u5ea6 float maxR , minR ; // \u6700\u5927\u6700\u5c0f\u534a\u5f84\u4f9b\u968f\u673a if ( i < particleNum * 1 / 2 ) { //\u5c06\u524d\u534a\u90e8\u5206\u7528\u4e8e\u8f83\u5bbd\u7684\u90a3\u4e2a\u73af maxR = outMaxR ; minR = outMinR ; randomAngle = Random . Range ( 0.0f , 360.0f ); } else { //\u540e\u534a\u90e8\u5206\u7528\u4e8e\u7a84\u73af,\u6839\u636eI Remember,\u7a84\u73af\u5e26\u7f3a\u53e3\uff0c\u56e0\u6b64\u6211\u4eec\u8bbe\u7f6e\u4e00\u534a\u54110\u5ea6\u96c6\u4e2d\u3001\u4e00\u534a\u5411180\u5ea6\u96c6\u4e2d\uff0c\u4f7f\u5f9790\u5ea6\u548c-90\u5ea6\u5f62\u6210\u4e24\u4e2a\u5bf9\u79f0\u7f3a\u53e3 maxR = inMaxR ; minR = inMinR ; float minAngle = Random . Range (- 90f , 0.0f ); float maxAngle = Random . Range ( 0.0f , 90f ); float angle = Random . Range ( minAngle , maxAngle ); randomAngle = i % 2 == 0 ? angle : angle - 180 ; //\u5229\u7528\u5bf9\u79f0\u6765\u8bbe\u7f6e\u53e6\u4e00\u534a\u7c92\u5b50 } float midRadius = ( maxR + minR ) / 2 ; float min = Random . Range ( minR , midRadius ); float max = Random . Range ( midRadius , maxR ); float randomRadius = Random . Range ( min , max ); float combineRadius ; // \u5e73\u5747\u534a\u5f84\u4ee5\u5916\u7684\u7c92\u5b50\u96c6\u5408\u534a\u5f84\u8c03\u5c0f\uff0c\u4f7f\u7f29\u5c0f\u65f6\u79fb\u52a8\u7684\u8ddd\u79bb\u5c11\u4e00\u4e9b if ( randomRadius > midRadius ) combineRadius = randomRadius - ( randomRadius - midRadius ) / 2 ; else combineRadius = randomRadius - ( randomRadius - midRadius ) * 3 / 4 ; // \u8bbe\u7f6e\u7c92\u5b50\u7684\u5c5e\u6027 posArray [ i ] = new particlePos ( randomRadius , randomAngle , combineRadius ); particleArray [ i ]. position = new Vector3 ( randomRadius * Mathf . Cos ( randomAngle ), randomRadius * Mathf . Sin ( randomAngle ), 0.0f ); } particleSystem . SetParticles ( particleArray , particleNum ); } // Update is called once per frame void Update () { for ( int i = 0 ; i < particleNum ; i ++) { // \u5c0f\u5708\u8f6c\u52a8\u901f\u5ea6\u66f4\u5feb if ( i > particleNum * 1 / 2 ) speed = 0.1f ; else speed = 0.05f ; posArray [ i ]. angle -= speed ; posArray [ i ]. angle = posArray [ i ]. angle % 360 ; float rad = posArray [ i ]. angle / 180 * Mathf . PI ; // \u6839\u636eflag, \u5224\u65ad\u7c92\u5b50\u7684\u52a8\u6001\uff0c\u6539\u53d8\u7c92\u5b50\u7684\u73b0\u5728\u7684\u534a\u5f84 if ( flag == 0 ) { //\u7c92\u5b50\u5411\u4e2d\u95f4\u6536\u7f29 if ( posArray [ i ]. cur_r > posArray [ i ]. combine_r + 0.05f ) { //\u4e24\u5c42\u73af\u7684\u6536\u7f29\u901f\u5ea6\u4e0d\u540c if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } else if ( posArray [ i ]. cur_r < posArray [ i ]. combine_r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } } else if ( flag == 1 ) { //\u7c92\u5b50\u8303\u56f4\u6269\u5927 if ( posArray [ i ]. cur_r < posArray [ i ]. r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } else if ( posArray [ i ]. cur_r > posArray [ i ]. r + 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } } // \u901a\u8fc7curR\u548c\u65b0\u7684\u89d2\u5ea6\u8bbe\u7f6e\u7c92\u5b50\u7684\u4f4d\u7f6e particleArray [ i ]. position = new Vector3 ( posArray [ i ]. cur_r * Mathf . Cos ( rad ), posArray [ i ]. cur_r * Mathf . Sin ( rad ), 0f ); } particleSystem . SetParticles ( particleArray , particleNum ); } }","title":"\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#11-","text":"","title":"\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_1","text":"\u53c2\u8003 http://i-remember.fr/en \u8fd9\u7c7b\u7f51\u7ad9\uff0c\u4f7f\u7528\u7c92\u5b50\u6d41\u7f16\u7a0b\u63a7\u5236\u5236\u4f5c\u4e00\u4e9b\u6548\u679c\uff0c \u5982\u201c\u7c92\u5b50\u5149\u73af\u201d","title":"\u8981\u6c42"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_2","text":"\u6f14\u793a\u89c6\u9891","title":"\u5b9e\u73b0\u6548\u679c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_3","text":"","title":"\u5b9e\u73b0\u8fc7\u7a0b"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_4","text":"\u4ed4\u7ec6\u89c2\u5bdfI Remember\u7684\u7c92\u5b50\u5149\u73af\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5176\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5206\u6210\u8f83\u5bc6\u96c6\u7684\u4e00\u90e8\u5206\u4ee5\u53ca\u8f83\u4e3a\u7a00\u758f\u7684\u4e00\u90e8\u5206\uff0c\u800c\u5bc6\u96c6\u7684\u7a84\u73af\u662f\u6709\u4e00\u4e2a\u5bf9\u79f0\u7684\u7f3a\u53e3\u7684\u3002\u800c\u5176\u5149\u73af\u4f1a\u6839\u636e\u4e0d\u540c\u60c5\u51b5\u6536\u7f29\u3002 \u6240\u4ee5\u6211\u4eec\u5728\u5904\u7406\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c06\u6211\u4eec\u7684Particle\u6570\u7ec4\u5206\u6210\u524d\u548c\u540e\u4e24\u90e8\u5206\u6765\u8fdb\u884c\u5904\u7406\u3002 if ( i < particleNum * 1 / 2 ) { //\u5c06\u524d\u534a\u90e8\u5206\u7528\u4e8e\u8f83\u5bbd\u7684\u90a3\u4e2a\u73af ... } else { //\u540e\u534a\u90e8\u5206\u7528\u4e8e\u7a84\u73af ... } \u6211\u4eec\u53ea\u9700\u63a7\u5236\u4e24\u90e8\u5206\u5206\u5e03\u7684\u534a\u5f84\u65e2\u53ef\u4ee5\u5b9e\u73b0\u5176\u5206\u5e03\u7a00\u758f\u4ee5\u53ca\u5bc6\u96c6\u3002 \u90a3\u4e48\uff0c\u7a84\u73af\u7684\u8f83\u7a00\u758f\u7684\u7f3a\u53e3\u600e\u4e48\u505a\u5462\uff0c\u5176\u5b9e\u4e5f\u4e0d\u96be\uff0c\u53ea\u7528\u505a\u597dangle\u7684\u5206\u5e03\u5c31\u53ef\u4ee5\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\u3002 if ( i < particleNum * 1 / 2 ) { //\u5c06\u524d\u534a\u90e8\u5206\u7528\u4e8e\u8f83\u5bbd\u7684\u90a3\u4e2a\u73af maxR = outMaxR ; minR = outMinR ; randomAngle = Random . Range ( 0.0f , 360.0f ); } else { //\u540e\u534a\u90e8\u5206\u7528\u4e8e\u7a84\u73af,\u6839\u636eI Remember,\u7a84\u73af\u5e26\u7f3a\u53e3\uff0c\u56e0\u6b64\u6211\u4eec\u8bbe\u7f6e\u4e00\u534a\u54110\u5ea6\u96c6\u4e2d\u3001\u4e00\u534a\u5411180\u5ea6\u96c6\u4e2d\uff0c\u4f7f\u5f9790\u5ea6\u548c-90\u5ea6\u5f62\u6210\u4e24\u4e2a\u5bf9\u79f0\u7f3a\u53e3 maxR = inMaxR ; minR = inMinR ; float minAngle = Random . Range (- 90f , 0.0f ); float maxAngle = Random . Range ( 0.0f , 90f ); float angle = Random . Range ( minAngle , maxAngle ); randomAngle = i % 2 == 0 ? angle : angle - 180 ; //\u5229\u7528\u5bf9\u79f0\u6765\u8bbe\u7f6e\u53e6\u4e00\u534a\u7c92\u5b50 } \u4ee5\u4e0a\u65f6\u4e00\u4e9b\u57fa\u672c\u7684\u601d\u8def\u4e0b\u9762\u6211\u4eec\u8bf4\u8bf4\u53e6\u5916\u4e00\u4e9b\u5173\u952e\u7684\u90e8\u5206","title":"\u8bbe\u8ba1\u601d\u8def"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_5","text":"","title":"\u8bbe\u7f6e\u7c92\u5b50\u7684\u5404\u5c5e\u6027"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_6","text":"\u8fd9\u90e8\u5206\u5c31\u662f\u901a\u8fc7\u7a84\u73af\uff0c\u5bbd\u73af\u8c03\u8282\u8f6c\u52a8(angle)\u53d8\u5316\u7684\u5e45\u5ea6 // \u7a84\u73af\u8f6c\u52a8\u901f\u5ea6\u66f4\u5feb if ( i > particleNum * 1 / 2 ) speed = 0.1f ; else speed = 0.05f ; posArray [ i ]. angle -= speed ; posArray [ i ]. angle = posArray [ i ]. angle % 360 ; ... particleArray [ i ]. position = new Vector3 ( posArray [ i ]. cur_r * Mathf . Cos ( rad ), posArray [ i ]. cur_r * Mathf . Sin ( rad ), 0f );","title":"\u7c92\u5b50\u8f6c\u52a8"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_7","text":"\u5f53\u7528\u6237\u70b9\u51fbChange\u6309\u94ae\u540e\uff0c\u6211\u4eec\u6839\u636eflag\u6765\u8bbe\u7f6e\u7c92\u5b50\u7684\u534a\u5f84\u6765\u63a7\u5236\u7c92\u5b50\u7684\"\u6536\u7f29\"\u3002 if ( flag == 0 ) { //\u7c92\u5b50\u5411\u4e2d\u95f4\u6536\u7f29 if ( posArray [ i ]. cur_r > posArray [ i ]. combine_r + 0.05f ) { //\u4e24\u5c42\u73af\u7684\u6536\u7f29\u901f\u5ea6\u4e0d\u540c if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } else if ( posArray [ i ]. cur_r < posArray [ i ]. combine_r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } } else if ( flag == 1 ) { //\u7c92\u5b50\u8303\u56f4\u6269\u5927 if ( posArray [ i ]. cur_r < posArray [ i ]. r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } else if ( posArray [ i ]. cur_r > posArray [ i ]. r + 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } }","title":"\u7c92\u5b50\u7684\u7f29\u653e"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_8","text":"public class RingOfParticle : MonoBehaviour { public class particlePos { public float r = 0.0f ; //\u521d\u59cb\u5316\u534a\u5f84 public float combine_r = 0.0f ; //\u96c6\u5408\u540e\u7684\u534a\u5f84 public float cur_r = 0.0f ; //\u8bb0\u5f55\u7c92\u5b50\u5f53\u524d\u65f6\u523b\u534a\u5f84 public float angle = 0.0f ; public particlePos ( float radiu , float angle , float combine ) { r = radiu ; this . angle = angle ; combine_r = combine ; cur_r = radiu ; } } public ParticleSystem particleSystem ; public int particleNum = 10000 ; public float outMinR = 5.0f ; public float outMaxR = 10.0f ; public float inMinR = 6.0f ; public float inMaxR = 9.0f ; public float speed = 0.1f ; public int flag ; private ParticleSystem . Particle [] particleArray ; private particlePos [] posArray ; void OnGUI () { if ( GUI . Button ( new Rect ( 0 , 15 , 100 , 30 ), \"Change\" )) { flag = ( flag == - 1 )? 0 : 1 - flag ; } } // Use this for initialization void Start () { flag = - 1 ; posArray = new particlePos [ particleNum ]; particleArray = new ParticleSystem . Particle [ particleNum ]; particleSystem . maxParticles = particleNum ; particleSystem . Emit ( particleNum ); particleSystem . GetParticles ( particleArray ); for ( int i = 0 ; i < particleNum ; i ++) { float randomAngle ; // \u8bbe\u7f6e\u7c92\u5b50\u7684\u968f\u673a\u89d2\u5ea6 float maxR , minR ; // \u6700\u5927\u6700\u5c0f\u534a\u5f84\u4f9b\u968f\u673a if ( i < particleNum * 1 / 2 ) { //\u5c06\u524d\u534a\u90e8\u5206\u7528\u4e8e\u8f83\u5bbd\u7684\u90a3\u4e2a\u73af maxR = outMaxR ; minR = outMinR ; randomAngle = Random . Range ( 0.0f , 360.0f ); } else { //\u540e\u534a\u90e8\u5206\u7528\u4e8e\u7a84\u73af,\u6839\u636eI Remember,\u7a84\u73af\u5e26\u7f3a\u53e3\uff0c\u56e0\u6b64\u6211\u4eec\u8bbe\u7f6e\u4e00\u534a\u54110\u5ea6\u96c6\u4e2d\u3001\u4e00\u534a\u5411180\u5ea6\u96c6\u4e2d\uff0c\u4f7f\u5f9790\u5ea6\u548c-90\u5ea6\u5f62\u6210\u4e24\u4e2a\u5bf9\u79f0\u7f3a\u53e3 maxR = inMaxR ; minR = inMinR ; float minAngle = Random . Range (- 90f , 0.0f ); float maxAngle = Random . Range ( 0.0f , 90f ); float angle = Random . Range ( minAngle , maxAngle ); randomAngle = i % 2 == 0 ? angle : angle - 180 ; //\u5229\u7528\u5bf9\u79f0\u6765\u8bbe\u7f6e\u53e6\u4e00\u534a\u7c92\u5b50 } float midRadius = ( maxR + minR ) / 2 ; float min = Random . Range ( minR , midRadius ); float max = Random . Range ( midRadius , maxR ); float randomRadius = Random . Range ( min , max ); float combineRadius ; // \u5e73\u5747\u534a\u5f84\u4ee5\u5916\u7684\u7c92\u5b50\u96c6\u5408\u534a\u5f84\u8c03\u5c0f\uff0c\u4f7f\u7f29\u5c0f\u65f6\u79fb\u52a8\u7684\u8ddd\u79bb\u5c11\u4e00\u4e9b if ( randomRadius > midRadius ) combineRadius = randomRadius - ( randomRadius - midRadius ) / 2 ; else combineRadius = randomRadius - ( randomRadius - midRadius ) * 3 / 4 ; // \u8bbe\u7f6e\u7c92\u5b50\u7684\u5c5e\u6027 posArray [ i ] = new particlePos ( randomRadius , randomAngle , combineRadius ); particleArray [ i ]. position = new Vector3 ( randomRadius * Mathf . Cos ( randomAngle ), randomRadius * Mathf . Sin ( randomAngle ), 0.0f ); } particleSystem . SetParticles ( particleArray , particleNum ); } // Update is called once per frame void Update () { for ( int i = 0 ; i < particleNum ; i ++) { // \u5c0f\u5708\u8f6c\u52a8\u901f\u5ea6\u66f4\u5feb if ( i > particleNum * 1 / 2 ) speed = 0.1f ; else speed = 0.05f ; posArray [ i ]. angle -= speed ; posArray [ i ]. angle = posArray [ i ]. angle % 360 ; float rad = posArray [ i ]. angle / 180 * Mathf . PI ; // \u6839\u636eflag, \u5224\u65ad\u7c92\u5b50\u7684\u52a8\u6001\uff0c\u6539\u53d8\u7c92\u5b50\u7684\u73b0\u5728\u7684\u534a\u5f84 if ( flag == 0 ) { //\u7c92\u5b50\u5411\u4e2d\u95f4\u6536\u7f29 if ( posArray [ i ]. cur_r > posArray [ i ]. combine_r + 0.05f ) { //\u4e24\u5c42\u73af\u7684\u6536\u7f29\u901f\u5ea6\u4e0d\u540c if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } else if ( posArray [ i ]. cur_r < posArray [ i ]. combine_r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } } else if ( flag == 1 ) { //\u7c92\u5b50\u8303\u56f4\u6269\u5927 if ( posArray [ i ]. cur_r < posArray [ i ]. r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } else if ( posArray [ i ]. cur_r > posArray [ i ]. r + 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } } // \u901a\u8fc7curR\u548c\u65b0\u7684\u89d2\u5ea6\u8bbe\u7f6e\u7c92\u5b50\u7684\u4f4d\u7f6e particleArray [ i ]. position = new Vector3 ( posArray [ i ]. cur_r * Mathf . Cos ( rad ), posArray [ i ]. cur_r * Mathf . Sin ( rad ), 0f ); } particleSystem . SetParticles ( particleArray , particleNum ); } }","title":"\u5b8c\u6574\u4ee3\u7801"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248/","text":"\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248 \u4f5c\u4e1a\u7d20\u6750 \u516c\u544a\u7248 SampleUI \u4e2d\u7684\u90e8\u5206\u8d34\u56fe \u5b8c\u6210\u6548\u679c \u5b9e\u73b0\u8fc7\u7a0b \u5728\u8fd9\u6b21\u7684\u4f5c\u4e1a\u4e2d\uff0c\u6211\u7528\u5230\u4e86\u8bfe\u4e0a\u63d0\u4f9b\u7684SampleUI\u7684\u8d44\u6e90\u5305\u91cc\u7684\u90e8\u5206\u8d34\u56fe \u9996\u5148\uff0c\u6211\u4eec\u8fdb\u884c\u6211\u4eec\u57fa\u672c\u7684UI\u6784\u5efa,\u6211\u4eec\u5148\u521b\u5efa\u4e00\u4e2aScrollView, \u7ed9Canvas\u52a0\u5165\u6211\u4eec\u7684Background(Image)\uff0c\u800c\u56fe\u4e2d\u6548\u679c\u7684\u5b9e\u73b0\u6211\u8fd8\u7528\u4e86\u4e00\u4e2aMenuImage(Image),\u76f4\u63a5\u628aSF Window\u4f5c\u4e3aScrollView\u7684Image\u662f\u8fbe\u4e0d\u5230\u4e0a\u9762\u7684\u6548\u679c\u7684\uff0c\u6240\u4ee5\u6211\u901a\u8fc7\u589e\u52a0\u4e00\u4e2aImage,\u628aScrollView\u5305\u5728\u91cc\u9762\u4ee5\u5b9e\u73b0\u4ee5\u4e0a\u6548\u679c\uff0c\u5b8c\u6210\u4e86\u8fd9\u4e2a\u4ee5\u540e\uff0c\u6211\u4eec\u4e5f\u7ed9\u6211\u4eec\u7684Scrollbar\u52a0\u4e0a\u76f8\u5e94\u7684\u8d34\u56fe\uff0c\u8fd9\u65f6\u5019\u6574\u4e2a\u6548\u679c\u5982\u4e0b \u5230\u8fd9\u4e00\u6b65\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9ScrollView\u7684Content\u52a0\u4e0a\u76f8\u5e94\u7684\u5185\u5bb9\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ed9Content\u52a0\u4e00\u4e2aVerticalLayoutGroup\u5b9e\u73b0\u6211\u4eecContent\u7684\u81ea\u52a8\u5e03\u5c40\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u628aGameObject\u6dfb\u52a0\u5230Content\u91cc\uff0c\u5b83\u5c31\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u5b8c\u6210\u5e03\u5c40\uff0c\u65e0\u9700\u518d\u81ea\u5df1\u53bb\u8c03\u8282 \u6211\u4eec\u52a0\u5165\u6211\u4eec\u7684Button\u548cText, \u7ed3\u679c\u5982\u4e0b \u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5b9e\u73b0\u6211\u4eecText\u7684\u5c55\u5f00\u5462\uff0c\u5728\u8fd9\u91cc\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86VerticalLayoutGroup,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u8282Text\u7684Size(Height)\u5b8c\u6210Text\u7684\u6536\u7f29\uff0c\u7406\u89e3\u4e86\u8fd9\u4e00\u70b9\u5c31\u597d\u529e\u4e86\uff0c\u6211\u8fd9\u91cc\u7528\u7684\u662f\u6211\u4eec\u4e4b\u524d\u5b66\u8fc7\u7684\u52a8\u753b\u3002\u901a\u8fc7\u52a8\u753b\u8c03\u8282Text\u7684Size\uff0c\u6211\u4eec\u5373\u53ef\u5b8c\u6210\u6536\u7f29\u5c55\u5f00\u7684\u52a8\u753b\uff0c\u8fd9\u91cc\u52a8\u753b\u7684\u5236\u4f5c\u5341\u5206\u7b80\u5355\uff0c\u4e0d\u591a\u8d58\u8ff0 \u90a3\u4e48\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u52a8\u753b\u5462\uff0c\u5176\u5b9e\u4e5f\u5341\u5206\u7b80\u5355\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u521b\u5efaAnimator\u7136\u540e\u7ed9\u6211\u4eec\u7684Button\u52a0\u5165\u76f8\u5e94\u7684\u4e8b\u4ef6\u5904\u7406\u89e3\u51b3\uff0c\u5177\u4f53\u5982\u4e0b: \u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2aAnimator\u5982\u4e0b: \u6e38\u620f\u4e00\u5f00\u59cb\u8fd0\u884c\u65f6\uff0cText\u5904\u4e8eIdle\u72b6\u6001(\u8be5\u72b6\u6001\u65e0\u52a8\u4f5c), State\u4e3afalse(\u5373Text\u5904\u4e8e\u6536\u7f29\u72b6\u6001) \u90a3\u4e48\u5f53\u6211\u4eec\u7b2c\u4e00\u6b21\u6309Button\u4f7f\u5176\u5c55\u5f00\u65f6\uff0c\u6211\u4eecSetTrigger(\"ToggleIn\"),Text\u8fdb\u5165ToggleOut\u72b6\u6001\uff0c\u90a3\u4e48\u4e4b\u540e\u6211\u4eec\u53ea\u9700\u7ef4\u62a4State\u7684\u503c\uff0c\u7136\u540e\u7ecf\u8fc7\u5224\u65ad\u89e6\u53d1ToggleIn\u548cToggleOut\u4f7fText\u5b8c\u6210\u76f8\u5173\u64cd\u4f5c Toggle.cs\u7684\u4ee3\u7801\u5982\u4e0b\u8f83\u7b80\u5355 public class Toggle : MonoBehaviour { private Button yourButton ; public Text text ; private Animator animator ; // Use this for initialization void Start () { Button btn = this . gameObject . GetComponent < Button >(); animator = text . GetComponent < Animator > (); btn . onClick . AddListener ( ClickBtn ); } void ClickBtn () { if ( animator . GetBool ( \"State\" )) { animator . SetTrigger ( \"ToggleIn\" ); animator . SetBool ( \"State\" , false ); } else { animator . SetTrigger ( \"ToggleOut\" ); animator . SetBool ( \"State\" , true ); } } } \u901a\u8fc7\u7ed9Button\u6302\u8f7d\u4ee5\u4e0a\u4ee3\u7801\uff0c\u62d6\u5165Text, \u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u6211\u4eec\u7684\u53ef\u5c55\u5f00\u516c\u544a\u7248\uff0c\u4e2a\u4eba\u89c9\u5f97\u7528\u8fd9\u79cd\u7ed9UI\u52a0\u4e0a\u52a8\u753b\u7684\u65b9\u6cd5\u8fd8\u662f\u5341\u5206\u7b80\u5355\u7684\u3002","title":"\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248/#12-","text":"","title":"\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248/#_1","text":"\u516c\u544a\u7248 SampleUI \u4e2d\u7684\u90e8\u5206\u8d34\u56fe","title":"\u4f5c\u4e1a\u7d20\u6750"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248/#_2","text":"","title":"\u5b8c\u6210\u6548\u679c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248/#_3","text":"\u5728\u8fd9\u6b21\u7684\u4f5c\u4e1a\u4e2d\uff0c\u6211\u7528\u5230\u4e86\u8bfe\u4e0a\u63d0\u4f9b\u7684SampleUI\u7684\u8d44\u6e90\u5305\u91cc\u7684\u90e8\u5206\u8d34\u56fe \u9996\u5148\uff0c\u6211\u4eec\u8fdb\u884c\u6211\u4eec\u57fa\u672c\u7684UI\u6784\u5efa,\u6211\u4eec\u5148\u521b\u5efa\u4e00\u4e2aScrollView, \u7ed9Canvas\u52a0\u5165\u6211\u4eec\u7684Background(Image)\uff0c\u800c\u56fe\u4e2d\u6548\u679c\u7684\u5b9e\u73b0\u6211\u8fd8\u7528\u4e86\u4e00\u4e2aMenuImage(Image),\u76f4\u63a5\u628aSF Window\u4f5c\u4e3aScrollView\u7684Image\u662f\u8fbe\u4e0d\u5230\u4e0a\u9762\u7684\u6548\u679c\u7684\uff0c\u6240\u4ee5\u6211\u901a\u8fc7\u589e\u52a0\u4e00\u4e2aImage,\u628aScrollView\u5305\u5728\u91cc\u9762\u4ee5\u5b9e\u73b0\u4ee5\u4e0a\u6548\u679c\uff0c\u5b8c\u6210\u4e86\u8fd9\u4e2a\u4ee5\u540e\uff0c\u6211\u4eec\u4e5f\u7ed9\u6211\u4eec\u7684Scrollbar\u52a0\u4e0a\u76f8\u5e94\u7684\u8d34\u56fe\uff0c\u8fd9\u65f6\u5019\u6574\u4e2a\u6548\u679c\u5982\u4e0b \u5230\u8fd9\u4e00\u6b65\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9ScrollView\u7684Content\u52a0\u4e0a\u76f8\u5e94\u7684\u5185\u5bb9\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ed9Content\u52a0\u4e00\u4e2aVerticalLayoutGroup\u5b9e\u73b0\u6211\u4eecContent\u7684\u81ea\u52a8\u5e03\u5c40\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u628aGameObject\u6dfb\u52a0\u5230Content\u91cc\uff0c\u5b83\u5c31\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u5b8c\u6210\u5e03\u5c40\uff0c\u65e0\u9700\u518d\u81ea\u5df1\u53bb\u8c03\u8282 \u6211\u4eec\u52a0\u5165\u6211\u4eec\u7684Button\u548cText, \u7ed3\u679c\u5982\u4e0b \u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5b9e\u73b0\u6211\u4eecText\u7684\u5c55\u5f00\u5462\uff0c\u5728\u8fd9\u91cc\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86VerticalLayoutGroup,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u8282Text\u7684Size(Height)\u5b8c\u6210Text\u7684\u6536\u7f29\uff0c\u7406\u89e3\u4e86\u8fd9\u4e00\u70b9\u5c31\u597d\u529e\u4e86\uff0c\u6211\u8fd9\u91cc\u7528\u7684\u662f\u6211\u4eec\u4e4b\u524d\u5b66\u8fc7\u7684\u52a8\u753b\u3002\u901a\u8fc7\u52a8\u753b\u8c03\u8282Text\u7684Size\uff0c\u6211\u4eec\u5373\u53ef\u5b8c\u6210\u6536\u7f29\u5c55\u5f00\u7684\u52a8\u753b\uff0c\u8fd9\u91cc\u52a8\u753b\u7684\u5236\u4f5c\u5341\u5206\u7b80\u5355\uff0c\u4e0d\u591a\u8d58\u8ff0 \u90a3\u4e48\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u52a8\u753b\u5462\uff0c\u5176\u5b9e\u4e5f\u5341\u5206\u7b80\u5355\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u521b\u5efaAnimator\u7136\u540e\u7ed9\u6211\u4eec\u7684Button\u52a0\u5165\u76f8\u5e94\u7684\u4e8b\u4ef6\u5904\u7406\u89e3\u51b3\uff0c\u5177\u4f53\u5982\u4e0b: \u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2aAnimator\u5982\u4e0b: \u6e38\u620f\u4e00\u5f00\u59cb\u8fd0\u884c\u65f6\uff0cText\u5904\u4e8eIdle\u72b6\u6001(\u8be5\u72b6\u6001\u65e0\u52a8\u4f5c), State\u4e3afalse(\u5373Text\u5904\u4e8e\u6536\u7f29\u72b6\u6001) \u90a3\u4e48\u5f53\u6211\u4eec\u7b2c\u4e00\u6b21\u6309Button\u4f7f\u5176\u5c55\u5f00\u65f6\uff0c\u6211\u4eecSetTrigger(\"ToggleIn\"),Text\u8fdb\u5165ToggleOut\u72b6\u6001\uff0c\u90a3\u4e48\u4e4b\u540e\u6211\u4eec\u53ea\u9700\u7ef4\u62a4State\u7684\u503c\uff0c\u7136\u540e\u7ecf\u8fc7\u5224\u65ad\u89e6\u53d1ToggleIn\u548cToggleOut\u4f7fText\u5b8c\u6210\u76f8\u5173\u64cd\u4f5c Toggle.cs\u7684\u4ee3\u7801\u5982\u4e0b\u8f83\u7b80\u5355 public class Toggle : MonoBehaviour { private Button yourButton ; public Text text ; private Animator animator ; // Use this for initialization void Start () { Button btn = this . gameObject . GetComponent < Button >(); animator = text . GetComponent < Animator > (); btn . onClick . AddListener ( ClickBtn ); } void ClickBtn () { if ( animator . GetBool ( \"State\" )) { animator . SetTrigger ( \"ToggleIn\" ); animator . SetBool ( \"State\" , false ); } else { animator . SetTrigger ( \"ToggleOut\" ); animator . SetBool ( \"State\" , true ); } } } \u901a\u8fc7\u7ed9Button\u6302\u8f7d\u4ee5\u4e0a\u4ee3\u7801\uff0c\u62d6\u5165Text, \u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u6211\u4eec\u7684\u53ef\u5c55\u5f00\u516c\u544a\u7248\uff0c\u4e2a\u4eba\u89c9\u5f97\u7528\u8fd9\u79cd\u7ed9UI\u52a0\u4e0a\u52a8\u753b\u7684\u65b9\u6cd5\u8fd8\u662f\u5341\u5206\u7b80\u5355\u7684\u3002","title":"\u5b9e\u73b0\u8fc7\u7a0b"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/","text":"\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218 \u4f5c\u4e1a\u7d20\u6750 \u5b98\u65b9Tank Tutourial\u7684\u7d20\u6750 \u5b9e\u73b0\u6548\u679c \u4ee3\u7801\u4ed3\u5e93 Github Gif \u6f14\u793a\u89c6\u9891 Youku \u5b9e\u73b0\u8fc7\u7a0b \u73af\u5883\u914d\u7f6e \u9996\u5148\uff0c\u6211\u4eec\u5bfc\u5165Vuforia\u7684\u5305\uff0c\u6839\u636e\u8bfe\u4e0a\u5b66\u5230\u7684\u5185\u5bb9\uff0c\u914d\u7f6e\u597dAR\u7684\u73af\u5883\u5176\u6b21\u56e0\u4e3a\u7535\u8111\u4e0a\u7684\u6444\u50cf\u5934\u914d\u5408AR\u592a\u4e0d\u65b9\u4fbf\u4e86\uff0c\u6240\u4ee5\u6211\u6253\u7b97\u914d\u7f6e\u597d\u5b9e\u9a8c\u73af\u5883\uff0c\u90e8\u5206\u65f6\u5019\u4f7f\u7528\u624b\u673a\u6765\u6d4b\u8bd5\u3002 \u6253\u5f00File > Build Settings\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230Unity\u53ef\u4ee5\u7f16\u8bd1\u51fa\u591a\u5e73\u53f0\u4e0b\u7684\u6e38\u620f\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u662fANDROID\uff0c\u70b9\u5f00\uff0c\u82e5\u6ca1\u6709\u5b89\u88c5\uff0c\u5176\u4f1a\u6307\u5bfc\u6211\u4eec\u6253\u5f00\u4e0b\u8f7d\u9875\u9762\u4e0b\u8f7d\u5bf9\u5e94\u5b89\u88c5\u5305\uff0c\u5b89\u88c5\u597d\u540e\u754c\u9762\u5982\u4e0b\uff0c\u5230\u8fd9\u91cc\u57fa\u672c\u7684\u73af\u5883 \u6447\u6746\u5236\u4f5c \u624b\u673a\u4e0a\u5c31\u4e0d\u50cf\u6211\u4eec\u7684\u7535\u8111\u53ef\u4ee5\u4f7f\u7528\u952e\u76d8\uff0c\u5982\u4f55\u8fdb\u884c\u4ea4\u4e92\u5c31\u662f\u503c\u5f97\u601d\u8003\u7684\u70b9\uff0c\u6700\u7ec8\u6211\u6253\u7b97\u4f7f\u7528\u8f83\u591a\u624b\u673a\u6e38\u620f\u4e2d\u4f7f\u7528\u7684\u6447\u6746\uff0c\u9996\u5148\u521b\u5efa\u4e00\u4e2aUI > Button\uff0c\u628a\u91cc\u9762\u7684Text\u6362\u6210Image\uff0c\u6211\u4eec\u901a\u8fc7\u7f16\u5199\u5173\u4e8e\u62d6\u52a8\u7684\u811a\u672c\uff0c\u6839\u636eImage\u7684\u504f\u79fb\u91cf\u6765\u8ba1\u7b97\u79fb\u52a8\uff0c\u6548\u679c\u5982\u4e0b \u811a\u672c\u5462\u4e5f\u8f83\u4e3a\u7b80\u5355\uff0c\u4e3b\u8981\u4f7f\u7528\u5230\u4e86OnDrag\u6765\u5b8c\u6210 public class MoveCtrl : MonoBehaviour , IDragHandler , IEndDragHandler { //\u56fe\u6807\u79fb\u52a8\u6700\u5927\u534a\u5f84 public float maxRadius = 200 ; //\u521d\u59cb\u5316\u80cc\u666f\u56fe\u6807\u4f4d\u7f6e private Vector2 moveBackPos ; private float horizontal = 0 ; private float vertical = 0 ; public float Horizontal { get { return horizontal ; } } public float Vertical { get { return vertical ; } } // Use this for initialization void Start () { //\u521d\u59cb\u5316\u4f4d\u7f6e moveBackPos = transform . parent . transform . position ; } // Update is called once per frame void Update () { horizontal = transform . localPosition . x ; vertical = transform . localPosition . y ; } /// <summary> /// \u5f53\u9f20\u6807\u5f00\u59cb\u62d6\u62fd\u65f6 /// </summary> /// <param name=\"eventData\"></param> public void OnDrag ( PointerEventData eventData ) { //\u83b7\u53d6\u9f20\u6807\u4f4d\u7f6e\u4e0e\u521d\u59cb\u4f4d\u7f6e\u4e4b\u95f4\u7684\u5411\u91cf Vector2 oppsitionVec = eventData . position - moveBackPos ; //\u83b7\u53d6\u5411\u91cf\u7684\u957f\u5ea6 float distance = Vector3 . Magnitude ( oppsitionVec ); //\u6700\u5c0f\u503c\u4e0e\u6700\u5927\u503c\u4e4b\u95f4\u53d6\u534a\u5f84 float radius = Mathf . Clamp ( distance , 0 , maxRadius ); //\u9650\u5236\u534a\u5f84\u957f\u5ea6 transform . position = moveBackPos + oppsitionVec . normalized * radius ; } /// <summary> /// \u5f53\u9f20\u6807\u505c\u6b62\u62d6\u62fd\u65f6 /// </summary> /// <param name=\"eventData\"></param> public void OnEndDrag ( PointerEventData eventData ) { transform . position = moveBackPos ; transform . localPosition = Vector3 . zero ; } } \u8fd9\u6837\u6211\u4eec\u53ea\u9700\u5728\u573a\u666f\u63a7\u5236\u5668\u4e2d\u7684Update\u52a0\u4e0a\u5bf9\u5e94\u6839\u636eVertical\u548cHorizontal\u6765\u79fb\u52a8\u7684\u4ee3\u7801\u5373\u53ef\u5b9e\u73b0\u6447\u6746\u63a7\u5236\u73a9\u5bb6\u3002 \u573a\u666f\u5236\u4f5c \u6211\u7684\u6e38\u620f\u573a\u666f\u6253\u7b97\u4f7f\u7528ImageTarget\uff0c\u5f53\u8bc6\u522b\u5230\u76f8\u5e94\u56fe\u50cf\uff0c\u6e38\u620f\u573a\u666f\u5c31\u4f1a\u663e\u793a\u3002\u4e3a\u4e86\u4f7f\u7528Nav Mesh, \u5148\u628aImage Target\u7684Mesh Filter\u7684Mesh\u6539\u6210Plane\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528Unity\u7684\u5bfc\u822a\u4e0e\u5bfb\u8def\u4e86\u3002 \u521b\u5efa\u597d\u6e38\u620f\u5bf9\u8c61\u4e4b\u540e\uff0c\u6211\u4eec\u628a\u7269\u4f53\u4e0d\u80fd\u5728\u4e0a\u79fb\u52a8\u7684\u5bf9\u8c61\u5728Navigation\u7684Object\u4e2d\u8c03\u6210\u4ee5\u4e0b\u5c5e\u6027 Bake\u7ed3\u679c\u5982\u4e0b \u4ee3\u7801\u5b8c\u6210 \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u6211\u4eec\u7684\u4ee3\u7801\u4e86\uff0c\u8fd9\u4e00\u6b21\u7684\u4f5c\u4e1a\u6211\u4f7f\u7528\u4e86\u5bfc\u6f14\u53ca\u5de5\u5382\u6a21\u5f0f\uff0c\u90e8\u5206\u501f\u9274\u4e86 \u5e08\u5144\u7684\u4f18\u79c0\u535a\u5ba2 ,\u8fd9\u91cc\u8bf4\u8bf4\u90e8\u5206\u7c7b\u7684\u4ee3\u7801 Tank using System.Collections ; using System.Collections.Generic ; using UnityEngine ; using UnityEngine.AI ; public class Tank : MonoBehaviour { private float hp ; public float getHp () { return hp ; } public void setHp ( float hp ) { this . hp = hp ; } } Player \u5f53\u751f\u547d\u503c\u5c0f\u4e8e0\u65f6\uff0cGameOver,\u5766\u514b\u7206\u70b8 using System.Collections ; using System.Collections.Generic ; using UnityEngine ; using UnityEngine.AI ; public class Player : Tank { public void init () { this . gameObject . SetActive ( true ); setHp ( 300f ); } void Start () { setHp ( 300f ); } void Update () { if ( getHp () <= 0 && gameObject . activeSelf ) { this . gameObject . SetActive ( false ); ParticleSystem explosion = Singleton < AllFactory >. Instance . getTankPs (); //\u83b7\u53d6\u7206\u70b8\u7684\u7c92\u5b50\u7cfb\u7edf explosion . transform . position = transform . position ; //\u8bbe\u7f6e\u7c92\u5b50\u7cfb\u7edf\u4f4d\u7f6e explosion . Play (); (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). gameOver = true ; } } } Enemy public class Enemy : Tank { private Vector3 target ; private bool gameover ; //\u6839\u636eFirstSceneController\u4e2d\u7684gameOver\uff0c\u5224\u65ad\u6e38\u620f\u662f\u5426\u7ed3\u675f private AllFactory allFactory ; public void init () { setHp ( 100f ); //\u8bbe\u7f6e\u521d\u59cb\u751f\u547d\u503c StopAllCoroutines (); //\u505c\u6b62\u6240\u6709\u534f\u7a0b StartCoroutine ( shoot ()); //\u5f00\u59cb\u5c04\u51fb\u7684\u534f\u7a0b } void Start () { setHp ( 100f ); //\u8bbe\u7f6e\u521d\u59cb\u751f\u547d\u503c allFactory = Singleton < AllFactory >. Instance ; StartCoroutine ( shoot ()); //\u5f00\u59cb\u5c04\u51fb\u7684\u534f\u7a0b } void Update () { gameover = (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). gameOver ; if (! gameover ) { target = (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). getPlayerPos (); // \u611f\u77e5 if ( getHp () <= 0 && gameObject . activeSelf ) { //\u601d\u8003 allFactory . recycleTank ( this . gameObject ); (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). GetScore (); StopCoroutine ( shoot ()); } else { NavMeshAgent agent = GetComponent < NavMeshAgent >(); agent . SetDestination ( target ); } } else { NavMeshAgent agent = GetComponent < NavMeshAgent >(); agent . velocity = Vector3 . zero ; agent . ResetPath (); } } IEnumerator shoot () { // \u884c\u4e3a while (! gameover && getHp () > 0 ) { for ( float i = 2 ; i > 0 ; i -= Time . deltaTime ) { yield return 0 ; } if ( Vector3 . Distance ( transform . position , target ) < 15 ) { //\u8ddd\u79bb\u5224\u65ad\u662f\u5426\u653b\u51fb GameObject bullet = allFactory . getBullet ( tankType . Enemy ); bullet . transform . position = new Vector3 ( transform . position . x , 1.5f , transform . position . z ) + transform . forward * 1.5f ; bullet . transform . forward = transform . forward ; Rigidbody rb = bullet . GetComponent < Rigidbody >(); rb . AddForce ( bullet . transform . forward * 20 , ForceMode . Impulse ); } } } } AllFactory AllFactory\u628a\u6240\u6709\u5766\u514b\u3001\u5b50\u5f39\u548c\u4e24\u4e2a\u7206\u70b8\u96c6\u4e2d\u5230\u4e00\u8d77\u7ba1\u7406 using System.Collections ; using System.Collections.Generic ; using UnityEngine ; public enum tankType : int { Player , Enemy } public class AllFactory : MonoBehaviour { public GameObject player ; //\u73a9\u5bb6\u5766\u514b public GameObject bullet ; //\u5b50\u5f39 public Transform imageTarget ; private Dictionary < int , GameObject > usingTanks ; private Dictionary < int , GameObject > freeTanks ; private Dictionary < int , GameObject > usingBullets ; private Dictionary < int , GameObject > freeBullets ; private List < ParticleSystem > psContainer ; private List < ParticleSystem > tankPsContainer ; void Awake () { usingTanks = new Dictionary < int , GameObject >(); freeTanks = new Dictionary < int , GameObject >(); usingBullets = new Dictionary < int , GameObject >(); freeBullets = new Dictionary < int , GameObject >(); psContainer = new List < ParticleSystem >(); tankPsContainer = new List < ParticleSystem > (); } void Start () { } public GameObject getPlayer () { //\u83b7\u53d6\u73a9\u5bb6\u5766\u514b return player ; } public GameObject getTank () { if ( freeTanks . Count == 0 ) { GameObject newTank = Instantiate ( Resources . Load ( \"Prefabs/Enemy\" )) as GameObject ; usingTanks . Add ( newTank . GetInstanceID (), newTank ); newTank . transform . parent = imageTarget ; newTank . transform . localScale = new Vector3 ( 0.02f , 0.02f , 0.02f ); newTank . transform . localPosition = new Vector3 ((( float ) Random . Range (- 4 , 4 ))/ 10 , 0 , (( float ) Random . Range (- 4 , 4 ))/ 10 ); return newTank ; } foreach ( KeyValuePair < int , GameObject > pair in freeTanks ) { pair . Value . SetActive ( true ); freeTanks . Remove ( pair . Key ); usingTanks . Add ( pair . Key , pair . Value ); pair . Value . transform . parent = imageTarget ; pair . Value . transform . localPosition = new Vector3 ((( float ) Random . Range (- 4 , 4 ))/ 10 , 0 , (( float ) Random . Range (- 4 , 4 ))/ 10 ); pair . Value . GetComponent < Enemy > (). init (); return pair . Value ; } return null ; } public GameObject getBullet ( tankType type ) { if ( freeBullets . Count == 0 ) { GameObject newBullet = Instantiate ( Resources . Load ( \"Prefabs/Bullet\" )) as GameObject ; newBullet . GetComponent < Bullet >(). setTankType ( type ); usingBullets . Add ( newBullet . GetInstanceID (), newBullet ); newBullet . transform . parent = imageTarget ; return newBullet ; } foreach ( KeyValuePair < int , GameObject > pair in freeBullets ) { pair . Value . SetActive ( true ); pair . Value . GetComponent < Bullet >(). setTankType ( type ); freeBullets . Remove ( pair . Key ); usingBullets . Add ( pair . Key , pair . Value ); pair . Value . GetComponent < Rigidbody > (). velocity = Vector3 . zero ; return pair . Value ; } return null ; } public ParticleSystem getPs () { for ( int i = 0 ; i < psContainer . Count ; i ++) { if (! psContainer [ i ]. isPlaying ) { return psContainer [ i ]; } } GameObject explore = Instantiate ( Resources . Load ( \"Prefabs/ShellExplosion\" )) as GameObject ; explore . transform . parent = imageTarget ; ParticleSystem newPs = explore . GetComponent < ParticleSystem > (); psContainer . Add ( newPs ); return newPs ; } public ParticleSystem getTankPs () { for ( int i = 0 ; i < tankPsContainer . Count ; i ++) { if (! tankPsContainer [ i ]. isPlaying ) { return tankPsContainer [ i ]; } } GameObject explore = Instantiate ( Resources . Load ( \"Prefabs/TankExplosion\" )) as GameObject ; explore . transform . parent = imageTarget ; ParticleSystem newPs = explore . GetComponent < ParticleSystem > (); tankPsContainer . Add ( newPs ); return newPs ; } public void recycleTank ( GameObject tank ) { tank . SetActive ( false ); usingTanks . Remove ( tank . GetInstanceID ()); freeTanks . Add ( tank . GetInstanceID (), tank ); ParticleSystem explosion = getTankPs (); //\u83b7\u53d6\u7206\u70b8\u7684\u7c92\u5b50\u7cfb\u7edf explosion . transform . position = tank . transform . position ; //\u8bbe\u7f6e\u7c92\u5b50\u7cfb\u7edf\u4f4d\u7f6e explosion . Play (); } public void recycleBullet ( GameObject bullet ) { usingBullets . Remove ( bullet . GetInstanceID ()); freeBullets . Add ( bullet . GetInstanceID (), bullet ); bullet . GetComponent < Rigidbody >(). velocity = Vector3 . zero ; bullet . SetActive ( false ); } public void recycleAllTanks () { List < int > keyList = new List < int >( usingTanks . Keys ); foreach ( int key in keyList ) { if ( usingTanks . ContainsKey ( key )) { usingTanks [ key ]. SetActive ( false ); freeTanks . Add ( key , usingTanks [ key ]); usingTanks . Remove ( key ); } } } public void recycleAllBullets () { List < int > keyList = new List < int >( usingBullets . Keys ); foreach ( int key in keyList ) { if ( usingBullets . ContainsKey ( key )) { usingBullets [ key ]. SetActive ( false ); freeBullets . Add ( key , usingBullets [ key ]); usingBullets . Remove ( key ); } } } public void reset () { recycleAllTanks (); recycleAllBullets (); player . GetComponent < Player > (). init (); } } FirstSceneController using System.Collections ; using System.Collections.Generic ; using UnityEngine ; using UnityEngine.UI ; public class FirstSceneController : MonoBehaviour , ISceneController { public MoveCtrl move ; public GameObject tank ; public Button btn ; public bool gameOver = false ; private AllFactory allFactory ; GUIStyle headerStyle ; private int Count = 0 ; private int Score = 0 ; // Use this for initialization void Awake () { GameDirector director = GameDirector . getInstance (); director . currentSceneController = this ; allFactory = Singleton < AllFactory >. Instance ; tank = allFactory . getPlayer (); btn . GetComponent < Button >(). onClick . AddListener ( delegate () { this . attackHandler (); }); } void Start () { Count = 0 ; headerStyle = new GUIStyle (); headerStyle . fontSize = 100 ; headerStyle . alignment = TextAnchor . MiddleCenter ; } public void loadResources () { } public void GetScore () { ++ Score ; } void GameOver () { this . gameOver = true ; } public Vector3 getPlayerPos () { return tank . transform . position ; } // Update is called once per frame void Update () { if ( gameOver ) return ; if ( Count ++ % 120 == 0 ) { allFactory . getTank (); } float ver = - move . Horizontal ; float hor = move . Vertical ; Vector3 direction = new Vector3 ( hor , 0 , ver ); if ( direction != Vector3 . zero ) { //\u63a7\u5236\u8f6c\u5411 tank . transform . rotation = Quaternion . Lerp ( tank . transform . rotation , Quaternion . LookRotation ( direction ), Time . deltaTime * 20 ); //\u5411\u524d\u79fb\u52a8 tank . transform . Translate ( Vector3 . forward * Time . deltaTime * 5 ); } } void OnGUI () { GUI . Label ( new Rect ( Screen . width - 500 , 80 , 400 , 110 ), \"Score: \" + Score , headerStyle ); if ( gameOver ) { GUI . Label ( new Rect ( Screen . width / 2 - 200 , Screen . height / 2 - 100 , 400 , 110 ), \"Game Over!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 150 , Screen . height / 2 + 30 , 300 , 120 ), \"Replay\" )) { allFactory . reset (); Score = 0 ; Count = 0 ; gameOver = false ; } } } void attackHandler () { if ( gameOver ) return ; GameObject bullet = allFactory . getBullet ( tankType . Player ); //\u83b7\u53d6\u5b50\u5f39\uff0c\u8bbe\u7f6e\u5176\u53d1\u51fa\u5766\u514b\u7684\u7c7b\u578b bullet . transform . position = new Vector3 ( tank . transform . position . x , 1.5f , tank . transform . position . z ) + tank . transform . forward * 1.5f ; bullet . transform . forward = tank . transform . forward ; Rigidbody rb = bullet . GetComponent < Rigidbody >(); rb . AddForce ( bullet . transform . forward * 20 , ForceMode . Impulse ); //\u7ed9\u5b50\u5f39\u4e00\u4e2a\u5411\u524d\u7684\u529b\uff0c\u5b9e\u73b0\u5b50\u5f39\u5411\u524d\u79fb\u52a8 } } \u5230\u8fd9\u91cc\uff0c\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u57fa\u672c\u5b8c\u6210\u4e86\uff0c\u6e38\u620f\u7684\u573a\u666f\u56fe\u50cf\u5982\u4e0b\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u4ece \u6211\u7684Github \u4e0b\u8f7d\u73a9\u4e00\u4e0b","title":"\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#13-ar","text":"","title":"\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#_1","text":"\u5b98\u65b9Tank Tutourial\u7684\u7d20\u6750","title":"\u4f5c\u4e1a\u7d20\u6750"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#_2","text":"\u4ee3\u7801\u4ed3\u5e93 Github Gif \u6f14\u793a\u89c6\u9891 Youku","title":"\u5b9e\u73b0\u6548\u679c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#_3","text":"","title":"\u5b9e\u73b0\u8fc7\u7a0b"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#_4","text":"\u9996\u5148\uff0c\u6211\u4eec\u5bfc\u5165Vuforia\u7684\u5305\uff0c\u6839\u636e\u8bfe\u4e0a\u5b66\u5230\u7684\u5185\u5bb9\uff0c\u914d\u7f6e\u597dAR\u7684\u73af\u5883\u5176\u6b21\u56e0\u4e3a\u7535\u8111\u4e0a\u7684\u6444\u50cf\u5934\u914d\u5408AR\u592a\u4e0d\u65b9\u4fbf\u4e86\uff0c\u6240\u4ee5\u6211\u6253\u7b97\u914d\u7f6e\u597d\u5b9e\u9a8c\u73af\u5883\uff0c\u90e8\u5206\u65f6\u5019\u4f7f\u7528\u624b\u673a\u6765\u6d4b\u8bd5\u3002 \u6253\u5f00File > Build Settings\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230Unity\u53ef\u4ee5\u7f16\u8bd1\u51fa\u591a\u5e73\u53f0\u4e0b\u7684\u6e38\u620f\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u662fANDROID\uff0c\u70b9\u5f00\uff0c\u82e5\u6ca1\u6709\u5b89\u88c5\uff0c\u5176\u4f1a\u6307\u5bfc\u6211\u4eec\u6253\u5f00\u4e0b\u8f7d\u9875\u9762\u4e0b\u8f7d\u5bf9\u5e94\u5b89\u88c5\u5305\uff0c\u5b89\u88c5\u597d\u540e\u754c\u9762\u5982\u4e0b\uff0c\u5230\u8fd9\u91cc\u57fa\u672c\u7684\u73af\u5883","title":"\u73af\u5883\u914d\u7f6e"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#_5","text":"\u624b\u673a\u4e0a\u5c31\u4e0d\u50cf\u6211\u4eec\u7684\u7535\u8111\u53ef\u4ee5\u4f7f\u7528\u952e\u76d8\uff0c\u5982\u4f55\u8fdb\u884c\u4ea4\u4e92\u5c31\u662f\u503c\u5f97\u601d\u8003\u7684\u70b9\uff0c\u6700\u7ec8\u6211\u6253\u7b97\u4f7f\u7528\u8f83\u591a\u624b\u673a\u6e38\u620f\u4e2d\u4f7f\u7528\u7684\u6447\u6746\uff0c\u9996\u5148\u521b\u5efa\u4e00\u4e2aUI > Button\uff0c\u628a\u91cc\u9762\u7684Text\u6362\u6210Image\uff0c\u6211\u4eec\u901a\u8fc7\u7f16\u5199\u5173\u4e8e\u62d6\u52a8\u7684\u811a\u672c\uff0c\u6839\u636eImage\u7684\u504f\u79fb\u91cf\u6765\u8ba1\u7b97\u79fb\u52a8\uff0c\u6548\u679c\u5982\u4e0b \u811a\u672c\u5462\u4e5f\u8f83\u4e3a\u7b80\u5355\uff0c\u4e3b\u8981\u4f7f\u7528\u5230\u4e86OnDrag\u6765\u5b8c\u6210 public class MoveCtrl : MonoBehaviour , IDragHandler , IEndDragHandler { //\u56fe\u6807\u79fb\u52a8\u6700\u5927\u534a\u5f84 public float maxRadius = 200 ; //\u521d\u59cb\u5316\u80cc\u666f\u56fe\u6807\u4f4d\u7f6e private Vector2 moveBackPos ; private float horizontal = 0 ; private float vertical = 0 ; public float Horizontal { get { return horizontal ; } } public float Vertical { get { return vertical ; } } // Use this for initialization void Start () { //\u521d\u59cb\u5316\u4f4d\u7f6e moveBackPos = transform . parent . transform . position ; } // Update is called once per frame void Update () { horizontal = transform . localPosition . x ; vertical = transform . localPosition . y ; } /// <summary> /// \u5f53\u9f20\u6807\u5f00\u59cb\u62d6\u62fd\u65f6 /// </summary> /// <param name=\"eventData\"></param> public void OnDrag ( PointerEventData eventData ) { //\u83b7\u53d6\u9f20\u6807\u4f4d\u7f6e\u4e0e\u521d\u59cb\u4f4d\u7f6e\u4e4b\u95f4\u7684\u5411\u91cf Vector2 oppsitionVec = eventData . position - moveBackPos ; //\u83b7\u53d6\u5411\u91cf\u7684\u957f\u5ea6 float distance = Vector3 . Magnitude ( oppsitionVec ); //\u6700\u5c0f\u503c\u4e0e\u6700\u5927\u503c\u4e4b\u95f4\u53d6\u534a\u5f84 float radius = Mathf . Clamp ( distance , 0 , maxRadius ); //\u9650\u5236\u534a\u5f84\u957f\u5ea6 transform . position = moveBackPos + oppsitionVec . normalized * radius ; } /// <summary> /// \u5f53\u9f20\u6807\u505c\u6b62\u62d6\u62fd\u65f6 /// </summary> /// <param name=\"eventData\"></param> public void OnEndDrag ( PointerEventData eventData ) { transform . position = moveBackPos ; transform . localPosition = Vector3 . zero ; } } \u8fd9\u6837\u6211\u4eec\u53ea\u9700\u5728\u573a\u666f\u63a7\u5236\u5668\u4e2d\u7684Update\u52a0\u4e0a\u5bf9\u5e94\u6839\u636eVertical\u548cHorizontal\u6765\u79fb\u52a8\u7684\u4ee3\u7801\u5373\u53ef\u5b9e\u73b0\u6447\u6746\u63a7\u5236\u73a9\u5bb6\u3002","title":"\u6447\u6746\u5236\u4f5c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#_6","text":"\u6211\u7684\u6e38\u620f\u573a\u666f\u6253\u7b97\u4f7f\u7528ImageTarget\uff0c\u5f53\u8bc6\u522b\u5230\u76f8\u5e94\u56fe\u50cf\uff0c\u6e38\u620f\u573a\u666f\u5c31\u4f1a\u663e\u793a\u3002\u4e3a\u4e86\u4f7f\u7528Nav Mesh, \u5148\u628aImage Target\u7684Mesh Filter\u7684Mesh\u6539\u6210Plane\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528Unity\u7684\u5bfc\u822a\u4e0e\u5bfb\u8def\u4e86\u3002 \u521b\u5efa\u597d\u6e38\u620f\u5bf9\u8c61\u4e4b\u540e\uff0c\u6211\u4eec\u628a\u7269\u4f53\u4e0d\u80fd\u5728\u4e0a\u79fb\u52a8\u7684\u5bf9\u8c61\u5728Navigation\u7684Object\u4e2d\u8c03\u6210\u4ee5\u4e0b\u5c5e\u6027 Bake\u7ed3\u679c\u5982\u4e0b","title":"\u573a\u666f\u5236\u4f5c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#_7","text":"\u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u6211\u4eec\u7684\u4ee3\u7801\u4e86\uff0c\u8fd9\u4e00\u6b21\u7684\u4f5c\u4e1a\u6211\u4f7f\u7528\u4e86\u5bfc\u6f14\u53ca\u5de5\u5382\u6a21\u5f0f\uff0c\u90e8\u5206\u501f\u9274\u4e86 \u5e08\u5144\u7684\u4f18\u79c0\u535a\u5ba2 ,\u8fd9\u91cc\u8bf4\u8bf4\u90e8\u5206\u7c7b\u7684\u4ee3\u7801","title":"\u4ee3\u7801\u5b8c\u6210"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#tank","text":"using System.Collections ; using System.Collections.Generic ; using UnityEngine ; using UnityEngine.AI ; public class Tank : MonoBehaviour { private float hp ; public float getHp () { return hp ; } public void setHp ( float hp ) { this . hp = hp ; } }","title":"Tank"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#player","text":"\u5f53\u751f\u547d\u503c\u5c0f\u4e8e0\u65f6\uff0cGameOver,\u5766\u514b\u7206\u70b8 using System.Collections ; using System.Collections.Generic ; using UnityEngine ; using UnityEngine.AI ; public class Player : Tank { public void init () { this . gameObject . SetActive ( true ); setHp ( 300f ); } void Start () { setHp ( 300f ); } void Update () { if ( getHp () <= 0 && gameObject . activeSelf ) { this . gameObject . SetActive ( false ); ParticleSystem explosion = Singleton < AllFactory >. Instance . getTankPs (); //\u83b7\u53d6\u7206\u70b8\u7684\u7c92\u5b50\u7cfb\u7edf explosion . transform . position = transform . position ; //\u8bbe\u7f6e\u7c92\u5b50\u7cfb\u7edf\u4f4d\u7f6e explosion . Play (); (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). gameOver = true ; } } }","title":"Player"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#enemy","text":"public class Enemy : Tank { private Vector3 target ; private bool gameover ; //\u6839\u636eFirstSceneController\u4e2d\u7684gameOver\uff0c\u5224\u65ad\u6e38\u620f\u662f\u5426\u7ed3\u675f private AllFactory allFactory ; public void init () { setHp ( 100f ); //\u8bbe\u7f6e\u521d\u59cb\u751f\u547d\u503c StopAllCoroutines (); //\u505c\u6b62\u6240\u6709\u534f\u7a0b StartCoroutine ( shoot ()); //\u5f00\u59cb\u5c04\u51fb\u7684\u534f\u7a0b } void Start () { setHp ( 100f ); //\u8bbe\u7f6e\u521d\u59cb\u751f\u547d\u503c allFactory = Singleton < AllFactory >. Instance ; StartCoroutine ( shoot ()); //\u5f00\u59cb\u5c04\u51fb\u7684\u534f\u7a0b } void Update () { gameover = (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). gameOver ; if (! gameover ) { target = (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). getPlayerPos (); // \u611f\u77e5 if ( getHp () <= 0 && gameObject . activeSelf ) { //\u601d\u8003 allFactory . recycleTank ( this . gameObject ); (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). GetScore (); StopCoroutine ( shoot ()); } else { NavMeshAgent agent = GetComponent < NavMeshAgent >(); agent . SetDestination ( target ); } } else { NavMeshAgent agent = GetComponent < NavMeshAgent >(); agent . velocity = Vector3 . zero ; agent . ResetPath (); } } IEnumerator shoot () { // \u884c\u4e3a while (! gameover && getHp () > 0 ) { for ( float i = 2 ; i > 0 ; i -= Time . deltaTime ) { yield return 0 ; } if ( Vector3 . Distance ( transform . position , target ) < 15 ) { //\u8ddd\u79bb\u5224\u65ad\u662f\u5426\u653b\u51fb GameObject bullet = allFactory . getBullet ( tankType . Enemy ); bullet . transform . position = new Vector3 ( transform . position . x , 1.5f , transform . position . z ) + transform . forward * 1.5f ; bullet . transform . forward = transform . forward ; Rigidbody rb = bullet . GetComponent < Rigidbody >(); rb . AddForce ( bullet . transform . forward * 20 , ForceMode . Impulse ); } } } }","title":"Enemy"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#allfactory","text":"AllFactory\u628a\u6240\u6709\u5766\u514b\u3001\u5b50\u5f39\u548c\u4e24\u4e2a\u7206\u70b8\u96c6\u4e2d\u5230\u4e00\u8d77\u7ba1\u7406 using System.Collections ; using System.Collections.Generic ; using UnityEngine ; public enum tankType : int { Player , Enemy } public class AllFactory : MonoBehaviour { public GameObject player ; //\u73a9\u5bb6\u5766\u514b public GameObject bullet ; //\u5b50\u5f39 public Transform imageTarget ; private Dictionary < int , GameObject > usingTanks ; private Dictionary < int , GameObject > freeTanks ; private Dictionary < int , GameObject > usingBullets ; private Dictionary < int , GameObject > freeBullets ; private List < ParticleSystem > psContainer ; private List < ParticleSystem > tankPsContainer ; void Awake () { usingTanks = new Dictionary < int , GameObject >(); freeTanks = new Dictionary < int , GameObject >(); usingBullets = new Dictionary < int , GameObject >(); freeBullets = new Dictionary < int , GameObject >(); psContainer = new List < ParticleSystem >(); tankPsContainer = new List < ParticleSystem > (); } void Start () { } public GameObject getPlayer () { //\u83b7\u53d6\u73a9\u5bb6\u5766\u514b return player ; } public GameObject getTank () { if ( freeTanks . Count == 0 ) { GameObject newTank = Instantiate ( Resources . Load ( \"Prefabs/Enemy\" )) as GameObject ; usingTanks . Add ( newTank . GetInstanceID (), newTank ); newTank . transform . parent = imageTarget ; newTank . transform . localScale = new Vector3 ( 0.02f , 0.02f , 0.02f ); newTank . transform . localPosition = new Vector3 ((( float ) Random . Range (- 4 , 4 ))/ 10 , 0 , (( float ) Random . Range (- 4 , 4 ))/ 10 ); return newTank ; } foreach ( KeyValuePair < int , GameObject > pair in freeTanks ) { pair . Value . SetActive ( true ); freeTanks . Remove ( pair . Key ); usingTanks . Add ( pair . Key , pair . Value ); pair . Value . transform . parent = imageTarget ; pair . Value . transform . localPosition = new Vector3 ((( float ) Random . Range (- 4 , 4 ))/ 10 , 0 , (( float ) Random . Range (- 4 , 4 ))/ 10 ); pair . Value . GetComponent < Enemy > (). init (); return pair . Value ; } return null ; } public GameObject getBullet ( tankType type ) { if ( freeBullets . Count == 0 ) { GameObject newBullet = Instantiate ( Resources . Load ( \"Prefabs/Bullet\" )) as GameObject ; newBullet . GetComponent < Bullet >(). setTankType ( type ); usingBullets . Add ( newBullet . GetInstanceID (), newBullet ); newBullet . transform . parent = imageTarget ; return newBullet ; } foreach ( KeyValuePair < int , GameObject > pair in freeBullets ) { pair . Value . SetActive ( true ); pair . Value . GetComponent < Bullet >(). setTankType ( type ); freeBullets . Remove ( pair . Key ); usingBullets . Add ( pair . Key , pair . Value ); pair . Value . GetComponent < Rigidbody > (). velocity = Vector3 . zero ; return pair . Value ; } return null ; } public ParticleSystem getPs () { for ( int i = 0 ; i < psContainer . Count ; i ++) { if (! psContainer [ i ]. isPlaying ) { return psContainer [ i ]; } } GameObject explore = Instantiate ( Resources . Load ( \"Prefabs/ShellExplosion\" )) as GameObject ; explore . transform . parent = imageTarget ; ParticleSystem newPs = explore . GetComponent < ParticleSystem > (); psContainer . Add ( newPs ); return newPs ; } public ParticleSystem getTankPs () { for ( int i = 0 ; i < tankPsContainer . Count ; i ++) { if (! tankPsContainer [ i ]. isPlaying ) { return tankPsContainer [ i ]; } } GameObject explore = Instantiate ( Resources . Load ( \"Prefabs/TankExplosion\" )) as GameObject ; explore . transform . parent = imageTarget ; ParticleSystem newPs = explore . GetComponent < ParticleSystem > (); tankPsContainer . Add ( newPs ); return newPs ; } public void recycleTank ( GameObject tank ) { tank . SetActive ( false ); usingTanks . Remove ( tank . GetInstanceID ()); freeTanks . Add ( tank . GetInstanceID (), tank ); ParticleSystem explosion = getTankPs (); //\u83b7\u53d6\u7206\u70b8\u7684\u7c92\u5b50\u7cfb\u7edf explosion . transform . position = tank . transform . position ; //\u8bbe\u7f6e\u7c92\u5b50\u7cfb\u7edf\u4f4d\u7f6e explosion . Play (); } public void recycleBullet ( GameObject bullet ) { usingBullets . Remove ( bullet . GetInstanceID ()); freeBullets . Add ( bullet . GetInstanceID (), bullet ); bullet . GetComponent < Rigidbody >(). velocity = Vector3 . zero ; bullet . SetActive ( false ); } public void recycleAllTanks () { List < int > keyList = new List < int >( usingTanks . Keys ); foreach ( int key in keyList ) { if ( usingTanks . ContainsKey ( key )) { usingTanks [ key ]. SetActive ( false ); freeTanks . Add ( key , usingTanks [ key ]); usingTanks . Remove ( key ); } } } public void recycleAllBullets () { List < int > keyList = new List < int >( usingBullets . Keys ); foreach ( int key in keyList ) { if ( usingBullets . ContainsKey ( key )) { usingBullets [ key ]. SetActive ( false ); freeBullets . Add ( key , usingBullets [ key ]); usingBullets . Remove ( key ); } } } public void reset () { recycleAllTanks (); recycleAllBullets (); player . GetComponent < Player > (). init (); } }","title":"AllFactory"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#firstscenecontroller","text":"using System.Collections ; using System.Collections.Generic ; using UnityEngine ; using UnityEngine.UI ; public class FirstSceneController : MonoBehaviour , ISceneController { public MoveCtrl move ; public GameObject tank ; public Button btn ; public bool gameOver = false ; private AllFactory allFactory ; GUIStyle headerStyle ; private int Count = 0 ; private int Score = 0 ; // Use this for initialization void Awake () { GameDirector director = GameDirector . getInstance (); director . currentSceneController = this ; allFactory = Singleton < AllFactory >. Instance ; tank = allFactory . getPlayer (); btn . GetComponent < Button >(). onClick . AddListener ( delegate () { this . attackHandler (); }); } void Start () { Count = 0 ; headerStyle = new GUIStyle (); headerStyle . fontSize = 100 ; headerStyle . alignment = TextAnchor . MiddleCenter ; } public void loadResources () { } public void GetScore () { ++ Score ; } void GameOver () { this . gameOver = true ; } public Vector3 getPlayerPos () { return tank . transform . position ; } // Update is called once per frame void Update () { if ( gameOver ) return ; if ( Count ++ % 120 == 0 ) { allFactory . getTank (); } float ver = - move . Horizontal ; float hor = move . Vertical ; Vector3 direction = new Vector3 ( hor , 0 , ver ); if ( direction != Vector3 . zero ) { //\u63a7\u5236\u8f6c\u5411 tank . transform . rotation = Quaternion . Lerp ( tank . transform . rotation , Quaternion . LookRotation ( direction ), Time . deltaTime * 20 ); //\u5411\u524d\u79fb\u52a8 tank . transform . Translate ( Vector3 . forward * Time . deltaTime * 5 ); } } void OnGUI () { GUI . Label ( new Rect ( Screen . width - 500 , 80 , 400 , 110 ), \"Score: \" + Score , headerStyle ); if ( gameOver ) { GUI . Label ( new Rect ( Screen . width / 2 - 200 , Screen . height / 2 - 100 , 400 , 110 ), \"Game Over!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 150 , Screen . height / 2 + 30 , 300 , 120 ), \"Replay\" )) { allFactory . reset (); Score = 0 ; Count = 0 ; gameOver = false ; } } } void attackHandler () { if ( gameOver ) return ; GameObject bullet = allFactory . getBullet ( tankType . Player ); //\u83b7\u53d6\u5b50\u5f39\uff0c\u8bbe\u7f6e\u5176\u53d1\u51fa\u5766\u514b\u7684\u7c7b\u578b bullet . transform . position = new Vector3 ( tank . transform . position . x , 1.5f , tank . transform . position . z ) + tank . transform . forward * 1.5f ; bullet . transform . forward = tank . transform . forward ; Rigidbody rb = bullet . GetComponent < Rigidbody >(); rb . AddForce ( bullet . transform . forward * 20 , ForceMode . Impulse ); //\u7ed9\u5b50\u5f39\u4e00\u4e2a\u5411\u524d\u7684\u529b\uff0c\u5b9e\u73b0\u5b50\u5f39\u5411\u524d\u79fb\u52a8 } } \u5230\u8fd9\u91cc\uff0c\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u57fa\u672c\u5b8c\u6210\u4e86\uff0c\u6e38\u620f\u7684\u573a\u666f\u56fe\u50cf\u5982\u4e0b\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u4ece \u6211\u7684Github \u4e0b\u8f7d\u73a9\u4e00\u4e0b","title":"FirstSceneController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218/","text":"\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218 \u4f5c\u4e1a\u7d20\u6750 \u5b98\u65b9Tank Tutourial\u7684\u7d20\u6750 \u5b9e\u73b0\u6548\u679c \u4ee3\u7801\u4ed3\u5e93 Github Gif \u6f14\u793a\u89c6\u9891 \u6f14\u793a\u89c6\u9891 \u5b9e\u73b0\u4e2d\u9047\u5230\u7684\u95ee\u9898 \u672c\u5468\u6211\u7684\u9879\u76ee\u4e2d\u6709\u8f83\u591a\u5bf9\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u6210\u679c\u7684\u590d\u7528\uff0c\u800c\u4e14\u5766\u514b\u5927\u6218\u672c\u8d28\u4e0a\u6211\u4eec\u8bfe\u4e0a\u7684\u6253\u5b50\u5f39\u7684Demo\u7684\u4ee3\u7801\u903b\u8f91\u5176\u5b9e\u4e5f\u5341\u5206\u76f8\u50cf\uff0c\u90fd\u662f\u542b\u6709\u73a9\u5bb6\u72b6\u6001\u540c\u6b65\u3001\u8054\u7f51\u7684\u5b50\u5f39\u53d1\u5c04\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u6211\u8fd9\u6b21\u4f5c\u4e1a\u7684\u5206\u4eab\u4e0d\u6253\u7b97\u600e\u4e48\u53bb\u8bb2\u8ff0\u6211\u7684\u4ee3\u7801,\u5b8c\u6574\u7684\u9879\u76ee\u4e5f\u53ef\u4ee5\u5728 \u6211\u7684Github\u4ed3\u5e93 \u770b\u5230\u3002\u4ece\u5206\u4eab\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u4e2a\u4eba\u611f\u89c9\u628a\u6211\u5f00\u53d1\u65f6\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u4ee5\u53ca\u6211\u81ea\u5df1\u5f97\u5230\u6211\u5bf9\u4e8e\u5176\u89e3\u51b3\u65b9\u6848\u7684\u8fc7\u7a0b\u5206\u4eab\u51fa\u6765\u66f4\u52a0\u5177\u6709\u610f\u4e49\u3002 \u5728\u6839\u636e\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u7684UNet\u4f7f\u7528\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u7ed9\u6211\u7684\u5766\u514b\u5927\u6218\u52a0\u4e0a\u7f51\u7edc\u5bf9\u6218\u7684\u529f\u80fd\u540e\uff0c\u9996\u5148\u6211\u60f3\u5230\u8981\u89e3\u51b3\u7684\u5c31\u662f\u5728\u8bfe\u5802\u5b9e\u73b0\u4e2d\u5c31\u53d1\u73b0\u7684\u4e00\u4e2a\u5b50\u5f39\u4f1a\u6253\u5230\u81ea\u5df1\u7684\u95ee\u9898 \u9996\u5148\uff0c\u6211\u60f3\u5230\u4e86\u4ee5\u4e0b\u51e0\u79cd\u89e3\u51b3\u7684\u65b9\u6cd5 \u589e\u52a0\u5b50\u5f39\u53d1\u51fa\u65f6\u8ddd\u79bb\u73a9\u5bb6\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u51cf\u5c11\u5b50\u5f39\u5224\u65ad\u7684\u8303\u56f4\uff0c\u4f7f\u5f97\u73a9\u5bb6\u78b0\u4e0d\u5230\u81ea\u5df1\u7684\u5b50\u5f39 \u4f7f\u7528Tag\u6765\u5224\u65ad\uff1f \u7ed9\u5b50\u5f39\u589e\u6dfb\u4e00\u4e2a\u53d1\u51fa\u8005\u7684\u53d8\u91cf\u7528\u4e8e\u5224\u65ad\u78b0\u649e\u3002 \u4e0b\u9762\u6211\u4eec\u5206\u522b\u8bf4\u8bf4\u4ee5\u4e0a\u7684\u89e3\u51b3\u529e\u6cd5: \u589e\u52a0\u5b50\u5f39\u53d1\u51fa\u65f6\u8ddd\u79bb\u73a9\u5bb6\u7684\u8ddd\u79bb\uff0c\u4f7f\u5f97\u73a9\u5bb6\u78b0\u4e0d\u5230\u81ea\u5df1\u7684\u5b50\u5f39 \u8fd9\u4e2a\u89e3\u51b3\u65b9\u6cd5\u662f\u6709\u6548\u679c\u7684\uff0c\u4f46\u662f\u5728\u7f51\u7edc\u72b6\u51b5\u4e0d\u597d\u65f6\uff0cClient\u7aef\u7ecf\u5e38\u8fd8\u662f\u4f1a\u51fa\u73b0\u81ea\u5df1\u4e0e\u5b50\u5f39\u78b0\u649e\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6cbb\u6807\u4e0d\u6cbb\u672c\uff0c\u4e0d\u662f\u4e00\u79cd\u597d\u7684\u65b9\u6cd5\u3002 \u4f7f\u7528Tag\u6765\u5224\u65ad\uff1f \u4e00\u5f00\u59cb\u50bb\u50bb\u7684\u60f3\u7740\u80fd\u4e0d\u80fd\u901a\u8fc7OnStartLocalPlayer\u4fee\u6539\u81ea\u5df1\u7684Tag\u7136\u540e\u5728\u5224\u65ad\u65f6\u5224\u65adtag\u5462\u3002\u4f46\u662f\u540e\u6765\u4e00\u60f3OnStartLocalPlayer\u53ea\u5728\u672c\u5730\u8d77\u4f5c\u7528\u554a\uff0c\u8fd9\u6837\u80af\u5b9a\u4e0d\u5bf9\u7684\u3002\u3002\u800c\u4e14\u60f3\u4e86\u4e00\u60f3\u89c9\u5f97\u4f7f\u7528tag\u4e0d\u592a\u73b0\u5b9e\uff0c\u6240\u4ee5\u8fd9\u65b9\u6cd5\u5c31\u88ab\u6211\u5426\u51b3\u4e86\u3002 \u7ed9\u5b50\u5f39\u589e\u6dfb\u4e00\u4e2a\u53d1\u51fa\u8005\u7684\u53d8\u91cf\u7528\u4e8e\u5224\u65ad\u78b0\u649e\u3002 \u8fd9\u79cd\u65b9\u6cd5\u662f\u51e0\u79cd\u65b9\u6cd5\u91cc\u9762\u6700\u73b0\u5b9e\u7684\uff0c\u80af\u5b9a\u53ef\u4ee5\u5b9e\u73b0\uff0c\u800c\u4e14\u662f\u4e00\u79cd\u6cbb\u672c\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u5728\u4e0a\u9762\u51e0\u79cd\u65b9\u6cd5\u4e2d\uff0c\u6211\u4f7f\u7528\u7684\u662f\u7b2c\u4e09\u79cd\u65b9\u6cd5\u3002 \u9996\u5148\uff0c\u6211\u7ed9\u5b50\u5f39\u52a0\u4e86\u4e00\u4e2afromID\u7528\u4e8e\u8bb0\u5f55\u628a\u5b83\u5c04\u51fa\u7684Player\u7684instanceID\uff0c\u5728\u521b\u5efa\u5b50\u5f39\u65f6\u7ed9\u5b50\u5f39\u7684Bullet Component\u9644\u4e0a\u5bf9\u5e94\u7684\u503c\uff0c\u4f46\u662f\u540e\u9762\u53d1\u73b0\u6ca1\u6709\u8fbe\u5230\u671f\u671b\u7684\u6548\u679c\uff0c\u7ed3\u679c\u53d1\u73b0\uff0c\u5ba2\u6237\u7aef\u7684\u5b50\u5f39\u7684fromID\u5e76\u6ca1\u6709\u6539\u53d8\uff0c\u5176\u9700\u8981\u53d8\u6210SyncVar\u624d\u4f1a\u5728\u5ba2\u6237\u7aef\u540c\u6b65\uff0c\u8fd0\u884c\uff0c\u53d1\u73b0\u7ed3\u679cOK\uff0c\u5b50\u5f39\u4e0d\u4f1a\u88ab\u81ea\u5df1\u78b0\u5230\u800c\u7206\u70b8\uff0c\u55ef\uff0c\u5f88\u597d\u3002\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u5b50\u5f39\u4f1a\u6253\u5230\u81ea\u5df1\u7684\u95ee\u9898\u7684\u6d88\u9664\u4e86\uff0c\u8fd9\u662f\u6211\u5bf9\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u65b9\u6848\u7684\u601d\u8003\uff0c\u4e0d\u8fc7\u611f\u89c9\u8fd9\u6837\u5199\u8fd8\u662f\u6709\u70b9\u4e0d\u4f18\u96c5\uff0c\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u66f4\u52a0\u4f18\u96c5\u3001\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6709\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7github\u4ed3\u5e93\u7684ISSUE\u6211\u4eec\u63a2\u8ba8\u4e00\u4e0b\ud83d\ude43\u3002 \u7206\u70b8\u53ea\u4ea7\u751f\u5728Server \u89e3\u51b3\u4e86\u4e0a\u9762\u5b50\u5f39\u7684\u95ee\u9898\u540e\uff0c\u7f8e\u6ecb\u6ecb\u3002\u3002\uff01\uff01\uff01\ud83c\udf1a\u600e\u4e48\u5ba2\u6237\u7aef\u7684\u7206\u70b8\u6ca1\u4e86\u3002\u3002Debug\u4e86\u4e00\u4e0b\u53d1\u73b0\u5b50\u5f39\u5728\u670d\u52a1\u7aef\u5148\u78b0\u649e\u5148Destroy\uff0c\u6240\u4ee5\u5ba2\u6237\u7aef\u7684\u5b50\u5f39\u88abDestroy\uff0c\u65e0\u78b0\u649e\u4ea7\u751f\uff0c\u7ecf\u8fc7\u601d\u8003\u6211\u628a\u7206\u70b8\u6548\u679c\u4ee5\u53ca\u5b50\u5f39Destroy\u5f04\u6210\u4e86\u4e00\u4e2aClientRpc\u51fd\u6570\uff0c\u6070\u597d\u8fd9\u6837\u4e5f\u53ef\u4ee5\u4e0e\u672c\u5730\u7684\u7c92\u5b50\u5de5\u5382\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u6d4b\u8bd5\u53d1\u73b0\u6548\u679c\u548c\u9884\u671f\u76f8\u7b26\u3002 ClientRpc\u7684\u4f5c\u7528\u6070\u5de7\u4e0eCommand\u76f8\u53cd\uff0c\u5176\u662f\u670d\u52a1\u5668\u6267\u884c\u7684\u4ee3\u7801\uff0c\u8c03\u7528\u6240\u6709\u5ba2\u6237\u7aef\u6267\u884c\u51fd\u6570\uff0c\u800cCommand\u5219\u662f\u672c\u5730\u73a9\u5bb6\u5bf9\u8c61\u6267\u884c\u7684\u4ee3\u7801\uff0c\u8c03\u7528\u670d\u52a1\u5668\u6267\u884c\u7684\u51fd\u6570 if ( flag == true && this . gameObject . activeSelf ) { if ( isServer ) RpcBulletExplosion (); } ... [ClientRpc] void RpcBulletExplosion () { ParticleSystem explosion = Singleton < PSFactory >. Instance . getPs (); explosion . transform . position = transform . position ; //\u8bbe\u7f6e\u7c92\u5b50\u7cfb\u7edf\u4f4d\u7f6e explosion . Play (); Destroy ( this . gameObject ); } 3. \u5b50\u5f39\u79fb\u52a8\u76f8\u5173 \u56e0\u4e3a\u5728\u4e0a\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u7684\u5b50\u5f39\u79fb\u52a8\u662f\u901a\u8fc7\u65bd\u52a0\u4e00\u4e2a\u5411\u524d\u7684\u529b\u6765\u5b9e\u73b0\u7684\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\u5728\u53d1\u51fa\u540e\u8fd8\u4f1a\u6301\u7eed\u6539\u53d8\u7269\u4f53\u7684\u901f\u5ea6\uff0c\u4e0d\u5229\u4e8e\u6211\u4eec\u8054\u7f51\u5c04\u51fb\uff0c\u56e0\u4e3a\u8fd9\u91cc\u6d89\u53ca\u5230\u4e00\u4e2a\u53d1\u9001\u901f\u7387Network Send Rate\u7684\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u5728\u5b50\u5f39\u53d1\u51fa\u540e\u4e0d\u53bb\u6539\u53d8\u5176\u65b9\u5411\u6216\u901f\u5ea6\uff0c\u6211\u4eec\u7684\u53d1\u9001\u901f\u7387\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0\uff0c\u4e0d\u9700\u8981\u53d1\u9001\u79fb\u52a8\u66f4\u65b0\uff0c\u8fd9\u662f\u6bd4\u8f83\u5408\u7406\u7684\uff0c\u6211\u4eec\u5e94\u8be5\u4ee5\u9644\u52a0\u901f\u5ea6\u7684\u65b9\u5f0f\u53bb\u4f7f\u5b50\u5f39\u5b8c\u6210\u79fb\u52a8\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u53d1\u9001\u901f\u7387\u8bbe\u7f6e\u4e3a0\u3002\u5982\u679c\u4f7f\u7528\u6211\u4eec\u4e00\u5f00\u59cb\u7684\u9644\u52a0\u529b\u7684\u65b9\u5f0f\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u8981\u628a\u8be5\u901f\u7387\u8c03\u9ad8\uff0c\u589e\u52a0\u4e86\u65e0\u5fc5\u8981\u7684\u7f51\u7edc\u8d1f\u8f7d\u3002 \u4ee5\u4e0a\u5c31\u662f\u6211\u8fd9\u6b21\u5b9e\u9a8c\u78b0\u5230\u7684\u6bd4\u8f83\u5173\u952e\u7684\u95ee\u9898\u4ee5\u53ca\u601d\u8003\uff0c\u56e0\u4e3a\u5bf9\u4e8eUNet\u7684\u4e86\u89e3\u4e0d\u662f\u5f88\u6df1\u5165\uff0c\u800c\u4e14\u4e34\u8fd1\u671f\u672b\uff0c\u65f6\u95f4\u4e0d\u592a\u5145\u88d5\u65e0\u6cd5\u6df1\u5165\u53bb\u4e86\u89e3\uff0c\u611f\u89c9\u6709\u7684\u5730\u65b9\u8fd8\u662f\u505a\u7684\u4e0d\u662f\u5f88\u5230\u4f4d\uff0c\u6e38\u620f\u7684\u529f\u80fd\u4e5f\u4e0d\u662f\u592a\u591a\uff0c\u7b49\u5230\u8003\u5b8c\u8bd5\u4e86\u6709\u65f6\u95f4\u7684\u8bdd\u4f1a\u66f4\u6df1\u5165\u4e86\u89e3\u4e00\u4e0b\uff0c\u589e\u52a0\u4e00\u4e9b\u529f\u80fd\u3002\u5b8c\u6574\u7684\u4ee3\u7801\u5728\u6700\u4e0a\u9762\u5df2\u7ecf\u7ed9\u51fa\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u770b\u4e0b\u3002","title":"\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218/#14-","text":"","title":"\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218/#_1","text":"\u5b98\u65b9Tank Tutourial\u7684\u7d20\u6750","title":"\u4f5c\u4e1a\u7d20\u6750"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218/#_2","text":"\u4ee3\u7801\u4ed3\u5e93 Github Gif \u6f14\u793a\u89c6\u9891 \u6f14\u793a\u89c6\u9891","title":"\u5b9e\u73b0\u6548\u679c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218/#_3","text":"\u672c\u5468\u6211\u7684\u9879\u76ee\u4e2d\u6709\u8f83\u591a\u5bf9\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u6210\u679c\u7684\u590d\u7528\uff0c\u800c\u4e14\u5766\u514b\u5927\u6218\u672c\u8d28\u4e0a\u6211\u4eec\u8bfe\u4e0a\u7684\u6253\u5b50\u5f39\u7684Demo\u7684\u4ee3\u7801\u903b\u8f91\u5176\u5b9e\u4e5f\u5341\u5206\u76f8\u50cf\uff0c\u90fd\u662f\u542b\u6709\u73a9\u5bb6\u72b6\u6001\u540c\u6b65\u3001\u8054\u7f51\u7684\u5b50\u5f39\u53d1\u5c04\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u6211\u8fd9\u6b21\u4f5c\u4e1a\u7684\u5206\u4eab\u4e0d\u6253\u7b97\u600e\u4e48\u53bb\u8bb2\u8ff0\u6211\u7684\u4ee3\u7801,\u5b8c\u6574\u7684\u9879\u76ee\u4e5f\u53ef\u4ee5\u5728 \u6211\u7684Github\u4ed3\u5e93 \u770b\u5230\u3002\u4ece\u5206\u4eab\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u4e2a\u4eba\u611f\u89c9\u628a\u6211\u5f00\u53d1\u65f6\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u4ee5\u53ca\u6211\u81ea\u5df1\u5f97\u5230\u6211\u5bf9\u4e8e\u5176\u89e3\u51b3\u65b9\u6848\u7684\u8fc7\u7a0b\u5206\u4eab\u51fa\u6765\u66f4\u52a0\u5177\u6709\u610f\u4e49\u3002 \u5728\u6839\u636e\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u7684UNet\u4f7f\u7528\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u7ed9\u6211\u7684\u5766\u514b\u5927\u6218\u52a0\u4e0a\u7f51\u7edc\u5bf9\u6218\u7684\u529f\u80fd\u540e\uff0c\u9996\u5148\u6211\u60f3\u5230\u8981\u89e3\u51b3\u7684\u5c31\u662f\u5728\u8bfe\u5802\u5b9e\u73b0\u4e2d\u5c31\u53d1\u73b0\u7684\u4e00\u4e2a\u5b50\u5f39\u4f1a\u6253\u5230\u81ea\u5df1\u7684\u95ee\u9898 \u9996\u5148\uff0c\u6211\u60f3\u5230\u4e86\u4ee5\u4e0b\u51e0\u79cd\u89e3\u51b3\u7684\u65b9\u6cd5 \u589e\u52a0\u5b50\u5f39\u53d1\u51fa\u65f6\u8ddd\u79bb\u73a9\u5bb6\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u51cf\u5c11\u5b50\u5f39\u5224\u65ad\u7684\u8303\u56f4\uff0c\u4f7f\u5f97\u73a9\u5bb6\u78b0\u4e0d\u5230\u81ea\u5df1\u7684\u5b50\u5f39 \u4f7f\u7528Tag\u6765\u5224\u65ad\uff1f \u7ed9\u5b50\u5f39\u589e\u6dfb\u4e00\u4e2a\u53d1\u51fa\u8005\u7684\u53d8\u91cf\u7528\u4e8e\u5224\u65ad\u78b0\u649e\u3002 \u4e0b\u9762\u6211\u4eec\u5206\u522b\u8bf4\u8bf4\u4ee5\u4e0a\u7684\u89e3\u51b3\u529e\u6cd5: \u589e\u52a0\u5b50\u5f39\u53d1\u51fa\u65f6\u8ddd\u79bb\u73a9\u5bb6\u7684\u8ddd\u79bb\uff0c\u4f7f\u5f97\u73a9\u5bb6\u78b0\u4e0d\u5230\u81ea\u5df1\u7684\u5b50\u5f39 \u8fd9\u4e2a\u89e3\u51b3\u65b9\u6cd5\u662f\u6709\u6548\u679c\u7684\uff0c\u4f46\u662f\u5728\u7f51\u7edc\u72b6\u51b5\u4e0d\u597d\u65f6\uff0cClient\u7aef\u7ecf\u5e38\u8fd8\u662f\u4f1a\u51fa\u73b0\u81ea\u5df1\u4e0e\u5b50\u5f39\u78b0\u649e\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6cbb\u6807\u4e0d\u6cbb\u672c\uff0c\u4e0d\u662f\u4e00\u79cd\u597d\u7684\u65b9\u6cd5\u3002 \u4f7f\u7528Tag\u6765\u5224\u65ad\uff1f \u4e00\u5f00\u59cb\u50bb\u50bb\u7684\u60f3\u7740\u80fd\u4e0d\u80fd\u901a\u8fc7OnStartLocalPlayer\u4fee\u6539\u81ea\u5df1\u7684Tag\u7136\u540e\u5728\u5224\u65ad\u65f6\u5224\u65adtag\u5462\u3002\u4f46\u662f\u540e\u6765\u4e00\u60f3OnStartLocalPlayer\u53ea\u5728\u672c\u5730\u8d77\u4f5c\u7528\u554a\uff0c\u8fd9\u6837\u80af\u5b9a\u4e0d\u5bf9\u7684\u3002\u3002\u800c\u4e14\u60f3\u4e86\u4e00\u60f3\u89c9\u5f97\u4f7f\u7528tag\u4e0d\u592a\u73b0\u5b9e\uff0c\u6240\u4ee5\u8fd9\u65b9\u6cd5\u5c31\u88ab\u6211\u5426\u51b3\u4e86\u3002 \u7ed9\u5b50\u5f39\u589e\u6dfb\u4e00\u4e2a\u53d1\u51fa\u8005\u7684\u53d8\u91cf\u7528\u4e8e\u5224\u65ad\u78b0\u649e\u3002 \u8fd9\u79cd\u65b9\u6cd5\u662f\u51e0\u79cd\u65b9\u6cd5\u91cc\u9762\u6700\u73b0\u5b9e\u7684\uff0c\u80af\u5b9a\u53ef\u4ee5\u5b9e\u73b0\uff0c\u800c\u4e14\u662f\u4e00\u79cd\u6cbb\u672c\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u5728\u4e0a\u9762\u51e0\u79cd\u65b9\u6cd5\u4e2d\uff0c\u6211\u4f7f\u7528\u7684\u662f\u7b2c\u4e09\u79cd\u65b9\u6cd5\u3002 \u9996\u5148\uff0c\u6211\u7ed9\u5b50\u5f39\u52a0\u4e86\u4e00\u4e2afromID\u7528\u4e8e\u8bb0\u5f55\u628a\u5b83\u5c04\u51fa\u7684Player\u7684instanceID\uff0c\u5728\u521b\u5efa\u5b50\u5f39\u65f6\u7ed9\u5b50\u5f39\u7684Bullet Component\u9644\u4e0a\u5bf9\u5e94\u7684\u503c\uff0c\u4f46\u662f\u540e\u9762\u53d1\u73b0\u6ca1\u6709\u8fbe\u5230\u671f\u671b\u7684\u6548\u679c\uff0c\u7ed3\u679c\u53d1\u73b0\uff0c\u5ba2\u6237\u7aef\u7684\u5b50\u5f39\u7684fromID\u5e76\u6ca1\u6709\u6539\u53d8\uff0c\u5176\u9700\u8981\u53d8\u6210SyncVar\u624d\u4f1a\u5728\u5ba2\u6237\u7aef\u540c\u6b65\uff0c\u8fd0\u884c\uff0c\u53d1\u73b0\u7ed3\u679cOK\uff0c\u5b50\u5f39\u4e0d\u4f1a\u88ab\u81ea\u5df1\u78b0\u5230\u800c\u7206\u70b8\uff0c\u55ef\uff0c\u5f88\u597d\u3002\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u5b50\u5f39\u4f1a\u6253\u5230\u81ea\u5df1\u7684\u95ee\u9898\u7684\u6d88\u9664\u4e86\uff0c\u8fd9\u662f\u6211\u5bf9\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u65b9\u6848\u7684\u601d\u8003\uff0c\u4e0d\u8fc7\u611f\u89c9\u8fd9\u6837\u5199\u8fd8\u662f\u6709\u70b9\u4e0d\u4f18\u96c5\uff0c\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u66f4\u52a0\u4f18\u96c5\u3001\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6709\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7github\u4ed3\u5e93\u7684ISSUE\u6211\u4eec\u63a2\u8ba8\u4e00\u4e0b\ud83d\ude43\u3002 \u7206\u70b8\u53ea\u4ea7\u751f\u5728Server \u89e3\u51b3\u4e86\u4e0a\u9762\u5b50\u5f39\u7684\u95ee\u9898\u540e\uff0c\u7f8e\u6ecb\u6ecb\u3002\u3002\uff01\uff01\uff01\ud83c\udf1a\u600e\u4e48\u5ba2\u6237\u7aef\u7684\u7206\u70b8\u6ca1\u4e86\u3002\u3002Debug\u4e86\u4e00\u4e0b\u53d1\u73b0\u5b50\u5f39\u5728\u670d\u52a1\u7aef\u5148\u78b0\u649e\u5148Destroy\uff0c\u6240\u4ee5\u5ba2\u6237\u7aef\u7684\u5b50\u5f39\u88abDestroy\uff0c\u65e0\u78b0\u649e\u4ea7\u751f\uff0c\u7ecf\u8fc7\u601d\u8003\u6211\u628a\u7206\u70b8\u6548\u679c\u4ee5\u53ca\u5b50\u5f39Destroy\u5f04\u6210\u4e86\u4e00\u4e2aClientRpc\u51fd\u6570\uff0c\u6070\u597d\u8fd9\u6837\u4e5f\u53ef\u4ee5\u4e0e\u672c\u5730\u7684\u7c92\u5b50\u5de5\u5382\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u6d4b\u8bd5\u53d1\u73b0\u6548\u679c\u548c\u9884\u671f\u76f8\u7b26\u3002 ClientRpc\u7684\u4f5c\u7528\u6070\u5de7\u4e0eCommand\u76f8\u53cd\uff0c\u5176\u662f\u670d\u52a1\u5668\u6267\u884c\u7684\u4ee3\u7801\uff0c\u8c03\u7528\u6240\u6709\u5ba2\u6237\u7aef\u6267\u884c\u51fd\u6570\uff0c\u800cCommand\u5219\u662f\u672c\u5730\u73a9\u5bb6\u5bf9\u8c61\u6267\u884c\u7684\u4ee3\u7801\uff0c\u8c03\u7528\u670d\u52a1\u5668\u6267\u884c\u7684\u51fd\u6570 if ( flag == true && this . gameObject . activeSelf ) { if ( isServer ) RpcBulletExplosion (); } ... [ClientRpc] void RpcBulletExplosion () { ParticleSystem explosion = Singleton < PSFactory >. Instance . getPs (); explosion . transform . position = transform . position ; //\u8bbe\u7f6e\u7c92\u5b50\u7cfb\u7edf\u4f4d\u7f6e explosion . Play (); Destroy ( this . gameObject ); } 3. \u5b50\u5f39\u79fb\u52a8\u76f8\u5173 \u56e0\u4e3a\u5728\u4e0a\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u7684\u5b50\u5f39\u79fb\u52a8\u662f\u901a\u8fc7\u65bd\u52a0\u4e00\u4e2a\u5411\u524d\u7684\u529b\u6765\u5b9e\u73b0\u7684\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\u5728\u53d1\u51fa\u540e\u8fd8\u4f1a\u6301\u7eed\u6539\u53d8\u7269\u4f53\u7684\u901f\u5ea6\uff0c\u4e0d\u5229\u4e8e\u6211\u4eec\u8054\u7f51\u5c04\u51fb\uff0c\u56e0\u4e3a\u8fd9\u91cc\u6d89\u53ca\u5230\u4e00\u4e2a\u53d1\u9001\u901f\u7387Network Send Rate\u7684\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u5728\u5b50\u5f39\u53d1\u51fa\u540e\u4e0d\u53bb\u6539\u53d8\u5176\u65b9\u5411\u6216\u901f\u5ea6\uff0c\u6211\u4eec\u7684\u53d1\u9001\u901f\u7387\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0\uff0c\u4e0d\u9700\u8981\u53d1\u9001\u79fb\u52a8\u66f4\u65b0\uff0c\u8fd9\u662f\u6bd4\u8f83\u5408\u7406\u7684\uff0c\u6211\u4eec\u5e94\u8be5\u4ee5\u9644\u52a0\u901f\u5ea6\u7684\u65b9\u5f0f\u53bb\u4f7f\u5b50\u5f39\u5b8c\u6210\u79fb\u52a8\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u53d1\u9001\u901f\u7387\u8bbe\u7f6e\u4e3a0\u3002\u5982\u679c\u4f7f\u7528\u6211\u4eec\u4e00\u5f00\u59cb\u7684\u9644\u52a0\u529b\u7684\u65b9\u5f0f\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u8981\u628a\u8be5\u901f\u7387\u8c03\u9ad8\uff0c\u589e\u52a0\u4e86\u65e0\u5fc5\u8981\u7684\u7f51\u7edc\u8d1f\u8f7d\u3002 \u4ee5\u4e0a\u5c31\u662f\u6211\u8fd9\u6b21\u5b9e\u9a8c\u78b0\u5230\u7684\u6bd4\u8f83\u5173\u952e\u7684\u95ee\u9898\u4ee5\u53ca\u601d\u8003\uff0c\u56e0\u4e3a\u5bf9\u4e8eUNet\u7684\u4e86\u89e3\u4e0d\u662f\u5f88\u6df1\u5165\uff0c\u800c\u4e14\u4e34\u8fd1\u671f\u672b\uff0c\u65f6\u95f4\u4e0d\u592a\u5145\u88d5\u65e0\u6cd5\u6df1\u5165\u53bb\u4e86\u89e3\uff0c\u611f\u89c9\u6709\u7684\u5730\u65b9\u8fd8\u662f\u505a\u7684\u4e0d\u662f\u5f88\u5230\u4f4d\uff0c\u6e38\u620f\u7684\u529f\u80fd\u4e5f\u4e0d\u662f\u592a\u591a\uff0c\u7b49\u5230\u8003\u5b8c\u8bd5\u4e86\u6709\u65f6\u95f4\u7684\u8bdd\u4f1a\u66f4\u6df1\u5165\u4e86\u89e3\u4e00\u4e0b\uff0c\u589e\u52a0\u4e00\u4e9b\u529f\u80fd\u3002\u5b8c\u6574\u7684\u4ee3\u7801\u5728\u6700\u4e0a\u9762\u5df2\u7ecf\u7ed9\u51fa\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u770b\u4e0b\u3002","title":"\u5b9e\u73b0\u4e2d\u9047\u5230\u7684\u95ee\u9898"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb02-\u7269\u4f53\u7684\u7a7a\u95f4\u4e0e\u8fd0\u52a8/","text":"Homework2 \u7b80\u7b54\u9898 1.\u6e38\u620f\u5bf9\u8c61\u8fd0\u52a8\u7684\u672c\u8d28\u662f\u4ec0\u4e48\uff1f \u6e38\u620f\u5bf9\u8c61\u8fd0\u52a8\u7684\u672c\u8d28\u5c31\u662f\u6e38\u620f\u5bf9\u8c61Transform\u7684\u6539\u53d8 \u8bf7\u7528\u4e09\u79cd\u65b9\u6cd5\u4ee5\u4e0a\u65b9\u6cd5\uff0c\u5b9e\u73b0\u7269\u4f53\u7684\u629b\u7269\u7ebf\u8fd0\u52a8\u3002\uff08\u5982\uff0c\u4fee\u6539Transform\u5c5e\u6027\uff0c\u4f7f\u7528\u5411\u91cfVector3\u7684\u65b9\u6cd5\u2026\uff09 a.\u76f4\u63a5\u6539\u53d8Transform\u7684position public float Vx ; public float Vy ; private float nowVy ; private Transform originTransform ; // Use this for initialization void Start () { nowVy = Vy ; originTransform = this . transform ; } // Update is called once per frame void Update () { if ( nowVy + Vy > 0.00001 ) { this . transform . position += Vector3 . up * Time . deltaTime * nowVy ; this . transform . position += Vector3 . left * Time . deltaTime * Vx ; nowVy -= 10 * Time . deltaTime ; } else { } } b.\u901a\u8fc7\u4f7f\u7528Vector3.MoveTowards // Update is called once per frame void Update () { Debug . Log ( nowVy + Vy ); if ( nowVy + Vy > 0.00001 ) { Vector3 target = this . transform . position + Vector3 . up * Time . deltaTime * nowVy + Vector3 . left * Time . deltaTime * Vx ; this . transform . position = Vector3 . MoveTowards ( this . transform . position , target , Time . deltaTime ); nowVy -= 10 * Time . deltaTime ; } else { } } c.\u901a\u8fc7\u4f7f\u7528transform.Translate public float Vx ; public float Vy ; private float nowVy ; private Vector3 speed ; private Vector3 Gravity ; // Use this for initialization void Start () { Gravity = Vector3 . zero ; speed = new Vector3 ( Vx , Vy , 0 ); } // Update is called once per frame void Update () { if ( 2 * Vy + Gravity . y > 0.00001 ) { Gravity . y -= 10 * Time . fixedDeltaTime ; this . transform . Translate ( speed * Time . fixedDeltaTime ); this . transform . Translate ( Gravity * Time . fixedDeltaTime ); } else { } } \u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u4e00\u4e2a\u5b8c\u6574\u7684\u592a\u9633\u7cfb\uff0c\u5176\u4ed6\u661f\u7403\u56f4\u7ed5\u592a\u9633\u7684\u8f6c\u901f\u5fc5\u987b\u4e0d\u4e00\u6837\uff0c\u4e14\u4e0d\u5728\u4e00\u4e2a\u6cd5\u5e73\u9762\u4e0a\u3002 1.\u9996\u5148\uff0c\u67e5\u9605\u4e86\u592a\u9633\u7cfb\u76f8\u5173\u7684\u8d44\u6599\uff0c\u83b7\u5f97\u592a\u9633\u7cfb\u5927\u81f4\u7ed3\u6784\u5982\u4e0b(\u4e0b\u56fe\u4e0d\u5305\u62ec\u56f4\u7ed5\u5730\u7403\u7684\u6708\u7403) 2.\u6839\u636e\u56fe\u4e2d\u4fe1\u606f\uff0c\u5e76\u6839\u636e\u4ece\u5c5e\u7ed3\u6784\u521b\u5efa\u597d\u6e38\u620f\u5bf9\u8c61,\u628a\u5b83\u4eec\u653e\u7f6e\u5230\u5927\u81f4\u7684\u4f4d\u7f6e\u3002\u6e38\u620f\u5bf9\u8c61\u7ed3\u6784\u5982\u4e0b \u5c06\u8001\u5e08\u6240\u7ed9\u7684 \u8d34\u56fe\u7f51\u7ad9 \u4e0a\u7684\u8d34\u56fe\u4e0b\u8f7d\u4e0b\u6765,\u653e\u5230Resources\u6587\u4ef6\u5939\u4e2d\uff0c\u4e00\u4e00\u62d6\u52a8\u5230\u6e38\u620f\u5bf9\u8c61\u4e0a\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u6548\u679c\u5982\u4e0b 3.\u4e0b\u9762\u5c31\u8f6e\u5230\u5199\u811a\u672c\u4e86 \u56e0\u4e3a\u884c\u661f\u7684\u52a8\u4f5c\u7b49\u5927\u81f4\u76f8\u540c\uff0c\u53ea\u6709\u8f6c\u901f\uff0c\u6cd5\u5e73\u9762\u7b49\u5730\u65b9\u6709\u6240\u533a\u522b\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u628a\u516c\u8f6c\u52a8\u4f5c\u62bd\u8c61\u6210\u4e00\u4e2a\u811a\u672c\uff0c\u7136\u540e\u628a\u4f1a\u53d8\u5316\u7684\u90e8\u5206\u8bbe\u4e3apublic\u4f9b\u7ed9\u5916\u90e8\u4fee\u6539\u3002 \u81f3\u4e8e\u5404\u4e2a\u884c\u661f\u516c\u8f6c\u7684\u6cd5\u5e73\u9762\u561b\uff0c\u8fd9\u65b9\u9762\u4e0d\u592a\u4e86\u89e3\uff0c\u800c\u4e14\u641c\u7d22\u9875\u96be\u4ee5\u641c\u5230\u51c6\u786e\u7684\u503c,\u53c8\u9274\u4e8e\u6bcf\u4e2a\u884c\u661f\u7684\u6cd5\u5e73\u9762\u9700\u8981\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u76f4\u63a5\u4f5b\u7cfb\u4e00\u6ce2\u4f7f\u7528\u968f\u673a\u751f\u6210\u7684\u6cd5\u5e73\u9762\u4f5c\u4e3a\u5404\u4e2a\u884c\u661f\u516c\u8f6c\u7684\u5e73\u9762\ud83c\udf1a,\u5982\u4e0b,\u76f4\u63a5\u901a\u8fc7\u968f\u673a\u751f\u6210\u6cd5\u7ebf\u3002 private Vector3 normalPlane ; // Use this for initialization void Start () { normalPlane . Set ( 0 , Random . Range ( 0 , 10 ), Random . Range ( 0 , 2 )); } \u4e3a\u786e\u4fdd\u884c\u661f\u56f4\u7ed5Sun\u516c\u8f6c\uff0c\u6cd5\u7ebf\u5e94\u8be5\u8bbe\u4e3a(0,x,y)\uff0c\u56e0\u4e3a\u82e5\u884c\u661f\u56f4\u7ed5Sun\u7684\u7403\u5fc3\u516c\u8f6c\uff0c\u7403\u4f53\u4f4d\u7f6e\u4e0eSun\u7403\u5fc3\u884c\u6210\u7684\u5411\u91cf\u5fc5\u987b\u4e0e\u6cd5\u7ebf\u5411\u91cf\u5782\u76f4\uff0c\u800c(x,0,0)*(0,x,y)==0\uff0c\u5373(x,0,0)\u5782\u76f4\u4e8e(0,x,y)\uff0c\u6240\u4ee5\u6cd5\u7ebf\u5e94\u8be5\u8bbe\u7f6e\u4e3a(0,x,y) \u5177\u4f53\u6574\u4e2aMonoBehavior\u5b9e\u73b0\u5982\u4e0b: public class Move : MonoBehaviour { public float speed ; private Vector3 normalPlane ; // Use this for initialization void Start () { normalPlane . Set ( 0 , Random . Range ( 0 , 10 ), Random . Range ( 0 , 10 )); } // Update is called once per frame void Update () { this . transform . RotateAround ( this . transform . parent . position , normalPlane , speed ); } } \u5176\u5b9e\u4ee3\u7801\u5341\u5206\u7b80\u5355\uff0c\u4e3b\u8981\u8981\u77e5\u9053\u5982\u4f55Transform.RotateAround\uff0c\u77e5\u9053\u8fd9\u4e2a\u51fd\u6570\u5c31\u5f88\u597d\u529e\u4e86\uff0c\u5199\u5b8c\u811a\u672c\u540e\u53ea\u9700\u628a\u811a\u672c\u4e00\u4e00\u62d6\u52a8\u5230GameObject\u4e0a\uff0c\u8bbe\u7f6e\u597dspeed\u53d8\u91cf\uff0c\u6574\u4e2a\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u8dd1\u8d77\u6765\u4e86\u3002 \u4e3a\u4e86\u65b9\u4fbf\u770b\u6e05\u695a\u4e0d\u540c\u884c\u661f\u7684\u8fd0\u52a8\uff0c\u9a8c\u8bc1\u7ed3\u679c\uff0c\u6211\u5229\u7528\u4e86Unity3D\u4e2dGameObject\u7684\u8def\u5f84\u6e32\u67d3\uff0c\u76f4\u63a5\u7ed9\u6bcf\u4e2a\u5bf9\u8c61Add Component > Effects > Trail Renderer\u5c31\u53ef\u4ee5\u4e86\uff0c\u5b9e\u73b0\u6548\u679c\u6574\u4f53\u5982\u4e0b: \u9879\u76ee\u7684\u5730\u5740\u5982\u4e0b: github@zhongwq/Unity3D-Learning/Homework2","title":"\u5b66\u4e60\u7b14\u8bb02-\u7269\u4f53\u7684\u7a7a\u95f4\u4e0e\u8fd0\u52a8"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb02-\u7269\u4f53\u7684\u7a7a\u95f4\u4e0e\u8fd0\u52a8/#homework2","text":"","title":"Homework2"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb02-\u7269\u4f53\u7684\u7a7a\u95f4\u4e0e\u8fd0\u52a8/#_1","text":"1.\u6e38\u620f\u5bf9\u8c61\u8fd0\u52a8\u7684\u672c\u8d28\u662f\u4ec0\u4e48\uff1f \u6e38\u620f\u5bf9\u8c61\u8fd0\u52a8\u7684\u672c\u8d28\u5c31\u662f\u6e38\u620f\u5bf9\u8c61Transform\u7684\u6539\u53d8 \u8bf7\u7528\u4e09\u79cd\u65b9\u6cd5\u4ee5\u4e0a\u65b9\u6cd5\uff0c\u5b9e\u73b0\u7269\u4f53\u7684\u629b\u7269\u7ebf\u8fd0\u52a8\u3002\uff08\u5982\uff0c\u4fee\u6539Transform\u5c5e\u6027\uff0c\u4f7f\u7528\u5411\u91cfVector3\u7684\u65b9\u6cd5\u2026\uff09 a.\u76f4\u63a5\u6539\u53d8Transform\u7684position public float Vx ; public float Vy ; private float nowVy ; private Transform originTransform ; // Use this for initialization void Start () { nowVy = Vy ; originTransform = this . transform ; } // Update is called once per frame void Update () { if ( nowVy + Vy > 0.00001 ) { this . transform . position += Vector3 . up * Time . deltaTime * nowVy ; this . transform . position += Vector3 . left * Time . deltaTime * Vx ; nowVy -= 10 * Time . deltaTime ; } else { } } b.\u901a\u8fc7\u4f7f\u7528Vector3.MoveTowards // Update is called once per frame void Update () { Debug . Log ( nowVy + Vy ); if ( nowVy + Vy > 0.00001 ) { Vector3 target = this . transform . position + Vector3 . up * Time . deltaTime * nowVy + Vector3 . left * Time . deltaTime * Vx ; this . transform . position = Vector3 . MoveTowards ( this . transform . position , target , Time . deltaTime ); nowVy -= 10 * Time . deltaTime ; } else { } } c.\u901a\u8fc7\u4f7f\u7528transform.Translate public float Vx ; public float Vy ; private float nowVy ; private Vector3 speed ; private Vector3 Gravity ; // Use this for initialization void Start () { Gravity = Vector3 . zero ; speed = new Vector3 ( Vx , Vy , 0 ); } // Update is called once per frame void Update () { if ( 2 * Vy + Gravity . y > 0.00001 ) { Gravity . y -= 10 * Time . fixedDeltaTime ; this . transform . Translate ( speed * Time . fixedDeltaTime ); this . transform . Translate ( Gravity * Time . fixedDeltaTime ); } else { } } \u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u4e00\u4e2a\u5b8c\u6574\u7684\u592a\u9633\u7cfb\uff0c\u5176\u4ed6\u661f\u7403\u56f4\u7ed5\u592a\u9633\u7684\u8f6c\u901f\u5fc5\u987b\u4e0d\u4e00\u6837\uff0c\u4e14\u4e0d\u5728\u4e00\u4e2a\u6cd5\u5e73\u9762\u4e0a\u3002 1.\u9996\u5148\uff0c\u67e5\u9605\u4e86\u592a\u9633\u7cfb\u76f8\u5173\u7684\u8d44\u6599\uff0c\u83b7\u5f97\u592a\u9633\u7cfb\u5927\u81f4\u7ed3\u6784\u5982\u4e0b(\u4e0b\u56fe\u4e0d\u5305\u62ec\u56f4\u7ed5\u5730\u7403\u7684\u6708\u7403) 2.\u6839\u636e\u56fe\u4e2d\u4fe1\u606f\uff0c\u5e76\u6839\u636e\u4ece\u5c5e\u7ed3\u6784\u521b\u5efa\u597d\u6e38\u620f\u5bf9\u8c61,\u628a\u5b83\u4eec\u653e\u7f6e\u5230\u5927\u81f4\u7684\u4f4d\u7f6e\u3002\u6e38\u620f\u5bf9\u8c61\u7ed3\u6784\u5982\u4e0b \u5c06\u8001\u5e08\u6240\u7ed9\u7684 \u8d34\u56fe\u7f51\u7ad9 \u4e0a\u7684\u8d34\u56fe\u4e0b\u8f7d\u4e0b\u6765,\u653e\u5230Resources\u6587\u4ef6\u5939\u4e2d\uff0c\u4e00\u4e00\u62d6\u52a8\u5230\u6e38\u620f\u5bf9\u8c61\u4e0a\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u6548\u679c\u5982\u4e0b 3.\u4e0b\u9762\u5c31\u8f6e\u5230\u5199\u811a\u672c\u4e86 \u56e0\u4e3a\u884c\u661f\u7684\u52a8\u4f5c\u7b49\u5927\u81f4\u76f8\u540c\uff0c\u53ea\u6709\u8f6c\u901f\uff0c\u6cd5\u5e73\u9762\u7b49\u5730\u65b9\u6709\u6240\u533a\u522b\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u628a\u516c\u8f6c\u52a8\u4f5c\u62bd\u8c61\u6210\u4e00\u4e2a\u811a\u672c\uff0c\u7136\u540e\u628a\u4f1a\u53d8\u5316\u7684\u90e8\u5206\u8bbe\u4e3apublic\u4f9b\u7ed9\u5916\u90e8\u4fee\u6539\u3002 \u81f3\u4e8e\u5404\u4e2a\u884c\u661f\u516c\u8f6c\u7684\u6cd5\u5e73\u9762\u561b\uff0c\u8fd9\u65b9\u9762\u4e0d\u592a\u4e86\u89e3\uff0c\u800c\u4e14\u641c\u7d22\u9875\u96be\u4ee5\u641c\u5230\u51c6\u786e\u7684\u503c,\u53c8\u9274\u4e8e\u6bcf\u4e2a\u884c\u661f\u7684\u6cd5\u5e73\u9762\u9700\u8981\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u76f4\u63a5\u4f5b\u7cfb\u4e00\u6ce2\u4f7f\u7528\u968f\u673a\u751f\u6210\u7684\u6cd5\u5e73\u9762\u4f5c\u4e3a\u5404\u4e2a\u884c\u661f\u516c\u8f6c\u7684\u5e73\u9762\ud83c\udf1a,\u5982\u4e0b,\u76f4\u63a5\u901a\u8fc7\u968f\u673a\u751f\u6210\u6cd5\u7ebf\u3002 private Vector3 normalPlane ; // Use this for initialization void Start () { normalPlane . Set ( 0 , Random . Range ( 0 , 10 ), Random . Range ( 0 , 2 )); } \u4e3a\u786e\u4fdd\u884c\u661f\u56f4\u7ed5Sun\u516c\u8f6c\uff0c\u6cd5\u7ebf\u5e94\u8be5\u8bbe\u4e3a(0,x,y)\uff0c\u56e0\u4e3a\u82e5\u884c\u661f\u56f4\u7ed5Sun\u7684\u7403\u5fc3\u516c\u8f6c\uff0c\u7403\u4f53\u4f4d\u7f6e\u4e0eSun\u7403\u5fc3\u884c\u6210\u7684\u5411\u91cf\u5fc5\u987b\u4e0e\u6cd5\u7ebf\u5411\u91cf\u5782\u76f4\uff0c\u800c(x,0,0)*(0,x,y)==0\uff0c\u5373(x,0,0)\u5782\u76f4\u4e8e(0,x,y)\uff0c\u6240\u4ee5\u6cd5\u7ebf\u5e94\u8be5\u8bbe\u7f6e\u4e3a(0,x,y) \u5177\u4f53\u6574\u4e2aMonoBehavior\u5b9e\u73b0\u5982\u4e0b: public class Move : MonoBehaviour { public float speed ; private Vector3 normalPlane ; // Use this for initialization void Start () { normalPlane . Set ( 0 , Random . Range ( 0 , 10 ), Random . Range ( 0 , 10 )); } // Update is called once per frame void Update () { this . transform . RotateAround ( this . transform . parent . position , normalPlane , speed ); } } \u5176\u5b9e\u4ee3\u7801\u5341\u5206\u7b80\u5355\uff0c\u4e3b\u8981\u8981\u77e5\u9053\u5982\u4f55Transform.RotateAround\uff0c\u77e5\u9053\u8fd9\u4e2a\u51fd\u6570\u5c31\u5f88\u597d\u529e\u4e86\uff0c\u5199\u5b8c\u811a\u672c\u540e\u53ea\u9700\u628a\u811a\u672c\u4e00\u4e00\u62d6\u52a8\u5230GameObject\u4e0a\uff0c\u8bbe\u7f6e\u597dspeed\u53d8\u91cf\uff0c\u6574\u4e2a\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u8dd1\u8d77\u6765\u4e86\u3002 \u4e3a\u4e86\u65b9\u4fbf\u770b\u6e05\u695a\u4e0d\u540c\u884c\u661f\u7684\u8fd0\u52a8\uff0c\u9a8c\u8bc1\u7ed3\u679c\uff0c\u6211\u5229\u7528\u4e86Unity3D\u4e2dGameObject\u7684\u8def\u5f84\u6e32\u67d3\uff0c\u76f4\u63a5\u7ed9\u6bcf\u4e2a\u5bf9\u8c61Add Component > Effects > Trail Renderer\u5c31\u53ef\u4ee5\u4e86\uff0c\u5b9e\u73b0\u6548\u679c\u6574\u4f53\u5982\u4e0b: \u9879\u76ee\u7684\u5730\u5740\u5982\u4e0b: github@zhongwq/Unity3D-Learning/Homework2","title":"\u7b80\u7b54\u9898"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/","text":"Homework2-\u7f16\u7a0b\u5b9e\u8df5 \u9898\u76ee\u8981\u6c42 \u9605\u8bfb\u4ee5\u4e0b\u6e38\u620f\u811a\u672c Priests and Devils Priests and Devils is a puzzle game in which you will help the Priests and Devils to cross the river within the time limit. There are 3 priests and 3 devils at one side of the river. They all want to get to the other side of this river, but there is only one boat and this boat can only carry two persons each time. And there must be one person steering the boat from one side to the other side. In the flash game, you can click on them to move them and click the go button to move the boat to the other direction. If the priests are out numbered by the devils on either side of the river, they get killed and the game is over. You can try it in many > ways. Keep all priests alive! Good luck \uff01 \u7b80\u7b54\u9898\uff1a play the game ( http://www.flash-game.net/game/2535/priests-and-devils.html ) \u5217\u51fa\u6e38\u620f\u4e2d\u63d0\u53ca\u7684\u4e8b\u7269\uff08Objects\uff09 \u6e38\u620f\u4e2d\u63d0\u53ca\u7684\u4e8b\u7269\u6709 \u9b54\u9b3c \u7267\u5e08 \u8239 \u4e24\u8fb9\u7684\u5cb8 \u6cb3 \u7528\u8868\u683c\u5217\u51fa\u73a9\u5bb6\u52a8\u4f5c\u8868\uff08\u89c4\u5219\u8868\uff09\uff0c\u6ce8\u610f\uff0c\u52a8\u4f5c\u8d8a\u5c11\u8d8a\u597d \u884c\u4e3a \u884c\u4e3a\u6761\u4ef6 \u7267\u5e08\uff0f\u6076\u9b54\u4e0a\u8239 \u8239\u4e0a\u6709\u7a7a\u4f4d\u4e14\u8239\u5728\u8be5\u5cb8 \u5f00\u8239 \u8239\u4e0a\u6709\u4eba \u7267\u5e08/\u6076\u9b54\u4e0b\u8239 \u8239\u6709\u4eba\u4e14\u9760\u5728\u5cb8\u8fb9 \u6e38\u620f\u80dc\u5229 6\u4e2a\u4eba\u90fd\u5230\u4e86\u5bf9\u5cb8 \u6e38\u620f\u5931\u8d25 \u6709\u4e00\u8fb9\u5cb8\u4e0a\u4eba\u6570\u4e0d\u5747 \u7a0b\u5e8f\u9650\u5236 \u8bf7\u5c06\u6e38\u620f\u4e2d\u5bf9\u8c61\u505a\u6210\u9884\u5236 \u5728 GenGameObjects \u4e2d\u521b\u5efa \u957f\u65b9\u5f62\u3001\u6b63\u65b9\u5f62\u3001\u7403 \u53ca\u5176\u8272\u5f69\u4ee3\u8868\u6e38\u620f\u4e2d\u7684\u5bf9\u8c61\u3002 \u4f7f\u7528 C# \u96c6\u5408\u7c7b\u578b \u6709\u6548\u7ec4\u7ec7\u5bf9\u8c61 \u6574\u4e2a\u6e38\u620f\u4ec5 \u4e3b\u6444\u50cf\u673a \u548c \u4e00\u4e2a Empty \u5bf9\u8c61\uff0c \u5176\u4ed6\u5bf9\u8c61\u5fc5\u987b\u4ee3\u7801\u52a8\u6001\u751f\u6210\uff01\uff01\uff01\u6574\u4e2a\u6e38\u620f\u4e0d\u8bb8\u51fa\u73b0 Find \u6e38\u620f\u5bf9\u8c61\uff0c SendMessage \u8fd9\u7c7b\u7a81\u7834\u7a0b\u5e8f\u7ed3\u6784\u7684 \u901a\u8baf\u8026\u5408 \u8bed\u53e5\u3002 \u8fdd\u80cc\u672c\u6761\u51c6\u5219\uff0c\u4e0d\u7ed9\u5206 \u8bf7\u4f7f\u7528\u8bfe\u4ef6\u67b6\u6784\u56fe\u7f16\u7a0b\uff0c\u4e0d\u63a5\u53d7\u975e MVC \u7ed3\u6784\u7a0b\u5e8f \u6ce8\u610f\u7ec6\u8282\uff0c\u4f8b\u5982\uff1a\u8239\u672a\u9760\u5cb8\uff0c\u7267\u5e08\u4e0e\u9b54\u9b3c\u4e0a\u4e0b\u8239\u8fd0\u52a8\u4e2d\uff0c\u5747\u4e0d\u80fd\u63a5\u53d7\u7528\u6237\u4e8b\u4ef6\uff01 \u9879\u76ee\u5730\u5740 github@zhongwq/Unity3D-Learning/Homework2 Unity\u4e2d\u7684MVC\u67b6\u6784 \u60f3\u4f7f\u7528\u4e00\u4e2a\u67b6\u6784\u8fdb\u884c\u5f00\u53d1\uff0c\u6211\u4eec\u80af\u5b9a\u9700\u8981\u5148\u4e86\u89e3MVC\u67b6\u6784\u5982\u4f55\u5728\u57fa\u4e8eUnity\u7684\u6e38\u620f\u7684\u5f00\u53d1\u4e2d\u4f7f\u7528\u3002\u4ed4\u7ec6\u5206\u6790Unity\u4e2d\u7684MVC\u7ed3\u6784\uff0c\u7ed3\u5408\u8001\u5e08\u4e0a\u8bfe\u65f6\u6240\u8bb2\u7684\u5185\u5bb9\uff0c\u5b83\u5176\u5b9e\u548c\u5e73\u65f6\u5728WEB\u4e2d\u5e38\u7528MVC\u7ed3\u6784\u5728\u672c\u8d28\u4e0a\u5e76\u6ca1\u6709\u592a\u5927\u7684\u533a\u522b\uff0c\u90fd\u662f\u5173\u6ce8\u70b9\u5206\u79bb(SOC)\u7684\u4f53\u73b0\uff0c\u662f\u4e00\u79cd\u6210\u719f\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u89c4\u8303\u3002\u4f7f\u7528MVC\u67b6\u6784\u53bb\u5f00\u53d1\u6211\u4eec\u7684\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u5f97\u6211\u4eec\u5728\u62d3\u5c55\u8f6f\u4ef6\u529f\u80fd\u3001\u6539\u8fdb\u7528\u6237\u4ea4\u4e92\u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u91cd\u5199\u5927\u91cf\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\uff0c\u51cf\u5c11\u4e86\u6211\u4eec\u7684\u4ee3\u7801\u91cf\uff0c\u65b9\u4fbf\u4e86\u8f6f\u4ef6\u7684\u62d3\u5c55\uff0c\u5c31\u5982\u8001\u5e08\u6240\u8bf4\u7684\uff1a\u201c\u7a33\u56fa\u7684MVC\u6846\u67b6\u7ecf\u5f97\u8d77\u4efb\u610f\u62d3\u5c55\u201d\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u8c08\u8c08Unity\u4e2d\u7684MVC\u67b6\u6784: M(Model): Unity\u4e2d\uff0cModel\u5c31\u662f\u6e38\u620f\u573a\u666f\u4e2dGameObject\u3001\u548c\u5b83\u4eec\u7684\u5173\u7cfb\u4ee5\u53ca\u540e\u53f0\u7684\u6570\u636e\u6a21\u578b(\u6bd4\u5982\u7528\u6237\u4fe1\u606f\u7b49)\uff0c\u5b83\u4eec\u90fd\u53d7\u5230\u76f8\u5e94\u7684Controller\u7684\u63a7\u5236 V(View): View\u8fd9\u90e8\u5206\u5728\u6e38\u620f\u4e2d\u8d77\u5230\u7684\u662f\u4e0e\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\u7684\u529f\u80fd\uff0c\u5b83\u4eec\u8d1f\u8d23\u5411\u7528\u6237\u6218\u672f\u6e38\u620f\u7ed3\u679c\uff0c\u5904\u7406GUI\u4e8b\u4ef6\u5e76\u901a\u8fc7IUserAction\u63a5\u53e3\u6765\u4e0eController\u8fdb\u884c\u4ea4\u4e92\u3002 C(Controller): Controller\u63a7\u5236\u7740\u6e38\u620f\u573a\u666f\u4e2d\u6240\u6709\u7684\u5bf9\u8c61\uff0c\u5176\u8d1f\u8d23\u63a5\u6536\u6765\u81eaView\u7684\u7528\u6237\u7684\u6307\u4ee4\u5e76\u6839\u636e\u7528\u6237\u8f93\u5165\u7684\u6307\u4ee4\uff0c\u66f4\u65b0Models\u4ee5\u53ca\u66f4\u65b0View\u7684\u72b6\u6001\uff0c\u5176\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u8fde\u63a5Model\u4e0eView\u7684\u6865\u6881\u3002 \u9879\u76eeUML\u56fe \u5728\u4e86\u89e3\u4e86Unity\u4e2dMVC\u7684\u57fa\u672c\u67b6\u6784\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u8fdb\u884c\u4e0b\u9762\u7684\u5f00\u53d1\u4e86 \u6309\u7167\u9898\u76ee\u8981\u6c42\u7684MVC\u7ed3\u6784\uff0c\u5206\u6790\u6e38\u620f\u7684\u57fa\u672c\u7ed3\u6784\uff0c\u5f97\u5230\u57fa\u672c\u7684UML\u56fe\u7684\u7ed3\u6784\u5982\u4e0b: \u5bf9\u5404\u6a21\u5757\u5206\u5757\u8fdb\u884c\u5f00\u53d1 GameDirector \u9996\u5148\uff0c\u6211\u4eec\u6765\u5f00\u53d1\u62c5\u8d1f\u7740\u4f17\u591a\u804c\u8d23\u7684GameDirector\uff0c\u5728\u6e38\u620f\u91cc\u9762\uff0c\u5bfc\u6f14(Director)\u7684\u804c\u8d23\u5927\u81f4\u5982\u4e0b: \u83b7\u53d6\u5f53\u524d\u6e38\u620f\u7684\u573a\u666f \u63a7\u5236\u573a\u666f\u8fd0\u884c\u3001\u5207\u6362\u3001\u5165\u6808\u4e0e\u51fa\u6808\uff0c\u6682\u505c\u3001\u6062\u590d\u3001\u9000\u51fa \u7ba1\u7406\u6e38\u620f\u5168\u5c40\u72b6\u6001 \u8bbe\u5b9a\u6e38\u620f\u7684\u914d\u7f6e \u8bbe\u5b9a\u6e38\u620f\u5168\u5c40\u89c6\u56fe \u7531\u4e0a\u6211\u4eec\u53ef\u77e5\uff0cGameDirector\u5bf9\u4e8e\u4e00\u4e2a\u6e38\u620f\u662f\u591a\u4e48\u7684\u91cd\u8981\uff0c\u4f46\u662f\uff0c\u5728\u6211\u4eec\u8fd9\u6b21\u7684\u5c0f\u9879\u76ee\u4e2d\uff0c\u5b83\u7684\u804c\u8d23\u6ca1\u6709\u90a3\u4e48\u591a\uff0c\u5b83\u5728\u8fd9\u6b21\u7684\u9879\u76ee\u4e2d\u4e3b\u8981\u8d1f\u8d23\u7684\u662f\u83b7\u53d6\u5f53\u524d\u6e38\u620f\u573a\u666f\uff0c\u5176\u4ee3\u7801\u5982\u4e0b: public class GameDirector : System . Object { private static GameDirector _instance ; public ISceneController currentSceneController { get ; set ; } public bool running { set ; get ; } public static GameDirector getInstance () { if ( _instance == null ) { _instance = new GameDirector (); return _instance ; } return _instance ; } public int getFPS () { return Application . targetFrameRate ; } public void setFPS ( int fps ) { Application . targetFrameRate = fps ; } } Director\u5728\u8fd0\u884c\u65f6\u53ea\u4f1a\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5728\u8fd0\u884c\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5176\u5e94\u7528\u4e86\u5355\u4f8b\u6a21\u5f0f\u4fdd\u8bc1\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u751f\u6210\uff0c\u65b9\u4fbf\u4e86\u7c7b\u4e4b\u95f4\u7684\u4e8b\u4ef6\u901a\u4fe1\uff0c\u65b9\u4fbf\u4e86MVC\u7684\u5b9e\u73b0\u3002 Director\u4f5c\u4e3a\u6e38\u620f\u6700\u4e3a\u9ad8\u5c42\u7684Controller\uff0c\u5176\u4e0d\u5177\u4f53\u7684\u63a7\u5236\u6e38\u620f\u4e2d\u7684\u4efb\u4e00\u5bf9\u8c61\uff0c\u5176\u901a\u8fc7\u5bf9currentSceneController\u7684\u7ef4\u62a4\uff0c\u628a\u63a7\u5236\u6e38\u620f\u5bf9\u8c61\u7684\u4efb\u52a1\u4ea4\u7ed9\u4e0d\u540c\u7684SceneController\u3002 ISceneController ISceneController\u7684\u4ee3\u7801\u5982\u4e0b //interface of Scene public interface ISceneController { void genGameObjects (); } ISCeneController\u662f\u6e38\u620f\u4e2d\u7684\u573a\u666f\u7ba1\u7406\u5668\uff0c\u4fd7\u79f0\u573a\u8bb0\uff0c\u5176\u4e3b\u8981\u804c\u8d23\u5982\u4e0b: \u7ba1\u7406\u6e38\u620f\u5728\u8be5\u6e38\u620f\u573a\u666f\u4e2d\u7684\u6240\u6709\u7684\u6e38\u620f\u5bf9\u8c61 \u534f\u8c03\u6e38\u620f\u5bf9\u8c61\u3001\u6e38\u620f\u5bf9\u8c61\u7ba1\u7406\u5668(GameObjectControllers)\u4e4b\u95f4\u7684\u901a\u4fe1 \u54cd\u5e94\u5916\u90e8\u8f93\u5165\u4e8b\u4ef6 \u7ba1\u7406\u8be5\u6e38\u620f\u573a\u666f\u7684\u6240\u6709\u7684\u89c4\u5219 \u7ba1\u7406\u4e00\u4e9b\u5176\u4ed6\u7684\u4e1c\u897f \u8be5\u7edf\u4e00\u7684\u63a5\u53e3\u7684\u5b9e\u73b0\u6b63\u662fGameDirector\u5bf9\u5404\u4e2a\u6e38\u620f\u573a\u666f\u7ba1\u7406\u7684\u5173\u952e\uff0c\u4ed6\u662f\u5bfc\u6f14\u63a7\u5236\u573a\u666f\u7684\u6e20\u9053\uff0cGameDirector\u901a\u8fc7\u5bf9\u4e8ecurrentSceneController\u7684\u7ef4\u62a4\uff0c\u53ef\u4ee5\u7b80\u5355\u5b9e\u73b0\u6e38\u620f\u573a\u666f\u7684\u5404\u79cd\u7ba1\u7406 IUserAction IUserAction\u4e2d\u4f53\u73b0\u4e86\u6e38\u620f\u7f16\u7a0b\u7684\u95e8\u9762\u6a21\u5f0f\uff0c\u6e38\u620f\u5916\u90e8\u4e0e\u4e00\u4e2a\u5b50\u7cfb\u7edf\u7684\u901a\u4fe1\u5fc5\u987b\u901a\u8fc7\u4e00\u4e2a\u7edf\u4e00\u7684\u95e8\u9762\u5bf9\u8c61\u8fdb\u884c\uff0c\u800c\u6211\u4eec\u73b0\u5728\u5b9e\u73b0\u7684IUserAction\u5c31\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u5bf9\u8c61,GUI\u7c7b\u901a\u8fc7IUserAction\u6765\u4e0eController\u8fdb\u884c\u901a\u4fe1\uff0c\u6211\u4eec\u901a\u8fc7\u5b9e\u73b0IUserAction\u63a5\u53e3\u6765\u5b9a\u4e49Controller\u4e0eGUI\u7684\u4ea4\u4e92\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u5b9e\u73b0Controller\u7c7b\u65f6\u53ea\u9700\u8981\u5b9e\u73b0IUserAction\u5bf9\u5e94\u7684\u63a5\u53e3\uff0c\u4ed6\u5c31\u53ef\u4ee5\u4e0e\u4efb\u610f\u4f7f\u7528IUserAction\u63a5\u53e3\u7684View\u5373GUI\u7c7b\u8c03\u7528\uff0cGUI\u7c7b\u4e5f\u662f\u53ea\u9700\u8c03\u7528\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u5373\u53ef\u5b9e\u73b0\u4e0eController\u7684\u901a\u4fe1, \u65b9\u4fbf\u4e86\u6211\u4eecMVC\u67b6\u6784\u7684\u5b9e\u73b0\u3002 \u5176\u5b9a\u4e49\u5982\u4e0b: public interface IUserAction { void restart (); void ToggleBoat (); void ClickCharacter ( ICharacterController chracter ); } UserGUI UserGUI\u7684\u4ee3\u7801\u5982\u4e0b: public class UserGUI : MonoBehaviour { public int status = 0 ; private IUserAction action ; GUIStyle headerStyle ; GUIStyle buttonStyle ; // Use this for initialization void Start () { action = GameDirector . getInstance (). currentSceneController as IUserAction ; headerStyle = new GUIStyle (); headerStyle . fontSize = 40 ; headerStyle . alignment = TextAnchor . MiddleCenter ; buttonStyle = new GUIStyle ( \"button\" ); buttonStyle . fontSize = 30 ; } // Update is called once per frame void OnGUI () { GUI . Label ( new Rect ( Screen . width / 2 - 100 , 10 , 200 , 50 ), \"Priests & Demons\" , headerStyle ); if ( status == 1 ) { GUI . Label ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 - 90 , 100 , 50 ), \"Gameover!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 65 , Screen . height / 2 , 140 , 70 ), \"Restart\" , buttonStyle )) { status = 0 ; action . restart (); } } else if ( status == 2 ) { GUI . Label ( new Rect ( Screen . width / 2 - 50 , Screen . height / 2 - 90 , 100 , 50 ), \"Win!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 70 , Screen . height / 2 , 140 , 70 ), \"Restart\" , buttonStyle )) { status = 0 ; action . restart (); } } } } \u7531\u4e0a\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cUserGUI\u53ea\u662f\u7b80\u5355\u5730\u6839\u636e\u6e38\u620f\u72b6\u6001\uff0c\u5bf9\u6e38\u620f\u4fe1\u606f\u7b49\u8fdb\u884c\u5c55\u793a\uff0c\u7136\u540e\u901a\u8fc7IUserAction\u4e0eController\u8fdb\u884c\u4ea4\u4e92\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u5728\u4e0a\u9762\u6240\u63d0\u5230\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728GUI\u4e2d\u8c03\u7528IUserAction\u4e2d\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fc5\u901f\u5b9e\u73b0\u5bf9\u6e38\u620f\u573a\u666f\u7684\u63a7\u5236\uff0c\u4e0b\u9762\u7684ClickGUI\u4e5f\u662f\u4e00\u6837 ClickGUI \u8be5\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: public class ClickGUI : MonoBehaviour { IUserAction action ; ICharacterController character ; public void setController ( ICharacterController characterController ) { character = characterController ; } void Start () { action = GameDirector . getInstance (). currentSceneController as IUserAction ; } void OnMouseDown () { if ( gameObject . name == \"boat\" ) { action . ToggleBoat (); } else { action . ClickCharacter ( character ); } } } \u5728ClickGUI\u4e2d\uff0c\u6211\u4eec\u540c\u6837\u7528\u5230\u4e86IUserAction, ClickGUI\u76d1\u542c\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u7136\u540e\u901a\u8fc7IUserAction\u63d0\u4f9b\u7684\u7c7b\u4f3c\u79fb\u52a8\u8239\uff0c\u6e38\u620f\u89d2\u8272\u4e0a\u4e0b\u8239\u7684\u51fd\u6570\uff0c\u628a\u7528\u6237\u6307\u4ee4\u4f20\u7ed9Controller\u8fdb\u884c\u6267\u884c\u3002\u4ece\u800c\u5b9e\u73b0View\u548cController\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002 FirstController \u5728\u8be5\u6e38\u620f\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u6e38\u620f\u573a\u666f\uff0c\u6240\u4ee5 \u5176\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b: public class FirstController : MonoBehaviour , ISceneController , IUserAction { readonly Vector3 riverPosition = new Vector3 ( 0 , - 0.25f , 0 ); UserGUI userGUI ; public LandController rightLand ; public LandController leftLand ; public BoatController boat ; public ICharacterController [] characters ; void Awake () { GameDirector director = GameDirector . getInstance (); director . currentSceneController = this ; userGUI = gameObject . AddComponent < UserGUI >() as UserGUI ; genGameObjects (); } public void genGameObjects () { characters = new ICharacterController [ 6 ]; GameObject river = Instantiate ( Resources . Load ( \"Prefabs/River\" , typeof ( GameObject )), riverPosition , Quaternion . identity , null ) as GameObject ; river . name = \"river\" ; boat = new BoatController (); leftLand = new LandController (- 1 ); rightLand = new LandController ( 1 ); for ( int i = 0 ; i < 3 ; i ++) { ICharacterController priest = new ICharacterController ( 0 , \"priest\" + i ); priest . setPosition ( rightLand . getEmptyPosition ()); priest . getOnLand ( rightLand ); rightLand . getOnLand ( priest ); characters [ i ] = priest ; } for ( int i = 0 ; i < 3 ; i ++) { ICharacterController demon = new ICharacterController ( 1 , \"demon\" + i ); demon . setPosition ( rightLand . getEmptyPosition ()); demon . getOnLand ( rightLand ); rightLand . getOnLand ( demon ); characters [ i + 3 ] = demon ; } } public void ClickCharacter ( ICharacterController character ) { if ( userGUI . status != 0 || ! boat . available ()) { return ; } if ( character . isOnBoat ()) { LandController land ; if ( boat . getBoatPos () == 0 ) { land = leftLand ; } else { land = rightLand ; } boat . getOffBoat ( character . getName ()); character . MoveTo ( land . getEmptyPosition ()); character . getOnLand ( land ); land . getOnLand ( character ); } else { LandController land = character . getLandController (); if ( boat . getEmptyIndex () == - 1 ) return ; int landPos = land . getType (), boatPos = ( boat . getBoatPos () == 0 ) ? - 1 : 1 ; if ( landPos != boatPos ) return ; land . getOffLand ( character . getName ()); character . MoveTo ( boat . getEmptyPosition ()); character . getOnBoat ( boat , boat . getEmptyIndex ()); boat . getOnBoat ( character ); } userGUI . status = checkResult (); } public void ToggleBoat () { if ( userGUI . status != 0 || boat . isEmptty ()) return ; boat . Move (); userGUI . status = checkResult (); } int checkResult () { int leftPriests = 0 ; int rightPriests = 0 ; int leftDemons = 0 ; int rightDemons = 0 ; int [] leftStatus = leftLand . getStatus (); leftPriests += leftStatus [ 0 ]; leftDemons += leftStatus [ 1 ]; if ( leftPriests + leftDemons == 6 ) return 2 ; int [] rightStatus = rightLand . getStatus (); rightPriests += rightStatus [ 0 ]; rightDemons += rightStatus [ 1 ]; int [] boatStatus = boat . getBoatStatus (); if ( boat . getBoatPos () == 0 ) { leftPriests += boatStatus [ 0 ]; leftDemons += boatStatus [ 1 ]; } else { rightPriests += boatStatus [ 0 ]; rightDemons += boatStatus [ 1 ]; } if ( leftPriests > 0 && leftPriests < leftDemons ) return 1 ; if ( rightPriests > 0 && rightPriests < rightDemons ) return 1 ; return 0 ; } public void restart () { boat . reset (); leftLand . reset (); rightLand . reset (); for ( int i = 0 ; i < characters . Length ; i ++) characters [ i ]. reset (); } } FirstController\u7ee7\u627f\u4e86ISceneController\u548cIUserAction\u8fd9\u4e24\u4e2a\u63a5\u53e3\uff0c\u5e76\u5b9e\u73b0\u4e86\u5176\u91cc\u9762\u7684\u51fd\u6570\uff0c\u5176\u65e2\u53ef\u4ee5\u901a\u8fc7IUserAction\u4e0eView\u8fdb\u884c\u4ea4\u4e92\uff0c\u4e5f\u53ef\u4ee5\u5728LoadResources\u540e\uff0c\u901a\u8fc7GameObject\u7684Controller\u5bf9\u573a\u666f\u4e2d\u7684\u5404\u4e2aGameObject\u8fdb\u884c\u63a7\u5236\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u4ecb\u7ecd\u6e38\u620f\u4e2d\u6e38\u620f\u5bf9\u8c61\u7684Controller\u7684\u4e66\u5199 \u9996\u5148\uff0c\u8d2f\u7a7f\u7740\u6211\u4eec\u8fd9\u6574\u4e00\u4e2a\u6e38\u620f\u7684\u5c31\u662fGameObject\u7684\u79fb\u52a8\u5566\uff01\u6240\u4ee5\u6211\u5148\u8bf4\u4e00\u4e0b\u62bd\u8c61\u51fa\u6765\u7684Move\u7c7b\uff0c\u5176\u4ee3\u7801\u5982\u4e0b\uff1a public class Move : MonoBehaviour { readonly float speed = 20 ; int status ; //0: \u9759\u6b62, 1: \u5904\u4e8e\u524d\u6bb5\u79fb\u52a8, 2: \u5904\u4e8e\u540e\u6bb5\u79fb\u52a8 Vector3 middle ; Vector3 destination ; void Update () { if ( status == 1 ) { this . transform . position = Vector3 . MoveTowards ( this . transform . position , middle , Time . deltaTime * speed ); if ( transform . position == middle ) { status = 2 ; } } else if ( status == 2 ) { this . transform . position = Vector3 . MoveTowards ( this . transform . position , destination , Time . deltaTime * speed ); if ( this . transform . position == destination ) { status = 0 ; } } } public int getStatus () { return status ; } public void moveTo ( Vector3 _destination ) { destination = _destination ; middle = _destination ; if ( _destination . y == this . transform . position . y ) { status = 2 ; return ; } else if ( _destination . y < this . transform . position . y ) { middle . y = transform . position . y ; } else { middle . x = transform . position . x ; } status = 1 ; } public void reset () { status = 0 ; } } \u4e3a\u4e86\u8ba9\u7269\u4f53\u4e0d\u8981\u76f4\u63a5\u7a7f\u8fc7land\u7684\u5899\u4f53\uff0c\u5f53character\u4e0a\u8239\u65f6\uff0c\u5148\u628a\u7269\u4f53\u79fb\u52a8\u5230destination\u7684\u5bf9\u5e94\u7684x\u5750\u6807\uff0c\u7136\u540e\u518d\u628a\u7269\u4f53\u79fb\u52a8\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u5f53charcter\u4e0b\u8239\u65f6\uff0c\u5148\u628a\u7269\u4f53\u79fb\u52a8\u5230destination\u7684\u5bf9\u5e94\u7684y\u5750\u6807\uff0c\u7136\u540e\u518d\u628a\u7269\u4f53\u79fb\u52a8\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e,\u8fd9\u6837\u4fdd\u8bc1\u4e86\u7269\u4f53\u4e0d\u4f1a\u7a7f\u8d8a\u5899\u4f53\u8fdb\u884c\u79fb\u52a8\uff0c\u4e14\u5b9e\u73b0\u65b9\u5f0f\u8f83\u4e3a\u7b80\u5355\u3002 ICharacterController \u56e0\u4e3a\u7267\u5e08\u4e0e\u6076\u9b54\u7684\u52a8\u4f5c\u7b49\u90fd\u662f\u4e00\u6837\u7684\uff0c\u5c31\u53ea\u662f\u5916\u5f62\u3001\u7c7b\u578b\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u628a\u5176\u62bd\u8c61\u4e3a\u4e00\u4e2aController,\u901a\u8fc7type\u533a\u5206\u5b83\u4eec \u5176\u4ee3\u7801\u5982\u4e0b: public class ICharacterController { readonly GameObject character ; readonly Move moveAction ; readonly int type ; //0: Priest, 1: Demon readonly ClickGUI clickGUI ; bool onBoat ; LandController landController ; public ICharacterController ( int chracterType , string name ) { if ( chracterType == 0 ) { this . character = Object . Instantiate ( Resources . Load ( \"Prefabs/Priest\" , typeof ( GameObject )), Vector3 . zero , Quaternion . identity , null ) as GameObject ; this . type = 0 ; } else { this . character = Object . Instantiate ( Resources . Load ( \"Prefabs/Demon\" , typeof ( GameObject )), Vector3 . zero , Quaternion . identity , null ) as GameObject ; this . type = 1 ; } character . name = name ; moveAction = character . AddComponent ( typeof ( Move )) as Move ; clickGUI = character . AddComponent ( typeof ( ClickGUI )) as ClickGUI ; clickGUI . setController ( this ); } public string getName () { return character . name ; } public void setPosition ( Vector3 pos ) { character . transform . position = pos ; } public void MoveTo ( Vector3 destination ) { moveAction . moveTo ( destination ); } public int getType () { return type ; } public void getOnBoat ( BoatController boatController , int pos ) { landController = null ; if ( pos == 0 ) { character . transform . rotation = Quaternion . AngleAxis ( 90 , Vector3 . up ); } else { character . transform . rotation = Quaternion . AngleAxis ( 270 , Vector3 . up ); } character . transform . parent = boatController . getBoat (). transform ; onBoat = true ; } public void getOnLand ( LandController land ) { landController = land ; if ( land . getType () == - 1 ) { character . transform . rotation = Quaternion . AngleAxis ( 90 , Vector3 . up ); } else { character . transform . rotation = Quaternion . AngleAxis ( 270 , Vector3 . up ); } character . transform . parent = null ; onBoat = false ; } public bool isOnBoat () { return onBoat ; } public LandController getLandController () { return landController ; } public void reset () { moveAction . reset (); landController = ( GameDirector . getInstance (). currentSceneController as FirstController ). rightLand ; getOnLand ( landController ); setPosition ( landController . getEmptyPosition ()); landController . getOnLand ( this ); } } CharcterController\u7c7b\u7684\u5b9e\u73b0\u5341\u5206\u7b80\u5355\uff0c\u5c31\u662f\u6839\u636etype\u5bfc\u5165\u9884\u5236\uff0c\u7136\u540e\u518d\u5b9e\u73b0\u4e0a\u8239\uff0c\u4e0a\u5cb8\uff0c\u91cd\u7f6e\u4ee5\u53ca\u4e00\u4e9b\u5176\u4ed6\u7684get, set\u51fd\u6570\u5c31\u5b8c\u6210\u4e86\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4ee5\u4e0a\u4ee3\u7801\u7684\u5b9e\u73b0\u3002 BoatController BoatController\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: public class BoatController { readonly GameObject boat ; readonly Move moveAction ; readonly Vector3 right = new Vector3 ( 3.5f , 0 , 0 ); readonly Vector3 left = new Vector3 (- 3.5f , 0 , 0 ); readonly Vector3 [] right_positions ; readonly Vector3 [] left_positions ; int status ; // 0: left, 1: right ICharacterController [] characterOnBoat = new ICharacterController [ 2 ]; public BoatController () { status = 1 ; right_positions = new Vector3 [] { new Vector3 ( 2.5F , 0.2F , 0 ), new Vector3 ( 4.5F , 0.2F , 0 ) }; left_positions = new Vector3 [] { new Vector3 (- 4.5F , 0.2F , 0 ), new Vector3 (- 2.5F , 0.2F , 0 ) }; boat = Object . Instantiate ( Resources . Load ( \"Prefabs/Boat\" , typeof ( GameObject )), right , Quaternion . identity , null ) as GameObject ; boat . name = \"boat\" ; moveAction = boat . AddComponent ( typeof ( Move )) as Move ; boat . AddComponent ( typeof ( ClickGUI )); } public void Move () { if ( status == 1 ) { moveAction . moveTo ( left ); } else { moveAction . moveTo ( right ); } status = 1 - status ; } public int getEmptyIndex () { for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] == null ) { return i ; } } return - 1 ; } public Vector3 getEmptyPosition () { int index = getEmptyIndex (); if ( status == 0 ) { return left_positions [ index ]; } else { return right_positions [ index ]; } } public bool isEmptty () { for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] != null ) { return false ; } } return true ; } public void getOnBoat ( ICharacterController character ) { characterOnBoat [ getEmptyIndex ()] = character ; } public ICharacterController getOffBoat ( string name ) { for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] != null && characterOnBoat [ i ]. getName () == name ) { ICharacterController character = characterOnBoat [ i ]; characterOnBoat [ i ] = null ; return character ; } } return null ; } public GameObject getBoat () { return boat ; } public int getBoatPos () { return status ; } public int [] getBoatStatus () { int [] boatStatus = { 0 , 0 }; for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] == null ) continue ; boatStatus [ characterOnBoat [ i ]. getType ()]++; } return boatStatus ; } // 0: Priests, 1: Demon public bool available () { return ( moveAction . getStatus () == 0 ); } public void reset () { moveAction . reset (); if ( status == 0 ) { Move (); } characterOnBoat = new ICharacterController [ 2 ]; } } Boat\u7684\u5b9e\u73b0\u4e5f\u5dee\u4e0d\u591a\uff0c\u53ea\u9700\u8981\u5b9e\u73b0\u521d\u59cb\u5316\u3001\u79fb\u52a8(ToggleBoat),character\u4e0a\u8239\u3001\u4e0b\u8239\u76f8\u5173\u7684\u51fd\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\u3002 LandController LandController\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: public class LandController { readonly GameObject land ; readonly Vector3 leftPos = new Vector3 (- 8.5f , 0f , 0f ); readonly Vector3 rightPos = new Vector3 ( 8.5f , 0f , 0f ); readonly Vector3 [] landPositions ; readonly int type ; // 1:right, -1: left ICharacterController [] characterOnLand ; public LandController ( int _type ) { landPositions = new Vector3 [] { new Vector3 ( 6F , 0.5F , 0 ), new Vector3 ( 7F , 0.5F , 0 ), new Vector3 ( 8F , 0.5F , 0 ), new Vector3 ( 9F , 0.5F , 0 ), new Vector3 ( 10F , 0.5F , 0 ), new Vector3 ( 11F , 0.5F , 0 ) }; characterOnLand = new ICharacterController [ 6 ]; type = _type ; if ( type == 1 ) { land = Object . Instantiate ( Resources . Load ( \"Prefabs/Land\" , typeof ( GameObject )), rightPos , Quaternion . identity , null ) as GameObject ; land . name = \"rightLand\" ; } else { land = Object . Instantiate ( Resources . Load ( \"Prefabs/Land\" , typeof ( GameObject )), leftPos , Quaternion . identity , null ) as GameObject ; land . name = \"leftLand\" ; } } public Vector3 getEmptyPosition () { Vector3 pos = landPositions [ getEmptyIndex ()]; pos . x *= type ; return pos ; } public int getEmptyIndex () { for ( int i = 0 ; i < characterOnLand . Length ; i ++) { if ( characterOnLand [ i ] == null ) return i ; } return - 1 ; } public void getOnLand ( ICharacterController chracter ) { characterOnLand [ getEmptyIndex ()] = chracter ; } public ICharacterController getOffLand ( string name ) { for ( int i = 0 ; i < characterOnLand . Length ; i ++) { if ( characterOnLand [ i ] != null && characterOnLand [ i ]. getName () == name ) { ICharacterController tmp = characterOnLand [ i ]; characterOnLand [ i ] = null ; return tmp ; } } return null ; } public int getType () { return type ; } public int [] getStatus () { int [] status = { 0 , 0 }; for ( int i = 0 ; i < characterOnLand . Length ; i ++) { if ( characterOnLand [ i ] == null ) continue ; status [ characterOnLand [ i ]. getType ()]++; } return status ; } // 0: priests, 1: Demon public void reset () { characterOnLand = new ICharacterController [ 6 ]; } } landController\u7684\u5b9e\u73b0\u548c\u4e0a\u9762\u7684Controller\u4e5f\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5b9e\u73b0\u521d\u59cb\u5316\uff0c\u4e0a\u5cb8\uff0c\u4e0b\u5cb8\u7684\u76f8\u5173\u51fd\u6570\u5c31\u5b8c\u6210\u4e86\u3002 \u5b8c\u6574\u6548\u679c \u603b\u7ed3\uff08\u5bf9MVC\u67b6\u6784\u5f00\u53d1\u6e38\u620f\u7684\u4f53\u4f1a\uff09 MVC\u67b6\u6784\u4f5c\u4e3a\u4e00\u79cd\u7ecf\u5178\u7684\u5f00\u53d1\u6a21\u5f0f\uff0c\u662f\u5173\u6ce8\u70b9\u5206\u79bb\u7684\u4e00\u4e2a\u5341\u5206\u7ecf\u5178\u7684\u4f53\u73b0\u3002\u6211\u4eec\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\uff0c\u5728\u5b8c\u6210\u4e00\u4e9b\u56e2\u961f\u9879\u76ee\u65f6\u4e5f\u6709\u4f7f\u7528\u5176\u4f5c\u4e3a\u57fa\u672c\u67b6\u6784\u8fdb\u884c\u5f00\u53d1\u3002 \u9879\u76ee\u4f7f\u7528MVC\u67b6\u6784\u5206\u79bb\u7684\u8bbe\u8ba1\uff0c \u7ed9\u6bcf\u4e00\u4e2a\u90e8\u5206\u8d4b\u4e88\u5355\u4e00\u7684\u804c\u8d23 \uff0c\u4f7f\u5f97\u6211\u4eec\u5728\u5f00\u53d1\u4e00\u4e2a\u6a21\u5757\u65f6\u4e0d\u7528\u592a\u591a\u5730\u5173\u6ce8\u6240\u4f7f\u7528\u5230\u7684\u6a21\u5757\u7684\u5185\u90e8\u5b9e\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53bb\u8c03\u7528\u76f8\u5e94\u7684\u63a5\u53e3\u53bb\u5b9e\u73b0\u81ea\u5df1\u60f3\u5b9e\u73b0\u7684\u4e1c\u897f\uff0c \u4f7f\u5f97\u6211\u4eec\u7684\u6e38\u620f\u6709\u7740\u66f4\u4f4e\u7684\u8026\u5408\u5ea6\uff0c\u66f4\u65b9\u4fbfDebug\uff0c\u66f4\u65b9\u4fbf\u5f00\u53d1\u3001\u8fed\u4ee3 \uff0c\u5c31\u4ee5\u6211\u4eec\u4e0a\u9762\u7684\u7a0b\u5e8f\u4e3a\u4f8b\uff0c\u5728\u5f00\u53d1FirstSceneController\u65f6\uff0c\u6211\u4eec\u4e0d\u7528\u600e\u4e48\u5173\u6ce8GameObject\u7684Controller\u5185\u90e8\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\uff0c\u5b83\u7ed9\u4e86\u6211\u4eec\u4ec0\u4e48\u63a5\u53e3\uff0c\u8fd9\u4e2a\u63a5\u53e3\u6709\u7740\u4ec0\u4e48\u529f\u80fd\uff0c\u77e5\u9053\u4e86\u4e4b\u540e\u6211\u4eec\u5728FirstSceneController\u4e2d\u76f4\u63a5\u8c03\u7528\u63a5\u53e3\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e0d\u4ec5\u8ba9\u4e2a\u4eba\u5f00\u53d1\u66f4\u6709\u6761\u7406\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u591a\u4eba\u534f\u4f5c\u5f00\u53d1\u66f4\u52a0\u4fbf\u5229\uff0c\u96be\u4ee5\u60f3\u8c61\u4e00\u4e2a\u9ad8\u8026\u5408\u5ea6\u7684\u4e2d\u5927\u578b\u8f6f\u4ef6\u662f\u600e\u4e48\u8fdb\u884c\u591a\u4eba\u534f\u4f5c\u5f00\u53d1\u7684\uff0c\u8fd9\u6837\u7684\u8f6f\u4ef6\u4e00\u4e2a\u4eba\u5f00\u53d1\u90fd\u96be\u53d7\uff0c\u4f55\u51b5\u662f\u591a\u4eba\u3002 \u603b\u4e4b\uff0c\u5728\u4e00\u4e9b\u4e2d\u5927\u578b\u9879\u76ee\u4e2d\uff0c\u4f7f\u7528MVC\u67b6\u6784\u8fdb\u884c\u5f00\u53d1 \u8f6f\u4ef6\u8026\u5408\u5ea6\u4f4e \u6a21\u5757\u6613\u590d\u7528 \u751f\u4ea7\u6548\u7387\u9ad8(\u5bf9\u4e8e\u4e2d\u5927\u578b\u8f6f\u4ef6) \u6613\u4e8e\u7ef4\u62a4\u3001\u8fed\u4ee3 \u6709\u5229\u8f6f\u4ef6\u5de5\u7a0b\u5316\u7ba1\u7406 \u4f46\u662f\uff0cMVC\u67b6\u6784\u4e0d\u662f\u666e\u9002\u7684\uff0c\u5728\u4e00\u4e9b\u8f83\u5c0f\u89c4\u6a21\u7684\u6e38\u620f\u4e2d\uff0c\u4e25\u683c\u4f7f\u7528MVC\u67b6\u6784\u5bf9\u4e8e\u5f00\u53d1\u7684\u6548\u7387\u662f\u6709\u4e00\u5b9a\u5f71\u54cd\u7684\uff0c\u5c31\u50cf\u6211\u4eec\u8fd9\u6b21\u7684\u4f5c\u4e1a\ud83c\udf1a(\u9003\u3002\u4e0d\u8fc7\uff0c\u901a\u8fc7\u8fd9\u4e00\u6b21\u4e25\u683c\u4f7f\u7528MVC\u67b6\u6784\u5f00\u53d1\u7684\u4f5c\u4e1a\uff0c\u6211\u4eec\u5bf9\u4e8eMVC\u6709\u4e86\u57fa\u672c\u7684\u4e86\u89e3\uff0c\u65b9\u4fbf\u4e86\u6211\u4eec\u4e4b\u540e\u4f7f\u7528MVC\u67b6\u6784\u5bf9\u5176\u4ed6\u4e00\u4e9b\u66f4\u5927\u7684\u6e38\u620f\u8fdb\u884c\u5f00\u53d1\u3002","title":"\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#homework2-","text":"","title":"Homework2-\u7f16\u7a0b\u5b9e\u8df5"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#_1","text":"\u9605\u8bfb\u4ee5\u4e0b\u6e38\u620f\u811a\u672c Priests and Devils Priests and Devils is a puzzle game in which you will help the Priests and Devils to cross the river within the time limit. There are 3 priests and 3 devils at one side of the river. They all want to get to the other side of this river, but there is only one boat and this boat can only carry two persons each time. And there must be one person steering the boat from one side to the other side. In the flash game, you can click on them to move them and click the go button to move the boat to the other direction. If the priests are out numbered by the devils on either side of the river, they get killed and the game is over. You can try it in many > ways. Keep all priests alive! Good luck \uff01","title":"\u9898\u76ee\u8981\u6c42"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#_2","text":"play the game ( http://www.flash-game.net/game/2535/priests-and-devils.html ) \u5217\u51fa\u6e38\u620f\u4e2d\u63d0\u53ca\u7684\u4e8b\u7269\uff08Objects\uff09 \u6e38\u620f\u4e2d\u63d0\u53ca\u7684\u4e8b\u7269\u6709 \u9b54\u9b3c \u7267\u5e08 \u8239 \u4e24\u8fb9\u7684\u5cb8 \u6cb3 \u7528\u8868\u683c\u5217\u51fa\u73a9\u5bb6\u52a8\u4f5c\u8868\uff08\u89c4\u5219\u8868\uff09\uff0c\u6ce8\u610f\uff0c\u52a8\u4f5c\u8d8a\u5c11\u8d8a\u597d \u884c\u4e3a \u884c\u4e3a\u6761\u4ef6 \u7267\u5e08\uff0f\u6076\u9b54\u4e0a\u8239 \u8239\u4e0a\u6709\u7a7a\u4f4d\u4e14\u8239\u5728\u8be5\u5cb8 \u5f00\u8239 \u8239\u4e0a\u6709\u4eba \u7267\u5e08/\u6076\u9b54\u4e0b\u8239 \u8239\u6709\u4eba\u4e14\u9760\u5728\u5cb8\u8fb9 \u6e38\u620f\u80dc\u5229 6\u4e2a\u4eba\u90fd\u5230\u4e86\u5bf9\u5cb8 \u6e38\u620f\u5931\u8d25 \u6709\u4e00\u8fb9\u5cb8\u4e0a\u4eba\u6570\u4e0d\u5747","title":"\u7b80\u7b54\u9898\uff1a"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#_3","text":"\u8bf7\u5c06\u6e38\u620f\u4e2d\u5bf9\u8c61\u505a\u6210\u9884\u5236 \u5728 GenGameObjects \u4e2d\u521b\u5efa \u957f\u65b9\u5f62\u3001\u6b63\u65b9\u5f62\u3001\u7403 \u53ca\u5176\u8272\u5f69\u4ee3\u8868\u6e38\u620f\u4e2d\u7684\u5bf9\u8c61\u3002 \u4f7f\u7528 C# \u96c6\u5408\u7c7b\u578b \u6709\u6548\u7ec4\u7ec7\u5bf9\u8c61 \u6574\u4e2a\u6e38\u620f\u4ec5 \u4e3b\u6444\u50cf\u673a \u548c \u4e00\u4e2a Empty \u5bf9\u8c61\uff0c \u5176\u4ed6\u5bf9\u8c61\u5fc5\u987b\u4ee3\u7801\u52a8\u6001\u751f\u6210\uff01\uff01\uff01\u6574\u4e2a\u6e38\u620f\u4e0d\u8bb8\u51fa\u73b0 Find \u6e38\u620f\u5bf9\u8c61\uff0c SendMessage \u8fd9\u7c7b\u7a81\u7834\u7a0b\u5e8f\u7ed3\u6784\u7684 \u901a\u8baf\u8026\u5408 \u8bed\u53e5\u3002 \u8fdd\u80cc\u672c\u6761\u51c6\u5219\uff0c\u4e0d\u7ed9\u5206 \u8bf7\u4f7f\u7528\u8bfe\u4ef6\u67b6\u6784\u56fe\u7f16\u7a0b\uff0c\u4e0d\u63a5\u53d7\u975e MVC \u7ed3\u6784\u7a0b\u5e8f \u6ce8\u610f\u7ec6\u8282\uff0c\u4f8b\u5982\uff1a\u8239\u672a\u9760\u5cb8\uff0c\u7267\u5e08\u4e0e\u9b54\u9b3c\u4e0a\u4e0b\u8239\u8fd0\u52a8\u4e2d\uff0c\u5747\u4e0d\u80fd\u63a5\u53d7\u7528\u6237\u4e8b\u4ef6\uff01","title":"\u7a0b\u5e8f\u9650\u5236"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#_4","text":"github@zhongwq/Unity3D-Learning/Homework2","title":"\u9879\u76ee\u5730\u5740"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#unitymvc","text":"\u60f3\u4f7f\u7528\u4e00\u4e2a\u67b6\u6784\u8fdb\u884c\u5f00\u53d1\uff0c\u6211\u4eec\u80af\u5b9a\u9700\u8981\u5148\u4e86\u89e3MVC\u67b6\u6784\u5982\u4f55\u5728\u57fa\u4e8eUnity\u7684\u6e38\u620f\u7684\u5f00\u53d1\u4e2d\u4f7f\u7528\u3002\u4ed4\u7ec6\u5206\u6790Unity\u4e2d\u7684MVC\u7ed3\u6784\uff0c\u7ed3\u5408\u8001\u5e08\u4e0a\u8bfe\u65f6\u6240\u8bb2\u7684\u5185\u5bb9\uff0c\u5b83\u5176\u5b9e\u548c\u5e73\u65f6\u5728WEB\u4e2d\u5e38\u7528MVC\u7ed3\u6784\u5728\u672c\u8d28\u4e0a\u5e76\u6ca1\u6709\u592a\u5927\u7684\u533a\u522b\uff0c\u90fd\u662f\u5173\u6ce8\u70b9\u5206\u79bb(SOC)\u7684\u4f53\u73b0\uff0c\u662f\u4e00\u79cd\u6210\u719f\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u89c4\u8303\u3002\u4f7f\u7528MVC\u67b6\u6784\u53bb\u5f00\u53d1\u6211\u4eec\u7684\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u5f97\u6211\u4eec\u5728\u62d3\u5c55\u8f6f\u4ef6\u529f\u80fd\u3001\u6539\u8fdb\u7528\u6237\u4ea4\u4e92\u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u91cd\u5199\u5927\u91cf\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\uff0c\u51cf\u5c11\u4e86\u6211\u4eec\u7684\u4ee3\u7801\u91cf\uff0c\u65b9\u4fbf\u4e86\u8f6f\u4ef6\u7684\u62d3\u5c55\uff0c\u5c31\u5982\u8001\u5e08\u6240\u8bf4\u7684\uff1a\u201c\u7a33\u56fa\u7684MVC\u6846\u67b6\u7ecf\u5f97\u8d77\u4efb\u610f\u62d3\u5c55\u201d\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u8c08\u8c08Unity\u4e2d\u7684MVC\u67b6\u6784: M(Model): Unity\u4e2d\uff0cModel\u5c31\u662f\u6e38\u620f\u573a\u666f\u4e2dGameObject\u3001\u548c\u5b83\u4eec\u7684\u5173\u7cfb\u4ee5\u53ca\u540e\u53f0\u7684\u6570\u636e\u6a21\u578b(\u6bd4\u5982\u7528\u6237\u4fe1\u606f\u7b49)\uff0c\u5b83\u4eec\u90fd\u53d7\u5230\u76f8\u5e94\u7684Controller\u7684\u63a7\u5236 V(View): View\u8fd9\u90e8\u5206\u5728\u6e38\u620f\u4e2d\u8d77\u5230\u7684\u662f\u4e0e\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\u7684\u529f\u80fd\uff0c\u5b83\u4eec\u8d1f\u8d23\u5411\u7528\u6237\u6218\u672f\u6e38\u620f\u7ed3\u679c\uff0c\u5904\u7406GUI\u4e8b\u4ef6\u5e76\u901a\u8fc7IUserAction\u63a5\u53e3\u6765\u4e0eController\u8fdb\u884c\u4ea4\u4e92\u3002 C(Controller): Controller\u63a7\u5236\u7740\u6e38\u620f\u573a\u666f\u4e2d\u6240\u6709\u7684\u5bf9\u8c61\uff0c\u5176\u8d1f\u8d23\u63a5\u6536\u6765\u81eaView\u7684\u7528\u6237\u7684\u6307\u4ee4\u5e76\u6839\u636e\u7528\u6237\u8f93\u5165\u7684\u6307\u4ee4\uff0c\u66f4\u65b0Models\u4ee5\u53ca\u66f4\u65b0View\u7684\u72b6\u6001\uff0c\u5176\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u8fde\u63a5Model\u4e0eView\u7684\u6865\u6881\u3002","title":"Unity\u4e2d\u7684MVC\u67b6\u6784"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#uml","text":"\u5728\u4e86\u89e3\u4e86Unity\u4e2dMVC\u7684\u57fa\u672c\u67b6\u6784\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u8fdb\u884c\u4e0b\u9762\u7684\u5f00\u53d1\u4e86 \u6309\u7167\u9898\u76ee\u8981\u6c42\u7684MVC\u7ed3\u6784\uff0c\u5206\u6790\u6e38\u620f\u7684\u57fa\u672c\u7ed3\u6784\uff0c\u5f97\u5230\u57fa\u672c\u7684UML\u56fe\u7684\u7ed3\u6784\u5982\u4e0b:","title":"\u9879\u76eeUML\u56fe"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#_5","text":"","title":"\u5bf9\u5404\u6a21\u5757\u5206\u5757\u8fdb\u884c\u5f00\u53d1"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#gamedirector","text":"\u9996\u5148\uff0c\u6211\u4eec\u6765\u5f00\u53d1\u62c5\u8d1f\u7740\u4f17\u591a\u804c\u8d23\u7684GameDirector\uff0c\u5728\u6e38\u620f\u91cc\u9762\uff0c\u5bfc\u6f14(Director)\u7684\u804c\u8d23\u5927\u81f4\u5982\u4e0b: \u83b7\u53d6\u5f53\u524d\u6e38\u620f\u7684\u573a\u666f \u63a7\u5236\u573a\u666f\u8fd0\u884c\u3001\u5207\u6362\u3001\u5165\u6808\u4e0e\u51fa\u6808\uff0c\u6682\u505c\u3001\u6062\u590d\u3001\u9000\u51fa \u7ba1\u7406\u6e38\u620f\u5168\u5c40\u72b6\u6001 \u8bbe\u5b9a\u6e38\u620f\u7684\u914d\u7f6e \u8bbe\u5b9a\u6e38\u620f\u5168\u5c40\u89c6\u56fe \u7531\u4e0a\u6211\u4eec\u53ef\u77e5\uff0cGameDirector\u5bf9\u4e8e\u4e00\u4e2a\u6e38\u620f\u662f\u591a\u4e48\u7684\u91cd\u8981\uff0c\u4f46\u662f\uff0c\u5728\u6211\u4eec\u8fd9\u6b21\u7684\u5c0f\u9879\u76ee\u4e2d\uff0c\u5b83\u7684\u804c\u8d23\u6ca1\u6709\u90a3\u4e48\u591a\uff0c\u5b83\u5728\u8fd9\u6b21\u7684\u9879\u76ee\u4e2d\u4e3b\u8981\u8d1f\u8d23\u7684\u662f\u83b7\u53d6\u5f53\u524d\u6e38\u620f\u573a\u666f\uff0c\u5176\u4ee3\u7801\u5982\u4e0b: public class GameDirector : System . Object { private static GameDirector _instance ; public ISceneController currentSceneController { get ; set ; } public bool running { set ; get ; } public static GameDirector getInstance () { if ( _instance == null ) { _instance = new GameDirector (); return _instance ; } return _instance ; } public int getFPS () { return Application . targetFrameRate ; } public void setFPS ( int fps ) { Application . targetFrameRate = fps ; } } Director\u5728\u8fd0\u884c\u65f6\u53ea\u4f1a\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5728\u8fd0\u884c\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5176\u5e94\u7528\u4e86\u5355\u4f8b\u6a21\u5f0f\u4fdd\u8bc1\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u751f\u6210\uff0c\u65b9\u4fbf\u4e86\u7c7b\u4e4b\u95f4\u7684\u4e8b\u4ef6\u901a\u4fe1\uff0c\u65b9\u4fbf\u4e86MVC\u7684\u5b9e\u73b0\u3002 Director\u4f5c\u4e3a\u6e38\u620f\u6700\u4e3a\u9ad8\u5c42\u7684Controller\uff0c\u5176\u4e0d\u5177\u4f53\u7684\u63a7\u5236\u6e38\u620f\u4e2d\u7684\u4efb\u4e00\u5bf9\u8c61\uff0c\u5176\u901a\u8fc7\u5bf9currentSceneController\u7684\u7ef4\u62a4\uff0c\u628a\u63a7\u5236\u6e38\u620f\u5bf9\u8c61\u7684\u4efb\u52a1\u4ea4\u7ed9\u4e0d\u540c\u7684SceneController\u3002","title":"GameDirector"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#iscenecontroller","text":"ISceneController\u7684\u4ee3\u7801\u5982\u4e0b //interface of Scene public interface ISceneController { void genGameObjects (); } ISCeneController\u662f\u6e38\u620f\u4e2d\u7684\u573a\u666f\u7ba1\u7406\u5668\uff0c\u4fd7\u79f0\u573a\u8bb0\uff0c\u5176\u4e3b\u8981\u804c\u8d23\u5982\u4e0b: \u7ba1\u7406\u6e38\u620f\u5728\u8be5\u6e38\u620f\u573a\u666f\u4e2d\u7684\u6240\u6709\u7684\u6e38\u620f\u5bf9\u8c61 \u534f\u8c03\u6e38\u620f\u5bf9\u8c61\u3001\u6e38\u620f\u5bf9\u8c61\u7ba1\u7406\u5668(GameObjectControllers)\u4e4b\u95f4\u7684\u901a\u4fe1 \u54cd\u5e94\u5916\u90e8\u8f93\u5165\u4e8b\u4ef6 \u7ba1\u7406\u8be5\u6e38\u620f\u573a\u666f\u7684\u6240\u6709\u7684\u89c4\u5219 \u7ba1\u7406\u4e00\u4e9b\u5176\u4ed6\u7684\u4e1c\u897f \u8be5\u7edf\u4e00\u7684\u63a5\u53e3\u7684\u5b9e\u73b0\u6b63\u662fGameDirector\u5bf9\u5404\u4e2a\u6e38\u620f\u573a\u666f\u7ba1\u7406\u7684\u5173\u952e\uff0c\u4ed6\u662f\u5bfc\u6f14\u63a7\u5236\u573a\u666f\u7684\u6e20\u9053\uff0cGameDirector\u901a\u8fc7\u5bf9\u4e8ecurrentSceneController\u7684\u7ef4\u62a4\uff0c\u53ef\u4ee5\u7b80\u5355\u5b9e\u73b0\u6e38\u620f\u573a\u666f\u7684\u5404\u79cd\u7ba1\u7406","title":"ISceneController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#iuseraction","text":"IUserAction\u4e2d\u4f53\u73b0\u4e86\u6e38\u620f\u7f16\u7a0b\u7684\u95e8\u9762\u6a21\u5f0f\uff0c\u6e38\u620f\u5916\u90e8\u4e0e\u4e00\u4e2a\u5b50\u7cfb\u7edf\u7684\u901a\u4fe1\u5fc5\u987b\u901a\u8fc7\u4e00\u4e2a\u7edf\u4e00\u7684\u95e8\u9762\u5bf9\u8c61\u8fdb\u884c\uff0c\u800c\u6211\u4eec\u73b0\u5728\u5b9e\u73b0\u7684IUserAction\u5c31\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u5bf9\u8c61,GUI\u7c7b\u901a\u8fc7IUserAction\u6765\u4e0eController\u8fdb\u884c\u901a\u4fe1\uff0c\u6211\u4eec\u901a\u8fc7\u5b9e\u73b0IUserAction\u63a5\u53e3\u6765\u5b9a\u4e49Controller\u4e0eGUI\u7684\u4ea4\u4e92\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u5b9e\u73b0Controller\u7c7b\u65f6\u53ea\u9700\u8981\u5b9e\u73b0IUserAction\u5bf9\u5e94\u7684\u63a5\u53e3\uff0c\u4ed6\u5c31\u53ef\u4ee5\u4e0e\u4efb\u610f\u4f7f\u7528IUserAction\u63a5\u53e3\u7684View\u5373GUI\u7c7b\u8c03\u7528\uff0cGUI\u7c7b\u4e5f\u662f\u53ea\u9700\u8c03\u7528\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u5373\u53ef\u5b9e\u73b0\u4e0eController\u7684\u901a\u4fe1, \u65b9\u4fbf\u4e86\u6211\u4eecMVC\u67b6\u6784\u7684\u5b9e\u73b0\u3002 \u5176\u5b9a\u4e49\u5982\u4e0b: public interface IUserAction { void restart (); void ToggleBoat (); void ClickCharacter ( ICharacterController chracter ); }","title":"IUserAction"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#usergui","text":"UserGUI\u7684\u4ee3\u7801\u5982\u4e0b: public class UserGUI : MonoBehaviour { public int status = 0 ; private IUserAction action ; GUIStyle headerStyle ; GUIStyle buttonStyle ; // Use this for initialization void Start () { action = GameDirector . getInstance (). currentSceneController as IUserAction ; headerStyle = new GUIStyle (); headerStyle . fontSize = 40 ; headerStyle . alignment = TextAnchor . MiddleCenter ; buttonStyle = new GUIStyle ( \"button\" ); buttonStyle . fontSize = 30 ; } // Update is called once per frame void OnGUI () { GUI . Label ( new Rect ( Screen . width / 2 - 100 , 10 , 200 , 50 ), \"Priests & Demons\" , headerStyle ); if ( status == 1 ) { GUI . Label ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 - 90 , 100 , 50 ), \"Gameover!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 65 , Screen . height / 2 , 140 , 70 ), \"Restart\" , buttonStyle )) { status = 0 ; action . restart (); } } else if ( status == 2 ) { GUI . Label ( new Rect ( Screen . width / 2 - 50 , Screen . height / 2 - 90 , 100 , 50 ), \"Win!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 70 , Screen . height / 2 , 140 , 70 ), \"Restart\" , buttonStyle )) { status = 0 ; action . restart (); } } } } \u7531\u4e0a\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cUserGUI\u53ea\u662f\u7b80\u5355\u5730\u6839\u636e\u6e38\u620f\u72b6\u6001\uff0c\u5bf9\u6e38\u620f\u4fe1\u606f\u7b49\u8fdb\u884c\u5c55\u793a\uff0c\u7136\u540e\u901a\u8fc7IUserAction\u4e0eController\u8fdb\u884c\u4ea4\u4e92\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u5728\u4e0a\u9762\u6240\u63d0\u5230\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728GUI\u4e2d\u8c03\u7528IUserAction\u4e2d\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fc5\u901f\u5b9e\u73b0\u5bf9\u6e38\u620f\u573a\u666f\u7684\u63a7\u5236\uff0c\u4e0b\u9762\u7684ClickGUI\u4e5f\u662f\u4e00\u6837","title":"UserGUI"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#clickgui","text":"\u8be5\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: public class ClickGUI : MonoBehaviour { IUserAction action ; ICharacterController character ; public void setController ( ICharacterController characterController ) { character = characterController ; } void Start () { action = GameDirector . getInstance (). currentSceneController as IUserAction ; } void OnMouseDown () { if ( gameObject . name == \"boat\" ) { action . ToggleBoat (); } else { action . ClickCharacter ( character ); } } } \u5728ClickGUI\u4e2d\uff0c\u6211\u4eec\u540c\u6837\u7528\u5230\u4e86IUserAction, ClickGUI\u76d1\u542c\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u7136\u540e\u901a\u8fc7IUserAction\u63d0\u4f9b\u7684\u7c7b\u4f3c\u79fb\u52a8\u8239\uff0c\u6e38\u620f\u89d2\u8272\u4e0a\u4e0b\u8239\u7684\u51fd\u6570\uff0c\u628a\u7528\u6237\u6307\u4ee4\u4f20\u7ed9Controller\u8fdb\u884c\u6267\u884c\u3002\u4ece\u800c\u5b9e\u73b0View\u548cController\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002","title":"ClickGUI"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#firstcontroller","text":"\u5728\u8be5\u6e38\u620f\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u6e38\u620f\u573a\u666f\uff0c\u6240\u4ee5 \u5176\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b: public class FirstController : MonoBehaviour , ISceneController , IUserAction { readonly Vector3 riverPosition = new Vector3 ( 0 , - 0.25f , 0 ); UserGUI userGUI ; public LandController rightLand ; public LandController leftLand ; public BoatController boat ; public ICharacterController [] characters ; void Awake () { GameDirector director = GameDirector . getInstance (); director . currentSceneController = this ; userGUI = gameObject . AddComponent < UserGUI >() as UserGUI ; genGameObjects (); } public void genGameObjects () { characters = new ICharacterController [ 6 ]; GameObject river = Instantiate ( Resources . Load ( \"Prefabs/River\" , typeof ( GameObject )), riverPosition , Quaternion . identity , null ) as GameObject ; river . name = \"river\" ; boat = new BoatController (); leftLand = new LandController (- 1 ); rightLand = new LandController ( 1 ); for ( int i = 0 ; i < 3 ; i ++) { ICharacterController priest = new ICharacterController ( 0 , \"priest\" + i ); priest . setPosition ( rightLand . getEmptyPosition ()); priest . getOnLand ( rightLand ); rightLand . getOnLand ( priest ); characters [ i ] = priest ; } for ( int i = 0 ; i < 3 ; i ++) { ICharacterController demon = new ICharacterController ( 1 , \"demon\" + i ); demon . setPosition ( rightLand . getEmptyPosition ()); demon . getOnLand ( rightLand ); rightLand . getOnLand ( demon ); characters [ i + 3 ] = demon ; } } public void ClickCharacter ( ICharacterController character ) { if ( userGUI . status != 0 || ! boat . available ()) { return ; } if ( character . isOnBoat ()) { LandController land ; if ( boat . getBoatPos () == 0 ) { land = leftLand ; } else { land = rightLand ; } boat . getOffBoat ( character . getName ()); character . MoveTo ( land . getEmptyPosition ()); character . getOnLand ( land ); land . getOnLand ( character ); } else { LandController land = character . getLandController (); if ( boat . getEmptyIndex () == - 1 ) return ; int landPos = land . getType (), boatPos = ( boat . getBoatPos () == 0 ) ? - 1 : 1 ; if ( landPos != boatPos ) return ; land . getOffLand ( character . getName ()); character . MoveTo ( boat . getEmptyPosition ()); character . getOnBoat ( boat , boat . getEmptyIndex ()); boat . getOnBoat ( character ); } userGUI . status = checkResult (); } public void ToggleBoat () { if ( userGUI . status != 0 || boat . isEmptty ()) return ; boat . Move (); userGUI . status = checkResult (); } int checkResult () { int leftPriests = 0 ; int rightPriests = 0 ; int leftDemons = 0 ; int rightDemons = 0 ; int [] leftStatus = leftLand . getStatus (); leftPriests += leftStatus [ 0 ]; leftDemons += leftStatus [ 1 ]; if ( leftPriests + leftDemons == 6 ) return 2 ; int [] rightStatus = rightLand . getStatus (); rightPriests += rightStatus [ 0 ]; rightDemons += rightStatus [ 1 ]; int [] boatStatus = boat . getBoatStatus (); if ( boat . getBoatPos () == 0 ) { leftPriests += boatStatus [ 0 ]; leftDemons += boatStatus [ 1 ]; } else { rightPriests += boatStatus [ 0 ]; rightDemons += boatStatus [ 1 ]; } if ( leftPriests > 0 && leftPriests < leftDemons ) return 1 ; if ( rightPriests > 0 && rightPriests < rightDemons ) return 1 ; return 0 ; } public void restart () { boat . reset (); leftLand . reset (); rightLand . reset (); for ( int i = 0 ; i < characters . Length ; i ++) characters [ i ]. reset (); } } FirstController\u7ee7\u627f\u4e86ISceneController\u548cIUserAction\u8fd9\u4e24\u4e2a\u63a5\u53e3\uff0c\u5e76\u5b9e\u73b0\u4e86\u5176\u91cc\u9762\u7684\u51fd\u6570\uff0c\u5176\u65e2\u53ef\u4ee5\u901a\u8fc7IUserAction\u4e0eView\u8fdb\u884c\u4ea4\u4e92\uff0c\u4e5f\u53ef\u4ee5\u5728LoadResources\u540e\uff0c\u901a\u8fc7GameObject\u7684Controller\u5bf9\u573a\u666f\u4e2d\u7684\u5404\u4e2aGameObject\u8fdb\u884c\u63a7\u5236\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u4ecb\u7ecd\u6e38\u620f\u4e2d\u6e38\u620f\u5bf9\u8c61\u7684Controller\u7684\u4e66\u5199 \u9996\u5148\uff0c\u8d2f\u7a7f\u7740\u6211\u4eec\u8fd9\u6574\u4e00\u4e2a\u6e38\u620f\u7684\u5c31\u662fGameObject\u7684\u79fb\u52a8\u5566\uff01\u6240\u4ee5\u6211\u5148\u8bf4\u4e00\u4e0b\u62bd\u8c61\u51fa\u6765\u7684Move\u7c7b\uff0c\u5176\u4ee3\u7801\u5982\u4e0b\uff1a public class Move : MonoBehaviour { readonly float speed = 20 ; int status ; //0: \u9759\u6b62, 1: \u5904\u4e8e\u524d\u6bb5\u79fb\u52a8, 2: \u5904\u4e8e\u540e\u6bb5\u79fb\u52a8 Vector3 middle ; Vector3 destination ; void Update () { if ( status == 1 ) { this . transform . position = Vector3 . MoveTowards ( this . transform . position , middle , Time . deltaTime * speed ); if ( transform . position == middle ) { status = 2 ; } } else if ( status == 2 ) { this . transform . position = Vector3 . MoveTowards ( this . transform . position , destination , Time . deltaTime * speed ); if ( this . transform . position == destination ) { status = 0 ; } } } public int getStatus () { return status ; } public void moveTo ( Vector3 _destination ) { destination = _destination ; middle = _destination ; if ( _destination . y == this . transform . position . y ) { status = 2 ; return ; } else if ( _destination . y < this . transform . position . y ) { middle . y = transform . position . y ; } else { middle . x = transform . position . x ; } status = 1 ; } public void reset () { status = 0 ; } } \u4e3a\u4e86\u8ba9\u7269\u4f53\u4e0d\u8981\u76f4\u63a5\u7a7f\u8fc7land\u7684\u5899\u4f53\uff0c\u5f53character\u4e0a\u8239\u65f6\uff0c\u5148\u628a\u7269\u4f53\u79fb\u52a8\u5230destination\u7684\u5bf9\u5e94\u7684x\u5750\u6807\uff0c\u7136\u540e\u518d\u628a\u7269\u4f53\u79fb\u52a8\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u5f53charcter\u4e0b\u8239\u65f6\uff0c\u5148\u628a\u7269\u4f53\u79fb\u52a8\u5230destination\u7684\u5bf9\u5e94\u7684y\u5750\u6807\uff0c\u7136\u540e\u518d\u628a\u7269\u4f53\u79fb\u52a8\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e,\u8fd9\u6837\u4fdd\u8bc1\u4e86\u7269\u4f53\u4e0d\u4f1a\u7a7f\u8d8a\u5899\u4f53\u8fdb\u884c\u79fb\u52a8\uff0c\u4e14\u5b9e\u73b0\u65b9\u5f0f\u8f83\u4e3a\u7b80\u5355\u3002","title":"FirstController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#icharactercontroller","text":"\u56e0\u4e3a\u7267\u5e08\u4e0e\u6076\u9b54\u7684\u52a8\u4f5c\u7b49\u90fd\u662f\u4e00\u6837\u7684\uff0c\u5c31\u53ea\u662f\u5916\u5f62\u3001\u7c7b\u578b\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u628a\u5176\u62bd\u8c61\u4e3a\u4e00\u4e2aController,\u901a\u8fc7type\u533a\u5206\u5b83\u4eec \u5176\u4ee3\u7801\u5982\u4e0b: public class ICharacterController { readonly GameObject character ; readonly Move moveAction ; readonly int type ; //0: Priest, 1: Demon readonly ClickGUI clickGUI ; bool onBoat ; LandController landController ; public ICharacterController ( int chracterType , string name ) { if ( chracterType == 0 ) { this . character = Object . Instantiate ( Resources . Load ( \"Prefabs/Priest\" , typeof ( GameObject )), Vector3 . zero , Quaternion . identity , null ) as GameObject ; this . type = 0 ; } else { this . character = Object . Instantiate ( Resources . Load ( \"Prefabs/Demon\" , typeof ( GameObject )), Vector3 . zero , Quaternion . identity , null ) as GameObject ; this . type = 1 ; } character . name = name ; moveAction = character . AddComponent ( typeof ( Move )) as Move ; clickGUI = character . AddComponent ( typeof ( ClickGUI )) as ClickGUI ; clickGUI . setController ( this ); } public string getName () { return character . name ; } public void setPosition ( Vector3 pos ) { character . transform . position = pos ; } public void MoveTo ( Vector3 destination ) { moveAction . moveTo ( destination ); } public int getType () { return type ; } public void getOnBoat ( BoatController boatController , int pos ) { landController = null ; if ( pos == 0 ) { character . transform . rotation = Quaternion . AngleAxis ( 90 , Vector3 . up ); } else { character . transform . rotation = Quaternion . AngleAxis ( 270 , Vector3 . up ); } character . transform . parent = boatController . getBoat (). transform ; onBoat = true ; } public void getOnLand ( LandController land ) { landController = land ; if ( land . getType () == - 1 ) { character . transform . rotation = Quaternion . AngleAxis ( 90 , Vector3 . up ); } else { character . transform . rotation = Quaternion . AngleAxis ( 270 , Vector3 . up ); } character . transform . parent = null ; onBoat = false ; } public bool isOnBoat () { return onBoat ; } public LandController getLandController () { return landController ; } public void reset () { moveAction . reset (); landController = ( GameDirector . getInstance (). currentSceneController as FirstController ). rightLand ; getOnLand ( landController ); setPosition ( landController . getEmptyPosition ()); landController . getOnLand ( this ); } } CharcterController\u7c7b\u7684\u5b9e\u73b0\u5341\u5206\u7b80\u5355\uff0c\u5c31\u662f\u6839\u636etype\u5bfc\u5165\u9884\u5236\uff0c\u7136\u540e\u518d\u5b9e\u73b0\u4e0a\u8239\uff0c\u4e0a\u5cb8\uff0c\u91cd\u7f6e\u4ee5\u53ca\u4e00\u4e9b\u5176\u4ed6\u7684get, set\u51fd\u6570\u5c31\u5b8c\u6210\u4e86\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4ee5\u4e0a\u4ee3\u7801\u7684\u5b9e\u73b0\u3002","title":"ICharacterController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#boatcontroller","text":"BoatController\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: public class BoatController { readonly GameObject boat ; readonly Move moveAction ; readonly Vector3 right = new Vector3 ( 3.5f , 0 , 0 ); readonly Vector3 left = new Vector3 (- 3.5f , 0 , 0 ); readonly Vector3 [] right_positions ; readonly Vector3 [] left_positions ; int status ; // 0: left, 1: right ICharacterController [] characterOnBoat = new ICharacterController [ 2 ]; public BoatController () { status = 1 ; right_positions = new Vector3 [] { new Vector3 ( 2.5F , 0.2F , 0 ), new Vector3 ( 4.5F , 0.2F , 0 ) }; left_positions = new Vector3 [] { new Vector3 (- 4.5F , 0.2F , 0 ), new Vector3 (- 2.5F , 0.2F , 0 ) }; boat = Object . Instantiate ( Resources . Load ( \"Prefabs/Boat\" , typeof ( GameObject )), right , Quaternion . identity , null ) as GameObject ; boat . name = \"boat\" ; moveAction = boat . AddComponent ( typeof ( Move )) as Move ; boat . AddComponent ( typeof ( ClickGUI )); } public void Move () { if ( status == 1 ) { moveAction . moveTo ( left ); } else { moveAction . moveTo ( right ); } status = 1 - status ; } public int getEmptyIndex () { for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] == null ) { return i ; } } return - 1 ; } public Vector3 getEmptyPosition () { int index = getEmptyIndex (); if ( status == 0 ) { return left_positions [ index ]; } else { return right_positions [ index ]; } } public bool isEmptty () { for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] != null ) { return false ; } } return true ; } public void getOnBoat ( ICharacterController character ) { characterOnBoat [ getEmptyIndex ()] = character ; } public ICharacterController getOffBoat ( string name ) { for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] != null && characterOnBoat [ i ]. getName () == name ) { ICharacterController character = characterOnBoat [ i ]; characterOnBoat [ i ] = null ; return character ; } } return null ; } public GameObject getBoat () { return boat ; } public int getBoatPos () { return status ; } public int [] getBoatStatus () { int [] boatStatus = { 0 , 0 }; for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] == null ) continue ; boatStatus [ characterOnBoat [ i ]. getType ()]++; } return boatStatus ; } // 0: Priests, 1: Demon public bool available () { return ( moveAction . getStatus () == 0 ); } public void reset () { moveAction . reset (); if ( status == 0 ) { Move (); } characterOnBoat = new ICharacterController [ 2 ]; } } Boat\u7684\u5b9e\u73b0\u4e5f\u5dee\u4e0d\u591a\uff0c\u53ea\u9700\u8981\u5b9e\u73b0\u521d\u59cb\u5316\u3001\u79fb\u52a8(ToggleBoat),character\u4e0a\u8239\u3001\u4e0b\u8239\u76f8\u5173\u7684\u51fd\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\u3002","title":"BoatController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#landcontroller","text":"LandController\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: public class LandController { readonly GameObject land ; readonly Vector3 leftPos = new Vector3 (- 8.5f , 0f , 0f ); readonly Vector3 rightPos = new Vector3 ( 8.5f , 0f , 0f ); readonly Vector3 [] landPositions ; readonly int type ; // 1:right, -1: left ICharacterController [] characterOnLand ; public LandController ( int _type ) { landPositions = new Vector3 [] { new Vector3 ( 6F , 0.5F , 0 ), new Vector3 ( 7F , 0.5F , 0 ), new Vector3 ( 8F , 0.5F , 0 ), new Vector3 ( 9F , 0.5F , 0 ), new Vector3 ( 10F , 0.5F , 0 ), new Vector3 ( 11F , 0.5F , 0 ) }; characterOnLand = new ICharacterController [ 6 ]; type = _type ; if ( type == 1 ) { land = Object . Instantiate ( Resources . Load ( \"Prefabs/Land\" , typeof ( GameObject )), rightPos , Quaternion . identity , null ) as GameObject ; land . name = \"rightLand\" ; } else { land = Object . Instantiate ( Resources . Load ( \"Prefabs/Land\" , typeof ( GameObject )), leftPos , Quaternion . identity , null ) as GameObject ; land . name = \"leftLand\" ; } } public Vector3 getEmptyPosition () { Vector3 pos = landPositions [ getEmptyIndex ()]; pos . x *= type ; return pos ; } public int getEmptyIndex () { for ( int i = 0 ; i < characterOnLand . Length ; i ++) { if ( characterOnLand [ i ] == null ) return i ; } return - 1 ; } public void getOnLand ( ICharacterController chracter ) { characterOnLand [ getEmptyIndex ()] = chracter ; } public ICharacterController getOffLand ( string name ) { for ( int i = 0 ; i < characterOnLand . Length ; i ++) { if ( characterOnLand [ i ] != null && characterOnLand [ i ]. getName () == name ) { ICharacterController tmp = characterOnLand [ i ]; characterOnLand [ i ] = null ; return tmp ; } } return null ; } public int getType () { return type ; } public int [] getStatus () { int [] status = { 0 , 0 }; for ( int i = 0 ; i < characterOnLand . Length ; i ++) { if ( characterOnLand [ i ] == null ) continue ; status [ characterOnLand [ i ]. getType ()]++; } return status ; } // 0: priests, 1: Demon public void reset () { characterOnLand = new ICharacterController [ 6 ]; } } landController\u7684\u5b9e\u73b0\u548c\u4e0a\u9762\u7684Controller\u4e5f\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5b9e\u73b0\u521d\u59cb\u5316\uff0c\u4e0a\u5cb8\uff0c\u4e0b\u5cb8\u7684\u76f8\u5173\u51fd\u6570\u5c31\u5b8c\u6210\u4e86\u3002","title":"LandController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#_6","text":"","title":"\u5b8c\u6574\u6548\u679c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#mvc","text":"MVC\u67b6\u6784\u4f5c\u4e3a\u4e00\u79cd\u7ecf\u5178\u7684\u5f00\u53d1\u6a21\u5f0f\uff0c\u662f\u5173\u6ce8\u70b9\u5206\u79bb\u7684\u4e00\u4e2a\u5341\u5206\u7ecf\u5178\u7684\u4f53\u73b0\u3002\u6211\u4eec\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\uff0c\u5728\u5b8c\u6210\u4e00\u4e9b\u56e2\u961f\u9879\u76ee\u65f6\u4e5f\u6709\u4f7f\u7528\u5176\u4f5c\u4e3a\u57fa\u672c\u67b6\u6784\u8fdb\u884c\u5f00\u53d1\u3002 \u9879\u76ee\u4f7f\u7528MVC\u67b6\u6784\u5206\u79bb\u7684\u8bbe\u8ba1\uff0c \u7ed9\u6bcf\u4e00\u4e2a\u90e8\u5206\u8d4b\u4e88\u5355\u4e00\u7684\u804c\u8d23 \uff0c\u4f7f\u5f97\u6211\u4eec\u5728\u5f00\u53d1\u4e00\u4e2a\u6a21\u5757\u65f6\u4e0d\u7528\u592a\u591a\u5730\u5173\u6ce8\u6240\u4f7f\u7528\u5230\u7684\u6a21\u5757\u7684\u5185\u90e8\u5b9e\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53bb\u8c03\u7528\u76f8\u5e94\u7684\u63a5\u53e3\u53bb\u5b9e\u73b0\u81ea\u5df1\u60f3\u5b9e\u73b0\u7684\u4e1c\u897f\uff0c \u4f7f\u5f97\u6211\u4eec\u7684\u6e38\u620f\u6709\u7740\u66f4\u4f4e\u7684\u8026\u5408\u5ea6\uff0c\u66f4\u65b9\u4fbfDebug\uff0c\u66f4\u65b9\u4fbf\u5f00\u53d1\u3001\u8fed\u4ee3 \uff0c\u5c31\u4ee5\u6211\u4eec\u4e0a\u9762\u7684\u7a0b\u5e8f\u4e3a\u4f8b\uff0c\u5728\u5f00\u53d1FirstSceneController\u65f6\uff0c\u6211\u4eec\u4e0d\u7528\u600e\u4e48\u5173\u6ce8GameObject\u7684Controller\u5185\u90e8\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\uff0c\u5b83\u7ed9\u4e86\u6211\u4eec\u4ec0\u4e48\u63a5\u53e3\uff0c\u8fd9\u4e2a\u63a5\u53e3\u6709\u7740\u4ec0\u4e48\u529f\u80fd\uff0c\u77e5\u9053\u4e86\u4e4b\u540e\u6211\u4eec\u5728FirstSceneController\u4e2d\u76f4\u63a5\u8c03\u7528\u63a5\u53e3\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e0d\u4ec5\u8ba9\u4e2a\u4eba\u5f00\u53d1\u66f4\u6709\u6761\u7406\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u591a\u4eba\u534f\u4f5c\u5f00\u53d1\u66f4\u52a0\u4fbf\u5229\uff0c\u96be\u4ee5\u60f3\u8c61\u4e00\u4e2a\u9ad8\u8026\u5408\u5ea6\u7684\u4e2d\u5927\u578b\u8f6f\u4ef6\u662f\u600e\u4e48\u8fdb\u884c\u591a\u4eba\u534f\u4f5c\u5f00\u53d1\u7684\uff0c\u8fd9\u6837\u7684\u8f6f\u4ef6\u4e00\u4e2a\u4eba\u5f00\u53d1\u90fd\u96be\u53d7\uff0c\u4f55\u51b5\u662f\u591a\u4eba\u3002 \u603b\u4e4b\uff0c\u5728\u4e00\u4e9b\u4e2d\u5927\u578b\u9879\u76ee\u4e2d\uff0c\u4f7f\u7528MVC\u67b6\u6784\u8fdb\u884c\u5f00\u53d1 \u8f6f\u4ef6\u8026\u5408\u5ea6\u4f4e \u6a21\u5757\u6613\u590d\u7528 \u751f\u4ea7\u6548\u7387\u9ad8(\u5bf9\u4e8e\u4e2d\u5927\u578b\u8f6f\u4ef6) \u6613\u4e8e\u7ef4\u62a4\u3001\u8fed\u4ee3 \u6709\u5229\u8f6f\u4ef6\u5de5\u7a0b\u5316\u7ba1\u7406 \u4f46\u662f\uff0cMVC\u67b6\u6784\u4e0d\u662f\u666e\u9002\u7684\uff0c\u5728\u4e00\u4e9b\u8f83\u5c0f\u89c4\u6a21\u7684\u6e38\u620f\u4e2d\uff0c\u4e25\u683c\u4f7f\u7528MVC\u67b6\u6784\u5bf9\u4e8e\u5f00\u53d1\u7684\u6548\u7387\u662f\u6709\u4e00\u5b9a\u5f71\u54cd\u7684\uff0c\u5c31\u50cf\u6211\u4eec\u8fd9\u6b21\u7684\u4f5c\u4e1a\ud83c\udf1a(\u9003\u3002\u4e0d\u8fc7\uff0c\u901a\u8fc7\u8fd9\u4e00\u6b21\u4e25\u683c\u4f7f\u7528MVC\u67b6\u6784\u5f00\u53d1\u7684\u4f5c\u4e1a\uff0c\u6211\u4eec\u5bf9\u4e8eMVC\u6709\u4e86\u57fa\u672c\u7684\u4e86\u89e3\uff0c\u65b9\u4fbf\u4e86\u6211\u4eec\u4e4b\u540e\u4f7f\u7528MVC\u67b6\u6784\u5bf9\u5176\u4ed6\u4e00\u4e9b\u66f4\u5927\u7684\u6e38\u620f\u8fdb\u884c\u5f00\u53d1\u3002","title":"\u603b\u7ed3\uff08\u5bf9MVC\u67b6\u6784\u5f00\u53d1\u6e38\u620f\u7684\u4f53\u4f1a\uff09"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb04-\u6e38\u620f\u5bf9\u8c61\u4e0e\u56fe\u5f62\u57fa\u7840/","text":"Homework3\u64cd\u4f5c\u4e0e\u603b\u7ed3 \u53c2\u8003 Fantasy Skybox FREE \u6784\u5efa\u81ea\u5df1\u7684\u6e38\u620f\u573a\u666f SkyBox\u7684\u5236\u4f5c SkyBox\u7684\u5236\u4f5c\u5176\u5b9e\u5341\u5206\u7b80\u5355\uff0c\u9996\u5148\u6211\u4eec\u8981\u5148\u4f7f\u75286\u5f20\u56fe\u7247\u5236\u4f5c\u4e00\u4e2a6 sided Skybox\u7684Material 1. \u5148\u521b\u5efa\u4e00\u4e2aMaterial 2. \u9009\u62e9Skybox->6 sided\uff0c\u62d6\u5165\u516d\u5f20\u5bf9\u5e94\u7684\u8d34\u56fe\uff0c\u7ed3\u679c\u5982\u4e0b 3. \u7136\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9\u6211\u4eec\u7684\u6444\u50cf\u673a\u6dfb\u52a0\u4e00\u4e2aSkybox\u7136\u540e\u628a\u6211\u4eec\u65b0\u5efa\u7684\u8fd9\u4e2aMaterial\u62d6\u7ed9\u5b83\u5566 \u5230\u8fd9\u91cc\uff0cSkyBox\u7684\u5236\u4f5c\u5c31\u5b8c\u6210\u4e86,Game\u4e2d\u7684\u7ed3\u679c\u5982\u4e0b \u5730\u5f62(Terrain)\u7684\u7b80\u5355\u5236\u4f5c \u9996\u5148\uff0c\u65b0\u5efa\u4e00\u4e2a3D Object->Terrain \u4e00\u5f00\u59cb\u5f97\u5230\u7684\u5c31\u662f\u4e0a\u9762\u7684\u7a7a\u767d\u7684\u4e00\u4e2a\u5730\u5f62\uff0c\u9996\u5148\uff0c\u4e3a\u4e86\u771f\u5b9e\uff0c\u6211\u4eec\u5148\u7ed9\u4ed6\u52a0\u4e0a\u4e00\u4e2aTexture,\u52a0\u4e0aTexture\u4e4b\u540e\uff0c\u5730\u5f62\u7684\u6837\u5b50\u5c31\u53d8\u6210\u4e86\u8fd9\u6837 \u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u5de5\u5177\u7bb1\u7ed9\u5b83\u52a0\u4e0a\u4e00\u7cfb\u5217\u7684\u5730\u5f62\u4e86\uff0c\u5de5\u5177\u7bb1\u7684\u5177\u4f53\u529f\u80fd\u5982\u4e0b \u901a\u8fc7\u8fd9\u4e2a\u5de5\u5177\u7bb1\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u9020\u51fa\u4e00\u7cfb\u5217\u7684\u5730\u5f62\u5566\uff0c\u8fd9\u91cc\u6211\u7b80\u5355\u5730\u521b\u5efa\u4e86\u4e00\u4e2a\u5c71\u5761\u548c\u79cd\u4e86\u51e0\u68f5\u6811\uff0cScene\u4e2d\u7684\u7ed3\u679c\u5982\u4e0b Game\u4e2d\u52a0\u4e0aSkyBox\u7684\u7ed3\u679c\u5982\u4e0b, \u8fd9\u91cc\u7684SkyBox\u7528\u7684\u662fTGU Skybox Pack\u91cc\u7684\u4e00\u4e2aSkyBox \u5199\u4e00\u4e2a\u7b80\u5355\u7684\u603b\u7ed3\uff0c\u603b\u7ed3\u6e38\u620f\u5bf9\u8c61\u7684\u4f7f\u7528 \u6b63\u5982\u6211\u4eec\u7b2c\u4e00\u6b21\u4f5c\u4e1a\u6240\u8bf4\u7684\uff0c\u6e38\u620f\u5bf9\u8c61\u51fa\u73b0\u5728\u6e38\u620f\u573a\u666f(Scene)\u4e2d\uff0c\u662f\u81ea\u8eab\u5c5e\u6027(i.e Tag\u3001Layer)\u3001Components\u3001\u8d44\u6e90\u6574\u5408\u5728\u4e00\u8d77\u7684\u7ed3\u679c\u3002 \u6211\u4eec\u901a\u8fc7 1. \u5bf9\u4e8e\u5bf9\u8c61\u81ea\u8eab\u5c5e\u6027\u7684\u4fee\u6539 2. \u7ed9\u6e38\u620f\u5bf9\u8c61\u6dfb\u52a0\u4e0a\u6240\u9700\u7684Components(i.e Transform, Collider, \u5404\u79cdScripts...)\uff0c\u5e76\u5bf9\u76f8\u5e94\u7684Component\u7684\u5c5e\u6027\u8fdb\u884c\u66f4\u6539\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8c03\u6574\u6e38\u620f\u5bf9\u8c61\u7684\u5f62\u72b6\u3001\u78b0\u649e\u5668\u7b49\u7684\u7279\u6027\u3001\u7ed9\u6e38\u620f\u5bf9\u8c61\u52a0\u4e0a\u5404\u79cd\u5404\u6837\u7684\u529f\u80fd\u3002 \u8bf4\u5230\u6e38\u620f\u5bf9\u8c61\u7684\u4f7f\u7528\uff0c\u80af\u5b9a\u5c31\u5c11\u4e0d\u4e86\u6e38\u620f\u5bf9\u8c61\u7684\u52a0\u8f7d\u5566\u3002\u6211\u4eec\u4e0d\u9700\u8981\u4e00\u5f00\u59cb\u5c31\u628a\u6240\u6709\u7684\u6e38\u620f\u5bf9\u8c61\u52a0\u5728\u6e38\u620f\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6e38\u620f\u8fd0\u884c\u4e2d\u901a\u8fc7Controller\u5bf9\u4e8e\u5b9e\u4f8b\u5316\u65b9\u6cd5Instantiate\u7684\u8c03\u7528\uff0c\u52a8\u6001\u5730\u628a\u6e38\u620f\u5bf9\u8c61\u52a0\u8f7d\u5230\u6e38\u620f\u573a\u666f\u4e2d\u3002","title":"\u5b66\u4e60\u7b14\u8bb04-\u6e38\u620f\u5bf9\u8c61\u4e0e\u56fe\u5f62\u57fa\u7840"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb04-\u6e38\u620f\u5bf9\u8c61\u4e0e\u56fe\u5f62\u57fa\u7840/#homework3","text":"","title":"Homework3\u64cd\u4f5c\u4e0e\u603b\u7ed3"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb04-\u6e38\u620f\u5bf9\u8c61\u4e0e\u56fe\u5f62\u57fa\u7840/#fantasy-skybox-free","text":"SkyBox\u7684\u5236\u4f5c SkyBox\u7684\u5236\u4f5c\u5176\u5b9e\u5341\u5206\u7b80\u5355\uff0c\u9996\u5148\u6211\u4eec\u8981\u5148\u4f7f\u75286\u5f20\u56fe\u7247\u5236\u4f5c\u4e00\u4e2a6 sided Skybox\u7684Material 1. \u5148\u521b\u5efa\u4e00\u4e2aMaterial 2. \u9009\u62e9Skybox->6 sided\uff0c\u62d6\u5165\u516d\u5f20\u5bf9\u5e94\u7684\u8d34\u56fe\uff0c\u7ed3\u679c\u5982\u4e0b 3. \u7136\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9\u6211\u4eec\u7684\u6444\u50cf\u673a\u6dfb\u52a0\u4e00\u4e2aSkybox\u7136\u540e\u628a\u6211\u4eec\u65b0\u5efa\u7684\u8fd9\u4e2aMaterial\u62d6\u7ed9\u5b83\u5566 \u5230\u8fd9\u91cc\uff0cSkyBox\u7684\u5236\u4f5c\u5c31\u5b8c\u6210\u4e86,Game\u4e2d\u7684\u7ed3\u679c\u5982\u4e0b \u5730\u5f62(Terrain)\u7684\u7b80\u5355\u5236\u4f5c \u9996\u5148\uff0c\u65b0\u5efa\u4e00\u4e2a3D Object->Terrain \u4e00\u5f00\u59cb\u5f97\u5230\u7684\u5c31\u662f\u4e0a\u9762\u7684\u7a7a\u767d\u7684\u4e00\u4e2a\u5730\u5f62\uff0c\u9996\u5148\uff0c\u4e3a\u4e86\u771f\u5b9e\uff0c\u6211\u4eec\u5148\u7ed9\u4ed6\u52a0\u4e0a\u4e00\u4e2aTexture,\u52a0\u4e0aTexture\u4e4b\u540e\uff0c\u5730\u5f62\u7684\u6837\u5b50\u5c31\u53d8\u6210\u4e86\u8fd9\u6837 \u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u5de5\u5177\u7bb1\u7ed9\u5b83\u52a0\u4e0a\u4e00\u7cfb\u5217\u7684\u5730\u5f62\u4e86\uff0c\u5de5\u5177\u7bb1\u7684\u5177\u4f53\u529f\u80fd\u5982\u4e0b \u901a\u8fc7\u8fd9\u4e2a\u5de5\u5177\u7bb1\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u9020\u51fa\u4e00\u7cfb\u5217\u7684\u5730\u5f62\u5566\uff0c\u8fd9\u91cc\u6211\u7b80\u5355\u5730\u521b\u5efa\u4e86\u4e00\u4e2a\u5c71\u5761\u548c\u79cd\u4e86\u51e0\u68f5\u6811\uff0cScene\u4e2d\u7684\u7ed3\u679c\u5982\u4e0b Game\u4e2d\u52a0\u4e0aSkyBox\u7684\u7ed3\u679c\u5982\u4e0b, \u8fd9\u91cc\u7684SkyBox\u7528\u7684\u662fTGU Skybox Pack\u91cc\u7684\u4e00\u4e2aSkyBox","title":"\u53c2\u8003 Fantasy Skybox FREE \u6784\u5efa\u81ea\u5df1\u7684\u6e38\u620f\u573a\u666f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb04-\u6e38\u620f\u5bf9\u8c61\u4e0e\u56fe\u5f62\u57fa\u7840/#_1","text":"\u6b63\u5982\u6211\u4eec\u7b2c\u4e00\u6b21\u4f5c\u4e1a\u6240\u8bf4\u7684\uff0c\u6e38\u620f\u5bf9\u8c61\u51fa\u73b0\u5728\u6e38\u620f\u573a\u666f(Scene)\u4e2d\uff0c\u662f\u81ea\u8eab\u5c5e\u6027(i.e Tag\u3001Layer)\u3001Components\u3001\u8d44\u6e90\u6574\u5408\u5728\u4e00\u8d77\u7684\u7ed3\u679c\u3002 \u6211\u4eec\u901a\u8fc7 1. \u5bf9\u4e8e\u5bf9\u8c61\u81ea\u8eab\u5c5e\u6027\u7684\u4fee\u6539 2. \u7ed9\u6e38\u620f\u5bf9\u8c61\u6dfb\u52a0\u4e0a\u6240\u9700\u7684Components(i.e Transform, Collider, \u5404\u79cdScripts...)\uff0c\u5e76\u5bf9\u76f8\u5e94\u7684Component\u7684\u5c5e\u6027\u8fdb\u884c\u66f4\u6539\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8c03\u6574\u6e38\u620f\u5bf9\u8c61\u7684\u5f62\u72b6\u3001\u78b0\u649e\u5668\u7b49\u7684\u7279\u6027\u3001\u7ed9\u6e38\u620f\u5bf9\u8c61\u52a0\u4e0a\u5404\u79cd\u5404\u6837\u7684\u529f\u80fd\u3002 \u8bf4\u5230\u6e38\u620f\u5bf9\u8c61\u7684\u4f7f\u7528\uff0c\u80af\u5b9a\u5c31\u5c11\u4e0d\u4e86\u6e38\u620f\u5bf9\u8c61\u7684\u52a0\u8f7d\u5566\u3002\u6211\u4eec\u4e0d\u9700\u8981\u4e00\u5f00\u59cb\u5c31\u628a\u6240\u6709\u7684\u6e38\u620f\u5bf9\u8c61\u52a0\u5728\u6e38\u620f\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6e38\u620f\u8fd0\u884c\u4e2d\u901a\u8fc7Controller\u5bf9\u4e8e\u5b9e\u4f8b\u5316\u65b9\u6cd5Instantiate\u7684\u8c03\u7528\uff0c\u52a8\u6001\u5730\u628a\u6e38\u620f\u5bf9\u8c61\u52a0\u8f7d\u5230\u6e38\u620f\u573a\u666f\u4e2d\u3002","title":"\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u603b\u7ed3\uff0c\u603b\u7ed3\u6e38\u620f\u5bf9\u8c61\u7684\u4f7f\u7528"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/","text":"Homework3\u7f16\u7a0b\u5b9e\u8df5 \u7267\u5e08\u4e0e\u9b54\u9b3c \u52a8\u4f5c\u5206\u79bb\u7248 \u5728\u4e0a\u4e00\u5468\u7684\u7f16\u7a0b\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u4e00\u4e2a\u5177\u6709MVC\u67b6\u6784\u7684\u7267\u5e08\u4e0e\u9b54\u9b3c\u7684\u7248\u672c\uff0c\u800c\u6211\u4eec\u8fd9\u5468\u7684\u4efb\u52a1\u5c31\u662f\u5b9e\u73b0\u4e00\u4e2a\u52a8\u4f5c\u7ba1\u7406\u5668\uff0c\u628a\u6211\u4eec\u4e0a\u5468\u5199\u5728GameObjectController\u548cSceneController\u91cc\u7684\u5bf9\u4e8eGameObject\u52a8\u4f5c\u7684\u5904\u7406\u5199\u51fa\u6765\uff0c\u901a\u8fc7\u4e00\u4e2aSceneActionManager\u7684\u5b9e\u4f8b\u6765\u7ba1\u7406\uff0c\u8ba9\u5176\u4e13\u95e8\u8d1f\u8d23GameObject\u7684\u52a8\u4f5c\u3002\u4e0b\u9762\u6211\u4eec\u6765\u8c08\u8c08\u52a8\u4f5c\u7ba1\u7406\u5668\u3002 \u9664\u4e86\u52a0\u5165\u52a8\u4f5c\u7ba1\u7406\u5668\u5916\u7684\u6539\u8fdb \u6839\u636e\u4e0a\u8bfe\u5b66\u5230\u7684\u5185\u5bb9\uff0c\u7ed9Camera\u52a0\u4e0a\u4e86SkyBox\uff0c\u7f8e\u5316\u4e86\u7a0b\u5e8f\u7684UI \u7ed9\u6e38\u620f\u6dfb\u52a0\u4e86\u5207\u6362\u89c6\u89d2\u7684\u529f\u80fd\uff0c\u73a9\u5bb6\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u559c\u597d\u5728\u5168\u5c40\u89c6\u89d2\u4ee5\u53ca\u8239\u53ea\u8ddf\u968f\u89c6\u89d2\u4e4b\u95f4\u4efb\u610f\u5207\u6362\uff0c\u6e38\u620f\u7684\u4f53\u9a8c\u66f4\u4f73 \u6e38\u620f\u6548\u679c \u5efa\u7acb\u52a8\u4f5c\u7ba1\u7406\u5668 \u5efa\u7acb\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u610f\u4e49 \u5728\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u7b80\u5355\u7684\u7267\u5e08\u4e0e\u6076\u9b54\u7684\u6e38\u620f\u4e2d\uff0c\u6211\u4e3a\u4e86\u907f\u514dFirstSceneController\u4e2d\u5bf9\u4e8e\u7269\u4f53\u79fb\u52a8\u64cd\u4f5c\u7684\u4ee3\u7801\u91cf\u8fc7\u591a\uff0c\u628a\u7269\u4f53\u7684\u52a8\u4f5c\u5c01\u88c5\u5728GameObjectController\u91cc\u9762\uff0c\u901a\u8fc7\u8fd9\u79cd\u505a\u6cd5\uff0cFirstSceneController\u7684\u4ee3\u7801\u91cf\u7684\u786e\u5f97\u5230\u4e86\u4e00\u5b9a\u7684\u51cf\u5c11\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u6211\u6bcf\u5199\u4e00\u4e2aGameObjectController\u6211\u5c31\u8981\u591a\u5199\u4e00\u4e2a\u7269\u4f53\u8fd0\u52a8\u7684\u51fd\u6570\uff0c\u4e00\u65e6\u9700\u8981\u79fb\u52a8\u7684GameObject\u591a\u8d77\u6765\uff0c\u53ef\u80fd\u5197\u4f59\u7684\u4ee3\u7801\u91cf\u5c31\u4f1a\u5927\u91cf\u589e\u591a\u4e86\uff0c\u800c\u4e14\u4e00\u65e6\u6211\u4eec\u9700\u8981\u4fee\u6539Move\uff0c\u6211\u4eec\u53ef\u80fd\u5c31\u6bcf\u4e00\u4e2a\u7c7b\u90fd\u8981\u8fdb\u884c\u4fee\u6539\u4e86\uff0c\u663e\u7136\u8fd9\u5bf9\u4e8e\u5f00\u53d1\u8005\u975e\u5e38\u4e0d\u53cb\u597d\u3002 \u8fd9\u4e2a\u65f6\u5019\uff0c\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u610f\u4e49\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\uff0c\u5c31\u4ee5\u6211\u4eec\u8fd9\u6b21\u7684\u4f5c\u4e1a\u4e3a\u4f8b\u5b50\uff0cMove\u7684\u4e00\u7c7b\u7684\u52a8\u4f5c\u62bd\u8c61\u6210\u4e00\u4e2a\u52a8\u4f5c\u7c7bMoveAction\uff0c\u7136\u540e\u901a\u8fc7ActionManager\u5bf9\u5176\u8fdb\u884c\u7ba1\u7406\u3002\u6211\u4eec\u5728\u9700\u8981\u7269\u4f53\u8fdb\u884c\u79fb\u52a8\u65f6\uff0c\u53ea\u9700\u8981\u65b0\u5efa\u4e00\u4e2aMoveAction\uff0c\u8c03\u7528ActionManaer\u7684addAction\uff0c\u628a\u5177\u4f53\u7684\u53c2\u6570\u4f20\u7ed9\u5b83\uff0cActionManager\u5c31\u4f1a\u6267\u884c\u6211\u4eec\u7684\u52a8\u4f5c\uff0c\u6211\u4eec\u518d\u4e5f\u4e0d\u7528\u5c06Move\u8fd9\u7c7b\u7684\u52a8\u4f5c\u4e00\u4e2a\u4e00\u4e2a\u5199\u5728\u6211\u4eec\u7684GameObjController\u4e2d\uff0c\u5927\u5927\u51cf\u5c11\u4e86\u6211\u4eec\u7684\u4ee3\u7801\u91cf\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u6211\u4eec\u4ee3\u7801\u7684\u590d\u7528\u6027\uff0c\u4e00\u65e6\u52a8\u4f5c\u65b9\u9762\u7684\u9700\u6c42\u4fee\u6539\uff0c\u6211\u4eec\u4e5f\u53ea\u9700\u8981\u4fee\u6539\u8be5Action\u7c7b\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u76f8\u5173\u8c03\u7528\u521b\u5efa\u8be5Action\u7684\u5730\u65b9\uff0c\u66f4\u52a0 \u5229\u4e8e\u6211\u4eec\u7684\u7ef4\u62a4\u4ee5\u53ca\u8ba9\u7a0b\u5e8f\u66f4\u80fd\u9002\u5e94\u9700\u6c42\u53d8\u5316 \u3002 \u5728\u4e86\u89e3\u4e86\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u610f\u4e49\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u6211\u4eec\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u7f16\u5199\u4e86\uff0c\u6211\u4eec\u5148\u753b\u4e00\u4e2a\u52a8\u4f5c\u7ba1\u7406\u5668\u7684UML\u56fe\u7406\u6e05\u4e00\u4e0b\u601d\u8def \u7136\u540e\u4e0e\u4e0a\u4e00\u8282\u8bfe\u7684UML\u56fe\u7ed3\u5408\u8d77\u6765\u53d8\u6210\u6574\u4e2a\u7a0b\u5e8f\u7684UML\u56fe\uff0c\u753b\u51fa\u6765UML\u56fe\u4e4b\u540e\uff0c\u6211\u4eec\u7a0b\u5e8f\u7684\u67b6\u6784\u5c31\u5f88\u6e05\u6670\u4e86\u3002 \u4e0b\u9762\u6211\u4eec\u5206\u7c7b\u8fdb\u884c\u63cf\u8ff0 ActionCallBack \u8fd9\u4e2a\u65b9\u6cd5\u4e3b\u8981\u662f\u63d0\u4f9b\u4e00\u4e2a\u8ba9\u52a8\u4f5c\u5b8c\u6210\u65f6\u8c03\u7528\u7684\u63a5\u53e3\uff0c\u4e00\u65e6\u52a8\u4f5c\u5b8c\u6210\uff0c\u8be5\u63a5\u53e3\u5bf9\u5e94\u5b9e\u73b0\u7684\u65b9\u6cd5\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u52a8\u4f5c\u7ba1\u7406\u5668\u53ef\u4ee5\u5bf9\u52a8\u4f5c\u7684\u5b8c\u6210\u8fdb\u884c\u54cd\u5e94\u3002 public interface ActionCallback { void actionDone ( SSAction source ); } SSAction SSAction\u8fd9\u4e2a\u7c7b\u5c31\u662f\u6240\u6709\u52a8\u4f5c\u5bf9\u8c61\u7c7b\u62bd\u8c61\u51fa\u6765\u7684\u4e00\u4e2a\u4e0d\u9700\u8981\u7ed1\u5b9a GameObject \u5bf9\u8c61\u7684\u53ef\u7f16\u7a0b\u57fa\u7c7b\uff0c\u5176\u52a8\u4f5c\u7684\u5b9e\u73b0\u7531\u5176\u5b50\u7c7b\u5b9e\u73b0Update\u4e2d\u7684\u5185\u5bb9\u5b9e\u73b0\uff0c\u8fd9\u4e2a\u5728\u540e\u9762\u7684MoveAction\u5c31\u6709\u4f53\u73b0\uff0c\u6240\u6709\u7684SSAction\u5bf9\u8c61\u53d7ActionManager\u7ba1\u7406\u3002 public class SSAction : ScriptableObject { public bool enable = true ; public bool destroy = false ; public GameObject gameObject ; public Transform transform ; public ActionCallback callback ; public virtual void Start () { throw new System . NotImplementedException (); } public virtual void Update () { throw new System . NotImplementedException (); } } MoveAction MoveAction\u5c31\u662f\u4e0a\u9762SSAction\u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u6839\u636e\u7528\u6237\u6240\u63d0\u4f9b\u7684\u76ee\u7684\u5730\u548c\u901f\u5ea6\uff0c\u4f7f\u5f97\u7269\u4f53\u5b8c\u6210\u4e00\u5b9a\u901f\u5ea6\u7684\u5411\u67d0\u4e00\u76ee\u7684\u5730\u7684\u76f4\u7ebf\u8fd0\u52a8\u3002\u5176\u901a\u8fc7Update\u7684\u5b9e\u73b0\u6765\u5b8c\u6210\u9010\u5e27\u7684\u5bf9\u4e8e\u7269\u4f53\u4f4d\u7f6e\u7684\u53d8\u52a8\uff0c\u5b9e\u73b0\u4e00\u4e2a\u6240\u8c13\u7684\u7269\u4f53\u7684\"\u52a8\u4f5c\"\u3002 public class MoveAction : SSAction { public Vector3 target ; public float speed ; private MoveAction (){ } public static MoveAction getAction ( Vector3 target , float speed ) { MoveAction action = ScriptableObject . CreateInstance < MoveAction > (); action . target = target ; action . speed = speed ; return action ; } // Use this for initialization public override void Start () { } // Update is called once per frame public override void Update () { transform . position = Vector3 . MoveTowards ( transform . position , target , speed * Time . deltaTime ); if ( transform . transform . position == target ) { destroy = true ; callback . actionDone ( this ); } } } CCSequenceAction \u8fd9\u662f\u4e00\u4e2a\u52a8\u4f5c\u987a\u5e8f\u6267\u884c\u5e8f\u5217\u7684\u662fSSAction\u7684\u5b50\u7c7b\uff0c\u5176\u901a\u8fc7\u4e00\u4e2aAction\u7684List\uff0c\u548cactionDone\u5bf9\u4e8eList\u7684\u7ef4\u62a4\u4ee5\u53caUpdate\u5bf9\u4e8e\u8c03\u7528\u54ea\u4e2aAction\u7684Update\u65b9\u6cd5\u7684\u63a7\u5236\uff0c\u5b9e\u73b0\u4e86\u4e00\u4e2a\u52a8\u4f5c\u987a\u5e8f\u6267\u884c\u7684\u6548\u679c\u3002\u5341\u5206\u65b9\u4fbf\u4e86\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u7eed\u52a8\u4f5c\u7684\u7f16\u7a0b\u3002 public class CCSequenceAction : SSAction , ActionCallback { public List < SSAction > sequence ; public int repeat = 1 ; // 1->only do it for once, -1->repeat forever public int currentActionIndex = 0 ; public static CCSequenceAction getAction ( int repeat , int currentActionIndex , List < SSAction > sequence ) { CCSequenceAction action = ScriptableObject . CreateInstance < CCSequenceAction >(); action . sequence = sequence ; action . repeat = repeat ; action . currentActionIndex = currentActionIndex ; return action ; } public override void Update () { if ( sequence . Count == 0 ) return ; if ( currentActionIndex < sequence . Count ) { sequence [ currentActionIndex ]. Update (); } } public void actionDone ( SSAction source ) { source . destroy = false ; this . currentActionIndex ++; if ( this . currentActionIndex >= sequence . Count ) { this . currentActionIndex = 0 ; if ( repeat > 0 ) repeat --; if ( repeat == 0 ) { this . destroy = true ; this . callback . actionDone ( this ); } } } public override void Start () { foreach ( SSAction action in sequence ) { action . gameObject = this . gameObject ; action . transform = this . transform ; action . callback = this ; action . Start (); } } void OnDestroy () { foreach ( SSAction action in sequence ) { DestroyObject ( action ); } } } SSActionManager \u8fd9\u4e2a\u5c31\u662f\u6211\u4eec\u8fd9\u4e00\u671f\u7684\u4e3b\u89d2ActionManager\u4e86\uff0c\u5176\u8d1f\u8d23\u4e86action\u7684\u589e\u52a0\u3001\u5220\u9664\u3001\u6267\u884c\u3002\u5b83\u901a\u8fc7\u5728Update\u4e2d\u8c03\u7528SSAction\u7684Update\u65b9\u6cd5\uff0c\u5b9e\u73b0\u5bf9\u4e8e\u52a8\u4f5c\u7684\u4e00\u4e2a\u8c03\u5ea6\uff0c\u7ba1\u7406\u52a8\u4f5c\u7684\u81ea\u52a8\u6267\u884c\u3002 public class SSActionManager : MonoBehaviour , ActionCallback { private Dictionary < int , SSAction > actions = new Dictionary < int , SSAction >(); private List < SSAction > waitingToAdd = new List < SSAction >(); private List < int > watingToDelete = new List < int >(); protected void Update () { foreach ( SSAction ac in waitingToAdd ) { actions [ ac . GetInstanceID ()] = ac ; } waitingToAdd . Clear (); foreach ( KeyValuePair < int , SSAction > kv in actions ) { SSAction ac = kv . Value ; if ( ac . destroy ) { watingToDelete . Add ( ac . GetInstanceID ()); } else if ( ac . enable ) { ac . Update (); } } foreach ( int key in watingToDelete ) { SSAction ac = actions [ key ]; actions . Remove ( key ); DestroyObject ( ac ); } watingToDelete . Clear (); } public void addAction ( GameObject gameObject , SSAction action , ActionCallback callback ) { action . gameObject = gameObject ; action . transform = gameObject . transform ; action . callback = callback ; waitingToAdd . Add ( action ); action . Start (); } public void actionDone ( SSAction source ) { } } FirstSceneActionManager FirstSceneActionManager\u5c31\u662f\u6211\u4eec\u4e0a\u9762SSActionManager\u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5bf9\u4e8e\u6211\u4eec\u573a\u666f\u4e2d\u5177\u4f53\u7684\u52a8\u4f5c\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728FirstSceneController\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6211\u4eec\u4e4b\u524d\u7684Move\u4e86\uff0c\u5341\u5206\u65b9\u4fbf\u4e86\u6211\u4eec\u7684\u7f16\u7a0b\u3002 public class FirstSceneActionManager : SSActionManager { public void toggleBoat ( BoatController boat ) { MoveAction action = MoveAction . getAction ( boat . getTarget (), boat . speed ); this . addAction ( boat . getBoat (), action , this ); boat . toggle (); } public void moveCharacter ( ICharacterController character , Vector3 target ) { Vector3 nowPos = character . getPos (); Vector3 tmpPos = nowPos ; if ( target . y > nowPos . y ) { tmpPos . y = target . y ; } else { tmpPos . x = target . x ; } SSAction action1 = MoveAction . getAction ( tmpPos , character . speed ); SSAction action2 = MoveAction . getAction ( target , character . speed ); SSAction sequenceAction = CCSequenceAction . getAction ( 1 , 0 , new List < SSAction >{ action1 , action2 }); this . addAction ( character . getInstance (), sequenceAction , this ); } } FirstController \u5728\u5b8c\u6210\u4e86FirstSceneActionManager\u540e\uff0c\u6211\u4eec\u628aGameObjectController\u4e2d\u4ee5\u53caFirstController\u4e2d\u4e00\u4e9b\u5173\u4e8e\u52a8\u4f5c\u7684\u90e8\u5206\u5220\u9664\uff0c\u7136\u540e\u5728\u539f\u6765\u52a8\u4f5c\u7684\u90e8\u5206\u8c03\u7528FirstSceneActionManager\u63d0\u4f9b\u65b0\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u4e86\u3002(\u4e0d\u8fc7\u56e0\u4e3a\u4e00\u5f00\u59cb\u8bbe\u8ba1\u67b6\u6784\u7684\u65f6\u5019\u6ca1\u6709\u8003\u8651\u52a0\u5165\u52a8\u4f5c\u7ba1\u7406\u5668\uff0c\u52a0\u4e4b\u6700\u8fd1\u65f6\u95f4\u8f83\u7d27\uff0c\u6ca1\u6709\u592a\u591a\u65f6\u95f4\u5bf9\u6e38\u620f\u8fdb\u884c\u91cd\u6784\uff0c\u6240\u4ee5FirstController\u4e2d\u4ecd\u7136\u6709\u7740\u90e8\u5206\u5173\u4e8e\u5224\u65ad\u7269\u4f53\u8fd0\u52a8\u7684\u903b\u8f91) public class FirstController : MonoBehaviour , ISceneController , IUserAction { UserGUI userGUI ; public LandController rightLand ; public LandController leftLand ; public BoatController boat ; public ICharacterController [] characters ; private FirstSceneActionManager actionManager ; void Awake () { GameDirector director = GameDirector . getInstance (); director . currentSceneController = this ; userGUI = gameObject . AddComponent < UserGUI >() as UserGUI ; genGameObjects (); } void Start () { actionManager = GetComponent < FirstSceneActionManager > (); } public void genGameObjects () { characters = new ICharacterController [ 6 ]; boat = new BoatController (); leftLand = new LandController (- 1 ); rightLand = new LandController ( 1 ); for ( int i = 0 ; i < 3 ; i ++) { ICharacterController priest = new ICharacterController ( 0 , \"priest\" + i ); priest . setPosition ( rightLand . getEmptyPosition ()); priest . getOnLand ( rightLand ); rightLand . getOnLand ( priest ); characters [ i ] = priest ; } for ( int i = 0 ; i < 3 ; i ++) { ICharacterController demon = new ICharacterController ( 1 , \"demon\" + i ); demon . setPosition ( rightLand . getEmptyPosition ()); demon . getOnLand ( rightLand ); rightLand . getOnLand ( demon ); characters [ i + 3 ] = demon ; } } public void ClickCharacter ( ICharacterController character ) { if ( userGUI . status != 0 || ! boat . available ()) { return ; } if ( character . isOnBoat ()) { LandController land ; if ( boat . getBoatPos () == 0 ) { land = leftLand ; } else { land = rightLand ; } boat . getOffBoat ( character . getName ()); actionManager . moveCharacter ( character , land . getEmptyPosition ()); character . getOnLand ( land ); land . getOnLand ( character ); } else { LandController land = character . getLandController (); if ( boat . getEmptyIndex () == - 1 ) return ; int landPos = land . getType (), boatPos = ( boat . getBoatPos () == 0 ) ? - 1 : 1 ; if ( landPos != boatPos ) return ; land . getOffLand ( character . getName ()); actionManager . moveCharacter ( character , boat . getEmptyPosition ()); character . getOnBoat ( boat , boat . getEmptyIndex ()); boat . getOnBoat ( character ); } userGUI . status = checkResult (); } public void ToggleBoat () { if ( userGUI . status != 0 || boat . isEmpty () || ! boat . available ()) return ; actionManager . toggleBoat ( boat ); userGUI . status = checkResult (); } int checkResult () { int leftPriests = 0 ; int rightPriests = 0 ; int leftDemons = 0 ; int rightDemons = 0 ; int [] leftStatus = leftLand . getStatus (); leftPriests += leftStatus [ 0 ]; leftDemons += leftStatus [ 1 ]; if ( leftPriests + leftDemons == 6 ) return 2 ; int [] rightStatus = rightLand . getStatus (); rightPriests += rightStatus [ 0 ]; rightDemons += rightStatus [ 1 ]; int [] boatStatus = boat . getBoatStatus (); if ( boat . getBoatPos () == 0 ) { leftPriests += boatStatus [ 0 ]; leftDemons += boatStatus [ 1 ]; } else { rightPriests += boatStatus [ 0 ]; rightDemons += boatStatus [ 1 ]; } if ( leftPriests > 0 && leftPriests < leftDemons ) return 1 ; if ( rightPriests > 0 && rightPriests < rightDemons ) return 1 ; return 0 ; } public void restart () { boat . reset (); leftLand . reset (); rightLand . reset (); for ( int i = 0 ; i < characters . Length ; i ++) characters [ i ]. reset (); } } \u5230\u8fd9\u91cc\uff0c\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u5b8c\u6210\u5566\uff0c\u4e0d\u8bf4\u4e86\uff0c\u5148\u53bb\u809d\u73b0\u64cd\u4e86(\u9003\ud83c\udf1a \u611f\u8c22\u9605\u8bfb\u6211\u7684\u535a\u5ba2\uff01\ud83d\ude0b","title":"\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#homework3","text":"","title":"Homework3\u7f16\u7a0b\u5b9e\u8df5"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#_1","text":"\u5728\u4e0a\u4e00\u5468\u7684\u7f16\u7a0b\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u4e00\u4e2a\u5177\u6709MVC\u67b6\u6784\u7684\u7267\u5e08\u4e0e\u9b54\u9b3c\u7684\u7248\u672c\uff0c\u800c\u6211\u4eec\u8fd9\u5468\u7684\u4efb\u52a1\u5c31\u662f\u5b9e\u73b0\u4e00\u4e2a\u52a8\u4f5c\u7ba1\u7406\u5668\uff0c\u628a\u6211\u4eec\u4e0a\u5468\u5199\u5728GameObjectController\u548cSceneController\u91cc\u7684\u5bf9\u4e8eGameObject\u52a8\u4f5c\u7684\u5904\u7406\u5199\u51fa\u6765\uff0c\u901a\u8fc7\u4e00\u4e2aSceneActionManager\u7684\u5b9e\u4f8b\u6765\u7ba1\u7406\uff0c\u8ba9\u5176\u4e13\u95e8\u8d1f\u8d23GameObject\u7684\u52a8\u4f5c\u3002\u4e0b\u9762\u6211\u4eec\u6765\u8c08\u8c08\u52a8\u4f5c\u7ba1\u7406\u5668\u3002","title":"\u7267\u5e08\u4e0e\u9b54\u9b3c \u52a8\u4f5c\u5206\u79bb\u7248"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#_2","text":"\u6839\u636e\u4e0a\u8bfe\u5b66\u5230\u7684\u5185\u5bb9\uff0c\u7ed9Camera\u52a0\u4e0a\u4e86SkyBox\uff0c\u7f8e\u5316\u4e86\u7a0b\u5e8f\u7684UI \u7ed9\u6e38\u620f\u6dfb\u52a0\u4e86\u5207\u6362\u89c6\u89d2\u7684\u529f\u80fd\uff0c\u73a9\u5bb6\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u559c\u597d\u5728\u5168\u5c40\u89c6\u89d2\u4ee5\u53ca\u8239\u53ea\u8ddf\u968f\u89c6\u89d2\u4e4b\u95f4\u4efb\u610f\u5207\u6362\uff0c\u6e38\u620f\u7684\u4f53\u9a8c\u66f4\u4f73","title":"\u9664\u4e86\u52a0\u5165\u52a8\u4f5c\u7ba1\u7406\u5668\u5916\u7684\u6539\u8fdb"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#_3","text":"","title":"\u6e38\u620f\u6548\u679c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#_4","text":"","title":"\u5efa\u7acb\u52a8\u4f5c\u7ba1\u7406\u5668"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#_5","text":"\u5728\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u7b80\u5355\u7684\u7267\u5e08\u4e0e\u6076\u9b54\u7684\u6e38\u620f\u4e2d\uff0c\u6211\u4e3a\u4e86\u907f\u514dFirstSceneController\u4e2d\u5bf9\u4e8e\u7269\u4f53\u79fb\u52a8\u64cd\u4f5c\u7684\u4ee3\u7801\u91cf\u8fc7\u591a\uff0c\u628a\u7269\u4f53\u7684\u52a8\u4f5c\u5c01\u88c5\u5728GameObjectController\u91cc\u9762\uff0c\u901a\u8fc7\u8fd9\u79cd\u505a\u6cd5\uff0cFirstSceneController\u7684\u4ee3\u7801\u91cf\u7684\u786e\u5f97\u5230\u4e86\u4e00\u5b9a\u7684\u51cf\u5c11\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u6211\u6bcf\u5199\u4e00\u4e2aGameObjectController\u6211\u5c31\u8981\u591a\u5199\u4e00\u4e2a\u7269\u4f53\u8fd0\u52a8\u7684\u51fd\u6570\uff0c\u4e00\u65e6\u9700\u8981\u79fb\u52a8\u7684GameObject\u591a\u8d77\u6765\uff0c\u53ef\u80fd\u5197\u4f59\u7684\u4ee3\u7801\u91cf\u5c31\u4f1a\u5927\u91cf\u589e\u591a\u4e86\uff0c\u800c\u4e14\u4e00\u65e6\u6211\u4eec\u9700\u8981\u4fee\u6539Move\uff0c\u6211\u4eec\u53ef\u80fd\u5c31\u6bcf\u4e00\u4e2a\u7c7b\u90fd\u8981\u8fdb\u884c\u4fee\u6539\u4e86\uff0c\u663e\u7136\u8fd9\u5bf9\u4e8e\u5f00\u53d1\u8005\u975e\u5e38\u4e0d\u53cb\u597d\u3002 \u8fd9\u4e2a\u65f6\u5019\uff0c\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u610f\u4e49\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\uff0c\u5c31\u4ee5\u6211\u4eec\u8fd9\u6b21\u7684\u4f5c\u4e1a\u4e3a\u4f8b\u5b50\uff0cMove\u7684\u4e00\u7c7b\u7684\u52a8\u4f5c\u62bd\u8c61\u6210\u4e00\u4e2a\u52a8\u4f5c\u7c7bMoveAction\uff0c\u7136\u540e\u901a\u8fc7ActionManager\u5bf9\u5176\u8fdb\u884c\u7ba1\u7406\u3002\u6211\u4eec\u5728\u9700\u8981\u7269\u4f53\u8fdb\u884c\u79fb\u52a8\u65f6\uff0c\u53ea\u9700\u8981\u65b0\u5efa\u4e00\u4e2aMoveAction\uff0c\u8c03\u7528ActionManaer\u7684addAction\uff0c\u628a\u5177\u4f53\u7684\u53c2\u6570\u4f20\u7ed9\u5b83\uff0cActionManager\u5c31\u4f1a\u6267\u884c\u6211\u4eec\u7684\u52a8\u4f5c\uff0c\u6211\u4eec\u518d\u4e5f\u4e0d\u7528\u5c06Move\u8fd9\u7c7b\u7684\u52a8\u4f5c\u4e00\u4e2a\u4e00\u4e2a\u5199\u5728\u6211\u4eec\u7684GameObjController\u4e2d\uff0c\u5927\u5927\u51cf\u5c11\u4e86\u6211\u4eec\u7684\u4ee3\u7801\u91cf\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u6211\u4eec\u4ee3\u7801\u7684\u590d\u7528\u6027\uff0c\u4e00\u65e6\u52a8\u4f5c\u65b9\u9762\u7684\u9700\u6c42\u4fee\u6539\uff0c\u6211\u4eec\u4e5f\u53ea\u9700\u8981\u4fee\u6539\u8be5Action\u7c7b\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u76f8\u5173\u8c03\u7528\u521b\u5efa\u8be5Action\u7684\u5730\u65b9\uff0c\u66f4\u52a0 \u5229\u4e8e\u6211\u4eec\u7684\u7ef4\u62a4\u4ee5\u53ca\u8ba9\u7a0b\u5e8f\u66f4\u80fd\u9002\u5e94\u9700\u6c42\u53d8\u5316 \u3002 \u5728\u4e86\u89e3\u4e86\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u610f\u4e49\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u6211\u4eec\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u7f16\u5199\u4e86\uff0c\u6211\u4eec\u5148\u753b\u4e00\u4e2a\u52a8\u4f5c\u7ba1\u7406\u5668\u7684UML\u56fe\u7406\u6e05\u4e00\u4e0b\u601d\u8def \u7136\u540e\u4e0e\u4e0a\u4e00\u8282\u8bfe\u7684UML\u56fe\u7ed3\u5408\u8d77\u6765\u53d8\u6210\u6574\u4e2a\u7a0b\u5e8f\u7684UML\u56fe\uff0c\u753b\u51fa\u6765UML\u56fe\u4e4b\u540e\uff0c\u6211\u4eec\u7a0b\u5e8f\u7684\u67b6\u6784\u5c31\u5f88\u6e05\u6670\u4e86\u3002 \u4e0b\u9762\u6211\u4eec\u5206\u7c7b\u8fdb\u884c\u63cf\u8ff0","title":"\u5efa\u7acb\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u610f\u4e49"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#actioncallback","text":"\u8fd9\u4e2a\u65b9\u6cd5\u4e3b\u8981\u662f\u63d0\u4f9b\u4e00\u4e2a\u8ba9\u52a8\u4f5c\u5b8c\u6210\u65f6\u8c03\u7528\u7684\u63a5\u53e3\uff0c\u4e00\u65e6\u52a8\u4f5c\u5b8c\u6210\uff0c\u8be5\u63a5\u53e3\u5bf9\u5e94\u5b9e\u73b0\u7684\u65b9\u6cd5\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u52a8\u4f5c\u7ba1\u7406\u5668\u53ef\u4ee5\u5bf9\u52a8\u4f5c\u7684\u5b8c\u6210\u8fdb\u884c\u54cd\u5e94\u3002 public interface ActionCallback { void actionDone ( SSAction source ); }","title":"ActionCallBack"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#ssaction","text":"SSAction\u8fd9\u4e2a\u7c7b\u5c31\u662f\u6240\u6709\u52a8\u4f5c\u5bf9\u8c61\u7c7b\u62bd\u8c61\u51fa\u6765\u7684\u4e00\u4e2a\u4e0d\u9700\u8981\u7ed1\u5b9a GameObject \u5bf9\u8c61\u7684\u53ef\u7f16\u7a0b\u57fa\u7c7b\uff0c\u5176\u52a8\u4f5c\u7684\u5b9e\u73b0\u7531\u5176\u5b50\u7c7b\u5b9e\u73b0Update\u4e2d\u7684\u5185\u5bb9\u5b9e\u73b0\uff0c\u8fd9\u4e2a\u5728\u540e\u9762\u7684MoveAction\u5c31\u6709\u4f53\u73b0\uff0c\u6240\u6709\u7684SSAction\u5bf9\u8c61\u53d7ActionManager\u7ba1\u7406\u3002 public class SSAction : ScriptableObject { public bool enable = true ; public bool destroy = false ; public GameObject gameObject ; public Transform transform ; public ActionCallback callback ; public virtual void Start () { throw new System . NotImplementedException (); } public virtual void Update () { throw new System . NotImplementedException (); } }","title":"SSAction"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#moveaction","text":"MoveAction\u5c31\u662f\u4e0a\u9762SSAction\u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u6839\u636e\u7528\u6237\u6240\u63d0\u4f9b\u7684\u76ee\u7684\u5730\u548c\u901f\u5ea6\uff0c\u4f7f\u5f97\u7269\u4f53\u5b8c\u6210\u4e00\u5b9a\u901f\u5ea6\u7684\u5411\u67d0\u4e00\u76ee\u7684\u5730\u7684\u76f4\u7ebf\u8fd0\u52a8\u3002\u5176\u901a\u8fc7Update\u7684\u5b9e\u73b0\u6765\u5b8c\u6210\u9010\u5e27\u7684\u5bf9\u4e8e\u7269\u4f53\u4f4d\u7f6e\u7684\u53d8\u52a8\uff0c\u5b9e\u73b0\u4e00\u4e2a\u6240\u8c13\u7684\u7269\u4f53\u7684\"\u52a8\u4f5c\"\u3002 public class MoveAction : SSAction { public Vector3 target ; public float speed ; private MoveAction (){ } public static MoveAction getAction ( Vector3 target , float speed ) { MoveAction action = ScriptableObject . CreateInstance < MoveAction > (); action . target = target ; action . speed = speed ; return action ; } // Use this for initialization public override void Start () { } // Update is called once per frame public override void Update () { transform . position = Vector3 . MoveTowards ( transform . position , target , speed * Time . deltaTime ); if ( transform . transform . position == target ) { destroy = true ; callback . actionDone ( this ); } } }","title":"MoveAction"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#ccsequenceaction","text":"\u8fd9\u662f\u4e00\u4e2a\u52a8\u4f5c\u987a\u5e8f\u6267\u884c\u5e8f\u5217\u7684\u662fSSAction\u7684\u5b50\u7c7b\uff0c\u5176\u901a\u8fc7\u4e00\u4e2aAction\u7684List\uff0c\u548cactionDone\u5bf9\u4e8eList\u7684\u7ef4\u62a4\u4ee5\u53caUpdate\u5bf9\u4e8e\u8c03\u7528\u54ea\u4e2aAction\u7684Update\u65b9\u6cd5\u7684\u63a7\u5236\uff0c\u5b9e\u73b0\u4e86\u4e00\u4e2a\u52a8\u4f5c\u987a\u5e8f\u6267\u884c\u7684\u6548\u679c\u3002\u5341\u5206\u65b9\u4fbf\u4e86\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u7eed\u52a8\u4f5c\u7684\u7f16\u7a0b\u3002 public class CCSequenceAction : SSAction , ActionCallback { public List < SSAction > sequence ; public int repeat = 1 ; // 1->only do it for once, -1->repeat forever public int currentActionIndex = 0 ; public static CCSequenceAction getAction ( int repeat , int currentActionIndex , List < SSAction > sequence ) { CCSequenceAction action = ScriptableObject . CreateInstance < CCSequenceAction >(); action . sequence = sequence ; action . repeat = repeat ; action . currentActionIndex = currentActionIndex ; return action ; } public override void Update () { if ( sequence . Count == 0 ) return ; if ( currentActionIndex < sequence . Count ) { sequence [ currentActionIndex ]. Update (); } } public void actionDone ( SSAction source ) { source . destroy = false ; this . currentActionIndex ++; if ( this . currentActionIndex >= sequence . Count ) { this . currentActionIndex = 0 ; if ( repeat > 0 ) repeat --; if ( repeat == 0 ) { this . destroy = true ; this . callback . actionDone ( this ); } } } public override void Start () { foreach ( SSAction action in sequence ) { action . gameObject = this . gameObject ; action . transform = this . transform ; action . callback = this ; action . Start (); } } void OnDestroy () { foreach ( SSAction action in sequence ) { DestroyObject ( action ); } } }","title":"CCSequenceAction"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#ssactionmanager","text":"\u8fd9\u4e2a\u5c31\u662f\u6211\u4eec\u8fd9\u4e00\u671f\u7684\u4e3b\u89d2ActionManager\u4e86\uff0c\u5176\u8d1f\u8d23\u4e86action\u7684\u589e\u52a0\u3001\u5220\u9664\u3001\u6267\u884c\u3002\u5b83\u901a\u8fc7\u5728Update\u4e2d\u8c03\u7528SSAction\u7684Update\u65b9\u6cd5\uff0c\u5b9e\u73b0\u5bf9\u4e8e\u52a8\u4f5c\u7684\u4e00\u4e2a\u8c03\u5ea6\uff0c\u7ba1\u7406\u52a8\u4f5c\u7684\u81ea\u52a8\u6267\u884c\u3002 public class SSActionManager : MonoBehaviour , ActionCallback { private Dictionary < int , SSAction > actions = new Dictionary < int , SSAction >(); private List < SSAction > waitingToAdd = new List < SSAction >(); private List < int > watingToDelete = new List < int >(); protected void Update () { foreach ( SSAction ac in waitingToAdd ) { actions [ ac . GetInstanceID ()] = ac ; } waitingToAdd . Clear (); foreach ( KeyValuePair < int , SSAction > kv in actions ) { SSAction ac = kv . Value ; if ( ac . destroy ) { watingToDelete . Add ( ac . GetInstanceID ()); } else if ( ac . enable ) { ac . Update (); } } foreach ( int key in watingToDelete ) { SSAction ac = actions [ key ]; actions . Remove ( key ); DestroyObject ( ac ); } watingToDelete . Clear (); } public void addAction ( GameObject gameObject , SSAction action , ActionCallback callback ) { action . gameObject = gameObject ; action . transform = gameObject . transform ; action . callback = callback ; waitingToAdd . Add ( action ); action . Start (); } public void actionDone ( SSAction source ) { } }","title":"SSActionManager"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#firstsceneactionmanager","text":"FirstSceneActionManager\u5c31\u662f\u6211\u4eec\u4e0a\u9762SSActionManager\u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5bf9\u4e8e\u6211\u4eec\u573a\u666f\u4e2d\u5177\u4f53\u7684\u52a8\u4f5c\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728FirstSceneController\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6211\u4eec\u4e4b\u524d\u7684Move\u4e86\uff0c\u5341\u5206\u65b9\u4fbf\u4e86\u6211\u4eec\u7684\u7f16\u7a0b\u3002 public class FirstSceneActionManager : SSActionManager { public void toggleBoat ( BoatController boat ) { MoveAction action = MoveAction . getAction ( boat . getTarget (), boat . speed ); this . addAction ( boat . getBoat (), action , this ); boat . toggle (); } public void moveCharacter ( ICharacterController character , Vector3 target ) { Vector3 nowPos = character . getPos (); Vector3 tmpPos = nowPos ; if ( target . y > nowPos . y ) { tmpPos . y = target . y ; } else { tmpPos . x = target . x ; } SSAction action1 = MoveAction . getAction ( tmpPos , character . speed ); SSAction action2 = MoveAction . getAction ( target , character . speed ); SSAction sequenceAction = CCSequenceAction . getAction ( 1 , 0 , new List < SSAction >{ action1 , action2 }); this . addAction ( character . getInstance (), sequenceAction , this ); } }","title":"FirstSceneActionManager"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#firstcontroller","text":"\u5728\u5b8c\u6210\u4e86FirstSceneActionManager\u540e\uff0c\u6211\u4eec\u628aGameObjectController\u4e2d\u4ee5\u53caFirstController\u4e2d\u4e00\u4e9b\u5173\u4e8e\u52a8\u4f5c\u7684\u90e8\u5206\u5220\u9664\uff0c\u7136\u540e\u5728\u539f\u6765\u52a8\u4f5c\u7684\u90e8\u5206\u8c03\u7528FirstSceneActionManager\u63d0\u4f9b\u65b0\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u4e86\u3002(\u4e0d\u8fc7\u56e0\u4e3a\u4e00\u5f00\u59cb\u8bbe\u8ba1\u67b6\u6784\u7684\u65f6\u5019\u6ca1\u6709\u8003\u8651\u52a0\u5165\u52a8\u4f5c\u7ba1\u7406\u5668\uff0c\u52a0\u4e4b\u6700\u8fd1\u65f6\u95f4\u8f83\u7d27\uff0c\u6ca1\u6709\u592a\u591a\u65f6\u95f4\u5bf9\u6e38\u620f\u8fdb\u884c\u91cd\u6784\uff0c\u6240\u4ee5FirstController\u4e2d\u4ecd\u7136\u6709\u7740\u90e8\u5206\u5173\u4e8e\u5224\u65ad\u7269\u4f53\u8fd0\u52a8\u7684\u903b\u8f91) public class FirstController : MonoBehaviour , ISceneController , IUserAction { UserGUI userGUI ; public LandController rightLand ; public LandController leftLand ; public BoatController boat ; public ICharacterController [] characters ; private FirstSceneActionManager actionManager ; void Awake () { GameDirector director = GameDirector . getInstance (); director . currentSceneController = this ; userGUI = gameObject . AddComponent < UserGUI >() as UserGUI ; genGameObjects (); } void Start () { actionManager = GetComponent < FirstSceneActionManager > (); } public void genGameObjects () { characters = new ICharacterController [ 6 ]; boat = new BoatController (); leftLand = new LandController (- 1 ); rightLand = new LandController ( 1 ); for ( int i = 0 ; i < 3 ; i ++) { ICharacterController priest = new ICharacterController ( 0 , \"priest\" + i ); priest . setPosition ( rightLand . getEmptyPosition ()); priest . getOnLand ( rightLand ); rightLand . getOnLand ( priest ); characters [ i ] = priest ; } for ( int i = 0 ; i < 3 ; i ++) { ICharacterController demon = new ICharacterController ( 1 , \"demon\" + i ); demon . setPosition ( rightLand . getEmptyPosition ()); demon . getOnLand ( rightLand ); rightLand . getOnLand ( demon ); characters [ i + 3 ] = demon ; } } public void ClickCharacter ( ICharacterController character ) { if ( userGUI . status != 0 || ! boat . available ()) { return ; } if ( character . isOnBoat ()) { LandController land ; if ( boat . getBoatPos () == 0 ) { land = leftLand ; } else { land = rightLand ; } boat . getOffBoat ( character . getName ()); actionManager . moveCharacter ( character , land . getEmptyPosition ()); character . getOnLand ( land ); land . getOnLand ( character ); } else { LandController land = character . getLandController (); if ( boat . getEmptyIndex () == - 1 ) return ; int landPos = land . getType (), boatPos = ( boat . getBoatPos () == 0 ) ? - 1 : 1 ; if ( landPos != boatPos ) return ; land . getOffLand ( character . getName ()); actionManager . moveCharacter ( character , boat . getEmptyPosition ()); character . getOnBoat ( boat , boat . getEmptyIndex ()); boat . getOnBoat ( character ); } userGUI . status = checkResult (); } public void ToggleBoat () { if ( userGUI . status != 0 || boat . isEmpty () || ! boat . available ()) return ; actionManager . toggleBoat ( boat ); userGUI . status = checkResult (); } int checkResult () { int leftPriests = 0 ; int rightPriests = 0 ; int leftDemons = 0 ; int rightDemons = 0 ; int [] leftStatus = leftLand . getStatus (); leftPriests += leftStatus [ 0 ]; leftDemons += leftStatus [ 1 ]; if ( leftPriests + leftDemons == 6 ) return 2 ; int [] rightStatus = rightLand . getStatus (); rightPriests += rightStatus [ 0 ]; rightDemons += rightStatus [ 1 ]; int [] boatStatus = boat . getBoatStatus (); if ( boat . getBoatPos () == 0 ) { leftPriests += boatStatus [ 0 ]; leftDemons += boatStatus [ 1 ]; } else { rightPriests += boatStatus [ 0 ]; rightDemons += boatStatus [ 1 ]; } if ( leftPriests > 0 && leftPriests < leftDemons ) return 1 ; if ( rightPriests > 0 && rightPriests < rightDemons ) return 1 ; return 0 ; } public void restart () { boat . reset (); leftLand . reset (); rightLand . reset (); for ( int i = 0 ; i < characters . Length ; i ++) characters [ i ]. reset (); } } \u5230\u8fd9\u91cc\uff0c\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u5b8c\u6210\u5566\uff0c\u4e0d\u8bf4\u4e86\uff0c\u5148\u53bb\u809d\u73b0\u64cd\u4e86(\u9003\ud83c\udf1a \u611f\u8c22\u9605\u8bfb\u6211\u7684\u535a\u5ba2\uff01\ud83d\ude0b","title":"FirstController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/","text":"Homework4 HitUFO\uff01 \u6e38\u620f\u7f16\u7a0b\u5b9e\u8df5 \u4f5c\u4e1a\u8981\u6c42 \u5185\u5bb9\u8981\u6c42 \u6e38\u620f\u6709 n \u4e2a round\uff0c\u6bcf\u4e2a round \u90fd\u5305\u62ec10 \u6b21 trial \u6bcf\u4e2a trial \u7684\u98de\u789f\u7684\u8272\u5f69\u3001\u5927\u5c0f\u3001\u53d1\u5c04\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u89d2\u5ea6\u3001\u540c\u65f6\u51fa\u73b0\u7684\u4e2a\u6570\u90fd\u53ef\u80fd\u4e0d\u540c\u3002\u5b83\u4eec\u7531\u8be5 round \u7684 ruler \u63a7\u5236 \u6bcf\u4e2a trial \u7684\u98de\u789f\u6709\u968f\u673a\u6027\uff0c\u603b\u4f53\u96be\u5ea6\u968f round \u4e0a\u5347 \u9f20\u6807\u70b9\u4e2d\u5f97\u5206\uff0c\u5f97\u5206\u89c4\u5219\u6309\u8272\u5f69\u3001\u5927\u5c0f\u3001\u901f\u5ea6\u4e0d\u540c\u8ba1\u7b97\uff0c\u89c4\u5219\u53ef\u81ea\u7531\u8bbe\u5b9a \u6e38\u620f\u8981\u6c42 \u4f7f\u7528\u5e26\u7f13\u5b58\u7684\u5de5\u5382\u6a21\u5f0f\u7ba1\u7406\u4e0d\u540c\u98de\u789f\u7684\u751f\u4ea7\u4e0e\u56de\u6536\uff0c\u8be5\u5de5\u5382\u5fc5\u987b\u662f\u573a\u666f\u5355\u5b9e\u4f8b\u7684\uff01\u5177\u4f53\u5b9e\u73b0\u89c1\u53c2\u8003\u8d44\u6e90 Singleton \u6a21\u677f\u7c7b \u5c3d\u53ef\u80fd\u4f7f\u7528\u524d\u9762 MVC \u7ed3\u6784\u5b9e\u73b0\u4eba\u673a\u4ea4\u4e92\u4e0e\u6e38\u620f\u6a21\u578b\u5206\u79bb \u4f5c\u4e1a\u5b9e\u73b0 \u672c\u5468\u7684\u5185\u5bb9\u5728\u6709\u4e86\u4e4b\u524dMVC\u67b6\u6784\u4ee5\u53ca\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u5176\u5b9e\u672c\u6b21\u4f5c\u4e1a\u7684\u5b9e\u73b0\u8f83\u4e3a\u7b80\u5355\u3002\u6309\u7167\u4e4b\u524d\u7684\u60ef\u4f8b\uff0c\u4e3a\u4e86\u7f16\u7a0b\u7684\u6761\u7406\u6027\uff0c\u6211\u4eec\u5148\u8bbe\u8ba1\u51fa\u6211\u4eec\u8fd9\u6b21\u4f5c\u4e1a\u7684UML\u56fe \u89c6\u9891\u6f14\u793a Hit UFO! Hit UFO! (With GUN) UML\u56fe \u5176\u4e2dFirstCharacterController\u7c7b\u662f\u4e3aGUN\u7248\u672c\u521b\u5efa\u7684\u3002 \u5206\u7c7b\u4ecb\u7ecd \u9996\u5148\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u6b21\u4f5c\u4e1a\u7684\u91cd\u4e2d\u4e4b\u91cd\uff0c\u5de5\u5382\u7c7b\u7684\u5b9e\u73b0\uff0c\u8fd9\u6b21\u7684\u4f5c\u4e1a\u4e00\u5171\u6709\u4e24\u4e2a\u5de5\u5382\u7c7b\uff0c\u4e00\u4e2a\u662fUFO\u751f\u6210\u7684\u5de5\u5382\uff0c\u4e00\u4e2a\u662f\u7206\u70b8\u751f\u6210\u7684\u5de5\u5382\uff0c \u901a\u8fc7\u5e26\u7f13\u5b58\u7684\u5de5\u5382\u5bf9\u8c61\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u51cf\u5c11\u4e86\u6e38\u620f\u5bf9\u8c61\u7684\u521b\u5efa\u4ee5\u53ca\u9500\u6bc1\u7684\u6b21\u6570\uff0c\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u6e38\u620f\u7684\u5f00\u9500\uff0c\u5e76\u4e14\u6e38\u620f\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u9500\u6bc1\u7531\u4e00\u4e2a\u5bf9\u8c61\u7edf\u4e00\u7ba1\u7406\uff0c\u4f7f\u5f97\u4e1a\u52a1\u903b\u8f91\u66f4\u52a0\u660e\u786e\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u7684\u7a0b\u5e8f\u66f4\u52a0\u5bb9\u6613\u6269\u5c55\u3002 \u4e0b\u9762\u6211\u4eec\u5148\u6765\u770b\u770b\u8fd9\u4e24\u4e2a\u7c7b UFOFactory public class UFOFactory : MonoBehaviour { Queue < UFOController > waitingQueue ; List < UFOController > runningList ; GameObject basic ; private void Awake () { waitingQueue = new Queue < UFOController >(); runningList = new List < UFOController >(); basic = Instantiate ( Resources . Load ( \"Prefabs/UFO\" , typeof ( GameObject ))) as GameObject ; basic . SetActive ( false ); } public UFOController GetUFO ( UFOData data ) { UFOController ufo ; if ( waitingQueue . Count > 0 ) ufo = waitingQueue . Dequeue (); else { GameObject newUFO = GameObject . Instantiate ( basic ); ufo = new UFOController ( newUFO ); newUFO . transform . position += Vector3 . forward * Random . value * 10 ; } ufo . setAttribute ( data ); runningList . Add ( ufo ); ufo . appear (); return ufo ; } public List < UFOController > GetRunningList () { return this . runningList ; } public UFOController [] initAll ( UFOData data , int num ) { UFOController [] list = new UFOController [ num ]; for ( int i = 0 ; i < num ; i ++) { list [ i ] = GetUFO ( data ); } return list ; } public void recycle ( UFOController ufo ) { ufo . disappear (); waitingQueue . Enqueue ( ufo ); runningList . Remove ( ufo ); } public void recycleAll () { while ( runningList . Count != 0 ) { recycle ( runningList [ 0 ]); } } } ExplosionFactory public class ExplosionFactory : MonoBehaviour { Queue < GameObject > waitingQueue ; List < GameObject > runningList ; GameObject basic ; private void Awake () { waitingQueue = new Queue < GameObject >(); runningList = new List < GameObject >(); basic = Instantiate ( Resources . Load ( \"Prefabs/Explosion\" , typeof ( GameObject ))) as GameObject ; basic . SetActive ( false ); } public void explode ( Vector3 pos ) { GameObject explosion ; if ( waitingQueue . Count == 0 ) { explosion = GameObject . Instantiate ( basic ); explosion . AddComponent < SelfRecycle > (). factory = this ; } else { explosion = waitingQueue . Dequeue (); } runningList . Add ( explosion ); explosion . GetComponent < SelfRecycle > (). startTimer ( 0.2f ); explosion . SetActive ( true ); explosion . transform . position = pos ; } public void recycle ( GameObject explosion ) { explosion . SetActive ( false ); waitingQueue . Enqueue ( explosion ); runningList . Remove ( explosion ); } } FlyAction \u5728\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u662f\u6211\u4eec\u7b2c\u4e00\u4e2a\u661f\u671f\u6240\u5199\u7684\u629b\u7269\u7ebf\u8fd0\u52a8\u7684\u4ee3\u7801\uff0c\u5916\u90e8\u901a\u8fc7getAction\u63d0\u4f9bUFO\u7684x, y\u7684\u521d\u901f\u5ea6\uff0c\u751f\u6210\u7269\u4f53\u7684\u901f\u5ea6\u5411\u91cf\uff0c\u7136\u540e\u6bcf\u4e00\u5e27\u90fd\u7ed9\u7269\u4f53\u52a0\u4e0a\u5bf9\u5e94\u91cd\u529b\u7684\u79fb\u52a8\u548c\u521d\u901f\u5ea6\u7684\u79fb\u52a8\u5373\u53ef\u5f97\u5230\u7269\u4f53\u7684\u629b\u7269\u7ebf\u3002 public class FlyAction : SSAction { public float Vx ; public float Vy ; public Vector3 speed ; public Vector3 gravity ; private FlyAction () { } public static FlyAction getAction ( float vx , float vy ) { FlyAction action = ScriptableObject . CreateInstance < FlyAction > (); action . gravity = Vector3 . zero ; action . Vx = vx ; action . Vy = vy ; return action ; } // Use this for initialization public override void Start () { speed = new Vector3 ( Vx , Vy , 0 ); } // Update is called once per frame public override void Update () { if ( 2 * Vy + gravity . y > 0.00001 ) { gravity . y -= 10 * Time . fixedDeltaTime ; transform . Translate ( speed * Time . fixedDeltaTime ); transform . Translate ( gravity * Time . fixedDeltaTime ); } else { destroy = true ; callback . actionDone ( this ); } } } Fire Fire\u7c7b\u662f\u6e38\u620f\u7684\u63d0\u4f9b\u5f00\u706b\u64cd\u4f5c\u7684\u7c7b\uff0c\u901a\u8fc7\u8be5\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u7528\u6237\u7684\u8f93\u5165\uff0c\u5e76\u4e14\u5bf9\u4e8e\u7528\u6237\u64cd\u4f5c\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\uff0c\u6211\u4eec\u672c\u6b21\u5b9e\u9a8c\u4e3b\u8981\u7528\u5230\u4e86Ray\u6765\u5b9e\u73b0\u7528\u6237\u7684\u5c04\u51fb\u64cd\u4f5c\uff0c\u901a\u8fc7Raycast\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u5c04\u7ebf\u51fb\u4e2d\u7684\u7269\u4f53\uff0c\u5e76\u4e14\u628a\u5176\u901a\u8fc7\u76f8\u5e94\u7684\u63a5\u53e3\u4f20\u7ed9\u6211\u4eec\u7684\u573a\u8bb0(SceneControll)\uff0c\u5b8c\u6210\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 public class Fire : MonoBehaviour { public new Camera camera ; public FirstController sceneController ; LayerMask layer ; void Awake () { layer = LayerMask . GetMask ( \"UFO\" , \"Terrian\" ); } // Use this for initialization void Start () { camera = Camera . main ; sceneController = GameDirector . getInstance (). currentSceneController as FirstController ; } // Update is called once per frame void Update () { if ( Input . GetButton ( \"Fire1\" )) { Ray ray = camera . ScreenPointToRay ( Input . mousePosition ); RaycastHit hit ; if ( Physics . Raycast ( ray , out hit , Mathf . Infinity , layer )) { if ( hit . transform . gameObject . layer == 8 ) { sceneController . shootUFO ( hit . transform . gameObject . GetComponent < UFOCtrl >(). ufoController ); } else if ( hit . transform . gameObject . layer == 9 ) { sceneController . shootGround ( hit . point ); } } } } } ScoreRecorder ScoreRecorder\u7684\u4f5c\u7528\u5c31\u662f\u6211\u4eec\u6e38\u620f\u7684\u8ba1\u5206\u5458\uff0c\u6211\u4eec\u79ef\u5206\u6570\u636e\u7ef4\u62a4\u6ca1\u6709\u653e\u5728\u573a\u8bb0\u91cc\u9762\uff0c\u800c\u662f\u628a\u5176\u5206\u79bb\u4e86\u51fa\u6765\u505a\u4e86\u4e00\u4e2a\u8bb0\u5206\u5458\uff0c\u7531\u8bb0\u5206\u5458\u6765\u7ef4\u62a4\u6211\u4eec\u7684\u79ef\u5206 public class ScoreRecorder { private int score ; Text gameInfo ; private static ScoreRecorder instance ; public static ScoreRecorder getInstance () { if ( instance == null ) { instance = new ScoreRecorder (); } return instance ; } private ScoreRecorder () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/ScoreInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text >(); gameInfo . text = \"\" + score ; } public void record ( int difficulty ) { score += difficulty + 1 ; gameInfo . text = \"\" + score ; } public int getScore () { return score ; } } FirstController FirstController\u7c7b\u5c31\u662f\u6211\u4eec\u8fd9\u6b21\u6e38\u620f\u573a\u666f\u7684\u573a\u8bb0\u4e86\uff0c\u5728\u4e4b\u524d\u5b66\u4e60\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u8fd9\u4e00\u6b21\u6e38\u620f\u67b6\u6784\u7684\u8bbe\u8ba1\u66f4\u52a0\u5408\u7406\uff0c\u573a\u8bb0\u76f8\u6bd4\u4e0a\u4e00\u6b21\u7684\u6e38\u620f\u66f4\u52a0\u7b80\u6d01\u6613\u770b\uff0c\u53ef\u8bfb\u6027\u66f4\u5f3a\u3002 public class FirstController : MonoBehaviour , ISceneController { GameDirector gameDirector ; FirstSceneActionManager actionManager ; public UFOFactory ufoFactory ; ExplosionFactory explosionFactory ; ScoreRecorder scoreRecorder ; TimerController timerController ; DifficultyController difficulty ; int gameStatus ; int round = 1 ; int emitNum ; int scoreInRound ; int fpsCount ; bool running ; GUIStyle headerStyle ; GUIStyle buttonStyle ; Text roundText ; void Awake () { gameDirector = GameDirector . getInstance (); gameDirector . currentSceneController = this ; actionManager = gameObject . AddComponent < FirstSceneActionManager >(); ufoFactory = gameObject . AddComponent < UFOFactory >(); explosionFactory = gameObject . AddComponent < ExplosionFactory > (); difficulty = DifficultyController . getInstance (); timerController = gameObject . AddComponent < TimerController >(); scoreRecorder = ScoreRecorder . getInstance (); loadResources (); } public void Start () { gameStatus = 0 ; difficulty . setDifficulty ( 0 ); round = 1 ; roundText = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/RoundInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text >(); roundText . text = \"\" + round ; fpsCount = 0 ; headerStyle = new GUIStyle (); headerStyle . fontSize = 40 ; headerStyle . alignment = TextAnchor . MiddleCenter ; buttonStyle = new GUIStyle ( \"button\" ); buttonStyle . fontSize = 30 ; running = false ; } void OnGUI () { if ( gameStatus == 0 ) { GUI . Label ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 - 90 , 100 , 50 ), \"Hit the UFO!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 , 100 , 50 ), \"Play!\" , buttonStyle )) { replay (); } } else if ( gameStatus == 2 ) { GUI . Label ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 - 90 , 100 , 50 ), \"You get \" + scoreRecorder . getScore ()+ \" points in this game!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 90 , Screen . height / 2 , 200 , 50 ), \"Play Again\" , buttonStyle )) { replay (); } } } void Update () { if ( running && gameStatus == 1 ) { fpsCount ++; if ( fpsCount == 60 ) { if ( emitNum < difficulty . getEmitNum ()) { emitUFO (); fpsCount = 0 ; emitNum ++; } else if ( emitNum == difficulty . getEmitNum ()) { if ( scoreInRound < difficulty . getSuccessScore ()) { gameStatus = 2 ; } else { Invoke ( \"startRound\" , 3 ); timerController . setTime ( 3 ); difficulty . setDifficultyByScore ( scoreRecorder . getScore ()); } } } } else { if ( Input . GetKeyDown ( \"enter\" ) || Input . GetKeyDown ( \"return\" )) replay (); } } public void loadResources () { Instantiate ( Resources . Load ( \"Prefabs/Land\" )); } void startRound () { running = true ; roundText . text = \"\" + round ++; emitNum = 0 ; scoreInRound = 0 ; fpsCount = 0 ; } void emitUFO () { UFOController ufoCtrl = ufoFactory . GetUFO ( difficulty . getUFOAttributes ()); ufoCtrl . appear (); actionManager . addActionToUFO ( ufoCtrl . GetObject (), difficulty . getUFOAttributes (). speed ); } public void shootUFO ( UFOController ufo ) { scoreInRound ++; scoreRecorder . record ( difficulty . getDifficulty ()); actionManager . removeActionByObj ( ufo . GetObject ()); explosionFactory . explode ( ufo . GetObject (). transform . position ); ufoFactory . recycle ( ufo ); } public void shootGround ( Vector3 pos ) { explosionFactory . explode ( pos ); } public void replay () { gameStatus = 1 ; ufoFactory . recycleAll (); round = 1 ; roundText . text = \"\" + round ++; Invoke ( \"startRound\" , 3 ); timerController . setTime ( 3 ); difficulty . resetDifficulty (); scoreRecorder . reset (); } } \u6e38\u620f\u6548\u679c\u56fe \u603b\u7ed3 \u901a\u8fc7\u5b8c\u6210\u8fd9\u4e00\u6b21\u7684\u6e38\u620f\uff0c\u6211\u4f53\u4f1a\u5230\u4e86\u4e4b\u524d\u6211\u4eec\u6240\u5199\u7684MVC\u3001\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u5de8\u5927\u4f5c\u7528\uff0c\u6709\u4e86\u8fd9\u4e9b\u57fa\u672c\u7684\u67b6\u6784\uff0c\u6211\u4eec\u6e38\u620f\u7684\u5b9e\u73b0\u66f4\u52a0\u7b80\u6613\uff0c\u57fa\u672c\u53ea\u7528\u5b9e\u73b0\u6211\u4eec\u7684\u6e38\u620f\u7269\u4f53\u7684Controller\u3001\u5404\u4e2a\u6e38\u620f\u529f\u80fd\"\u8d1f\u8d23\u4eba\"\u7684Controller\uff0c\u7136\u540e\u901a\u8fc7\u573a\u8bb0\u5bf9\u4e8e\u5404\u4e2aController\u8fdb\u884c\u6574\u5408\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u6211\u4eec\u7684\u6574\u4e2a\u6e38\u620f\uff0c\u53ea\u8981\u6211\u4eec\u8bbe\u8ba1\u597d\u4e86\u6211\u4eec\u7684UML\u56fe\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u53ef\u4ee5\u5b9e\u73b0\u51fa\u6211\u4eec\u7684\u6574\u4e2a\u6e38\u620f\u3002","title":"\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#homework4-hitufo","text":"","title":"Homework4 HitUFO\uff01 \u6e38\u620f\u7f16\u7a0b\u5b9e\u8df5"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#_1","text":"\u5185\u5bb9\u8981\u6c42 \u6e38\u620f\u6709 n \u4e2a round\uff0c\u6bcf\u4e2a round \u90fd\u5305\u62ec10 \u6b21 trial \u6bcf\u4e2a trial \u7684\u98de\u789f\u7684\u8272\u5f69\u3001\u5927\u5c0f\u3001\u53d1\u5c04\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u89d2\u5ea6\u3001\u540c\u65f6\u51fa\u73b0\u7684\u4e2a\u6570\u90fd\u53ef\u80fd\u4e0d\u540c\u3002\u5b83\u4eec\u7531\u8be5 round \u7684 ruler \u63a7\u5236 \u6bcf\u4e2a trial \u7684\u98de\u789f\u6709\u968f\u673a\u6027\uff0c\u603b\u4f53\u96be\u5ea6\u968f round \u4e0a\u5347 \u9f20\u6807\u70b9\u4e2d\u5f97\u5206\uff0c\u5f97\u5206\u89c4\u5219\u6309\u8272\u5f69\u3001\u5927\u5c0f\u3001\u901f\u5ea6\u4e0d\u540c\u8ba1\u7b97\uff0c\u89c4\u5219\u53ef\u81ea\u7531\u8bbe\u5b9a \u6e38\u620f\u8981\u6c42 \u4f7f\u7528\u5e26\u7f13\u5b58\u7684\u5de5\u5382\u6a21\u5f0f\u7ba1\u7406\u4e0d\u540c\u98de\u789f\u7684\u751f\u4ea7\u4e0e\u56de\u6536\uff0c\u8be5\u5de5\u5382\u5fc5\u987b\u662f\u573a\u666f\u5355\u5b9e\u4f8b\u7684\uff01\u5177\u4f53\u5b9e\u73b0\u89c1\u53c2\u8003\u8d44\u6e90 Singleton \u6a21\u677f\u7c7b \u5c3d\u53ef\u80fd\u4f7f\u7528\u524d\u9762 MVC \u7ed3\u6784\u5b9e\u73b0\u4eba\u673a\u4ea4\u4e92\u4e0e\u6e38\u620f\u6a21\u578b\u5206\u79bb","title":"\u4f5c\u4e1a\u8981\u6c42"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#_2","text":"\u672c\u5468\u7684\u5185\u5bb9\u5728\u6709\u4e86\u4e4b\u524dMVC\u67b6\u6784\u4ee5\u53ca\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u5176\u5b9e\u672c\u6b21\u4f5c\u4e1a\u7684\u5b9e\u73b0\u8f83\u4e3a\u7b80\u5355\u3002\u6309\u7167\u4e4b\u524d\u7684\u60ef\u4f8b\uff0c\u4e3a\u4e86\u7f16\u7a0b\u7684\u6761\u7406\u6027\uff0c\u6211\u4eec\u5148\u8bbe\u8ba1\u51fa\u6211\u4eec\u8fd9\u6b21\u4f5c\u4e1a\u7684UML\u56fe","title":"\u4f5c\u4e1a\u5b9e\u73b0"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#_3","text":"Hit UFO! Hit UFO! (With GUN)","title":"\u89c6\u9891\u6f14\u793a"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#uml","text":"\u5176\u4e2dFirstCharacterController\u7c7b\u662f\u4e3aGUN\u7248\u672c\u521b\u5efa\u7684\u3002","title":"UML\u56fe"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#_4","text":"\u9996\u5148\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u6b21\u4f5c\u4e1a\u7684\u91cd\u4e2d\u4e4b\u91cd\uff0c\u5de5\u5382\u7c7b\u7684\u5b9e\u73b0\uff0c\u8fd9\u6b21\u7684\u4f5c\u4e1a\u4e00\u5171\u6709\u4e24\u4e2a\u5de5\u5382\u7c7b\uff0c\u4e00\u4e2a\u662fUFO\u751f\u6210\u7684\u5de5\u5382\uff0c\u4e00\u4e2a\u662f\u7206\u70b8\u751f\u6210\u7684\u5de5\u5382\uff0c \u901a\u8fc7\u5e26\u7f13\u5b58\u7684\u5de5\u5382\u5bf9\u8c61\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u51cf\u5c11\u4e86\u6e38\u620f\u5bf9\u8c61\u7684\u521b\u5efa\u4ee5\u53ca\u9500\u6bc1\u7684\u6b21\u6570\uff0c\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u6e38\u620f\u7684\u5f00\u9500\uff0c\u5e76\u4e14\u6e38\u620f\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u9500\u6bc1\u7531\u4e00\u4e2a\u5bf9\u8c61\u7edf\u4e00\u7ba1\u7406\uff0c\u4f7f\u5f97\u4e1a\u52a1\u903b\u8f91\u66f4\u52a0\u660e\u786e\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u7684\u7a0b\u5e8f\u66f4\u52a0\u5bb9\u6613\u6269\u5c55\u3002 \u4e0b\u9762\u6211\u4eec\u5148\u6765\u770b\u770b\u8fd9\u4e24\u4e2a\u7c7b","title":"\u5206\u7c7b\u4ecb\u7ecd"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#ufofactory","text":"public class UFOFactory : MonoBehaviour { Queue < UFOController > waitingQueue ; List < UFOController > runningList ; GameObject basic ; private void Awake () { waitingQueue = new Queue < UFOController >(); runningList = new List < UFOController >(); basic = Instantiate ( Resources . Load ( \"Prefabs/UFO\" , typeof ( GameObject ))) as GameObject ; basic . SetActive ( false ); } public UFOController GetUFO ( UFOData data ) { UFOController ufo ; if ( waitingQueue . Count > 0 ) ufo = waitingQueue . Dequeue (); else { GameObject newUFO = GameObject . Instantiate ( basic ); ufo = new UFOController ( newUFO ); newUFO . transform . position += Vector3 . forward * Random . value * 10 ; } ufo . setAttribute ( data ); runningList . Add ( ufo ); ufo . appear (); return ufo ; } public List < UFOController > GetRunningList () { return this . runningList ; } public UFOController [] initAll ( UFOData data , int num ) { UFOController [] list = new UFOController [ num ]; for ( int i = 0 ; i < num ; i ++) { list [ i ] = GetUFO ( data ); } return list ; } public void recycle ( UFOController ufo ) { ufo . disappear (); waitingQueue . Enqueue ( ufo ); runningList . Remove ( ufo ); } public void recycleAll () { while ( runningList . Count != 0 ) { recycle ( runningList [ 0 ]); } } }","title":"UFOFactory"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#explosionfactory","text":"public class ExplosionFactory : MonoBehaviour { Queue < GameObject > waitingQueue ; List < GameObject > runningList ; GameObject basic ; private void Awake () { waitingQueue = new Queue < GameObject >(); runningList = new List < GameObject >(); basic = Instantiate ( Resources . Load ( \"Prefabs/Explosion\" , typeof ( GameObject ))) as GameObject ; basic . SetActive ( false ); } public void explode ( Vector3 pos ) { GameObject explosion ; if ( waitingQueue . Count == 0 ) { explosion = GameObject . Instantiate ( basic ); explosion . AddComponent < SelfRecycle > (). factory = this ; } else { explosion = waitingQueue . Dequeue (); } runningList . Add ( explosion ); explosion . GetComponent < SelfRecycle > (). startTimer ( 0.2f ); explosion . SetActive ( true ); explosion . transform . position = pos ; } public void recycle ( GameObject explosion ) { explosion . SetActive ( false ); waitingQueue . Enqueue ( explosion ); runningList . Remove ( explosion ); } }","title":"ExplosionFactory"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#flyaction","text":"\u5728\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u662f\u6211\u4eec\u7b2c\u4e00\u4e2a\u661f\u671f\u6240\u5199\u7684\u629b\u7269\u7ebf\u8fd0\u52a8\u7684\u4ee3\u7801\uff0c\u5916\u90e8\u901a\u8fc7getAction\u63d0\u4f9bUFO\u7684x, y\u7684\u521d\u901f\u5ea6\uff0c\u751f\u6210\u7269\u4f53\u7684\u901f\u5ea6\u5411\u91cf\uff0c\u7136\u540e\u6bcf\u4e00\u5e27\u90fd\u7ed9\u7269\u4f53\u52a0\u4e0a\u5bf9\u5e94\u91cd\u529b\u7684\u79fb\u52a8\u548c\u521d\u901f\u5ea6\u7684\u79fb\u52a8\u5373\u53ef\u5f97\u5230\u7269\u4f53\u7684\u629b\u7269\u7ebf\u3002 public class FlyAction : SSAction { public float Vx ; public float Vy ; public Vector3 speed ; public Vector3 gravity ; private FlyAction () { } public static FlyAction getAction ( float vx , float vy ) { FlyAction action = ScriptableObject . CreateInstance < FlyAction > (); action . gravity = Vector3 . zero ; action . Vx = vx ; action . Vy = vy ; return action ; } // Use this for initialization public override void Start () { speed = new Vector3 ( Vx , Vy , 0 ); } // Update is called once per frame public override void Update () { if ( 2 * Vy + gravity . y > 0.00001 ) { gravity . y -= 10 * Time . fixedDeltaTime ; transform . Translate ( speed * Time . fixedDeltaTime ); transform . Translate ( gravity * Time . fixedDeltaTime ); } else { destroy = true ; callback . actionDone ( this ); } } }","title":"FlyAction"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#fire","text":"Fire\u7c7b\u662f\u6e38\u620f\u7684\u63d0\u4f9b\u5f00\u706b\u64cd\u4f5c\u7684\u7c7b\uff0c\u901a\u8fc7\u8be5\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u7528\u6237\u7684\u8f93\u5165\uff0c\u5e76\u4e14\u5bf9\u4e8e\u7528\u6237\u64cd\u4f5c\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\uff0c\u6211\u4eec\u672c\u6b21\u5b9e\u9a8c\u4e3b\u8981\u7528\u5230\u4e86Ray\u6765\u5b9e\u73b0\u7528\u6237\u7684\u5c04\u51fb\u64cd\u4f5c\uff0c\u901a\u8fc7Raycast\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u5c04\u7ebf\u51fb\u4e2d\u7684\u7269\u4f53\uff0c\u5e76\u4e14\u628a\u5176\u901a\u8fc7\u76f8\u5e94\u7684\u63a5\u53e3\u4f20\u7ed9\u6211\u4eec\u7684\u573a\u8bb0(SceneControll)\uff0c\u5b8c\u6210\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 public class Fire : MonoBehaviour { public new Camera camera ; public FirstController sceneController ; LayerMask layer ; void Awake () { layer = LayerMask . GetMask ( \"UFO\" , \"Terrian\" ); } // Use this for initialization void Start () { camera = Camera . main ; sceneController = GameDirector . getInstance (). currentSceneController as FirstController ; } // Update is called once per frame void Update () { if ( Input . GetButton ( \"Fire1\" )) { Ray ray = camera . ScreenPointToRay ( Input . mousePosition ); RaycastHit hit ; if ( Physics . Raycast ( ray , out hit , Mathf . Infinity , layer )) { if ( hit . transform . gameObject . layer == 8 ) { sceneController . shootUFO ( hit . transform . gameObject . GetComponent < UFOCtrl >(). ufoController ); } else if ( hit . transform . gameObject . layer == 9 ) { sceneController . shootGround ( hit . point ); } } } } }","title":"Fire"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#scorerecorder","text":"ScoreRecorder\u7684\u4f5c\u7528\u5c31\u662f\u6211\u4eec\u6e38\u620f\u7684\u8ba1\u5206\u5458\uff0c\u6211\u4eec\u79ef\u5206\u6570\u636e\u7ef4\u62a4\u6ca1\u6709\u653e\u5728\u573a\u8bb0\u91cc\u9762\uff0c\u800c\u662f\u628a\u5176\u5206\u79bb\u4e86\u51fa\u6765\u505a\u4e86\u4e00\u4e2a\u8bb0\u5206\u5458\uff0c\u7531\u8bb0\u5206\u5458\u6765\u7ef4\u62a4\u6211\u4eec\u7684\u79ef\u5206 public class ScoreRecorder { private int score ; Text gameInfo ; private static ScoreRecorder instance ; public static ScoreRecorder getInstance () { if ( instance == null ) { instance = new ScoreRecorder (); } return instance ; } private ScoreRecorder () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/ScoreInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text >(); gameInfo . text = \"\" + score ; } public void record ( int difficulty ) { score += difficulty + 1 ; gameInfo . text = \"\" + score ; } public int getScore () { return score ; } }","title":"ScoreRecorder"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#firstcontroller","text":"FirstController\u7c7b\u5c31\u662f\u6211\u4eec\u8fd9\u6b21\u6e38\u620f\u573a\u666f\u7684\u573a\u8bb0\u4e86\uff0c\u5728\u4e4b\u524d\u5b66\u4e60\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u8fd9\u4e00\u6b21\u6e38\u620f\u67b6\u6784\u7684\u8bbe\u8ba1\u66f4\u52a0\u5408\u7406\uff0c\u573a\u8bb0\u76f8\u6bd4\u4e0a\u4e00\u6b21\u7684\u6e38\u620f\u66f4\u52a0\u7b80\u6d01\u6613\u770b\uff0c\u53ef\u8bfb\u6027\u66f4\u5f3a\u3002 public class FirstController : MonoBehaviour , ISceneController { GameDirector gameDirector ; FirstSceneActionManager actionManager ; public UFOFactory ufoFactory ; ExplosionFactory explosionFactory ; ScoreRecorder scoreRecorder ; TimerController timerController ; DifficultyController difficulty ; int gameStatus ; int round = 1 ; int emitNum ; int scoreInRound ; int fpsCount ; bool running ; GUIStyle headerStyle ; GUIStyle buttonStyle ; Text roundText ; void Awake () { gameDirector = GameDirector . getInstance (); gameDirector . currentSceneController = this ; actionManager = gameObject . AddComponent < FirstSceneActionManager >(); ufoFactory = gameObject . AddComponent < UFOFactory >(); explosionFactory = gameObject . AddComponent < ExplosionFactory > (); difficulty = DifficultyController . getInstance (); timerController = gameObject . AddComponent < TimerController >(); scoreRecorder = ScoreRecorder . getInstance (); loadResources (); } public void Start () { gameStatus = 0 ; difficulty . setDifficulty ( 0 ); round = 1 ; roundText = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/RoundInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text >(); roundText . text = \"\" + round ; fpsCount = 0 ; headerStyle = new GUIStyle (); headerStyle . fontSize = 40 ; headerStyle . alignment = TextAnchor . MiddleCenter ; buttonStyle = new GUIStyle ( \"button\" ); buttonStyle . fontSize = 30 ; running = false ; } void OnGUI () { if ( gameStatus == 0 ) { GUI . Label ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 - 90 , 100 , 50 ), \"Hit the UFO!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 , 100 , 50 ), \"Play!\" , buttonStyle )) { replay (); } } else if ( gameStatus == 2 ) { GUI . Label ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 - 90 , 100 , 50 ), \"You get \" + scoreRecorder . getScore ()+ \" points in this game!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 90 , Screen . height / 2 , 200 , 50 ), \"Play Again\" , buttonStyle )) { replay (); } } } void Update () { if ( running && gameStatus == 1 ) { fpsCount ++; if ( fpsCount == 60 ) { if ( emitNum < difficulty . getEmitNum ()) { emitUFO (); fpsCount = 0 ; emitNum ++; } else if ( emitNum == difficulty . getEmitNum ()) { if ( scoreInRound < difficulty . getSuccessScore ()) { gameStatus = 2 ; } else { Invoke ( \"startRound\" , 3 ); timerController . setTime ( 3 ); difficulty . setDifficultyByScore ( scoreRecorder . getScore ()); } } } } else { if ( Input . GetKeyDown ( \"enter\" ) || Input . GetKeyDown ( \"return\" )) replay (); } } public void loadResources () { Instantiate ( Resources . Load ( \"Prefabs/Land\" )); } void startRound () { running = true ; roundText . text = \"\" + round ++; emitNum = 0 ; scoreInRound = 0 ; fpsCount = 0 ; } void emitUFO () { UFOController ufoCtrl = ufoFactory . GetUFO ( difficulty . getUFOAttributes ()); ufoCtrl . appear (); actionManager . addActionToUFO ( ufoCtrl . GetObject (), difficulty . getUFOAttributes (). speed ); } public void shootUFO ( UFOController ufo ) { scoreInRound ++; scoreRecorder . record ( difficulty . getDifficulty ()); actionManager . removeActionByObj ( ufo . GetObject ()); explosionFactory . explode ( ufo . GetObject (). transform . position ); ufoFactory . recycle ( ufo ); } public void shootGround ( Vector3 pos ) { explosionFactory . explode ( pos ); } public void replay () { gameStatus = 1 ; ufoFactory . recycleAll (); round = 1 ; roundText . text = \"\" + round ++; Invoke ( \"startRound\" , 3 ); timerController . setTime ( 3 ); difficulty . resetDifficulty (); scoreRecorder . reset (); } }","title":"FirstController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#_5","text":"","title":"\u6e38\u620f\u6548\u679c\u56fe"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#_6","text":"\u901a\u8fc7\u5b8c\u6210\u8fd9\u4e00\u6b21\u7684\u6e38\u620f\uff0c\u6211\u4f53\u4f1a\u5230\u4e86\u4e4b\u524d\u6211\u4eec\u6240\u5199\u7684MVC\u3001\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u5de8\u5927\u4f5c\u7528\uff0c\u6709\u4e86\u8fd9\u4e9b\u57fa\u672c\u7684\u67b6\u6784\uff0c\u6211\u4eec\u6e38\u620f\u7684\u5b9e\u73b0\u66f4\u52a0\u7b80\u6613\uff0c\u57fa\u672c\u53ea\u7528\u5b9e\u73b0\u6211\u4eec\u7684\u6e38\u620f\u7269\u4f53\u7684Controller\u3001\u5404\u4e2a\u6e38\u620f\u529f\u80fd\"\u8d1f\u8d23\u4eba\"\u7684Controller\uff0c\u7136\u540e\u901a\u8fc7\u573a\u8bb0\u5bf9\u4e8e\u5404\u4e2aController\u8fdb\u884c\u6574\u5408\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u6211\u4eec\u7684\u6574\u4e2a\u6e38\u620f\uff0c\u53ea\u8981\u6211\u4eec\u8bbe\u8ba1\u597d\u4e86\u6211\u4eec\u7684UML\u56fe\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u53ef\u4ee5\u5b9e\u73b0\u51fa\u6211\u4eec\u7684\u6574\u4e2a\u6e38\u620f\u3002","title":"\u603b\u7ed3"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb07-\u81ea\u5b9a\u4e49Component(Editor)/","text":"\u81ea\u5b9a\u4e49Component \u5236\u4f5c\u4e00\u4e2aUnity\u7684Inspector\u754c\u9762\u4e2d\u7684Editor \u64cd\u4f5c\u7ec4\u4ef6 \u5236\u4f5c\u8fc7\u7a0b \u65b0\u5efa\u4e00\u4e2aInspector\u7c7b, \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aInspector\u7c7b\u7684\u7b80\u5355\u6837\u4f8b [CustomEditor(typeof(XX))] public class xxEditor : Editor { public override void OnInspectorGUI () { var target = ( XX )( serializedObject . targetObject ); target . speed = EditorGUILayout . Slider ( \"Speed\" , target . speed , 0 , 100 ); ProgressBar ( target . speed , \"Speed\" ); target . color = EditorGUILayout . ColorField ( \"Color\" , target . color ); } private void ProgressBar ( float value , string label ) { Rect rect = GUILayoutUtility . GetRect ( 20 , 20 , \"TextField\" ); EditorGUI . ProgressBar ( rect , value , label ); EditorGUILayout . Space (); } } \u7136\u540e\uff0c\u6211\u4eec\u53ea\u8981\u628aXX ADD\u5230\u4e00\u4e2aGameObject\u4e0a\uff0cInspector\u4e2d\u5c31\u4f1a\u51fa\u73b0\u6211\u4eec\u521a\u521a\u5199\u7684Editor\u4e86\u3002","title":"\u5b66\u4e60\u7b14\u8bb07-\u81ea\u5b9a\u4e49Component(Editor)"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb07-\u81ea\u5b9a\u4e49Component(Editor)/#component","text":"","title":"\u81ea\u5b9a\u4e49Component"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb07-\u81ea\u5b9a\u4e49Component(Editor)/#unityinspectoreditor","text":"","title":"\u5236\u4f5c\u4e00\u4e2aUnity\u7684Inspector\u754c\u9762\u4e2d\u7684Editor \u64cd\u4f5c\u7ec4\u4ef6"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb07-\u81ea\u5b9a\u4e49Component(Editor)/#_1","text":"\u65b0\u5efa\u4e00\u4e2aInspector\u7c7b, \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aInspector\u7c7b\u7684\u7b80\u5355\u6837\u4f8b [CustomEditor(typeof(XX))] public class xxEditor : Editor { public override void OnInspectorGUI () { var target = ( XX )( serializedObject . targetObject ); target . speed = EditorGUILayout . Slider ( \"Speed\" , target . speed , 0 , 100 ); ProgressBar ( target . speed , \"Speed\" ); target . color = EditorGUILayout . ColorField ( \"Color\" , target . color ); } private void ProgressBar ( float value , string label ) { Rect rect = GUILayoutUtility . GetRect ( 20 , 20 , \"TextField\" ); EditorGUI . ProgressBar ( rect , value , label ); EditorGUILayout . Space (); } } \u7136\u540e\uff0c\u6211\u4eec\u53ea\u8981\u628aXX ADD\u5230\u4e00\u4e2aGameObject\u4e0a\uff0cInspector\u4e2d\u5c31\u4f1a\u51fa\u73b0\u6211\u4eec\u521a\u521a\u5199\u7684Editor\u4e86\u3002","title":"\u5236\u4f5c\u8fc7\u7a0b"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f/","text":"Homework5-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f \u8fd9\u5468\u7684\u4efb\u52a1\u4e3b\u8981\u5c31\u662f\u901a\u8fc7\u7ed9\u6253\u98de\u789f\u6e38\u620f\u52a0\u4e0aadapter\u6a21\u5f0f\u8ba9\u6211\u4eec\u719f\u6089adapter\u6a21\u5f0f\uff0c\u4f53\u4f1a\u5230Apapter\u6a21\u5f0f\u7ed9\u6211\u4eec\u7f16\u7a0b\u5e26\u6765\u7684\u4f5c\u7528\uff0c\u63d0\u5347\u6211\u4eec\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u6280\u5de7\u3002 \u6f14\u793a\u89c6\u9891 \u89c6\u9891\u6f14\u793a\u7f51\u7ad9: Hit UFO! \u672c\u5468\u7684\u6e38\u620f\u6548\u679c\u548c\u4e0a\u5468\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u591a\u4e86\u4e00\u4e2a\u53f3\u952e\u70b9\u51fb\u9f20\u6807\u5207\u6362\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u529f\u80fd\u3002 \u5b8c\u6210\u7684\u7c7b \u5176\u5b9e\u5728\u4e0a\u4e00\u5468\u5df2\u5b8c\u6210\u4f5c\u4e1a\u7684\u57fa\u7840\u4e0a\uff0c\u8fd9\u4e00\u5468\u5e76\u4e0d\u7528\u52a0\u4ec0\u4e48\u7279\u522b\u7684\u4e1c\u897f\u3002\u53ea\u9700\u8981\u5199\u51fa\u4e00\u4e2a\u57fa\u672c\u7684ActionManagerTarget\u7684\u63a5\u53e3(\u7c7b\u4f3c\u4e0a\u56fe\u4e2d\u7684IActionManager), \u7136\u540e\u5b9e\u73b0\u4e00\u4e2a\u4f9b\u573a\u666f\u63a7\u5236\u5668\u8c03\u7528\u7684ActionManagerAdapter,\u7136\u540e\u5b9e\u73b0\u6211\u4eec\u8fd9\u6b21\u9700\u8981\u5b9e\u73b0\u7684PhysicsActionManager, \u628a\u539f\u6765\u8c03\u7528FirstSceneActionController\u7684\u5730\u65b9\u6362\u6210\u8c03\u7528\u6211\u4eec\u65b0\u5b9e\u73b0\u7684ActionManagerAdapter\uff0c\u90a3\u4e48\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u5b8c\u6210\u4e86\u3002\u4e0b\u9762\u6211\u4eec\u5206\u7c7b\u6765\u8bf4\u8bf4 ActionManagerTarget \u8fd9\u4e2a\u63a5\u53e3\u91cc\u58f0\u660e\u7684\u5c31\u662f\u6211\u4eec\u52a8\u4f5c\u7ba1\u7406\u5668\u6240\u9700\u7684\u57fa\u672c\u51fd\u6570\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5207\u6362\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u529f\u80fd\u3002\u901a\u8fc7\u4f7f\u7528\u8fd9\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u591a\u4e2a\u52a8\u4f5c\u7ba1\u7406\u5668\u4e4b\u95f4\u65e0\u7f1d\u5207\u6362. public interface ActionManagerTarget { int getMode (); void switchActionManager (); void addAction ( GameObject ufo , float speed ); void removeActionOf ( GameObject ufo ); } ActionManagerAdapter \u8fd9\u91cc\u5c31\u662f\u5bf9\u4e8e\u6211\u4eec\u58f0\u660e\u7684\u4e00\u4e2a\u63a5\u53e3\u7684\u5b9e\u73b0\uff0c\u901a\u8fc7\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u4ee5\u4f9b\u573a\u666f\u63a7\u5236\u5668\u8c03\u7528\uff0c\u6211\u4eec\u7ed9\u6e38\u620f\u52a0\u4e0a\u7684Adapter\u6a21\u5f0f\u7684\u5de5\u4f5c\u5c31\u5b8c\u6210\u4e00\u5927\u534a\u4e86\uff0c\u5269\u4e0b\u7684\u57fa\u672c\u5c31\u662f\u5b8c\u6210PhysicsActionManager\u4e86\u3002 public class ActionManagerAdapter : ActionManagerTarget { FirstSceneActionManager firstSceneActionManager ; PhysicsActionManager physicsActionManager ; int mode = 0 ; // 0: firstSceneActionManager, 1: physicsActionManager public int getMode () { return mode ; } public void switchActionManager () { mode = 1 - mode ; } public ActionManagerAdapter ( GameObject main ) { firstSceneActionManager = main . AddComponent < FirstSceneActionManager > (); physicsActionManager = main . AddComponent < PhysicsActionManager > (); mode = 0 ; } public void addAction ( GameObject ufo , float speed ) { if ( mode == 0 ) { firstSceneActionManager . addActionToUFO ( ufo , speed ); } else { physicsActionManager . addForceToObj ( ufo , speed ); } } public void removeActionOf ( GameObject ufo ) { if ( mode == 0 ) { firstSceneActionManager . removeActionByObj ( ufo ); } else { physicsActionManager . removeForceOfObj ( ufo ); } } } PhysicsActionManage \u5728\u8fd9\u91cc\u56e0\u4e3a\u7ed9\u6211\u4eec\u7684ufo\u52a0\u4e0a\u4e86\u521a\u4f53\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u52a0\u4e0a\u529b\u3001\u521d\u901f\u5ea6\uff0c\u53bb\u6389\u529b\u7684\u65b9\u5f0f\uff0c\u7ed9\u52a8\u4f5c\u52a0\u4e0a\u5bf9\u5e94\u7684\u52a8\u4f5c\uff0c\u8bbe\u901f\u5ea6\u4e3a0\u7684\u64cd\u4f5c\u5b9e\u73b0\u52a8\u4f5c\u7684\u7ba1\u7406\u3002 public class PhysicsActionManager : MonoBehaviour { public void addForceToObj ( GameObject ufo , float speed ) { int position = ( Random . Range ( 1 , 3 ) < 2 ) ? - 1 : 1 ; ufo . transform . position = new Vector3 (- 10 * position , Random . Range ( 4 , 6 ), 5 ); Vector3 speedVector = new Vector3 ( Random . Range (( int ) speed , ( int )( 1.5 * speed )) * position , Random . Range (( int ) speed , ( int )( 1.2 * speed )), 0 ); ufo . GetComponent < Rigidbody > (). useGravity = true ; ufo . GetComponent < Rigidbody > (). velocity = speedVector ; } public void removeForceOfObj ( GameObject ufo ) { ufo . GetComponent < Rigidbody > (). useGravity = false ; ufo . GetComponent < Rigidbody > (). velocity = Vector3 . zero ; } } \u5b9e\u73b0\u4e86\u8fd9\u4e9b\u7c7b\u4e4b\u540e\uff0c\u52a0\u4e0a\u5176\u4ed6\u4ee3\u7801\u7684\u4e00\u4e9b\u5fae\u5c0f\u7684\u4fee\u6574\uff0c\u5373\u4e00\u4e9b\u5730\u65b9\u5bf9\u4e8e\u5207\u6362\u573a\u666f\u63a7\u5236\u5668\u529f\u80fd\u7684\u8c03\u7528\u7684\u8bbe\u7f6e(\u6e38\u620f\u573a\u666f\u5185\u53f3\u952e\u70b9\u51fb)\u4ee5\u53ca\u4e00\u4e9b\u52a0\u5165\u4e86\u65b0\u7684PhysicsActionManager\u540e\u51fa\u4e86\u4e00\u4e9b\u5c0fBug\u7684\u4fee\u590d\u548c\u52a0\u4e86\u4e00\u4e9b\u6e38\u620f\u7684\u5f69\u86cb(\u98de\u789f\u76f8\u649e\u4f1a\ud83d\udca5\uff0c\u4f60\u6253\u5f97\u4e0d\u5feb\u7684\u8bdd\u6709\u65f6\u5c31\u6253\u4e0d\u5230\u4e86\uff0c\u54c8\u54c8)\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u8fd9\u5468\u7684\u4f5c\u4e1a\u4e86\uff0c\u8fd9\u5468\u7684\u8fd9\u4e2a\u4f5c\u4e1a\u76f8\u5bf9\u524d\u51e0\u5468\u5176\u5b9e\u4efb\u52a1\u91cf\u5e76\u4e0d\u5927\uff0c\u6240\u4ee5\uff0c\u7ee7\u7eed\u809d\u5c04\u7bad\u5c0f\u6e38\u620f\u53bb\u5566\ud83c\udf1a!","title":"\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f/#homework5-adapter","text":"\u8fd9\u5468\u7684\u4efb\u52a1\u4e3b\u8981\u5c31\u662f\u901a\u8fc7\u7ed9\u6253\u98de\u789f\u6e38\u620f\u52a0\u4e0aadapter\u6a21\u5f0f\u8ba9\u6211\u4eec\u719f\u6089adapter\u6a21\u5f0f\uff0c\u4f53\u4f1a\u5230Apapter\u6a21\u5f0f\u7ed9\u6211\u4eec\u7f16\u7a0b\u5e26\u6765\u7684\u4f5c\u7528\uff0c\u63d0\u5347\u6211\u4eec\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u6280\u5de7\u3002","title":"Homework5-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f/#_1","text":"\u89c6\u9891\u6f14\u793a\u7f51\u7ad9: Hit UFO! \u672c\u5468\u7684\u6e38\u620f\u6548\u679c\u548c\u4e0a\u5468\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u591a\u4e86\u4e00\u4e2a\u53f3\u952e\u70b9\u51fb\u9f20\u6807\u5207\u6362\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u529f\u80fd\u3002","title":"\u6f14\u793a\u89c6\u9891"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f/#_2","text":"\u5176\u5b9e\u5728\u4e0a\u4e00\u5468\u5df2\u5b8c\u6210\u4f5c\u4e1a\u7684\u57fa\u7840\u4e0a\uff0c\u8fd9\u4e00\u5468\u5e76\u4e0d\u7528\u52a0\u4ec0\u4e48\u7279\u522b\u7684\u4e1c\u897f\u3002\u53ea\u9700\u8981\u5199\u51fa\u4e00\u4e2a\u57fa\u672c\u7684ActionManagerTarget\u7684\u63a5\u53e3(\u7c7b\u4f3c\u4e0a\u56fe\u4e2d\u7684IActionManager), \u7136\u540e\u5b9e\u73b0\u4e00\u4e2a\u4f9b\u573a\u666f\u63a7\u5236\u5668\u8c03\u7528\u7684ActionManagerAdapter,\u7136\u540e\u5b9e\u73b0\u6211\u4eec\u8fd9\u6b21\u9700\u8981\u5b9e\u73b0\u7684PhysicsActionManager, \u628a\u539f\u6765\u8c03\u7528FirstSceneActionController\u7684\u5730\u65b9\u6362\u6210\u8c03\u7528\u6211\u4eec\u65b0\u5b9e\u73b0\u7684ActionManagerAdapter\uff0c\u90a3\u4e48\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u5b8c\u6210\u4e86\u3002\u4e0b\u9762\u6211\u4eec\u5206\u7c7b\u6765\u8bf4\u8bf4","title":"\u5b8c\u6210\u7684\u7c7b"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f/#actionmanagertarget","text":"\u8fd9\u4e2a\u63a5\u53e3\u91cc\u58f0\u660e\u7684\u5c31\u662f\u6211\u4eec\u52a8\u4f5c\u7ba1\u7406\u5668\u6240\u9700\u7684\u57fa\u672c\u51fd\u6570\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5207\u6362\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u529f\u80fd\u3002\u901a\u8fc7\u4f7f\u7528\u8fd9\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u591a\u4e2a\u52a8\u4f5c\u7ba1\u7406\u5668\u4e4b\u95f4\u65e0\u7f1d\u5207\u6362. public interface ActionManagerTarget { int getMode (); void switchActionManager (); void addAction ( GameObject ufo , float speed ); void removeActionOf ( GameObject ufo ); }","title":"ActionManagerTarget"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f/#actionmanageradapter","text":"\u8fd9\u91cc\u5c31\u662f\u5bf9\u4e8e\u6211\u4eec\u58f0\u660e\u7684\u4e00\u4e2a\u63a5\u53e3\u7684\u5b9e\u73b0\uff0c\u901a\u8fc7\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u4ee5\u4f9b\u573a\u666f\u63a7\u5236\u5668\u8c03\u7528\uff0c\u6211\u4eec\u7ed9\u6e38\u620f\u52a0\u4e0a\u7684Adapter\u6a21\u5f0f\u7684\u5de5\u4f5c\u5c31\u5b8c\u6210\u4e00\u5927\u534a\u4e86\uff0c\u5269\u4e0b\u7684\u57fa\u672c\u5c31\u662f\u5b8c\u6210PhysicsActionManager\u4e86\u3002 public class ActionManagerAdapter : ActionManagerTarget { FirstSceneActionManager firstSceneActionManager ; PhysicsActionManager physicsActionManager ; int mode = 0 ; // 0: firstSceneActionManager, 1: physicsActionManager public int getMode () { return mode ; } public void switchActionManager () { mode = 1 - mode ; } public ActionManagerAdapter ( GameObject main ) { firstSceneActionManager = main . AddComponent < FirstSceneActionManager > (); physicsActionManager = main . AddComponent < PhysicsActionManager > (); mode = 0 ; } public void addAction ( GameObject ufo , float speed ) { if ( mode == 0 ) { firstSceneActionManager . addActionToUFO ( ufo , speed ); } else { physicsActionManager . addForceToObj ( ufo , speed ); } } public void removeActionOf ( GameObject ufo ) { if ( mode == 0 ) { firstSceneActionManager . removeActionByObj ( ufo ); } else { physicsActionManager . removeForceOfObj ( ufo ); } } }","title":"ActionManagerAdapter"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f/#physicsactionmanage","text":"\u5728\u8fd9\u91cc\u56e0\u4e3a\u7ed9\u6211\u4eec\u7684ufo\u52a0\u4e0a\u4e86\u521a\u4f53\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u52a0\u4e0a\u529b\u3001\u521d\u901f\u5ea6\uff0c\u53bb\u6389\u529b\u7684\u65b9\u5f0f\uff0c\u7ed9\u52a8\u4f5c\u52a0\u4e0a\u5bf9\u5e94\u7684\u52a8\u4f5c\uff0c\u8bbe\u901f\u5ea6\u4e3a0\u7684\u64cd\u4f5c\u5b9e\u73b0\u52a8\u4f5c\u7684\u7ba1\u7406\u3002 public class PhysicsActionManager : MonoBehaviour { public void addForceToObj ( GameObject ufo , float speed ) { int position = ( Random . Range ( 1 , 3 ) < 2 ) ? - 1 : 1 ; ufo . transform . position = new Vector3 (- 10 * position , Random . Range ( 4 , 6 ), 5 ); Vector3 speedVector = new Vector3 ( Random . Range (( int ) speed , ( int )( 1.5 * speed )) * position , Random . Range (( int ) speed , ( int )( 1.2 * speed )), 0 ); ufo . GetComponent < Rigidbody > (). useGravity = true ; ufo . GetComponent < Rigidbody > (). velocity = speedVector ; } public void removeForceOfObj ( GameObject ufo ) { ufo . GetComponent < Rigidbody > (). useGravity = false ; ufo . GetComponent < Rigidbody > (). velocity = Vector3 . zero ; } } \u5b9e\u73b0\u4e86\u8fd9\u4e9b\u7c7b\u4e4b\u540e\uff0c\u52a0\u4e0a\u5176\u4ed6\u4ee3\u7801\u7684\u4e00\u4e9b\u5fae\u5c0f\u7684\u4fee\u6574\uff0c\u5373\u4e00\u4e9b\u5730\u65b9\u5bf9\u4e8e\u5207\u6362\u573a\u666f\u63a7\u5236\u5668\u529f\u80fd\u7684\u8c03\u7528\u7684\u8bbe\u7f6e(\u6e38\u620f\u573a\u666f\u5185\u53f3\u952e\u70b9\u51fb)\u4ee5\u53ca\u4e00\u4e9b\u52a0\u5165\u4e86\u65b0\u7684PhysicsActionManager\u540e\u51fa\u4e86\u4e00\u4e9b\u5c0fBug\u7684\u4fee\u590d\u548c\u52a0\u4e86\u4e00\u4e9b\u6e38\u620f\u7684\u5f69\u86cb(\u98de\u789f\u76f8\u649e\u4f1a\ud83d\udca5\uff0c\u4f60\u6253\u5f97\u4e0d\u5feb\u7684\u8bdd\u6709\u65f6\u5c31\u6253\u4e0d\u5230\u4e86\uff0c\u54c8\u54c8)\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u8fd9\u5468\u7684\u4f5c\u4e1a\u4e86\uff0c\u8fd9\u5468\u7684\u8fd9\u4e2a\u4f5c\u4e1a\u76f8\u5bf9\u524d\u51e0\u5468\u5176\u5b9e\u4efb\u52a1\u91cf\u5e76\u4e0d\u5927\uff0c\u6240\u4ee5\uff0c\u7ee7\u7eed\u809d\u5c04\u7bad\u5c0f\u6e38\u620f\u53bb\u5566\ud83c\udf1a!","title":"PhysicsActionManage"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/","text":"Homework5-\u5c04\u7bad\u5c0f\u6e38\u620f \u6e38\u620f\u8981\u6c42 \u9776\u5bf9\u8c61\u4e3a 5 \u73af\uff0c\u6309\u73af\u8ba1\u5206\uff1b \u7bad\u5bf9\u8c61\uff0c\u5c04\u4e2d\u540e\u8981\u63d2\u5728\u9776\u4e0a \u589e\u5f3a\u8981\u6c42\uff1a\u5c04\u4e2d\u540e\uff0c\u7bad\u5bf9\u8c61\u4ea7\u751f\u98a4\u6296\u6548\u679c\uff0c\u5230\u4e0b\u4e00\u6b21\u5c04\u51fb \u6216 1\u79d2\u4ee5\u540e\uff08\u672a\u5b9e\u73b0\uff09 \u6e38\u620f\u4ec5\u4e00\u8f6e\uff0c\u65e0\u9650 trials\uff1b \u589e\u5f3a\u8981\u6c42\uff1a\u6dfb\u52a0\u4e00\u4e2a\u98ce\u5411\u548c\u5f3a\u5ea6\u6807\u5fd7\uff0c\u63d0\u9ad8\u96be\u5ea6 \u5b9e\u73b0\u6548\u679c \u89c6\u9891\u6f14\u793a\u7f51\u7ad9\u4e3a ArrowGame \u4e0b\u9762\u662f\u6e38\u620f\u7684\u622a\u56fe UML\u56fe \u6e38\u620f\u5b9e\u73b0 \u505a\u4e86\u8fd9\u51e0\u6b21\u7684\u4f5c\u4e1a\u4ee5\u540e\uff0c\u6211\u53d1\u73b0\u57fa\u672c\u67b6\u6784\u7684\u4ee3\u7801\u90fd\u51e0\u4e4e\u53ef\u4ee5\u590d\u7528\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u628a\u4e00\u4e9b\u57fa\u672c\u7684\u6bcf\u6b21\u7528\u5230\u7684\u4ee3\u7801\u5f04\u4e86\u4e00\u4e2aBasicCode\u6587\u4ef6\u5939\uff0cActionManager\u4e5f\u6446\u653e\u5728\u5185\uff0c\u7f16\u5199\u6e38\u620f\u7684\u65f6\u5019\uff0c\u5728\u5176\u57fa\u7840\u4e0a\u589e\u52a0\u5c31\u597d\u4e86\u3002 \u6839\u636e\u6211\u4eec\u753b\u51fa\u7684UML\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8fd9\u6b21\u9700\u8981\u5b8c\u6210\u7684\u7c7b\u4e0d\u7b97\u591a, \u57fa\u7840\u7684\u4ee3\u7801\u90fd\u6709\uff0c\u4e0d\u4e0d\u4e0d\u8fc7\u8fd9\u6b21\u4f5c\u4e1a\u4e2d\u7684PhysicsActionManager\uff0c\u6211\u7ecf\u8fc7\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u7684\u7f16\u8f91\uff0c\u7ecf\u8fc7\u601d\u8003\uff0c\u89c9\u5f97\u5176\u5e94\u8be5\u7ee7\u627f\u6211\u4eec\u7684SSActionManager\uff0c\u8fd9\u6837\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u6211\u4eec\u51cf\u5c11\u4e86\u4e00\u4e2a\u63a5\u53e3\u7c7b\u7684\u4e66\u5199\uff0c\u8fd8\u628a\u5176\u6574\u5408\u5230\u6574\u4e2aActionManager\u7684\u7cfb\u7edf\u4e2d\uff0c\u62e5\u6709ActionCallback\u7b49\u7684\u529f\u80fd\uff0c\u52a8\u4f5c\u7684\u5b8c\u6210\u7684\u5224\u65ad\u53ef\u4ee5\u76f4\u63a5\u5728\u81ea\u8eab\u7684Update\u91cc\u5b8c\u6210\uff0c\u6bd4\u8d77\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u4f18\u5316\u4e86\u633a\u591a\u3002 \u73b0\u5728\u6211\u4eec\u5206\u7c7b\u8bf4\u8bf4 ArrowFlyAction \u8fd9\u6b21\u4f5c\u4e1a\u6700\u57fa\u672c\u7684\u80af\u5b9a\u5c31\u662f\u6211\u4eec\u7bad\u7684\u52a8\u4f5c\u4e86\uff0c\u8fd9\u91cc\u6211\u4e0d\u4ec5\u5305\u542b\u4e86\u5c04\u7bad\u51fa\u53bb\u7684\u52a8\u4f5c\uff0c\u8fd8\u5305\u542b\u4e86\u98ce\u5411\u5bf9\u4e8e\u7bad\u4ea7\u751f\u7684\u52a8\u4f5c\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u6211\u4f1a\u628a\u98ce\u529b\u5bf9\u7bad\u7684\u5f71\u54cd\u5b9e\u4f53\u5316\u6210\u52a8\u4f5c\u5728\u6e38\u620f\u4e2d\u5462\uff0c\u56e0\u4e3a\u901a\u8fc7\u4f7f\u7528ActionManager\u53bb\u7ba1\u7406\u98ce\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u573a\u666f\u63a7\u5236\u5668\u4e2d\u51cf\u5c11\u76f8\u5e94\u7684\u4ee3\u7801\u3002 ArrowFlyAction\u5b9e\u73b0\u5982\u4e0b public class ArrowFlyAction : SSAction { public int type ; // 0: windAction, 1: shootAction public Vector3 speed ; bool firstTime = false ; private ArrowFlyAction () {} public static ArrowFlyAction GetSSAction ( int type , Vector3 speed ) { ArrowFlyAction arrowFlyAction = ScriptableObject . CreateInstance < ArrowFlyAction > (); arrowFlyAction . speed = speed ; arrowFlyAction . firstTime = true ; arrowFlyAction . type = type ; return arrowFlyAction ; } public override void Start () {} public override void Update () { if ( firstTime ) { if ( type == 0 ) { // wind this . gameObject . GetComponent < Rigidbody > (). AddForce ( speed , ForceMode . Force ); } else { // shoot this . gameObject . GetComponent < Rigidbody > (). AddForce ( speed , ForceMode . VelocityChange ); } firstTime = false ; } if ( this . gameObject . transform . position . z > 50 ) { this . destroy = true ; this . callback . actionDone ( this ); } if ( this . gameObject . GetComponent < ArrowControl > (). arrowController . available == false ) { this . destroy = true ; } } } PhysicsActionManager \u548c\u6211\u4e00\u5f00\u59cb\u8bf4\u7684\u4e00\u6837\uff0c\u6211\u7684PhysicsActionManager\u7ee7\u627f\u4e86SSActionManager\u7c7b,\u5e76\u5b9e\u73b0\u4e86ActionCallback\u63a5\u53e3\u4ee5\u5b8c\u6210\u4e8b\u4ef6\u7ed3\u675f\u7684\u5904\u7406\u3002\u8be5\u7c7b\u5b9e\u73b0\u633a\u7b80\u5355\uff0c\u8fd9\u91cc\u4e0d\u591aBB public class PhysicsActionManager : SSActionManager , ActionCallback { public FirstController firstController ; public void Start () { firstController = ( FirstController ) GameDirector . getInstance (). currentSceneController ; firstController . physicsActionManager = this ; } public void Update () { base . Update (); } public void actionDone ( SSAction source ) { if ((( ArrowFlyAction ) source ). type == 1 ) { firstController . arrowFactory . recycle ((( ArrowFlyAction ) source ). gameObject . GetComponent < ArrowControl > (). arrowController ); firstController . shootFinish = true ; } } } \u5230\u8fd9\u91cc\uff0c\u57fa\u7840\u7684\u90e8\u5206\u5c31\u5dee\u4e0d\u591a\u4e86\uff0c\u8fd8\u5269\u4e0b\u8d1f\u8d23\u5177\u4f53\u529f\u80fd\u7684\u5404\u4e2a\u7c7b\u4e0e\u6211\u4eec\u7684\u573a\u666f\u63a7\u5236\u5668\u3002 CheckCrack \u6211\u4eec\u5148\u6765\u770b\u770b\u6211\u7528\u4e8e\u68c0\u67e5\u7269\u4f53\u78b0\u649e\u4ee5\u63d0\u4f9b\u7ed9\u8ba1\u5206\u5668\uff0c\u5e76\u4e14\u4f7f\u5f97\u7bad\u4f53\u78b0\u5230\u9776\u5b50\u540e\u63d2\u5728\u9776\u4e0a(\u505c\u4f4f)\u7684\u7c7b \u8fd9\u91cc\u4e3b\u8981\u7528\u5230\u4e86OnTriggerEnter\u6765\u786e\u5b9a\u7bad\u4f53\u78b0\u5230\u9776\u5b50\u8fd9\u4e00\u4e8b\u4ef6\uff0c\u53ea\u8981\u6211\u4eec\u7684CheckCrack Add\u5230\u5404\u4e2a\u5206\u6570\u5bf9\u5e94\u7684GameObject\u4e2d\uff0c\u6211\u4eec\u7684\u9776\u5b50\u5c31\u80fd\u83b7\u53d6\u7bad\u5c04\u5230\u7684\u4f4d\u7f6e\uff0c\u4ea4\u7ed9\u8ba1\u5206\u5458\u8ba1\u5206\u3002 \u5728\u8fd9\u91cc\uff0c\u53ef\u80fd\u56e0\u4e3a\u6211\u9776\u5b50\u5b9e\u73b0\u7684\u4e0d\u592a\u597d\uff0c\u6211\u7684\u7bad\u5728\u5c04\u4e2d\u9776\u5b50\u540e\uff0c\u63d2\u5165\u9776\u5b50\u91cc\u9762\uff0c\u4ece\u800c\u4e5f\u4f1a\u89e6\u53d1\u540e\u9762\u9776\u5b50\u7684\u89e6\u53d1\u5668\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u7684ArrowController\u91cc\u52a0\u5165\u4e86\u4e00\u4e2aavailable\uff0c\u8fd9\u6837\u4fdd\u8bc1\u7bad\u4e00\u65e6\u63d2\u5165\u5c31\u4e0d\u518d\u5904\u7406\u5bf9\u5e94\u7684\u89e6\u53d1\u4e8b\u4ef6\u3002 public class CheckCrack : MonoBehaviour { public FirstController firstController ; public ScoreRecorder scoreRecorder ; void Start () { firstController = ( FirstController ) GameDirector . getInstance (). currentSceneController ; scoreRecorder = ScoreRecorder . getInstance (); } void OnTriggerEnter ( Collider arrow ) { if ( arrow . gameObject . GetComponent < ArrowControl > (). arrowController . available == true ) { arrow . gameObject . GetComponent < Rigidbody > (). velocity = Vector3 . zero ; arrow . gameObject . GetComponent < Rigidbody > (). isKinematic = true ; arrow . gameObject . GetComponent < ArrowControl > (). arrowController . available = false ; arrow . gameObject . transform . GetComponent < Collider > (). enabled = false ; firstController . shootFinish = true ; firstController . showCamera . showCamera (); scoreRecorder . record ( gameObject ); } } } ScoreRecorder \u8ba1\u5206\u5458\u7684\u5b9e\u73b0\u548c\u4e0a\u6b21\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u8fd9\u4e00\u6b21\u662f\u6839\u636eGameObbject\u7684\u540d\u5b57\u6765\u52a0\u5206 public class ScoreRecorder { public int score = 0 ; Text gameInfo ; private static ScoreRecorder instance ; public static ScoreRecorder getInstance () { if ( instance == null ) { instance = new ScoreRecorder (); } return instance ; } private ScoreRecorder () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/ScoreInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text > (); gameInfo . text = \"\" + score ; } public void record ( GameObject hitObj ) { switch ( hitObj . name ) { case \"1\" : score += 1 ; break ; case \"2\" : score += 2 ; break ; case \"3\" : score += 3 ; break ; case \"4\" : score += 4 ; break ; case \"5\" : score += 5 ; break ; } gameInfo . text = \"\" + score ; } public int getScore () { return score ; } public void reset () { score = 0 ; gameInfo . text = \"\" + score ; } } showSubCamera \u8fd9\u91cc\u6211\u52a0\u4e86\u4e2a\u5b50\u6444\u50cf\u5934\u7684\u529f\u80fd\uff0c\u82e5\u73a9\u5bb6\u5c04\u4e2d\u9776\u5b50\uff0c\u6211\u4f1a\u6fc0\u6d3b\u8be5\u6444\u50cf\u5934\uff0c\u4f7f\u73a9\u5bb6\u6e05\u6670\u770b\u5230\u7bad\u5c04\u4e2d\u7684\u4f4d\u7f6e public class showSubCamera : MonoBehaviour { private float time = 0 ; private bool show = false ; GameObject cameraObj ; // Use this for initialization void Start () { show = false ; cameraObj = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/SubCamera\" )) as GameObject ); cameraObj . SetActive ( false ); } public void showCamera () { cameraObj . SetActive ( true ); show = true ; time = 1 ; } // Update is called once per frame void Update () { if ( show ) { time -= Time . deltaTime ; if ( time <= 0 ) { show = false ; cameraObj . SetActive ( false ); } } } } WindMake \u6e38\u620f\u4e2d\u6211\u76f4\u63a5\u5b9e\u73b0\u4e86\u4e00\u4e2aWindMake\u7c7b\u6765\u7ba1\u7406\u98ce\u7684\u751f\u6210\uff0c\u6bcf240\u5e27\u6570\u66f4\u6362\u4e00\u4e2a\u98ce\u5411\uff0c\u5e76\u4e14\u628a\u5176\u5b9e\u65f6\u7684\u98ce\u5411\u663e\u793a\u5230\u6e38\u620f\u753b\u9762\u7684\u5de6\u4e0a\u89d2 public class WindMake : MonoBehaviour { public Vector3 Wind ; Text gameInfo ; int fpsCount = 0 ; void Awake () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/WindInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text > (); makeWind (); fpsCount = 0 ; } void Update () { fpsCount ++; if ( fpsCount == 240 ) { Wind = makeWind (); fpsCount = 0 ; } // 240\u5e27\u6362\u4e00\u4e2a\u98ce\u5411 } public Vector3 makeWind () { float y = Random . Range (- 100 , 100 ); float z = Random . Range (- 30 , 0 ); float x = Random . Range (- 50 , 50 ); gameInfo . text = \"(\" + x + \",\" + y + \",\" + z + \")\" ; return new Vector3 ( x , y , z ); } public Vector3 getWind () { return Wind ; } } \u8bf4\u5230\u8fd9\u91cc\uff0c\u7a81\u7136\u770b\u5230\u8fd8\u6709\u6211\u4eec\u7684ArrowFactory\u6ca1\u6709\u8bb2\ud83c\udf1a ArrowFactory \u5b9e\u73b0\u548c\u57fa\u672c\u7684Factory\u7c7b\u4f3c\uff0c\u6ca1\u6709\u4ec0\u4e48\u53ef\u8bb2\u7684, \u5c31\u662f\u52a0\u4e0a\u4e86\u5bf9\u4e8e\u521a\u4f53\u7684\u521d\u59cb\u5316\u7b49\u7684\u4e00\u4e9b\u5185\u5bb9 public class ArrowFactory : MonoBehaviour { Queue < ArrowController > waitingQueue ; List < ArrowController > runningList ; private FirstController firstController ; GameObject basic ; private void Awake () { waitingQueue = new Queue < ArrowController > (); runningList = new List < ArrowController > (); basic = Instantiate ( Resources . Load ( \"Prefabs/Arrow\" , typeof ( GameObject )) as GameObject ); basic . SetActive ( false ); } public ArrowController getArrow () { ArrowController arrow ; if ( waitingQueue . Count == 0 ) { GameObject newArrow = GameObject . Instantiate ( basic ); arrow = new ArrowController ( newArrow ); } else { arrow = waitingQueue . Dequeue (); } arrow . getObject (). transform . parent = (( FirstController ) GameDirector . getInstance (). currentSceneController ). Bow . transform ; arrow . getObject (). GetComponent < Rigidbody > (). velocity = Vector3 . zero ; arrow . getObject (). transform . localPosition = new Vector3 ( 0 , 2 , 1 ); arrow . getObject (). GetComponent < Rigidbody > (). isKinematic = true ; arrow . getObject (). transform . GetComponent < Collider > (). enabled = true ; arrow . appear (); runningList . Add ( arrow ); return arrow ; } public void recycle ( ArrowController arrow ) { arrow . disappear (); arrow . getObject (). transform . position = new Vector3 ( 0 , 0 , - 8 ); arrow . getObject (). transform . GetComponent < Collider > (). enabled = false ; runningList . Remove ( arrow ); waitingQueue . Enqueue ( arrow ); } public void recycleAll () { while ( runningList . Count != 0 ) { recycle ( runningList [ 0 ]); } } } ArrowController \u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbfArrow\u7684\u5b9e\u73b0\uff0c\u6211\u5728\u8fd9\u6b21\u4f5c\u4e1a\u4e2d\u4e5f\u4e00\u6837\u5b9e\u73b0\u4e86ArrowController\u7c7b\uff0c\u52a0\u5165\u4e86\u7bad\u4f53\u7684\u57fa\u672c\u72b6\u6001\u7684\u4fe1\u606f\uff0c\u5e76\u65b9\u4fbf\u4e86\u4e4b\u540e\u7684\u62d3\u5c55\u3002 public class ArrowController { GameObject arrow ; ArrowControl arrowControl ; public bool available = false ; public ArrowController ( GameObject gameObject ) { this . arrow = gameObject ; arrowControl = gameObject . AddComponent < ArrowControl > (); arrowControl . arrowController = this ; } public void appear () { available = true ; arrow . SetActive ( true ); } public void disappear () { arrow . SetActive ( false ); } public GameObject getObject () { return arrow ; } } ArrowControl\u7c7b \u8fd9\u4e2a\u7c7b\u4e3b\u8981\u662f\u7528\u4e8eGameObject\u83b7\u53d6\u5176\u5bf9\u5e94\u7684Controller public class ArrowControl : MonoBehaviour { public ArrowController arrowController ; } FirstController\u7c7b \u5199\u5b8c\u5404\u4e2a\u529f\u80fd\u7684\u7c7b\u540e\uff0c\u5c31\u5269\u4e0b\u6211\u4eec\u7684\u6e38\u620f\u573a\u666f\u63a7\u5236\u5668\u4e86,\u8fd9\u91cc\u57fa\u672c\u5c31\u662f\u5404\u4e2a\u7c7b\u7684\u6574\u5408\u4ee5\u53ca\u7528\u6237\u4ea4\u4e92\u7684\u5b9e\u73b0\uff0c\u5b9e\u73b0\u4e0d\u96be\u3002 public class FirstController : MonoBehaviour , ISceneController { public PhysicsActionManager physicsActionManager ; public GameDirector gameDirector ; public GameObject Bow ; public ArrowController arrow ; public ScoreRecorder scoreRecorder ; public ArrowFactory arrowFactory ; public WindMake windMake ; public showSubCamera showCamera ; GUIStyle gameInfoStyle ; public bool shootFinish = true ; // whether arrow hit success void Awake () { arrowFactory = gameObject . AddComponent < ArrowFactory > (); windMake = gameObject . AddComponent < WindMake > (); physicsActionManager = gameObject . AddComponent < PhysicsActionManager > (); scoreRecorder = ScoreRecorder . getInstance (); showCamera = gameObject . AddComponent < showSubCamera > (); gameDirector = GameDirector . getInstance (); gameDirector . currentSceneController = this ; } // Use this for initialization void Start () { loadResources (); Cursor . lockState = CursorLockMode . Locked ; Cursor . visible = false ; gameInfoStyle = new GUIStyle (); gameInfoStyle . fontSize = 25 ; } void OnGUI () { GUI . Label ( new Rect ( 20 , 80 , 200 , 50 ), \"Press space to restart!\" , gameInfoStyle ); } // Update is called once per frame void Update () { float offsetX = Input . GetAxis ( \"Mouse X\" ); float offsetY = Input . GetAxis ( \"Mouse Y\" ); moveBow ( offsetX , offsetY ); if ( Input . GetKeyDown ( \"escape\" )) { Cursor . visible = true ; Cursor . lockState = CursorLockMode . None ; } if ( Input . GetButton ( \"Fire1\" )) { Cursor . lockState = CursorLockMode . Locked ; Cursor . visible = false ; shootArrow (); } if ( Input . GetKeyDown ( \"space\" )) { reset (); } if ( shootFinish && arrow == null ) { arrow = arrowFactory . getArrow (); } } public void moveBow ( float offsetX , float offsetY ) { float posy = Mathf . Clamp ( Bow . transform . position . y + offsetY , 1 , 30 ); Bow . transform . position = new Vector3 ( Bow . transform . position . x + offsetX , posy , Bow . transform . position . z ); } public void shootArrow () { if ( arrow != null ) { GameObject arrowObj = arrow . getObject (); arrowObj . GetComponent < Rigidbody > (). isKinematic = false ; Vector3 dir = arrowObj . transform . up * - 1 ; ArrowFlyAction arrowAction = ArrowFlyAction . GetSSAction ( 1 , dir * 30 ); ArrowFlyAction windAction = ArrowFlyAction . GetSSAction ( 0 , windMake . getWind ()); physicsActionManager . addAction ( arrowObj , arrowAction , physicsActionManager ); physicsActionManager . addAction ( arrowObj , windAction , physicsActionManager ); arrowObj . transform . parent = null ; arrow = null ; shootFinish = false ; } } public void loadResources () { Instantiate ( Resources . Load ( \"Prefabs/Land\" )); Instantiate ( Resources . Load ( \"Prefabs/Target\" )); Bow = Instantiate ( Resources . Load ( \"Prefabs/Bow\" )) as GameObject ; arrow = arrowFactory . getArrow (); } void reset () { arrow = null ; shootFinish = true ; scoreRecorder . reset (); arrowFactory . recycleAll (); } } \u5230\u8fd9\u91cc\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u5b8c\u6210\u4e86\uff0c\u96be\u5ea6\u4e0d\u7b97\u592a\u5927\uff0c\u5728\u5b66\u4e60\u4e86\u7269\u7406\u5f15\u64ce\u7684\u4f7f\u7528\u540e\uff0c\u6211\u4eecAction\u7684\u4f7f\u7528\u66f4\u52a0\u7b80\u5355\uff0c\u53ea\u9700\u8981\u52a0\u4e0a\u5bf9\u5e94\u7684\u529b\u5c31\u53ef\u4ee5\u4e86\uff0c\u5e76\u4e0d\u9700\u8981\u4e00\u4e9b\u590d\u6742\u7684\u8bed\u53e5\uff0c\u800c\u4e14\u6709\u4e86\u4e4b\u524d\u51e0\u5468\u5b8c\u6210\u7684\u57fa\u7840\u7684\u6e38\u620f\u67b6\u6784\uff0c\u6211\u4eec\u57fa\u672c\u5c31\u662f\u5b8c\u6210\u8d1f\u8d23\u6e38\u620f\u5bf9\u8c61\u7684\u521b\u5efa\u529f\u80fd\u7684\u7c7b\uff0c\u5b8c\u6210\u5bf9\u8c61\u57fa\u672c\u52a8\u4f5c\u7684\u7c7b\uff0c\u4ee5\u53ca\u6e38\u620f\u573a\u666f\u4e2d\u5bf9\u5e94\u529f\u80fd\u89e3\u8026\u51fa\u6765\u7684\u7c7b\u3002\u53ea\u8981\u6709\u4e86\u8fd9\u4e9b\u57fa\u672c\u7684\u610f\u8bc6\u540e\uff0c\u6211\u4eec\u5bf9\u4e8e\u5199\u6e38\u620f\u7684\u4e0a\u624b\u8fd8\u662f\u5f88\u5feb\u7684\u3002","title":"\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#homework5-","text":"","title":"Homework5-\u5c04\u7bad\u5c0f\u6e38\u620f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#_1","text":"\u9776\u5bf9\u8c61\u4e3a 5 \u73af\uff0c\u6309\u73af\u8ba1\u5206\uff1b \u7bad\u5bf9\u8c61\uff0c\u5c04\u4e2d\u540e\u8981\u63d2\u5728\u9776\u4e0a \u589e\u5f3a\u8981\u6c42\uff1a\u5c04\u4e2d\u540e\uff0c\u7bad\u5bf9\u8c61\u4ea7\u751f\u98a4\u6296\u6548\u679c\uff0c\u5230\u4e0b\u4e00\u6b21\u5c04\u51fb \u6216 1\u79d2\u4ee5\u540e\uff08\u672a\u5b9e\u73b0\uff09 \u6e38\u620f\u4ec5\u4e00\u8f6e\uff0c\u65e0\u9650 trials\uff1b \u589e\u5f3a\u8981\u6c42\uff1a\u6dfb\u52a0\u4e00\u4e2a\u98ce\u5411\u548c\u5f3a\u5ea6\u6807\u5fd7\uff0c\u63d0\u9ad8\u96be\u5ea6","title":"\u6e38\u620f\u8981\u6c42"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#_2","text":"\u89c6\u9891\u6f14\u793a\u7f51\u7ad9\u4e3a ArrowGame \u4e0b\u9762\u662f\u6e38\u620f\u7684\u622a\u56fe","title":"\u5b9e\u73b0\u6548\u679c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#uml","text":"","title":"UML\u56fe"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#_3","text":"\u505a\u4e86\u8fd9\u51e0\u6b21\u7684\u4f5c\u4e1a\u4ee5\u540e\uff0c\u6211\u53d1\u73b0\u57fa\u672c\u67b6\u6784\u7684\u4ee3\u7801\u90fd\u51e0\u4e4e\u53ef\u4ee5\u590d\u7528\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u628a\u4e00\u4e9b\u57fa\u672c\u7684\u6bcf\u6b21\u7528\u5230\u7684\u4ee3\u7801\u5f04\u4e86\u4e00\u4e2aBasicCode\u6587\u4ef6\u5939\uff0cActionManager\u4e5f\u6446\u653e\u5728\u5185\uff0c\u7f16\u5199\u6e38\u620f\u7684\u65f6\u5019\uff0c\u5728\u5176\u57fa\u7840\u4e0a\u589e\u52a0\u5c31\u597d\u4e86\u3002 \u6839\u636e\u6211\u4eec\u753b\u51fa\u7684UML\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8fd9\u6b21\u9700\u8981\u5b8c\u6210\u7684\u7c7b\u4e0d\u7b97\u591a, \u57fa\u7840\u7684\u4ee3\u7801\u90fd\u6709\uff0c\u4e0d\u4e0d\u4e0d\u8fc7\u8fd9\u6b21\u4f5c\u4e1a\u4e2d\u7684PhysicsActionManager\uff0c\u6211\u7ecf\u8fc7\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u7684\u7f16\u8f91\uff0c\u7ecf\u8fc7\u601d\u8003\uff0c\u89c9\u5f97\u5176\u5e94\u8be5\u7ee7\u627f\u6211\u4eec\u7684SSActionManager\uff0c\u8fd9\u6837\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u6211\u4eec\u51cf\u5c11\u4e86\u4e00\u4e2a\u63a5\u53e3\u7c7b\u7684\u4e66\u5199\uff0c\u8fd8\u628a\u5176\u6574\u5408\u5230\u6574\u4e2aActionManager\u7684\u7cfb\u7edf\u4e2d\uff0c\u62e5\u6709ActionCallback\u7b49\u7684\u529f\u80fd\uff0c\u52a8\u4f5c\u7684\u5b8c\u6210\u7684\u5224\u65ad\u53ef\u4ee5\u76f4\u63a5\u5728\u81ea\u8eab\u7684Update\u91cc\u5b8c\u6210\uff0c\u6bd4\u8d77\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u4f18\u5316\u4e86\u633a\u591a\u3002 \u73b0\u5728\u6211\u4eec\u5206\u7c7b\u8bf4\u8bf4","title":"\u6e38\u620f\u5b9e\u73b0"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#arrowflyaction","text":"\u8fd9\u6b21\u4f5c\u4e1a\u6700\u57fa\u672c\u7684\u80af\u5b9a\u5c31\u662f\u6211\u4eec\u7bad\u7684\u52a8\u4f5c\u4e86\uff0c\u8fd9\u91cc\u6211\u4e0d\u4ec5\u5305\u542b\u4e86\u5c04\u7bad\u51fa\u53bb\u7684\u52a8\u4f5c\uff0c\u8fd8\u5305\u542b\u4e86\u98ce\u5411\u5bf9\u4e8e\u7bad\u4ea7\u751f\u7684\u52a8\u4f5c\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u6211\u4f1a\u628a\u98ce\u529b\u5bf9\u7bad\u7684\u5f71\u54cd\u5b9e\u4f53\u5316\u6210\u52a8\u4f5c\u5728\u6e38\u620f\u4e2d\u5462\uff0c\u56e0\u4e3a\u901a\u8fc7\u4f7f\u7528ActionManager\u53bb\u7ba1\u7406\u98ce\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u573a\u666f\u63a7\u5236\u5668\u4e2d\u51cf\u5c11\u76f8\u5e94\u7684\u4ee3\u7801\u3002 ArrowFlyAction\u5b9e\u73b0\u5982\u4e0b public class ArrowFlyAction : SSAction { public int type ; // 0: windAction, 1: shootAction public Vector3 speed ; bool firstTime = false ; private ArrowFlyAction () {} public static ArrowFlyAction GetSSAction ( int type , Vector3 speed ) { ArrowFlyAction arrowFlyAction = ScriptableObject . CreateInstance < ArrowFlyAction > (); arrowFlyAction . speed = speed ; arrowFlyAction . firstTime = true ; arrowFlyAction . type = type ; return arrowFlyAction ; } public override void Start () {} public override void Update () { if ( firstTime ) { if ( type == 0 ) { // wind this . gameObject . GetComponent < Rigidbody > (). AddForce ( speed , ForceMode . Force ); } else { // shoot this . gameObject . GetComponent < Rigidbody > (). AddForce ( speed , ForceMode . VelocityChange ); } firstTime = false ; } if ( this . gameObject . transform . position . z > 50 ) { this . destroy = true ; this . callback . actionDone ( this ); } if ( this . gameObject . GetComponent < ArrowControl > (). arrowController . available == false ) { this . destroy = true ; } } }","title":"ArrowFlyAction"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#physicsactionmanager","text":"\u548c\u6211\u4e00\u5f00\u59cb\u8bf4\u7684\u4e00\u6837\uff0c\u6211\u7684PhysicsActionManager\u7ee7\u627f\u4e86SSActionManager\u7c7b,\u5e76\u5b9e\u73b0\u4e86ActionCallback\u63a5\u53e3\u4ee5\u5b8c\u6210\u4e8b\u4ef6\u7ed3\u675f\u7684\u5904\u7406\u3002\u8be5\u7c7b\u5b9e\u73b0\u633a\u7b80\u5355\uff0c\u8fd9\u91cc\u4e0d\u591aBB public class PhysicsActionManager : SSActionManager , ActionCallback { public FirstController firstController ; public void Start () { firstController = ( FirstController ) GameDirector . getInstance (). currentSceneController ; firstController . physicsActionManager = this ; } public void Update () { base . Update (); } public void actionDone ( SSAction source ) { if ((( ArrowFlyAction ) source ). type == 1 ) { firstController . arrowFactory . recycle ((( ArrowFlyAction ) source ). gameObject . GetComponent < ArrowControl > (). arrowController ); firstController . shootFinish = true ; } } } \u5230\u8fd9\u91cc\uff0c\u57fa\u7840\u7684\u90e8\u5206\u5c31\u5dee\u4e0d\u591a\u4e86\uff0c\u8fd8\u5269\u4e0b\u8d1f\u8d23\u5177\u4f53\u529f\u80fd\u7684\u5404\u4e2a\u7c7b\u4e0e\u6211\u4eec\u7684\u573a\u666f\u63a7\u5236\u5668\u3002","title":"PhysicsActionManager"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#checkcrack","text":"\u6211\u4eec\u5148\u6765\u770b\u770b\u6211\u7528\u4e8e\u68c0\u67e5\u7269\u4f53\u78b0\u649e\u4ee5\u63d0\u4f9b\u7ed9\u8ba1\u5206\u5668\uff0c\u5e76\u4e14\u4f7f\u5f97\u7bad\u4f53\u78b0\u5230\u9776\u5b50\u540e\u63d2\u5728\u9776\u4e0a(\u505c\u4f4f)\u7684\u7c7b \u8fd9\u91cc\u4e3b\u8981\u7528\u5230\u4e86OnTriggerEnter\u6765\u786e\u5b9a\u7bad\u4f53\u78b0\u5230\u9776\u5b50\u8fd9\u4e00\u4e8b\u4ef6\uff0c\u53ea\u8981\u6211\u4eec\u7684CheckCrack Add\u5230\u5404\u4e2a\u5206\u6570\u5bf9\u5e94\u7684GameObject\u4e2d\uff0c\u6211\u4eec\u7684\u9776\u5b50\u5c31\u80fd\u83b7\u53d6\u7bad\u5c04\u5230\u7684\u4f4d\u7f6e\uff0c\u4ea4\u7ed9\u8ba1\u5206\u5458\u8ba1\u5206\u3002 \u5728\u8fd9\u91cc\uff0c\u53ef\u80fd\u56e0\u4e3a\u6211\u9776\u5b50\u5b9e\u73b0\u7684\u4e0d\u592a\u597d\uff0c\u6211\u7684\u7bad\u5728\u5c04\u4e2d\u9776\u5b50\u540e\uff0c\u63d2\u5165\u9776\u5b50\u91cc\u9762\uff0c\u4ece\u800c\u4e5f\u4f1a\u89e6\u53d1\u540e\u9762\u9776\u5b50\u7684\u89e6\u53d1\u5668\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u7684ArrowController\u91cc\u52a0\u5165\u4e86\u4e00\u4e2aavailable\uff0c\u8fd9\u6837\u4fdd\u8bc1\u7bad\u4e00\u65e6\u63d2\u5165\u5c31\u4e0d\u518d\u5904\u7406\u5bf9\u5e94\u7684\u89e6\u53d1\u4e8b\u4ef6\u3002 public class CheckCrack : MonoBehaviour { public FirstController firstController ; public ScoreRecorder scoreRecorder ; void Start () { firstController = ( FirstController ) GameDirector . getInstance (). currentSceneController ; scoreRecorder = ScoreRecorder . getInstance (); } void OnTriggerEnter ( Collider arrow ) { if ( arrow . gameObject . GetComponent < ArrowControl > (). arrowController . available == true ) { arrow . gameObject . GetComponent < Rigidbody > (). velocity = Vector3 . zero ; arrow . gameObject . GetComponent < Rigidbody > (). isKinematic = true ; arrow . gameObject . GetComponent < ArrowControl > (). arrowController . available = false ; arrow . gameObject . transform . GetComponent < Collider > (). enabled = false ; firstController . shootFinish = true ; firstController . showCamera . showCamera (); scoreRecorder . record ( gameObject ); } } }","title":"CheckCrack"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#scorerecorder","text":"\u8ba1\u5206\u5458\u7684\u5b9e\u73b0\u548c\u4e0a\u6b21\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u8fd9\u4e00\u6b21\u662f\u6839\u636eGameObbject\u7684\u540d\u5b57\u6765\u52a0\u5206 public class ScoreRecorder { public int score = 0 ; Text gameInfo ; private static ScoreRecorder instance ; public static ScoreRecorder getInstance () { if ( instance == null ) { instance = new ScoreRecorder (); } return instance ; } private ScoreRecorder () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/ScoreInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text > (); gameInfo . text = \"\" + score ; } public void record ( GameObject hitObj ) { switch ( hitObj . name ) { case \"1\" : score += 1 ; break ; case \"2\" : score += 2 ; break ; case \"3\" : score += 3 ; break ; case \"4\" : score += 4 ; break ; case \"5\" : score += 5 ; break ; } gameInfo . text = \"\" + score ; } public int getScore () { return score ; } public void reset () { score = 0 ; gameInfo . text = \"\" + score ; } }","title":"ScoreRecorder"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#showsubcamera","text":"\u8fd9\u91cc\u6211\u52a0\u4e86\u4e2a\u5b50\u6444\u50cf\u5934\u7684\u529f\u80fd\uff0c\u82e5\u73a9\u5bb6\u5c04\u4e2d\u9776\u5b50\uff0c\u6211\u4f1a\u6fc0\u6d3b\u8be5\u6444\u50cf\u5934\uff0c\u4f7f\u73a9\u5bb6\u6e05\u6670\u770b\u5230\u7bad\u5c04\u4e2d\u7684\u4f4d\u7f6e public class showSubCamera : MonoBehaviour { private float time = 0 ; private bool show = false ; GameObject cameraObj ; // Use this for initialization void Start () { show = false ; cameraObj = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/SubCamera\" )) as GameObject ); cameraObj . SetActive ( false ); } public void showCamera () { cameraObj . SetActive ( true ); show = true ; time = 1 ; } // Update is called once per frame void Update () { if ( show ) { time -= Time . deltaTime ; if ( time <= 0 ) { show = false ; cameraObj . SetActive ( false ); } } } }","title":"showSubCamera"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#windmake","text":"\u6e38\u620f\u4e2d\u6211\u76f4\u63a5\u5b9e\u73b0\u4e86\u4e00\u4e2aWindMake\u7c7b\u6765\u7ba1\u7406\u98ce\u7684\u751f\u6210\uff0c\u6bcf240\u5e27\u6570\u66f4\u6362\u4e00\u4e2a\u98ce\u5411\uff0c\u5e76\u4e14\u628a\u5176\u5b9e\u65f6\u7684\u98ce\u5411\u663e\u793a\u5230\u6e38\u620f\u753b\u9762\u7684\u5de6\u4e0a\u89d2 public class WindMake : MonoBehaviour { public Vector3 Wind ; Text gameInfo ; int fpsCount = 0 ; void Awake () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/WindInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text > (); makeWind (); fpsCount = 0 ; } void Update () { fpsCount ++; if ( fpsCount == 240 ) { Wind = makeWind (); fpsCount = 0 ; } // 240\u5e27\u6362\u4e00\u4e2a\u98ce\u5411 } public Vector3 makeWind () { float y = Random . Range (- 100 , 100 ); float z = Random . Range (- 30 , 0 ); float x = Random . Range (- 50 , 50 ); gameInfo . text = \"(\" + x + \",\" + y + \",\" + z + \")\" ; return new Vector3 ( x , y , z ); } public Vector3 getWind () { return Wind ; } } \u8bf4\u5230\u8fd9\u91cc\uff0c\u7a81\u7136\u770b\u5230\u8fd8\u6709\u6211\u4eec\u7684ArrowFactory\u6ca1\u6709\u8bb2\ud83c\udf1a","title":"WindMake"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#arrowfactory","text":"\u5b9e\u73b0\u548c\u57fa\u672c\u7684Factory\u7c7b\u4f3c\uff0c\u6ca1\u6709\u4ec0\u4e48\u53ef\u8bb2\u7684, \u5c31\u662f\u52a0\u4e0a\u4e86\u5bf9\u4e8e\u521a\u4f53\u7684\u521d\u59cb\u5316\u7b49\u7684\u4e00\u4e9b\u5185\u5bb9 public class ArrowFactory : MonoBehaviour { Queue < ArrowController > waitingQueue ; List < ArrowController > runningList ; private FirstController firstController ; GameObject basic ; private void Awake () { waitingQueue = new Queue < ArrowController > (); runningList = new List < ArrowController > (); basic = Instantiate ( Resources . Load ( \"Prefabs/Arrow\" , typeof ( GameObject )) as GameObject ); basic . SetActive ( false ); } public ArrowController getArrow () { ArrowController arrow ; if ( waitingQueue . Count == 0 ) { GameObject newArrow = GameObject . Instantiate ( basic ); arrow = new ArrowController ( newArrow ); } else { arrow = waitingQueue . Dequeue (); } arrow . getObject (). transform . parent = (( FirstController ) GameDirector . getInstance (). currentSceneController ). Bow . transform ; arrow . getObject (). GetComponent < Rigidbody > (). velocity = Vector3 . zero ; arrow . getObject (). transform . localPosition = new Vector3 ( 0 , 2 , 1 ); arrow . getObject (). GetComponent < Rigidbody > (). isKinematic = true ; arrow . getObject (). transform . GetComponent < Collider > (). enabled = true ; arrow . appear (); runningList . Add ( arrow ); return arrow ; } public void recycle ( ArrowController arrow ) { arrow . disappear (); arrow . getObject (). transform . position = new Vector3 ( 0 , 0 , - 8 ); arrow . getObject (). transform . GetComponent < Collider > (). enabled = false ; runningList . Remove ( arrow ); waitingQueue . Enqueue ( arrow ); } public void recycleAll () { while ( runningList . Count != 0 ) { recycle ( runningList [ 0 ]); } } }","title":"ArrowFactory"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#arrowcontroller","text":"\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbfArrow\u7684\u5b9e\u73b0\uff0c\u6211\u5728\u8fd9\u6b21\u4f5c\u4e1a\u4e2d\u4e5f\u4e00\u6837\u5b9e\u73b0\u4e86ArrowController\u7c7b\uff0c\u52a0\u5165\u4e86\u7bad\u4f53\u7684\u57fa\u672c\u72b6\u6001\u7684\u4fe1\u606f\uff0c\u5e76\u65b9\u4fbf\u4e86\u4e4b\u540e\u7684\u62d3\u5c55\u3002 public class ArrowController { GameObject arrow ; ArrowControl arrowControl ; public bool available = false ; public ArrowController ( GameObject gameObject ) { this . arrow = gameObject ; arrowControl = gameObject . AddComponent < ArrowControl > (); arrowControl . arrowController = this ; } public void appear () { available = true ; arrow . SetActive ( true ); } public void disappear () { arrow . SetActive ( false ); } public GameObject getObject () { return arrow ; } }","title":"ArrowController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#arrowcontrol","text":"\u8fd9\u4e2a\u7c7b\u4e3b\u8981\u662f\u7528\u4e8eGameObject\u83b7\u53d6\u5176\u5bf9\u5e94\u7684Controller public class ArrowControl : MonoBehaviour { public ArrowController arrowController ; }","title":"ArrowControl\u7c7b"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#firstcontroller","text":"\u5199\u5b8c\u5404\u4e2a\u529f\u80fd\u7684\u7c7b\u540e\uff0c\u5c31\u5269\u4e0b\u6211\u4eec\u7684\u6e38\u620f\u573a\u666f\u63a7\u5236\u5668\u4e86,\u8fd9\u91cc\u57fa\u672c\u5c31\u662f\u5404\u4e2a\u7c7b\u7684\u6574\u5408\u4ee5\u53ca\u7528\u6237\u4ea4\u4e92\u7684\u5b9e\u73b0\uff0c\u5b9e\u73b0\u4e0d\u96be\u3002 public class FirstController : MonoBehaviour , ISceneController { public PhysicsActionManager physicsActionManager ; public GameDirector gameDirector ; public GameObject Bow ; public ArrowController arrow ; public ScoreRecorder scoreRecorder ; public ArrowFactory arrowFactory ; public WindMake windMake ; public showSubCamera showCamera ; GUIStyle gameInfoStyle ; public bool shootFinish = true ; // whether arrow hit success void Awake () { arrowFactory = gameObject . AddComponent < ArrowFactory > (); windMake = gameObject . AddComponent < WindMake > (); physicsActionManager = gameObject . AddComponent < PhysicsActionManager > (); scoreRecorder = ScoreRecorder . getInstance (); showCamera = gameObject . AddComponent < showSubCamera > (); gameDirector = GameDirector . getInstance (); gameDirector . currentSceneController = this ; } // Use this for initialization void Start () { loadResources (); Cursor . lockState = CursorLockMode . Locked ; Cursor . visible = false ; gameInfoStyle = new GUIStyle (); gameInfoStyle . fontSize = 25 ; } void OnGUI () { GUI . Label ( new Rect ( 20 , 80 , 200 , 50 ), \"Press space to restart!\" , gameInfoStyle ); } // Update is called once per frame void Update () { float offsetX = Input . GetAxis ( \"Mouse X\" ); float offsetY = Input . GetAxis ( \"Mouse Y\" ); moveBow ( offsetX , offsetY ); if ( Input . GetKeyDown ( \"escape\" )) { Cursor . visible = true ; Cursor . lockState = CursorLockMode . None ; } if ( Input . GetButton ( \"Fire1\" )) { Cursor . lockState = CursorLockMode . Locked ; Cursor . visible = false ; shootArrow (); } if ( Input . GetKeyDown ( \"space\" )) { reset (); } if ( shootFinish && arrow == null ) { arrow = arrowFactory . getArrow (); } } public void moveBow ( float offsetX , float offsetY ) { float posy = Mathf . Clamp ( Bow . transform . position . y + offsetY , 1 , 30 ); Bow . transform . position = new Vector3 ( Bow . transform . position . x + offsetX , posy , Bow . transform . position . z ); } public void shootArrow () { if ( arrow != null ) { GameObject arrowObj = arrow . getObject (); arrowObj . GetComponent < Rigidbody > (). isKinematic = false ; Vector3 dir = arrowObj . transform . up * - 1 ; ArrowFlyAction arrowAction = ArrowFlyAction . GetSSAction ( 1 , dir * 30 ); ArrowFlyAction windAction = ArrowFlyAction . GetSSAction ( 0 , windMake . getWind ()); physicsActionManager . addAction ( arrowObj , arrowAction , physicsActionManager ); physicsActionManager . addAction ( arrowObj , windAction , physicsActionManager ); arrowObj . transform . parent = null ; arrow = null ; shootFinish = false ; } } public void loadResources () { Instantiate ( Resources . Load ( \"Prefabs/Land\" )); Instantiate ( Resources . Load ( \"Prefabs/Target\" )); Bow = Instantiate ( Resources . Load ( \"Prefabs/Bow\" )) as GameObject ; arrow = arrowFactory . getArrow (); } void reset () { arrow = null ; shootFinish = true ; scoreRecorder . reset (); arrowFactory . recycleAll (); } } \u5230\u8fd9\u91cc\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u5b8c\u6210\u4e86\uff0c\u96be\u5ea6\u4e0d\u7b97\u592a\u5927\uff0c\u5728\u5b66\u4e60\u4e86\u7269\u7406\u5f15\u64ce\u7684\u4f7f\u7528\u540e\uff0c\u6211\u4eecAction\u7684\u4f7f\u7528\u66f4\u52a0\u7b80\u5355\uff0c\u53ea\u9700\u8981\u52a0\u4e0a\u5bf9\u5e94\u7684\u529b\u5c31\u53ef\u4ee5\u4e86\uff0c\u5e76\u4e0d\u9700\u8981\u4e00\u4e9b\u590d\u6742\u7684\u8bed\u53e5\uff0c\u800c\u4e14\u6709\u4e86\u4e4b\u524d\u51e0\u5468\u5b8c\u6210\u7684\u57fa\u7840\u7684\u6e38\u620f\u67b6\u6784\uff0c\u6211\u4eec\u57fa\u672c\u5c31\u662f\u5b8c\u6210\u8d1f\u8d23\u6e38\u620f\u5bf9\u8c61\u7684\u521b\u5efa\u529f\u80fd\u7684\u7c7b\uff0c\u5b8c\u6210\u5bf9\u8c61\u57fa\u672c\u52a8\u4f5c\u7684\u7c7b\uff0c\u4ee5\u53ca\u6e38\u620f\u573a\u666f\u4e2d\u5bf9\u5e94\u529f\u80fd\u89e3\u8026\u51fa\u6765\u7684\u7c7b\u3002\u53ea\u8981\u6709\u4e86\u8fd9\u4e9b\u57fa\u672c\u7684\u610f\u8bc6\u540e\uff0c\u6211\u4eec\u5bf9\u4e8e\u5199\u6e38\u620f\u7684\u4e0a\u624b\u8fd8\u662f\u5f88\u5feb\u7684\u3002","title":"FirstController\u7c7b"}]}
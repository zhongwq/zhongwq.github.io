{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Zhong Wenqian A student major in Software Engineering in SYSU(Sun Yat-sen University). Contact me Email: 1316628630@qq.com Github: zhongwq@github","title":"Home"},{"location":"#zhong-wenqian","text":"A student major in Software Engineering in SYSU(Sun Yat-sen University).","title":"Zhong Wenqian"},{"location":"#contact-me","text":"Email: 1316628630@qq.com Github: zhongwq@github","title":"Contact me"},{"location":"Front-End/BFC\u7684\u7279\u70b9\u3001\u521b\u5efa\u65b9\u5f0f\u4ee5\u53ca\u5e94\u7528/","text":"BFC\u7684\u7279\u70b9\u3001\u521b\u5efa\u65b9\u5f0f\u4ee5\u53ca\u5e94\u7528 BFC\u5168\u79f0\u4e3aBlock Formatting Context\uff0c\u5373\u201c\u5757\u7ea7\u683c\u5f0f\u5316\u4e0a\u4e0b\u6587\u201d\uff0c\u5b83\u662f\u9875\u9762\u4e2d\u76f8\u5bf9\u72ec\u7acb\u7684\u4e00\u5757\u6e32\u67d3\u533a\u57df\uff0c\u5b83\u51b3\u5b9a\u4e86\u5185\u90e8\u7684\u5b50\u5143\u7d20\u5982\u4f55\u8fdb\u884c\u6446\u653e\u548c\u5b9a\u4f4d\uff0c\u4ee5\u53ca\u533a\u57df\u5185\u90e8\u5143\u7d20\u548c\u533a\u57df\u5916\u90e8\u5143\u7d20\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u5173\u7cfb\u3002 BFC\u7684\u7279\u70b9 BFC\u53ef\u4ee5\u5305\u542b\u6d6e\u52a8\u5143\u7d20\uff08\u95ed\u5408\u6d6e\u52a8\uff09 BFC\u6240\u786e\u5b9a\u7684\u533a\u57df\u4e0d\u4f1a\u4e0e\u5916\u90e8\u6d6e\u52a8\u5143\u7d20\u53d1\u751f\u91cd\u53e0 \u4f4d\u4e8e\u540c\u4e00BFC\u4e0b\u7684\u76f8\u90bb\u5757\u7ea7\u5b50\u5143\u7d20\u5728\u5782\u76f4\u65b9\u5411\u4e0a\u4f1a\u53d1\u751fmargin\u91cd\u53e0 \u4f4d\u4e8e\u4e0d\u540cBFC\u4e0b\u7684\u76f8\u90bb\u5143\u7d20\u4e4b\u95f4\u4e0d\u4f1a\u53d1\u751fmargin\u91cd\u53e0 \u5c06\u4ee5\u4e0a\u7279\u70b9\u4e00\u8a00\u4ee5\u853d\u4e4b\uff0c\u5373BFC\u5728\u9875\u9762\u4e0a\u662f\u4e00\u4e2a\u5c01\u95ed\u7684\u533a\u57df\uff0c\u5982\u540c\u201c\u7ed3\u754c\u201d\u4e00\u822c\u3002\u5373\u4fbf\u662f\u5185\u90e8\u7684\u6d6e\u52a8\u5143\u7d20\u4e5f\u65e0\u6cd5\u8131\u79bb\u8be5\u533a\u57df\u3002\u8be5\u533a\u57df\u5185\u90e8\u7684\u5b50\u5143\u7d20\u65e0\u6cd5\u5f71\u54cd\u533a\u57df\u5916\u90e8\uff0c\u540c\u65f6\u4e5f\u4e0d\u53d7\u5916\u90e8\u5f71\u54cd\u3002 \u521b\u5efa\u65b9\u5f0f \u6d6e\u52a8\u5143\u7d20 \u7edd\u5bf9\u5b9a\u4f4d\u5143\u7d20 \u975e\u5757\u7ea7\u76d2\u5b50\u7684\u5757\u7ea7\u5bb9\u5668\uff08\u4f8b\u5982inline-blocks\uff0ctable-cells\uff0cand table-captions\uff09 overflow\u5c5e\u6027\u503c\u4e0d\u662f\u201c visible\u201d\uff08visible\u662foverflow\u7684\u9ed8\u8ba4\u503c\uff09\u7684\u5757\u7ea7\u76d2\u5b50\uff08\u89c6\u53e3\u9664\u5916\uff09 \u8fd9\u4e9b\u5143\u7d20\u5c31\u4f1a\u4e3a\u4ed6\u4eec\u7684\u5185\u5bb9\u521b\u5efa\u4e00\u4e2aBFC\u3002 BFC\u7684\u5e94\u7528 \u6e05\u9664\u5143\u7d20\u4e4b\u95f4\u7684\u5f71\u54cd < div class = \"content\" > < div class = \"box\" ></ div > \u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c \u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c </ div > . content { width : 200 px ; height : 200 px ; order : 1 px solid blue ; } . box { width : 50 px ; height : 50 px ; background : red ; float : left ; } \u5b9e\u73b0\u6548\u679c \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7ea2\u8272\u65b9\u5757\u5bf9\u6570\u5b57\u5143\u7d20\u7684\u663e\u793a\u6784\u6210\u4e86\u5f71\u54cd\uff0c\u5982\u679c\u6211\u4eec\u53ea\u60f3\u8ba9\u6587\u672c\u4f4d\u4e8e\u53f3\u4fa7\uff0c\u600e\u4e48\u5904\u7406\u5462\uff1f \u8fd9\u91cc\u5c31\u53ef\u4ee5\u4f7f\u7528BFC\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6587\u672c\u5916\u5957\u4e00\u5c42\u5143\u7d20\uff0c\u5e76\u4e14\u628a\u8fd9\u4e2a\u5143\u7d20\u53d8\u6210BFC\uff0c\u8fd9\u6837\u6587\u672c\u5c31\u4e0d\u4f1a\u53d7\u5230\u6d6e\u52a8\u5143\u7d20\u7684\u5f71\u54cd\u4e86\u3002\u6211\u8fd9\u91cc\u901a\u8fc7\u4fee\u6539overflow\u5c5e\u6027\u4f7f\u6587\u672c\u6240\u5728\u5143\u7d20\u5f62\u6210\u4e00\u4e2aBFC\u3002 < div class = \"content\" > < div class = \"box\" ></ div >< div class = \"bfc\" > \u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c \u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c </ div > </ div > \u52a0\u4e0a . bfc { overflow : auto ; } \u5b9e\u73b0\u6548\u679c \u521b\u5efa\u81ea\u9002\u5e94\u5e03\u5c40 \u521b\u5efa\u4e00\u4e2a\u4e24\u5217\u5e03\u5c40\uff0c\u5176\u4e2d\u5de6\u4fa7\u5bbd\u5ea6\u4e0d\u5b9a\uff0c\u53f3\u4fa7\u5bbd\u5ea6\u81ea\u9002\u5e94\u5360\u7528\u5269\u4e0b\u7684\u7a7a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u6d6e\u52a8\u5143\u7d20\u548cBFC\u5143\u7d20\u7684\u76f8\u4e92\u4f5c\u7528\u5b9e\u73b0\u7684\u3002 \u89e3\u51b3margin\u91cd\u53e0\u7684\u95ee\u9898 \u6839\u636eBFC\u7684\u7279\u6027\uff0c\u540c\u4e00\u4e2aBFC\u4e0b\u7684\u4e24\u4e2a\u76f8\u90bb\u7684\u76d2\u5b50\u4f1a\u51fa\u73b0\u5782\u76f4margin\u91cd\u53e0\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u95ee\u9898\u4f1a\u5f71\u54cd\u6211\u4eec\u5bf9\u9875\u9762\u5e03\u5c40\u7684\u63a7\u5236\uff0c\u901a\u5e38\u6211\u4eec\u53ef\u4ee5\u4e3a\u5176\u4e2d\u4e00\u4e2a\u76d2\u5b50\u6dfb\u52a0\u4e00\u4e2a\u7236\u5143\u7d20\uff0c\u5e76\u4f7f\u5176\u89e6\u53d1BFC\uff0c\u5373\u53ef\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a < div class = \"bfc\" > < p > Test </ p > </ div > < p > Test </ p > < p > Test </ p > < style type = \"text/css\" > p { margin : 30 px ; height : 30 px ; background : gray ; text-align : center ; } . bfc { overflow : auto ; } </ style > \u6e05\u9664\u6d6e\u52a8\u5f15\u8d77\u7684\u9ad8\u5ea6\u574d\u584c \u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff0cdiv.parent\u5305\u542b\u4e86\u4e24\u4e2adiv.child\uff0c\u800c\u4e24\u4e2adiv\u7531\u4e8e\u8d4b\u4e88\u4e86float:left\u4f7f\u5176\u6d6e\u52a8\uff0c\u5bfc\u81f4\u4e86div.parent\u9ad8\u5ea6\u7684\u574d\u584c\uff0c\u6b64\u65f6\u6211\u4eec\u7ed9div.parent\u6dfb\u52a0\u4e00\u4e2aoverflow:hidden\u5c5e\u6027\u503c\uff0c\u4f7fdiv.parent\u89e6\u53d1BFC\uff0c\u7531\u4e8eBFC\u4e0b\u7684\u76d2\u5b50\u4f1a\u5305\u542b\u6d6e\u52a8\u5143\u7d20\u7684\u9ad8\u5ea6\uff0c\u56e0\u6b64\u76d2\u5b50\u5c31\u88ab\u6491\u4e86\u8d77\u6765\uff0c\u9ad8\u5ea6\u584c\u9677\u7684\u95ee\u9898\u4e5f\u5c31\u5f97\u5230\u4e86\u89e3\u51b3\u3002 < div class = \"parent\" > this is a line < div class = \"child\" > child1 </ div > < div class = \"child\" > child2 </ div > </ div > < style type = \"text/css\" > . parent { border : red solid 1 px ; overflow : hidden ; } . child { border : black solid 1 px ; float : left ; height : 40 px ; } </ style > \u6700\u7ec8\u6548\u679c\u5982\u4e0b","title":"BFC\u7684\u7279\u70b9\u3001\u521b\u5efa\u65b9\u5f0f\u4ee5\u53ca\u5e94\u7528"},{"location":"Front-End/BFC\u7684\u7279\u70b9\u3001\u521b\u5efa\u65b9\u5f0f\u4ee5\u53ca\u5e94\u7528/#bfc","text":"BFC\u5168\u79f0\u4e3aBlock Formatting Context\uff0c\u5373\u201c\u5757\u7ea7\u683c\u5f0f\u5316\u4e0a\u4e0b\u6587\u201d\uff0c\u5b83\u662f\u9875\u9762\u4e2d\u76f8\u5bf9\u72ec\u7acb\u7684\u4e00\u5757\u6e32\u67d3\u533a\u57df\uff0c\u5b83\u51b3\u5b9a\u4e86\u5185\u90e8\u7684\u5b50\u5143\u7d20\u5982\u4f55\u8fdb\u884c\u6446\u653e\u548c\u5b9a\u4f4d\uff0c\u4ee5\u53ca\u533a\u57df\u5185\u90e8\u5143\u7d20\u548c\u533a\u57df\u5916\u90e8\u5143\u7d20\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u5173\u7cfb\u3002","title":"BFC\u7684\u7279\u70b9\u3001\u521b\u5efa\u65b9\u5f0f\u4ee5\u53ca\u5e94\u7528"},{"location":"Front-End/BFC\u7684\u7279\u70b9\u3001\u521b\u5efa\u65b9\u5f0f\u4ee5\u53ca\u5e94\u7528/#bfc_1","text":"BFC\u53ef\u4ee5\u5305\u542b\u6d6e\u52a8\u5143\u7d20\uff08\u95ed\u5408\u6d6e\u52a8\uff09 BFC\u6240\u786e\u5b9a\u7684\u533a\u57df\u4e0d\u4f1a\u4e0e\u5916\u90e8\u6d6e\u52a8\u5143\u7d20\u53d1\u751f\u91cd\u53e0 \u4f4d\u4e8e\u540c\u4e00BFC\u4e0b\u7684\u76f8\u90bb\u5757\u7ea7\u5b50\u5143\u7d20\u5728\u5782\u76f4\u65b9\u5411\u4e0a\u4f1a\u53d1\u751fmargin\u91cd\u53e0 \u4f4d\u4e8e\u4e0d\u540cBFC\u4e0b\u7684\u76f8\u90bb\u5143\u7d20\u4e4b\u95f4\u4e0d\u4f1a\u53d1\u751fmargin\u91cd\u53e0 \u5c06\u4ee5\u4e0a\u7279\u70b9\u4e00\u8a00\u4ee5\u853d\u4e4b\uff0c\u5373BFC\u5728\u9875\u9762\u4e0a\u662f\u4e00\u4e2a\u5c01\u95ed\u7684\u533a\u57df\uff0c\u5982\u540c\u201c\u7ed3\u754c\u201d\u4e00\u822c\u3002\u5373\u4fbf\u662f\u5185\u90e8\u7684\u6d6e\u52a8\u5143\u7d20\u4e5f\u65e0\u6cd5\u8131\u79bb\u8be5\u533a\u57df\u3002\u8be5\u533a\u57df\u5185\u90e8\u7684\u5b50\u5143\u7d20\u65e0\u6cd5\u5f71\u54cd\u533a\u57df\u5916\u90e8\uff0c\u540c\u65f6\u4e5f\u4e0d\u53d7\u5916\u90e8\u5f71\u54cd\u3002","title":"BFC\u7684\u7279\u70b9"},{"location":"Front-End/BFC\u7684\u7279\u70b9\u3001\u521b\u5efa\u65b9\u5f0f\u4ee5\u53ca\u5e94\u7528/#_1","text":"\u6d6e\u52a8\u5143\u7d20 \u7edd\u5bf9\u5b9a\u4f4d\u5143\u7d20 \u975e\u5757\u7ea7\u76d2\u5b50\u7684\u5757\u7ea7\u5bb9\u5668\uff08\u4f8b\u5982inline-blocks\uff0ctable-cells\uff0cand table-captions\uff09 overflow\u5c5e\u6027\u503c\u4e0d\u662f\u201c visible\u201d\uff08visible\u662foverflow\u7684\u9ed8\u8ba4\u503c\uff09\u7684\u5757\u7ea7\u76d2\u5b50\uff08\u89c6\u53e3\u9664\u5916\uff09 \u8fd9\u4e9b\u5143\u7d20\u5c31\u4f1a\u4e3a\u4ed6\u4eec\u7684\u5185\u5bb9\u521b\u5efa\u4e00\u4e2aBFC\u3002","title":"\u521b\u5efa\u65b9\u5f0f"},{"location":"Front-End/BFC\u7684\u7279\u70b9\u3001\u521b\u5efa\u65b9\u5f0f\u4ee5\u53ca\u5e94\u7528/#bfc_2","text":"","title":"BFC\u7684\u5e94\u7528"},{"location":"Front-End/BFC\u7684\u7279\u70b9\u3001\u521b\u5efa\u65b9\u5f0f\u4ee5\u53ca\u5e94\u7528/#_2","text":"< div class = \"content\" > < div class = \"box\" ></ div > \u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c \u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c </ div > . content { width : 200 px ; height : 200 px ; order : 1 px solid blue ; } . box { width : 50 px ; height : 50 px ; background : red ; float : left ; } \u5b9e\u73b0\u6548\u679c \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7ea2\u8272\u65b9\u5757\u5bf9\u6570\u5b57\u5143\u7d20\u7684\u663e\u793a\u6784\u6210\u4e86\u5f71\u54cd\uff0c\u5982\u679c\u6211\u4eec\u53ea\u60f3\u8ba9\u6587\u672c\u4f4d\u4e8e\u53f3\u4fa7\uff0c\u600e\u4e48\u5904\u7406\u5462\uff1f \u8fd9\u91cc\u5c31\u53ef\u4ee5\u4f7f\u7528BFC\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6587\u672c\u5916\u5957\u4e00\u5c42\u5143\u7d20\uff0c\u5e76\u4e14\u628a\u8fd9\u4e2a\u5143\u7d20\u53d8\u6210BFC\uff0c\u8fd9\u6837\u6587\u672c\u5c31\u4e0d\u4f1a\u53d7\u5230\u6d6e\u52a8\u5143\u7d20\u7684\u5f71\u54cd\u4e86\u3002\u6211\u8fd9\u91cc\u901a\u8fc7\u4fee\u6539overflow\u5c5e\u6027\u4f7f\u6587\u672c\u6240\u5728\u5143\u7d20\u5f62\u6210\u4e00\u4e2aBFC\u3002 < div class = \"content\" > < div class = \"box\" ></ div >< div class = \"bfc\" > \u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c \u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c\u6211\u662f\u6587\u672c </ div > </ div > \u52a0\u4e0a . bfc { overflow : auto ; } \u5b9e\u73b0\u6548\u679c","title":"\u6e05\u9664\u5143\u7d20\u4e4b\u95f4\u7684\u5f71\u54cd"},{"location":"Front-End/BFC\u7684\u7279\u70b9\u3001\u521b\u5efa\u65b9\u5f0f\u4ee5\u53ca\u5e94\u7528/#_3","text":"\u521b\u5efa\u4e00\u4e2a\u4e24\u5217\u5e03\u5c40\uff0c\u5176\u4e2d\u5de6\u4fa7\u5bbd\u5ea6\u4e0d\u5b9a\uff0c\u53f3\u4fa7\u5bbd\u5ea6\u81ea\u9002\u5e94\u5360\u7528\u5269\u4e0b\u7684\u7a7a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u6d6e\u52a8\u5143\u7d20\u548cBFC\u5143\u7d20\u7684\u76f8\u4e92\u4f5c\u7528\u5b9e\u73b0\u7684\u3002","title":"\u521b\u5efa\u81ea\u9002\u5e94\u5e03\u5c40"},{"location":"Front-End/BFC\u7684\u7279\u70b9\u3001\u521b\u5efa\u65b9\u5f0f\u4ee5\u53ca\u5e94\u7528/#margin","text":"\u6839\u636eBFC\u7684\u7279\u6027\uff0c\u540c\u4e00\u4e2aBFC\u4e0b\u7684\u4e24\u4e2a\u76f8\u90bb\u7684\u76d2\u5b50\u4f1a\u51fa\u73b0\u5782\u76f4margin\u91cd\u53e0\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u95ee\u9898\u4f1a\u5f71\u54cd\u6211\u4eec\u5bf9\u9875\u9762\u5e03\u5c40\u7684\u63a7\u5236\uff0c\u901a\u5e38\u6211\u4eec\u53ef\u4ee5\u4e3a\u5176\u4e2d\u4e00\u4e2a\u76d2\u5b50\u6dfb\u52a0\u4e00\u4e2a\u7236\u5143\u7d20\uff0c\u5e76\u4f7f\u5176\u89e6\u53d1BFC\uff0c\u5373\u53ef\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a < div class = \"bfc\" > < p > Test </ p > </ div > < p > Test </ p > < p > Test </ p > < style type = \"text/css\" > p { margin : 30 px ; height : 30 px ; background : gray ; text-align : center ; } . bfc { overflow : auto ; } </ style >","title":"\u89e3\u51b3margin\u91cd\u53e0\u7684\u95ee\u9898"},{"location":"Front-End/BFC\u7684\u7279\u70b9\u3001\u521b\u5efa\u65b9\u5f0f\u4ee5\u53ca\u5e94\u7528/#_4","text":"\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff0cdiv.parent\u5305\u542b\u4e86\u4e24\u4e2adiv.child\uff0c\u800c\u4e24\u4e2adiv\u7531\u4e8e\u8d4b\u4e88\u4e86float:left\u4f7f\u5176\u6d6e\u52a8\uff0c\u5bfc\u81f4\u4e86div.parent\u9ad8\u5ea6\u7684\u574d\u584c\uff0c\u6b64\u65f6\u6211\u4eec\u7ed9div.parent\u6dfb\u52a0\u4e00\u4e2aoverflow:hidden\u5c5e\u6027\u503c\uff0c\u4f7fdiv.parent\u89e6\u53d1BFC\uff0c\u7531\u4e8eBFC\u4e0b\u7684\u76d2\u5b50\u4f1a\u5305\u542b\u6d6e\u52a8\u5143\u7d20\u7684\u9ad8\u5ea6\uff0c\u56e0\u6b64\u76d2\u5b50\u5c31\u88ab\u6491\u4e86\u8d77\u6765\uff0c\u9ad8\u5ea6\u584c\u9677\u7684\u95ee\u9898\u4e5f\u5c31\u5f97\u5230\u4e86\u89e3\u51b3\u3002 < div class = \"parent\" > this is a line < div class = \"child\" > child1 </ div > < div class = \"child\" > child2 </ div > </ div > < style type = \"text/css\" > . parent { border : red solid 1 px ; overflow : hidden ; } . child { border : black solid 1 px ; float : left ; height : 40 px ; } </ style > \u6700\u7ec8\u6548\u679c\u5982\u4e0b","title":"\u6e05\u9664\u6d6e\u52a8\u5f15\u8d77\u7684\u9ad8\u5ea6\u574d\u584c"},{"location":"Front-End/Web\u6846\u67b6\u63a2\u7a76(Vue\u3001Angular)/","text":"Web\u6846\u67b6\u63a2\u7a76(Vue\u3001Angular) MVVM MVVM \u7531\u4ee5\u4e0b\u4e09\u4e2a\u5185\u5bb9\u7ec4\u6210 View\uff1a\u754c\u9762 Model\uff1a\u6570\u636e\u6a21\u578b ViewModel\uff1a\u4f5c\u4e3a\u6865\u6881\u8d1f\u8d23\u6c9f\u901a View \u548c Model \u5728 MVVM \u4e2d\uff0cUI \u662f\u901a\u8fc7\u6570\u636e\u9a71\u52a8\u7684\uff0c\u6570\u636e\u4e00\u65e6\u6539\u53d8\u5c31\u4f1a\u76f8\u5e94\u7684\u5237\u65b0\u5bf9\u5e94\u7684 UI\uff0cUI \u5982\u679c\u6539\u53d8\uff0c\u4e5f\u4f1a\u6539\u53d8\u5bf9\u5e94\u7684\u6570\u636e\u3002\u8fd9\u79cd\u65b9\u5f0f\u5c31\u53ef\u4ee5\u5728\u4e1a\u52a1\u5904\u7406\u4e2d\u53ea\u5173\u5fc3\u6570\u636e\u7684\u6d41\u8f6c\uff0c\u800c\u65e0\u9700\u76f4\u63a5\u548c\u9875\u9762\u6253\u4ea4\u9053\u3002ViewModel \u53ea\u5173\u5fc3\u6570\u636e\u548c\u4e1a\u52a1\u7684\u5904\u7406\uff0c\u4e0d\u5173\u5fc3 View \u5982\u4f55\u5904\u7406\u6570\u636e\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cView \u548c Model \u90fd\u53ef\u4ee5\u72ec\u7acb\u51fa\u6765\uff0c\u4efb\u4f55\u4e00\u65b9\u6539\u53d8\u4e86\u4e5f\u4e0d\u4e00\u5b9a\u9700\u8981\u6539\u53d8\u53e6\u4e00\u65b9\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u4e00\u4e9b\u53ef\u590d\u7528\u7684\u903b\u8f91\u653e\u5728\u4e00\u4e2a ViewModel \u4e2d\uff0c\u8ba9\u591a\u4e2a View \u590d\u7528\u8fd9\u4e2a ViewModel\u3002 \u5728 MVVM \u4e2d\uff0c\u6700\u6838\u5fc3\u7684\u4e5f\u5c31\u662f\u6570\u636e\u53cc\u5411\u7ed1\u5b9a\uff0c\u4f8b\u5982 Angluar \u7684\u810f\u6570\u636e\u68c0\u6d4b\uff0cVue \u4e2d\u7684\u6570\u636e\u52ab\u6301\u3002 Angular\u4e2d\u7684\u53cc\u5411\u7ed1\u5b9a\u5b9e\u73b0 Angular \u5f53\u89e6\u53d1\u4e86\u6307\u5b9a\u4e8b\u4ef6\u540e\u8fdb\u5165\u810f\u6570\u636e\u68c0\u6d4b\uff0c\u8fd9\u65f6\u671f\u4f1a\u8c03\u7528 $digest \u5faa\u73af\u904d\u5386\u6240\u6709\u7684\u6570\u636e\u89c2\u5bdf\u8005\uff0c\u5224\u65ad\u5f53\u524d\u503c\u662f\u5426\u548c\u5148\u524d\u7684\u503c\u6709\u533a\u522b\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u53d8\u5316\u7684\u8bdd\uff0c\u4f1a\u8c03\u7528 $watch \u51fd\u6570\uff0c\u7136\u540e\u518d\u6b21\u8c03\u7528 $digest \u5faa\u73af\u76f4\u5230\u53d1\u73b0\u6ca1\u6709\u53d8\u5316\u3002\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u5faa\u73af\u51e0\u6b21\uff0c\u4e00\u76f4\u5230\u4e0d\u518d\u6709\u6570\u636e\u53d8\u5316\u53d1\u751f\u540e\uff0c\u5c06\u53d8\u66f4\u7684\u6570\u636e\u53d1\u9001\u5230\u89c6\u56fe\uff0c\u66f4\u65b0\u9875\u9762\u5c55\u73b0\u3002\u5982\u679c\u662f\u624b\u52a8\u5bf9 ViewModel \u7684\u6570\u636e\u8fdb\u884c\u53d8\u66f4\uff0c\u4e3a\u786e\u4fdd\u53d8\u66f4\u540c\u6b65\u5230\u89c6\u56fe\uff0c\u9700\u8981\u624b\u52a8\u89e6\u53d1\u4e00\u6b21\u201c\u810f\u503c\u68c0\u6d4b\u201d\u3002 \u810f\u6570\u636e\u68c0\u6d4b\u867d\u7136\u9700\u8981\u6bcf\u6b21\u53bb\u5faa\u73af\u904d\u5386\u67e5\u770b\u662f\u5426\u6709\u6570\u636e\u53d8\u5316\uff0c\u5b58\u5728\u4f4e\u6548\u7684\u95ee\u9898\uff0c\u4e0eVue\u7684\u53cc\u5411\u7ed1\u5b9a\u539f\u7406\u4e0d\u540c\uff0c\u4f46\u662f\u810f\u6570\u636e\u68c0\u6d4b\u80fd\u591f\u540c\u65f6\u68c0\u6d4b\u51fa\u8981\u66f4\u65b0\u7684\u503c\uff0c\u518d\u53bb\u7edf\u4e00\u66f4\u65b0UI\uff0c\u8fd9\u6837\u4e5f\u53ef\u4ee5\u51cf\u5c11\u64cd\u4f5cDOM\u7684\u6b21\u6570\u3002 Vue2.0\u4e2d\u7684\u53cc\u5411\u7ed1\u5b9a\u5b9e\u73b0 Vue2.0 \u4e2d\u4f7f\u7528\u4e86 Object.defineProperty() \u6765\u5b9e\u73b0\u53cc\u5411\u7ed1\u5b9a\uff0c\u901a\u8fc7\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u76d1\u542c\u5230 set \u548c get \u7684\u4e8b\u4ef6\u3002 \u6240\u4ee5Vue.js\u4e0d\u652f\u6301IE8 \u4ee5\u53ca\u66f4\u4f4e\u7248\u672c\u6d4f\u89c8\u5668 \u57fa\u672c\u7684Demo\u5b9e\u73b0\u5982\u4e0b < div > < input type = \"text\" id = \"input\" > < span id = \"text\" ></ span > </ div > var obj = {}; Object . defineProperty ( obj , 'prop' , { get : function () { return val ; }, set : function ( newVal ) { val = newVal ; document . getElementById ( 'input' ). value = val ; document . getElementById ( 'text' ). innerHTML = val ; } }); document . addEventListener ( 'keyup' , function ( e ) { obj . prop = e . target . value ; }); vue2.0\u5c31\u662f\u901a\u8fc7 Object.defineProperty() \u6765\u52ab\u6301\u5404\u4e2a\u5c5e\u6027\u7684setter\uff0cgetter\u3002\u518d\u7ed3\u5408\u53d1\u5e03\u8005-\u8ba2\u9605\u8005\u7684\u65b9\u5f0f\uff0c\u53d1\u5e03\u6d88\u606f\u7ed9\u8ba2\u9605\u8005\uff0c\u89e6\u53d1\u76f8\u5e94\u7684\u76d1\u542c\u56de\u8c03\u3002 \u5728\u5bf9\u6570\u636e\u8fdb\u884c\u8bfb\u53d6\u65f6\uff0c\u5982\u679c\u5f53\u524d\u6709 Watcher\uff08\u5bf9\u6570\u636e\u7684\u89c2\u5bdf\u8005\uff0cwatcher \u4f1a\u8d1f\u8d23\u5c06\u83b7\u53d6\u7684\u65b0\u6570\u636e\u53d1\u9001\u7ed9\u89c6\u56fe\uff09\uff0c\u90a3\u5c06\u8be5 Watcher \u7ed1\u5b9a\u5230\u5f53\u524d\u7684\u6570\u636e\u4e0a(dep.depend()\uff0cdep \u5173\u8054\u5f53\u524d\u6570\u636e\u548c\u6240\u6709\u7684 watcher \u7684\u4f9d\u8d56\u5173\u7cfb)\uff0c\u662f\u4e00\u4e2a\u68c0\u67e5\u5e76\u8bb0\u5f55\u4f9d\u8d56\u7684\u8fc7\u7a0b\u3002\u800c\u5728\u5bf9\u6570\u636e\u8fdb\u884c\u8d4b\u503c\u65f6\uff0c\u5982\u679c\u6570\u636e\u53d1\u751f\u6539\u53d8\uff0c\u5219\u901a\u77e5\u6240\u6709\u7684 watcher(\u501f\u52a9 dep.notify())\uff0c\u5982\u4e0a\u56fe\u3002\u8fd9\u6837\uff0c\u5373\u4fbf\u662f\u6211\u4eec\u624b\u52a8\u6539\u53d8\u4e86\u6570\u636e\uff0c\u6846\u67b6\u4e5f\u80fd\u591f\u81ea\u52a8\u5c06\u6570\u636e\u540c\u6b65\u5230\u89c6\u56fe\u3002 \u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b\uff1a function observe ( obj ) { // \u5224\u65ad\u7c7b\u578b if ( ! obj || typeof obj !== 'object' ) { return } Object . keys ( obj ). forEach ( key => { defineReactive ( obj , key , obj [ key ]) }) } function defineReactive ( obj , key , val ) { // \u9012\u5f52\u5b50\u5c5e\u6027 observe ( val ) let dp = new Dep () Object . defineProperty ( obj , key , { enumerable : true , configurable : true , get : function reactiveGetter () { console . log ( 'get value' ) // \u5c06 Watcher \u6dfb\u52a0\u5230\u8ba2\u9605 if ( Dep . target ) { dp . addSub ( Dep . target ) } return val }, set : function reactiveSetter ( newVal ) { console . log ( 'change value' ) val = newVal // \u6267\u884c watcher \u7684 update \u65b9\u6cd5 dp . notify () } }) } class Dep { constructor () { this . subs = [] } addSub ( sub ) { // sub \u662f Watcher \u5b9e\u4f8b this . subs . push ( sub ) } notify () { this . subs . forEach ( sub => { sub . update () }) } } // \u5168\u5c40\u5c5e\u6027\uff0c\u901a\u8fc7\u8be5\u5c5e\u6027\u914d\u7f6e Watcher Dep . target = null function update ( value ) { document . querySelector ( 'div' ). innerText = value } class Watcher { constructor ( obj , key , cb ) { // \u5c06 Dep.target \u6307\u5411\u81ea\u5df1 // \u7136\u540e\u89e6\u53d1\u5c5e\u6027\u7684 getter \u6dfb\u52a0\u76d1\u542c // \u6700\u540e\u5c06 Dep.target \u7f6e\u7a7a Dep . target = this this . cb = cb this . obj = obj this . key = key this . value = obj [ key ] Dep . target = null } update () { // \u83b7\u5f97\u65b0\u503c this . value = this . obj [ this . key ] // \u8c03\u7528 update \u65b9\u6cd5\u66f4\u65b0 Dom this . cb ( this . value ) } } var data = { name : 'yck' } observe ( data ) // \u6a21\u62df\u89e3\u6790\u5230 `{{name}}` \u89e6\u53d1\u7684\u64cd\u4f5c new Watcher ( data , 'name' , update ) // update Dom innerText data . name = 'yyy' \u4f46\u662fObject.defineProperty()\u6709\u5176\u7f3a\u9677: \u53ea\u80fd\u5bf9\u5c5e\u6027\u8fdb\u884c\u6570\u636e\u52ab\u6301\uff0c\u6240\u4ee5\u9700\u8981\u6df1\u5ea6\u904d\u5386\u6574\u4e2a\u5bf9\u8c61 \u5bf9\u4e8e\u6570\u7ec4\u4e0d\u80fd\u76d1\u542c\u5230\u6570\u636e\u7684\u53d8\u5316(Vue\u4e2d\u4f7f\u7528hack\u65b9\u6cd5\u8fdb\u884c\u89e3\u51b3) hack\u7684\u5b9e\u73b0 const arrayProto = Array . prototype export const arrayMethods = Object . create ( arrayProto ) // hack \u4ee5\u4e0b\u51e0\u4e2a\u51fd\u6570 const methodsToPatch = [ 'push' , 'pop' , 'shift' , 'unshift' , 'splice' , 'sort' , 'reverse' ] methodsToPatch . forEach ( function ( method ) { // \u83b7\u5f97\u539f\u751f\u51fd\u6570 const original = arrayProto [ method ] def ( arrayMethods , method , function mutator (... args ) { // \u8c03\u7528\u539f\u751f\u51fd\u6570 const result = original . apply ( this , args ) const ob = this . __ob__ let inserted switch ( method ) { case 'push' : case 'unshift' : inserted = args break case 'splice' : inserted = args . slice ( 2 ) break } if ( inserted ) ob . observeArray ( inserted ) // \u89e6\u53d1\u66f4\u65b0 ob . dep . notify () return result }) }) Vue3.0 \u7531\u4e8eObject.defineProperty\u4e0d\u80fd\u76d1\u542c\u5230\u6570\u7ec4\u53d8\u5316\uff0c\u6240\u4ee5Vue3.0\u4e2d\u4f7f\u7528\u4e86\u539f\u751f\u652f\u6301\u76d1\u542c\u6570\u7ec4\u53d8\u5316\u7684es6\u4e2d\u7684Proxy let onWatch = ( obj , setBind , getLogger ) => { let handler = { get ( target , property , receiver ) { getLogger ( target , property ) return Reflect . get ( target , property , receiver ) }, set ( target , property , value , receiver ) { setBind ( value ) return Reflect . set ( target , property , value ) } } return new Proxy ( obj , handler ) } let obj = { name : 'test' } let p = onWatch ( obj , v => { document . querySelector ( 'div' ). innerText = v }, ( target , property ) => { console . log ( `Get ' ${ property } ' = ${ target [ property ] } ` ) } ) p . name = 'zhongwq' // bind `value` to `zhongwq` p . name // -> Get 'name' = test","title":"Web\u6846\u67b6\u63a2\u7a76(Vue\u3001Angular)"},{"location":"Front-End/Web\u6846\u67b6\u63a2\u7a76(Vue\u3001Angular)/#webvueangular","text":"","title":"Web\u6846\u67b6\u63a2\u7a76(Vue\u3001Angular)"},{"location":"Front-End/Web\u6846\u67b6\u63a2\u7a76(Vue\u3001Angular)/#mvvm","text":"MVVM \u7531\u4ee5\u4e0b\u4e09\u4e2a\u5185\u5bb9\u7ec4\u6210 View\uff1a\u754c\u9762 Model\uff1a\u6570\u636e\u6a21\u578b ViewModel\uff1a\u4f5c\u4e3a\u6865\u6881\u8d1f\u8d23\u6c9f\u901a View \u548c Model \u5728 MVVM \u4e2d\uff0cUI \u662f\u901a\u8fc7\u6570\u636e\u9a71\u52a8\u7684\uff0c\u6570\u636e\u4e00\u65e6\u6539\u53d8\u5c31\u4f1a\u76f8\u5e94\u7684\u5237\u65b0\u5bf9\u5e94\u7684 UI\uff0cUI \u5982\u679c\u6539\u53d8\uff0c\u4e5f\u4f1a\u6539\u53d8\u5bf9\u5e94\u7684\u6570\u636e\u3002\u8fd9\u79cd\u65b9\u5f0f\u5c31\u53ef\u4ee5\u5728\u4e1a\u52a1\u5904\u7406\u4e2d\u53ea\u5173\u5fc3\u6570\u636e\u7684\u6d41\u8f6c\uff0c\u800c\u65e0\u9700\u76f4\u63a5\u548c\u9875\u9762\u6253\u4ea4\u9053\u3002ViewModel \u53ea\u5173\u5fc3\u6570\u636e\u548c\u4e1a\u52a1\u7684\u5904\u7406\uff0c\u4e0d\u5173\u5fc3 View \u5982\u4f55\u5904\u7406\u6570\u636e\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cView \u548c Model \u90fd\u53ef\u4ee5\u72ec\u7acb\u51fa\u6765\uff0c\u4efb\u4f55\u4e00\u65b9\u6539\u53d8\u4e86\u4e5f\u4e0d\u4e00\u5b9a\u9700\u8981\u6539\u53d8\u53e6\u4e00\u65b9\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u4e00\u4e9b\u53ef\u590d\u7528\u7684\u903b\u8f91\u653e\u5728\u4e00\u4e2a ViewModel \u4e2d\uff0c\u8ba9\u591a\u4e2a View \u590d\u7528\u8fd9\u4e2a ViewModel\u3002 \u5728 MVVM \u4e2d\uff0c\u6700\u6838\u5fc3\u7684\u4e5f\u5c31\u662f\u6570\u636e\u53cc\u5411\u7ed1\u5b9a\uff0c\u4f8b\u5982 Angluar \u7684\u810f\u6570\u636e\u68c0\u6d4b\uff0cVue \u4e2d\u7684\u6570\u636e\u52ab\u6301\u3002","title":"MVVM"},{"location":"Front-End/Web\u6846\u67b6\u63a2\u7a76(Vue\u3001Angular)/#angular","text":"Angular \u5f53\u89e6\u53d1\u4e86\u6307\u5b9a\u4e8b\u4ef6\u540e\u8fdb\u5165\u810f\u6570\u636e\u68c0\u6d4b\uff0c\u8fd9\u65f6\u671f\u4f1a\u8c03\u7528 $digest \u5faa\u73af\u904d\u5386\u6240\u6709\u7684\u6570\u636e\u89c2\u5bdf\u8005\uff0c\u5224\u65ad\u5f53\u524d\u503c\u662f\u5426\u548c\u5148\u524d\u7684\u503c\u6709\u533a\u522b\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u53d8\u5316\u7684\u8bdd\uff0c\u4f1a\u8c03\u7528 $watch \u51fd\u6570\uff0c\u7136\u540e\u518d\u6b21\u8c03\u7528 $digest \u5faa\u73af\u76f4\u5230\u53d1\u73b0\u6ca1\u6709\u53d8\u5316\u3002\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u5faa\u73af\u51e0\u6b21\uff0c\u4e00\u76f4\u5230\u4e0d\u518d\u6709\u6570\u636e\u53d8\u5316\u53d1\u751f\u540e\uff0c\u5c06\u53d8\u66f4\u7684\u6570\u636e\u53d1\u9001\u5230\u89c6\u56fe\uff0c\u66f4\u65b0\u9875\u9762\u5c55\u73b0\u3002\u5982\u679c\u662f\u624b\u52a8\u5bf9 ViewModel \u7684\u6570\u636e\u8fdb\u884c\u53d8\u66f4\uff0c\u4e3a\u786e\u4fdd\u53d8\u66f4\u540c\u6b65\u5230\u89c6\u56fe\uff0c\u9700\u8981\u624b\u52a8\u89e6\u53d1\u4e00\u6b21\u201c\u810f\u503c\u68c0\u6d4b\u201d\u3002 \u810f\u6570\u636e\u68c0\u6d4b\u867d\u7136\u9700\u8981\u6bcf\u6b21\u53bb\u5faa\u73af\u904d\u5386\u67e5\u770b\u662f\u5426\u6709\u6570\u636e\u53d8\u5316\uff0c\u5b58\u5728\u4f4e\u6548\u7684\u95ee\u9898\uff0c\u4e0eVue\u7684\u53cc\u5411\u7ed1\u5b9a\u539f\u7406\u4e0d\u540c\uff0c\u4f46\u662f\u810f\u6570\u636e\u68c0\u6d4b\u80fd\u591f\u540c\u65f6\u68c0\u6d4b\u51fa\u8981\u66f4\u65b0\u7684\u503c\uff0c\u518d\u53bb\u7edf\u4e00\u66f4\u65b0UI\uff0c\u8fd9\u6837\u4e5f\u53ef\u4ee5\u51cf\u5c11\u64cd\u4f5cDOM\u7684\u6b21\u6570\u3002","title":"Angular\u4e2d\u7684\u53cc\u5411\u7ed1\u5b9a\u5b9e\u73b0"},{"location":"Front-End/Web\u6846\u67b6\u63a2\u7a76(Vue\u3001Angular)/#vue20","text":"Vue2.0 \u4e2d\u4f7f\u7528\u4e86 Object.defineProperty() \u6765\u5b9e\u73b0\u53cc\u5411\u7ed1\u5b9a\uff0c\u901a\u8fc7\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u76d1\u542c\u5230 set \u548c get \u7684\u4e8b\u4ef6\u3002 \u6240\u4ee5Vue.js\u4e0d\u652f\u6301IE8 \u4ee5\u53ca\u66f4\u4f4e\u7248\u672c\u6d4f\u89c8\u5668 \u57fa\u672c\u7684Demo\u5b9e\u73b0\u5982\u4e0b < div > < input type = \"text\" id = \"input\" > < span id = \"text\" ></ span > </ div > var obj = {}; Object . defineProperty ( obj , 'prop' , { get : function () { return val ; }, set : function ( newVal ) { val = newVal ; document . getElementById ( 'input' ). value = val ; document . getElementById ( 'text' ). innerHTML = val ; } }); document . addEventListener ( 'keyup' , function ( e ) { obj . prop = e . target . value ; }); vue2.0\u5c31\u662f\u901a\u8fc7 Object.defineProperty() \u6765\u52ab\u6301\u5404\u4e2a\u5c5e\u6027\u7684setter\uff0cgetter\u3002\u518d\u7ed3\u5408\u53d1\u5e03\u8005-\u8ba2\u9605\u8005\u7684\u65b9\u5f0f\uff0c\u53d1\u5e03\u6d88\u606f\u7ed9\u8ba2\u9605\u8005\uff0c\u89e6\u53d1\u76f8\u5e94\u7684\u76d1\u542c\u56de\u8c03\u3002 \u5728\u5bf9\u6570\u636e\u8fdb\u884c\u8bfb\u53d6\u65f6\uff0c\u5982\u679c\u5f53\u524d\u6709 Watcher\uff08\u5bf9\u6570\u636e\u7684\u89c2\u5bdf\u8005\uff0cwatcher \u4f1a\u8d1f\u8d23\u5c06\u83b7\u53d6\u7684\u65b0\u6570\u636e\u53d1\u9001\u7ed9\u89c6\u56fe\uff09\uff0c\u90a3\u5c06\u8be5 Watcher \u7ed1\u5b9a\u5230\u5f53\u524d\u7684\u6570\u636e\u4e0a(dep.depend()\uff0cdep \u5173\u8054\u5f53\u524d\u6570\u636e\u548c\u6240\u6709\u7684 watcher \u7684\u4f9d\u8d56\u5173\u7cfb)\uff0c\u662f\u4e00\u4e2a\u68c0\u67e5\u5e76\u8bb0\u5f55\u4f9d\u8d56\u7684\u8fc7\u7a0b\u3002\u800c\u5728\u5bf9\u6570\u636e\u8fdb\u884c\u8d4b\u503c\u65f6\uff0c\u5982\u679c\u6570\u636e\u53d1\u751f\u6539\u53d8\uff0c\u5219\u901a\u77e5\u6240\u6709\u7684 watcher(\u501f\u52a9 dep.notify())\uff0c\u5982\u4e0a\u56fe\u3002\u8fd9\u6837\uff0c\u5373\u4fbf\u662f\u6211\u4eec\u624b\u52a8\u6539\u53d8\u4e86\u6570\u636e\uff0c\u6846\u67b6\u4e5f\u80fd\u591f\u81ea\u52a8\u5c06\u6570\u636e\u540c\u6b65\u5230\u89c6\u56fe\u3002 \u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b\uff1a function observe ( obj ) { // \u5224\u65ad\u7c7b\u578b if ( ! obj || typeof obj !== 'object' ) { return } Object . keys ( obj ). forEach ( key => { defineReactive ( obj , key , obj [ key ]) }) } function defineReactive ( obj , key , val ) { // \u9012\u5f52\u5b50\u5c5e\u6027 observe ( val ) let dp = new Dep () Object . defineProperty ( obj , key , { enumerable : true , configurable : true , get : function reactiveGetter () { console . log ( 'get value' ) // \u5c06 Watcher \u6dfb\u52a0\u5230\u8ba2\u9605 if ( Dep . target ) { dp . addSub ( Dep . target ) } return val }, set : function reactiveSetter ( newVal ) { console . log ( 'change value' ) val = newVal // \u6267\u884c watcher \u7684 update \u65b9\u6cd5 dp . notify () } }) } class Dep { constructor () { this . subs = [] } addSub ( sub ) { // sub \u662f Watcher \u5b9e\u4f8b this . subs . push ( sub ) } notify () { this . subs . forEach ( sub => { sub . update () }) } } // \u5168\u5c40\u5c5e\u6027\uff0c\u901a\u8fc7\u8be5\u5c5e\u6027\u914d\u7f6e Watcher Dep . target = null function update ( value ) { document . querySelector ( 'div' ). innerText = value } class Watcher { constructor ( obj , key , cb ) { // \u5c06 Dep.target \u6307\u5411\u81ea\u5df1 // \u7136\u540e\u89e6\u53d1\u5c5e\u6027\u7684 getter \u6dfb\u52a0\u76d1\u542c // \u6700\u540e\u5c06 Dep.target \u7f6e\u7a7a Dep . target = this this . cb = cb this . obj = obj this . key = key this . value = obj [ key ] Dep . target = null } update () { // \u83b7\u5f97\u65b0\u503c this . value = this . obj [ this . key ] // \u8c03\u7528 update \u65b9\u6cd5\u66f4\u65b0 Dom this . cb ( this . value ) } } var data = { name : 'yck' } observe ( data ) // \u6a21\u62df\u89e3\u6790\u5230 `{{name}}` \u89e6\u53d1\u7684\u64cd\u4f5c new Watcher ( data , 'name' , update ) // update Dom innerText data . name = 'yyy' \u4f46\u662fObject.defineProperty()\u6709\u5176\u7f3a\u9677: \u53ea\u80fd\u5bf9\u5c5e\u6027\u8fdb\u884c\u6570\u636e\u52ab\u6301\uff0c\u6240\u4ee5\u9700\u8981\u6df1\u5ea6\u904d\u5386\u6574\u4e2a\u5bf9\u8c61 \u5bf9\u4e8e\u6570\u7ec4\u4e0d\u80fd\u76d1\u542c\u5230\u6570\u636e\u7684\u53d8\u5316(Vue\u4e2d\u4f7f\u7528hack\u65b9\u6cd5\u8fdb\u884c\u89e3\u51b3) hack\u7684\u5b9e\u73b0 const arrayProto = Array . prototype export const arrayMethods = Object . create ( arrayProto ) // hack \u4ee5\u4e0b\u51e0\u4e2a\u51fd\u6570 const methodsToPatch = [ 'push' , 'pop' , 'shift' , 'unshift' , 'splice' , 'sort' , 'reverse' ] methodsToPatch . forEach ( function ( method ) { // \u83b7\u5f97\u539f\u751f\u51fd\u6570 const original = arrayProto [ method ] def ( arrayMethods , method , function mutator (... args ) { // \u8c03\u7528\u539f\u751f\u51fd\u6570 const result = original . apply ( this , args ) const ob = this . __ob__ let inserted switch ( method ) { case 'push' : case 'unshift' : inserted = args break case 'splice' : inserted = args . slice ( 2 ) break } if ( inserted ) ob . observeArray ( inserted ) // \u89e6\u53d1\u66f4\u65b0 ob . dep . notify () return result }) })","title":"Vue2.0\u4e2d\u7684\u53cc\u5411\u7ed1\u5b9a\u5b9e\u73b0"},{"location":"Front-End/Web\u6846\u67b6\u63a2\u7a76(Vue\u3001Angular)/#vue30","text":"\u7531\u4e8eObject.defineProperty\u4e0d\u80fd\u76d1\u542c\u5230\u6570\u7ec4\u53d8\u5316\uff0c\u6240\u4ee5Vue3.0\u4e2d\u4f7f\u7528\u4e86\u539f\u751f\u652f\u6301\u76d1\u542c\u6570\u7ec4\u53d8\u5316\u7684es6\u4e2d\u7684Proxy let onWatch = ( obj , setBind , getLogger ) => { let handler = { get ( target , property , receiver ) { getLogger ( target , property ) return Reflect . get ( target , property , receiver ) }, set ( target , property , value , receiver ) { setBind ( value ) return Reflect . set ( target , property , value ) } } return new Proxy ( obj , handler ) } let obj = { name : 'test' } let p = onWatch ( obj , v => { document . querySelector ( 'div' ). innerText = v }, ( target , property ) => { console . log ( `Get ' ${ property } ' = ${ target [ property ] } ` ) } ) p . name = 'zhongwq' // bind `value` to `zhongwq` p . name // -> Get 'name' = test","title":"Vue3.0"},{"location":"Leetcode Note/Capacitated Facility Location Problem/","text":"Capacitated Facility Location Problem \u95ee\u9898\u63cf\u8ff0 \u5047\u8bbe\u6709n\u4e2a\u8bbe\u65bd\u548cm\u4e2a\u5ba2\u6237\u3002 \u6211\u4eec\u5e0c\u671b\u9009\u62e9\uff1a \u5f00\u653e\u7684n\u4e2a\u8bbe\u65bd\u4e2d\u7684\u54ea\u4e00\u4e2a \u5c06\u5ba2\u6237\u5206\u914d\u7ed9\u8bbe\u65bd \u76ee\u6807\u662f\u5c3d\u91cf\u51cf\u5c11\u5f00\u653e\u6210\u672c\u548c\u5206\u914d\u6210\u672c\u4e4b\u548c\u3002 \u5206\u914d\u7ed9\u8bbe\u65bd\u7684\u603b\u9700\u6c42\u91cf\u4e0d\u5f97\u8d85\u8fc7\u5176\u5bb9\u91cf\u3002 \u95ee\u9898\u6d4b\u4f8b \u4e00\u5171\u670971\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5404\u4e2a\u7528\u4f8b\u7684\u683c\u5f0f\u5982\u4e0b \u95ee\u9898\u5efa\u6a21 \u6839\u636e\u4e0a\u9762\u7684\u9898\u76ee\u8981\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u9996\u5148\u5efa\u7684\u6570\u636e\u6a21\u578b\u5982\u4e0b \u5177\u4f53\u5206\u6790 \u9996\u5148\uff0c\u5bf9\u4e8e\u8fd9\u79cdnp\u96be\u7684\u95ee\u9898\uff0c\u663e\u7136\u6211\u4eec\u662f\u4e0d\u53ef\u80fd\u53bb\u901a\u8fc7\u7a77\u4e3e\u6c42\u5f97\u5176\u6700\u4f18\u89e3\u7684\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5e0c\u671b\u7684\u662f\u901a\u8fc7\u6211\u4eec\u5728\u7b97\u6cd5\u8bfe\u7a0b\u4ee5\u53ca\u4eba\u5de5\u667a\u80fd\u8bfe\u7a0b\u4e0a\u7684\u4f18\u5316\u7b97\u6cd5\u5bf9\u8be5\u95ee\u9898\u8fdb\u884c\u6c42\u89e3\u3002 \u672c\u6765\u5728\u4e0a\u9762\u5efa\u5b8c\u6a21\u578b\u4e4b\u540e\uff0c\u5728\u8fd9\u79cd\u76ee\u6807\u51fd\u6570\u4ee5\u53ca\u95ee\u9898\u7ea6\u675f\u5341\u5206\u6e05\u6670\u7684\u6761\u4ef6\u4e0b\uff0c\u6211\u4e00\u5f00\u59cb\u60f3\u5230\u7684\u662f\u628a\u5176\u5f53\u6210\u7ebf\u6027\u4f18\u5316\u5bf9\u5176\u8fdb\u884c\u6c42\u89e3\uff0c\u4f46\u662f\u7ecf\u8fc7\u521d\u6b65\u64cd\u4f5c\u4e4b\u540e\u53d1\u73b0\u5176\u5728\u89c4\u6a21\u4e0d\u5927\u7684\u6d4b\u4f8b\u4e2d\u8868\u73b0\u826f\u597d\uff0c\u4f46\u662f\u4e00\u65e6\u53c2\u6570\u8fc7\u591a\uff0c\u5176\u8ba1\u7b97\u65f6\u95f4\u5c31\u4f1a\u53d8\u5f97\u5341\u5206\u4e45\uff0c\u5f53\u53d8\u91cf\u975e\u5e38\u591a\u65f6,\u4f7f\u7528\u8be5\u95ee\u9898\u6c42\u89e3\uff0c\u6c42\u89e3\u8282\u70b9\u4f1a\u6307\u6570\u901f\u5ea6\u589e\u52a0\uff0c\u67d0\u4e9b\u89e3\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u4e5f\u6c42\u4e0d\u51fa\u89e3\u6765, \u6240\u4ee5\u6211\u6ca1\u6709\u9009\u62e9\u7ebf\u6027\u4f18\u5316\u4f5c\u4e3a\u6700\u7ec8\u89e3\u6cd5\u3002 \u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u5148\u8bf4\u8bf4\u6211\u4eec\u8fd9\u91cc\u7528\u5230\u7684\u4e09\u79cd\u4e3b\u8981\u7684\u7b97\u6cd5 \u5177\u4f53\u4ee3\u7801 \u5177\u4f53\u4ee3\u7801\u5df2\u7ecf\u4e0a\u4f20\u5230\u4e2a\u4eba\u7684Github\u4e0a \u4ee3\u7801\u94fe\u63a5 \u8d2a\u5fc3\u7b97\u6cd5 \u9996\u5148\uff0c\u6211\u4eec\u8fd9\u91cc\u5c1d\u8bd5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u5bf9\u6211\u4eec\u7684\u95ee\u9898\u8fdb\u884c\u6c42\u89e3\uff0c\u8fd9\u91cc\u6211\u4eec\u5148\u7b80\u5355\u8bb2\u8bb2\u6211\u4eec\u7684\u7b97\u6cd5\uff0c\u6211\u7684\u8d2a\u5fc3\u7b97\u6cd5\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u5df2\u5f00\u542f\u7684\u5de5\u5382\u5217\u8868\u4ee5\u53ca\u4e00\u4e2a\u672a\u5f00\u542f\u7684\u5de5\u5382\u5217\u8868\uff0c\u6bcf\u6b21\u5206\u522b\u5bf9\u4e8e\u5df2\u5f00\u542f\u7684\u5de5\u5382\u5217\u8868\u548c\u672a\u5f00\u542f\u7684\u5de5\u5382\u5217\u8868\u4e2d\u6bcf\u4e2a\u5de5\u5382i\u53d6\u5bf9\u5e94$min(c_{ij})$\u5373\u6700\u5c0f\u7684\u987e\u5ba2j\u5546\u54c1\u4ea4\u7531i\u5de5\u5382\u5904\u7406\u7684cost\uff0c\u5206\u522b\u53d6\u5f97\u7ed3\u679c\u540e\uff0c\u6211\u4eec\u53d6$min(c_{i_{open}j}, c_{i_{close}j} + f_i)$\u5373\u6bd4\u8f83 \u6700\u5c0f\u7684\u76f4\u63a5\u4f7f\u7528\u5df2\u5f00\u542f\u5de5\u5382\u7684\u5f00\u9500 \u4ee5\u53ca \u6700\u5c0f\u7684\u4f7f\u7528\u672a\u4f7f\u7528\u5de5\u5382\u7684\u5f00\u9500+\u6253\u5f00\u672a\u4f7f\u7528\u5de5\u5382\u7684\u5f00\u9500\u4e4b\u95f4\u7684\u6700\u5c0f\u503c \u53d6\u5f97\u4e86\u6700\u5c0f\u503c\u5bf9\u5e94\u7528\u6237\u4ee5\u53ca\u5de5\u5382\u7684index\u540e\uff0c\u82e5\u662f\u5de5\u5382\u6ee1\u8db3\u7528\u6237\u9700\u6c42\uff0c\u5219\u6211\u4eec\u5c06\u7528\u6237\u7684\u9700\u6c42\u52a0\u5230factory\u7684used\u4e0a\uff0c\u5e76\u5c06\u7528\u6237\u7f6e\u4e3a\u4e0d\u53ef\u7528\uff0c\u5373\u628a\u5176\u5bf9\u5e94\u4f7f\u7528\u5de5\u5382\u7684\u5f00\u9500\u5168\u90e8\u8bbe\u7f6e\u4e3aDouble.MAX_VALUE\u3002\u5426\u5219\u82e5\u662f\u7528\u6237\u7684\u9700\u6c42\u8d85\u51fa\u5176\u5bb9\u91cf\uff0c\u5219\u6211\u4eec\u9009\u62e9\u5c06\u5de5\u5382\u7f6e\u4e3a\u4e0d\u53ef\u7528\uff0c\u540c\u7406\uff0c\u5c06\u5176\u5bf9\u5e94\u7528\u6237\u7684\u5f00\u9500\u5168\u90e8\u53d8\u4e3aDouble.MAX_VALUE \u901a\u8fc7\u8fd9\u6837\u7684\u8d2a\u5fc3\u7b97\u6cd5\u6211\u4eec\u53ef\u4ee5\u8f83\u5feb\u5f97\u5230\u4e00\u4e2a\u8fd8\u53ef\u4ee5\u7684\u7684\u89e3 \u6a21\u62df\u9000\u706b\u7b97\u6cd5 \u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u4eba\u5de5\u667a\u80fd\u4e2d\u4e00\u4e2a\u9879\u76ee\u4e2d\u7528\u5230\u7684\u6a21\u62df\u9000\u706b\u7b97\u6cd5\uff0c\u901a\u8fc7\u6a21\u62df\u9000\u706b\u7b97\u6cd5\uff0c\u6211\u4eec\u5bf9\u4e0a\u9762\u8d2a\u5fc3\u7b97\u6cd5\u4e2d\u5f97\u5230\u7684\u7ed3\u679c\u8fdb\u884c\u518d\u4f18\u5316 \u8fd9\u91cc\u6211\u4eec\u8bf4\u8bf4\u6211\u4eec\u7684\u6a21\u62df\u9000\u706b\u7b97\u6cd5\uff0c\u5176\u7b97\u6cd5\u6838\u5fc3(Annealing)\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b currentSolution = initial_solution () //\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u5bf9\u89e3\u8fdb\u884c\u521d\u59cb\u5316 while ( currentTemperature > minTemperature ) { for ( int i = 0 ; i < internalLoop ; i ++) { // \u901a\u8fc7\u591a\u90bb\u57df\u64cd\u4f5c\u83b7\u5f97\u65b0\u89e3 newSolution = generateNeighourResult (); // \u83b7\u5f97\u65b0\u89e3\u7684cost double currentEnergy = currentSolution . cost ; double neighbourEnergy = newSolution . cost ; // \u6839\u636e\u6982\u7387\u67e5\u770b\u662f\u5426\u63a5\u6536\u65b0\u89e3\u4f5c\u4e3astartPoint if ( acceptanceProbability ( currentEnergy , neighbourEnergy , currentTemperature ) > Math . random ()) { currentSolution = newSolution ; } //\u82e5\u5f53\u524d\u89e3\u4f18\u4e8e\u6700\u4f18\u89e3\uff0c\u66f4\u65b0bestSolution if ( currentSolution . cost < bestSolution . cost ) { bestSolution = new Solution ( currentSolution . customerDemand . clone (), currentSolution . cost ); } } currentTemperature *= coolingRate ; // \u964d\u6e29 } \u9664\u4e86\u4e0a\u9762Annealing\u7684\u7b97\u6cd5\uff0c\u6a21\u62df\u9000\u706b\u4e2d\u8f83\u4e3a\u5173\u952e\u7684\u8fd8\u662f\u5176\u9886\u57df\u64cd\u4f5c\u7684\u8bbe\u8ba1\uff0c\u901a\u8fc7\u8f83\u597d\u8bbe\u8ba1\u6211\u4eec\u7684\u9886\u57df\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u6211\u4eec\u7684\u89e3\u4e0d\u65ad\u8df3\u51fa\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u8fdb\u800c\u5f97\u5230\u4e00\u4e2a\u66f4\u597d\u7684\u89e3\uff0c\u8fd9\u91cc\u6211\u4f7f\u7528\u4e864\u79cd\u5c40\u90e8\u64cd\u4f5c\uff0c\u8fd9\u91cc\u6bd4\u8f83\u5173\u952e\u7684\u662f\u7b2c\u56db\u79cd\u5c40\u90e8\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u901a\u8fc7\u8d2a\u5fc3\u5f97\u5230\u7684\u7b97\u6cd5\u57fa\u672c\u5df2\u7ecf\u5904\u5728\u6253\u5f00\u540c\u6837\u5de5\u5382\u7684\u89e3\u4e2d\u7684\u8f83\u597d\u7684\u4f4d\u7f6e\uff0c\u7b80\u5355\u901a\u8fc7\u4ea4\u6362\u7528\u6237\u6307\u6d3e\u7684\u5de5\u5382\u5176\u5b9e\u96be\u4ee5\u5f97\u5230\u4e00\u4e2a\u8f83\u597d\u7684\u89e3\uff0c\u901a\u8fc7\u6211\u4eec\u7b2c\u56db\u79cd\u9886\u57df\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6539\u53d8\u5206\u914d\u7684\u5de5\u5382\uff0c\u4ece\u5de5\u5382\u7ef4\u5ea6\u8df3\u51fa\u5c40\u90e8\u6700\u4f18\uff0c\u662f\u6bd4\u8f83\u5173\u952e\u7684\u4e00\u6b65 // \u7b80\u5355\u4ea4\u6362\u4e24\u4e2a\u987e\u5ba2\u6307\u6d3e\u7684\u5de5\u5382 changeDemandFactory() // \u9006\u5e8f\u4ea4\u6362\u4e00\u6bb5\u987e\u5ba2\u6307\u6d3e\u7684\u5de5\u5382 reverseDemands() // \u524d\u540e\u4ea4\u6362\u4e24\u4e2a\u8303\u56f4\u7684\u987e\u5ba2\u6307\u6d3e\u7684\u5de5\u5382 swapTwoSegment() // \u5bf9\u7528\u6237\u6307\u6d3e\u7684\u5de5\u5382\u76f4\u63a5\u8fdb\u884c\u53d8\u5f02, // \u4e0d\u6b62\u8c03\u6574\u7528\u6237\u6307\u6d3e\u7684\u5de5\u5382\uff0c // \u4ece\u5de5\u5382\u7ef4\u5ea6\u8df3\u51fa\u5c40\u90e8\u6700\u4f18(\u5173\u952e) variation() \u800c\u9886\u57df\u64cd\u4f5c\u7684\u9009\u62e9\u5219\u662f\u91c7\u7528\u4e86\u4e4b\u524d\u505a\u4eba\u5de5\u667a\u80fd\u9879\u76ee\u65f6\u8001\u5e08\u7ed9\u7684\u5efa\u8bae\uff0c\u5728\u591a\u79cd\u9886\u57df\u64cd\u4f5c\u4e2d\u968f\u673a\u9009\u62e9\u4e00\u79cd\u9886\u57df\u64cd\u4f5c\uff0c\u800c\u56e0\u4e3a\u6211\u4eec\u8fd9\u91cc\u8f83\u4e3a\u7279\u6b8a\u9700\u8981\u9a8c\u8bc1\u89e3\u7684\u6709\u6548\u6027\uff0c\u6240\u4ee5\u9886\u57df\u64cd\u4f5c\u5f97\u5230\u7684\u65b0\u89e3\u6709\u53ef\u80fd\u4e0d\u53ef\u7528\uff0c\u9700\u8981\u91cd\u65b0\u751f\u6210\u65b0\u89e3\uff0c\u8fd9\u91cc\u5c31\u901a\u8fc7\u4e00\u4e2awhile\u5faa\u73af\u6765\u89e3\u51b3\u8be5\u95ee\u9898 public Solution generateNeighourResult () { Solution tmp = null ; while ( tmp == null ) { int opt = ( int ) ( 4 * Math . random ()); switch ( opt ) { case 0 : tmp = changeDemandFactory (); break ; case 1 : tmp = reverseDemands (); break ; case 2 : tmp = swapTwoSegment (); break ; case 3 : tmp = variation (); break ; } } return tmp ; } \u9057\u4f20\u7b97\u6cd5 \u9664\u4e86\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u8fd9\u79cd\u5355\u70b9\u641c\u7d22\u7b97\u6cd5\u4e4b\u5916\uff0c\u50cf\u9057\u4f20\u7b97\u6cd5\u8fd9\u79cd\u591a\u70b9\u641c\u7d22\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u5e94\u7528\u5230\u6211\u4eec\u7684\u6c42\u89e3\u5f53\u4e2d\u3002 \u9057\u4f20\u7b97\u6cd5\u7684\u57fa\u672c\u6b65\u9aa4\u5982\u4e0b \u6839\u636e\u7fa4\u4f53\u5927\u5c0f\uff0c\u521d\u59cb\u5316\u7fa4\u4f53(\u8fd9\u91cc\u505a\u4e86\u4e2a\u4f18\u5316\uff0c\u4e00\u5f00\u59cb\u7528\u8d2a\u5fc3\u7b97\u6cd5\u751f\u6210\u521d\u59cb\u89e3\u52a0\u5165\u5230\u521d\u59cb\u7fa4\u4f53\u4e2d) \u5bf9\u5404\u4e2a\u4e2a\u4f53\u8fdb\u884c\u8bc4\u4ef7\uff0c\u8ba1\u7b97\u9002\u5e94\u5ea6 \u4ece\u7fa4\u4f53\u4e2d\u901a\u8fc7\u9009\u62e9\u7b97\u5b50\u9009\u62e9\u7236\u6bcd\u4eb2 \u5bf9\u7236\u6bcd\u4eb2\u8fdb\u884c\u4ea4\u53c9\u5f97\u5230\u65b0\u7fa4\u4f53 \u5c06\u53d8\u5f02\u64cd\u4f5c\u5e94\u7528\u5230\u7fa4\u4f53\u4e2d \u9009\u62e9\u4e0b\u4e00\u4ee3 \u5224\u65ad\u662f\u5426\u8fbe\u5230\u7ed3\u675f\u4ee3\u6570\uff0c\u672a\u8fbe\u5230\u5219\u8fd4\u56de2\u6b65\u7ee7\u7eed\u6267\u884c\uff0c\u5426\u5219\u8df3\u51fa\u5faa\u73af \u5728\u6211\u7684\u7b97\u6cd5\u4e2d\u5177\u4f53\u4e3a\u4e0b public void genetic () { for ( int i = 0 ; i < this . inheritance_number ; i ++) { this . oneGenetic ( i + 1 ); //\u9057\u4f20\u4e00\u4ee3 } } private void oneGenetic ( int geneticNumber ) { this . sonSolutions = new ArrayList <>(); this . hybridization (); //\u6742\u4ea4(\u5305\u542b\u9009\u62e9) this . mutation (); //\u53d8\u5f02\u4e00\u6b21 this . updateEntity (); //\u9009\u62e9(\u5305\u542b\u8ba1\u7b97\u9002\u5e94\u5ea6) this . chooseBest ( geneticNumber ); //\u62e9\u4f18 } \u8fd9\u91cc\u7684\u9009\u62e9\u6211\u91c7\u7528\u7684\u662f\u8f6e\u76d8\u8d4c\u7b97\u6cd5\uff0c\u800c\u9664\u6b64\u4e4b\u5916\u6211\u4e2a\u4eba\u8fd8\u52a0\u5165\u4e86\u7cbe\u82f1\u4fdd\u7559\u7b56\u7565\uff0c\u4fdd\u8bc1\u7b97\u6cd5\u53ef\u4ee5\u6536\u655b \u4ea4\u53c9\u90e8\u5206\u5219\u8f83\u4e3a\u7b80\u5355\uff0c\u5c31\u662f\u968f\u673a\u9009\u53d6index1\u548cindex2\uff0c\u4ea4\u6362\u7236\u6bcd\u7684\u8fd9\u90e8\u5206\uff0c\u5e76\u67e5\u770b\u662f\u5426\u5408\u6cd5\uff0c\u82e5\u662f\u4e00\u6b21\u672a\u751f\u6210\u4e24\u4e2avalid\u5b50\u4ee3\uff0c\u7ee7\u7eed\u6267\u884c\uff0c\u6700\u591a\u8fd0\u884c10\u6b21 /*** * \u4ea4\u53c9\u51fd\u6570 */ public List < Solution > swap ( Solution father , Solution mother ) { List < Solution > result = new ArrayList <>(); int count = 0 ; while ( count < 10 && result . size () < 2 ) { // \u82e5\u672a\u751f\u6210\u4e24\u4e2avalid\u5b50\u4ee3\uff0c\u7ee7\u7eed\u6267\u884c\uff0c\u6700\u591a\u8fd0\u884c10\u6b21 int index1 = ( int ) ( instance . customerNum * Math . random ()); int index2 = ( int ) ( instance . customerNum * Math . random ()); while ( index1 == index2 ) { index1 = ( int ) ( instance . customerNum * Math . random ()); index2 = ( int ) ( instance . customerNum * Math . random ()); } if ( index1 > index2 ) { int tmp = index1 ; index1 = index2 ; index2 = tmp ; } int [] fatherClone = father . customerDemand . clone (); int [] motherClone = mother . customerDemand . clone (); for ( int i = index1 ; i <= index2 ; i ++) { fatherClone [ i ] = mother . customerDemand [ i ]; motherClone [ i ] = father . customerDemand [ i ]; } double fatherCost = instance . valid ( fatherClone ); double motherCost = instance . valid ( motherClone ); if ( fatherCost != - 1 ) { result . add ( new Solution ( fatherClone , fatherCost )); } if ( motherCost != - 1 ) { result . add ( new Solution ( motherClone , motherCost )); } ++ count ; } return result ; } \u53d8\u5f02\u90e8\u5206\u5219\u662f\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u987e\u5ba2\uff0c\u6539\u53d8\u4ed6\u7684\u5206\u914d\u7684\u5de5\u5382 /*** * \u53d8\u5f02\u51fd\u6570 */ public void oneVariable ( Solution solution ) { int index = ( int ) ( instance . customerNum * Math . random ()); int factoryIndex = ( int ) ( instance . factoryNum * Math . random ()); solution . customerDemand [ index ] = factoryIndex ; } \u5230\u8fd9\u91cc\u9057\u4f20\u7b97\u6cd5\u57fa\u672c\u5b8c\u6210 \u6bd4\u8f83\u7b97\u6cd5\u7ed3\u679c \u5206\u522b\u7684\u5bf9\u5e94\u6bcf\u79cd\u7b97\u6cd5\u7684\u5177\u4f53\u7ed3\u679c(\u5e26\u5de5\u5382\u72b6\u6001\u548c\u987e\u5ba2\u5206\u914d\u7ed3\u679c)\u5df2\u7ecf\u653e\u5230\u4e86Github\u4ed3\u5e93\u4e2d \u5206\u6790\u7ed3\u679c\u94fe\u63a5 \u53ef\u4ee5\u770b\u5230\u5355\u7eaf\u8d2a\u5fc3\u7b97\u6cd5\u7684\u8017\u65f6\u5341\u5206\u4e4b\u5c11\uff0c\u6709\u4e9b\u7b80\u5355\u7684\u6d4b\u4f8b\u751a\u81f3\u663e\u793atime\u4e3a0, \u4f46\u662f\u5176\u6c42\u51fa\u7684\u89e3\u663e\u7136\u4e0d\u662f\u8f83\u4f18\u89e3\uff0cSA\u548cGA\u4ece\u7ed3\u679c\u4e0a\u6bd4\u8f83\uff0c\u5404\u6709\u5343\u79cb\uff0c\u4f46\u662f\u663e\u7136\u901a\u8fc7\u4f18\u5316\u7b97\u6cd5\u6c42\u89e3\uff0c\u6211\u4eec\u7684\u89e3\u8981\u6bd4\u8d2a\u5fc3\u7b97\u6cd5\u6c42\u51fa\u7684\u89e3\u597d\u4e0a\u4e0d\u5c11\u3002 \u4ece\u6211\u4eec\u7684\u8fd0\u884c\u65f6\u95f4\u6765\u770b\u64cd\u4f5c\u8f83\u5c11\u7684\u8d2a\u5fc3\u7b97\u6cd5\u663e\u7136\u65f6\u95f4\u6700\u5c11\u3002\u6a21\u62df\u9000\u706b\u4ee5\u53ca\u9057\u4f20\u7b97\u6cd5\u65f6\u95f4\u76f8\u8fd1\uff0c\u4e0d\u8fc7\u8fd9\u4e5f\u8981\u770b\u53c2\u6570\u8c03\u6574\u7ed3\u679c\uff0c\u6bd4\u5982GA\u7b97\u6cd5\uff0c\u7fa4\u4f53\u7684\u5927\u5c0f\u3001\u53d8\u5f02\u7387\u4ee5\u53ca\u9057\u4f20\u7684\u4ee3\u6570\u5bf9\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\u7684\u5f71\u54cd\u90fd\u5f88\u5927\uff0c\u6700\u7ec8\u7ecf\u8fc7\u8c03\u6574\u53c2\u6570\uff0c\u7fa4\u4f53\u7684\u5927\u5c0f\u88ab\u6211\u8bbe\u7f6e\u4e3a100\uff0c\u53d8\u5f02\u7387\u8bbe\u7f6e\u4e3a0.3\uff0c\u9057\u4f20\u4ee3\u6570\u8bbe\u7f6e\u4e3a1000\uff0c\u56e0\u4e3a\u6211\u53d1\u73b0\u57fa\u672c1000\u4ee3\u4e4b\u540e\u7b97\u6cd5\u5c31\u57fa\u672c\u6536\u655b\uff0c\u7ecf\u8fc7\u9a8c\u8bc1\u6548\u679c\u826f\u597d\uff0c\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\u5927\u5927\u51cf\u5c11\uff0cSA\u7684\u8bdd\u8fd0\u884c\u65f6\u95f4\u6536\u5230\u521d\u59cb\u6e29\u5ea6\u3001\u7ed3\u675f\u6e29\u5ea6\u3001\u5355\u6b21\u8fed\u4ee3\u6b21\u6570\u4ee5\u53ca\u964d\u6e29\u7cfb\u6570\u5f71\u54cd\uff0c\u8fd9\u91cc\u7ecf\u8fc7\u8c03\u53c2\u521d\u59cb\u6e29\u5ea6\u6211\u8bbe\u7f6e\u4e3a\u4e86100\uff0c\u7ed3\u675f\u6e29\u5ea6\u8bbe\u7f6e\u4e3a0.001\uff0c\u5355\u6b21\u8fed\u4ee3(\u5185\u5faa\u73af)\u6b21\u6570\u6211\u5219\u8bbe\u7f6e\u4e3a\u4e86500\uff0c\u964d\u6e29\u7cfb\u6570\u4e3a0.99","title":"CFLP_Problem\u62a5\u544a"},{"location":"Leetcode Note/Capacitated Facility Location Problem/#capacitated-facility-location-problem","text":"","title":"Capacitated Facility Location Problem"},{"location":"Leetcode Note/Capacitated Facility Location Problem/#_1","text":"\u5047\u8bbe\u6709n\u4e2a\u8bbe\u65bd\u548cm\u4e2a\u5ba2\u6237\u3002 \u6211\u4eec\u5e0c\u671b\u9009\u62e9\uff1a \u5f00\u653e\u7684n\u4e2a\u8bbe\u65bd\u4e2d\u7684\u54ea\u4e00\u4e2a \u5c06\u5ba2\u6237\u5206\u914d\u7ed9\u8bbe\u65bd \u76ee\u6807\u662f\u5c3d\u91cf\u51cf\u5c11\u5f00\u653e\u6210\u672c\u548c\u5206\u914d\u6210\u672c\u4e4b\u548c\u3002 \u5206\u914d\u7ed9\u8bbe\u65bd\u7684\u603b\u9700\u6c42\u91cf\u4e0d\u5f97\u8d85\u8fc7\u5176\u5bb9\u91cf\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"Leetcode Note/Capacitated Facility Location Problem/#_2","text":"\u4e00\u5171\u670971\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5404\u4e2a\u7528\u4f8b\u7684\u683c\u5f0f\u5982\u4e0b","title":"\u95ee\u9898\u6d4b\u4f8b"},{"location":"Leetcode Note/Capacitated Facility Location Problem/#_3","text":"\u6839\u636e\u4e0a\u9762\u7684\u9898\u76ee\u8981\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u9996\u5148\u5efa\u7684\u6570\u636e\u6a21\u578b\u5982\u4e0b","title":"\u95ee\u9898\u5efa\u6a21"},{"location":"Leetcode Note/Capacitated Facility Location Problem/#_4","text":"\u9996\u5148\uff0c\u5bf9\u4e8e\u8fd9\u79cdnp\u96be\u7684\u95ee\u9898\uff0c\u663e\u7136\u6211\u4eec\u662f\u4e0d\u53ef\u80fd\u53bb\u901a\u8fc7\u7a77\u4e3e\u6c42\u5f97\u5176\u6700\u4f18\u89e3\u7684\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5e0c\u671b\u7684\u662f\u901a\u8fc7\u6211\u4eec\u5728\u7b97\u6cd5\u8bfe\u7a0b\u4ee5\u53ca\u4eba\u5de5\u667a\u80fd\u8bfe\u7a0b\u4e0a\u7684\u4f18\u5316\u7b97\u6cd5\u5bf9\u8be5\u95ee\u9898\u8fdb\u884c\u6c42\u89e3\u3002 \u672c\u6765\u5728\u4e0a\u9762\u5efa\u5b8c\u6a21\u578b\u4e4b\u540e\uff0c\u5728\u8fd9\u79cd\u76ee\u6807\u51fd\u6570\u4ee5\u53ca\u95ee\u9898\u7ea6\u675f\u5341\u5206\u6e05\u6670\u7684\u6761\u4ef6\u4e0b\uff0c\u6211\u4e00\u5f00\u59cb\u60f3\u5230\u7684\u662f\u628a\u5176\u5f53\u6210\u7ebf\u6027\u4f18\u5316\u5bf9\u5176\u8fdb\u884c\u6c42\u89e3\uff0c\u4f46\u662f\u7ecf\u8fc7\u521d\u6b65\u64cd\u4f5c\u4e4b\u540e\u53d1\u73b0\u5176\u5728\u89c4\u6a21\u4e0d\u5927\u7684\u6d4b\u4f8b\u4e2d\u8868\u73b0\u826f\u597d\uff0c\u4f46\u662f\u4e00\u65e6\u53c2\u6570\u8fc7\u591a\uff0c\u5176\u8ba1\u7b97\u65f6\u95f4\u5c31\u4f1a\u53d8\u5f97\u5341\u5206\u4e45\uff0c\u5f53\u53d8\u91cf\u975e\u5e38\u591a\u65f6,\u4f7f\u7528\u8be5\u95ee\u9898\u6c42\u89e3\uff0c\u6c42\u89e3\u8282\u70b9\u4f1a\u6307\u6570\u901f\u5ea6\u589e\u52a0\uff0c\u67d0\u4e9b\u89e3\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u4e5f\u6c42\u4e0d\u51fa\u89e3\u6765, \u6240\u4ee5\u6211\u6ca1\u6709\u9009\u62e9\u7ebf\u6027\u4f18\u5316\u4f5c\u4e3a\u6700\u7ec8\u89e3\u6cd5\u3002 \u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u5148\u8bf4\u8bf4\u6211\u4eec\u8fd9\u91cc\u7528\u5230\u7684\u4e09\u79cd\u4e3b\u8981\u7684\u7b97\u6cd5","title":"\u5177\u4f53\u5206\u6790"},{"location":"Leetcode Note/Capacitated Facility Location Problem/#_5","text":"\u5177\u4f53\u4ee3\u7801\u5df2\u7ecf\u4e0a\u4f20\u5230\u4e2a\u4eba\u7684Github\u4e0a \u4ee3\u7801\u94fe\u63a5","title":"\u5177\u4f53\u4ee3\u7801"},{"location":"Leetcode Note/Capacitated Facility Location Problem/#_6","text":"\u9996\u5148\uff0c\u6211\u4eec\u8fd9\u91cc\u5c1d\u8bd5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u5bf9\u6211\u4eec\u7684\u95ee\u9898\u8fdb\u884c\u6c42\u89e3\uff0c\u8fd9\u91cc\u6211\u4eec\u5148\u7b80\u5355\u8bb2\u8bb2\u6211\u4eec\u7684\u7b97\u6cd5\uff0c\u6211\u7684\u8d2a\u5fc3\u7b97\u6cd5\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u5df2\u5f00\u542f\u7684\u5de5\u5382\u5217\u8868\u4ee5\u53ca\u4e00\u4e2a\u672a\u5f00\u542f\u7684\u5de5\u5382\u5217\u8868\uff0c\u6bcf\u6b21\u5206\u522b\u5bf9\u4e8e\u5df2\u5f00\u542f\u7684\u5de5\u5382\u5217\u8868\u548c\u672a\u5f00\u542f\u7684\u5de5\u5382\u5217\u8868\u4e2d\u6bcf\u4e2a\u5de5\u5382i\u53d6\u5bf9\u5e94$min(c_{ij})$\u5373\u6700\u5c0f\u7684\u987e\u5ba2j\u5546\u54c1\u4ea4\u7531i\u5de5\u5382\u5904\u7406\u7684cost\uff0c\u5206\u522b\u53d6\u5f97\u7ed3\u679c\u540e\uff0c\u6211\u4eec\u53d6$min(c_{i_{open}j}, c_{i_{close}j} + f_i)$\u5373\u6bd4\u8f83 \u6700\u5c0f\u7684\u76f4\u63a5\u4f7f\u7528\u5df2\u5f00\u542f\u5de5\u5382\u7684\u5f00\u9500 \u4ee5\u53ca \u6700\u5c0f\u7684\u4f7f\u7528\u672a\u4f7f\u7528\u5de5\u5382\u7684\u5f00\u9500+\u6253\u5f00\u672a\u4f7f\u7528\u5de5\u5382\u7684\u5f00\u9500\u4e4b\u95f4\u7684\u6700\u5c0f\u503c \u53d6\u5f97\u4e86\u6700\u5c0f\u503c\u5bf9\u5e94\u7528\u6237\u4ee5\u53ca\u5de5\u5382\u7684index\u540e\uff0c\u82e5\u662f\u5de5\u5382\u6ee1\u8db3\u7528\u6237\u9700\u6c42\uff0c\u5219\u6211\u4eec\u5c06\u7528\u6237\u7684\u9700\u6c42\u52a0\u5230factory\u7684used\u4e0a\uff0c\u5e76\u5c06\u7528\u6237\u7f6e\u4e3a\u4e0d\u53ef\u7528\uff0c\u5373\u628a\u5176\u5bf9\u5e94\u4f7f\u7528\u5de5\u5382\u7684\u5f00\u9500\u5168\u90e8\u8bbe\u7f6e\u4e3aDouble.MAX_VALUE\u3002\u5426\u5219\u82e5\u662f\u7528\u6237\u7684\u9700\u6c42\u8d85\u51fa\u5176\u5bb9\u91cf\uff0c\u5219\u6211\u4eec\u9009\u62e9\u5c06\u5de5\u5382\u7f6e\u4e3a\u4e0d\u53ef\u7528\uff0c\u540c\u7406\uff0c\u5c06\u5176\u5bf9\u5e94\u7528\u6237\u7684\u5f00\u9500\u5168\u90e8\u53d8\u4e3aDouble.MAX_VALUE \u901a\u8fc7\u8fd9\u6837\u7684\u8d2a\u5fc3\u7b97\u6cd5\u6211\u4eec\u53ef\u4ee5\u8f83\u5feb\u5f97\u5230\u4e00\u4e2a\u8fd8\u53ef\u4ee5\u7684\u7684\u89e3","title":"\u8d2a\u5fc3\u7b97\u6cd5"},{"location":"Leetcode Note/Capacitated Facility Location Problem/#_7","text":"\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u4eba\u5de5\u667a\u80fd\u4e2d\u4e00\u4e2a\u9879\u76ee\u4e2d\u7528\u5230\u7684\u6a21\u62df\u9000\u706b\u7b97\u6cd5\uff0c\u901a\u8fc7\u6a21\u62df\u9000\u706b\u7b97\u6cd5\uff0c\u6211\u4eec\u5bf9\u4e0a\u9762\u8d2a\u5fc3\u7b97\u6cd5\u4e2d\u5f97\u5230\u7684\u7ed3\u679c\u8fdb\u884c\u518d\u4f18\u5316 \u8fd9\u91cc\u6211\u4eec\u8bf4\u8bf4\u6211\u4eec\u7684\u6a21\u62df\u9000\u706b\u7b97\u6cd5\uff0c\u5176\u7b97\u6cd5\u6838\u5fc3(Annealing)\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b currentSolution = initial_solution () //\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u5bf9\u89e3\u8fdb\u884c\u521d\u59cb\u5316 while ( currentTemperature > minTemperature ) { for ( int i = 0 ; i < internalLoop ; i ++) { // \u901a\u8fc7\u591a\u90bb\u57df\u64cd\u4f5c\u83b7\u5f97\u65b0\u89e3 newSolution = generateNeighourResult (); // \u83b7\u5f97\u65b0\u89e3\u7684cost double currentEnergy = currentSolution . cost ; double neighbourEnergy = newSolution . cost ; // \u6839\u636e\u6982\u7387\u67e5\u770b\u662f\u5426\u63a5\u6536\u65b0\u89e3\u4f5c\u4e3astartPoint if ( acceptanceProbability ( currentEnergy , neighbourEnergy , currentTemperature ) > Math . random ()) { currentSolution = newSolution ; } //\u82e5\u5f53\u524d\u89e3\u4f18\u4e8e\u6700\u4f18\u89e3\uff0c\u66f4\u65b0bestSolution if ( currentSolution . cost < bestSolution . cost ) { bestSolution = new Solution ( currentSolution . customerDemand . clone (), currentSolution . cost ); } } currentTemperature *= coolingRate ; // \u964d\u6e29 } \u9664\u4e86\u4e0a\u9762Annealing\u7684\u7b97\u6cd5\uff0c\u6a21\u62df\u9000\u706b\u4e2d\u8f83\u4e3a\u5173\u952e\u7684\u8fd8\u662f\u5176\u9886\u57df\u64cd\u4f5c\u7684\u8bbe\u8ba1\uff0c\u901a\u8fc7\u8f83\u597d\u8bbe\u8ba1\u6211\u4eec\u7684\u9886\u57df\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u6211\u4eec\u7684\u89e3\u4e0d\u65ad\u8df3\u51fa\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u8fdb\u800c\u5f97\u5230\u4e00\u4e2a\u66f4\u597d\u7684\u89e3\uff0c\u8fd9\u91cc\u6211\u4f7f\u7528\u4e864\u79cd\u5c40\u90e8\u64cd\u4f5c\uff0c\u8fd9\u91cc\u6bd4\u8f83\u5173\u952e\u7684\u662f\u7b2c\u56db\u79cd\u5c40\u90e8\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u901a\u8fc7\u8d2a\u5fc3\u5f97\u5230\u7684\u7b97\u6cd5\u57fa\u672c\u5df2\u7ecf\u5904\u5728\u6253\u5f00\u540c\u6837\u5de5\u5382\u7684\u89e3\u4e2d\u7684\u8f83\u597d\u7684\u4f4d\u7f6e\uff0c\u7b80\u5355\u901a\u8fc7\u4ea4\u6362\u7528\u6237\u6307\u6d3e\u7684\u5de5\u5382\u5176\u5b9e\u96be\u4ee5\u5f97\u5230\u4e00\u4e2a\u8f83\u597d\u7684\u89e3\uff0c\u901a\u8fc7\u6211\u4eec\u7b2c\u56db\u79cd\u9886\u57df\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6539\u53d8\u5206\u914d\u7684\u5de5\u5382\uff0c\u4ece\u5de5\u5382\u7ef4\u5ea6\u8df3\u51fa\u5c40\u90e8\u6700\u4f18\uff0c\u662f\u6bd4\u8f83\u5173\u952e\u7684\u4e00\u6b65 // \u7b80\u5355\u4ea4\u6362\u4e24\u4e2a\u987e\u5ba2\u6307\u6d3e\u7684\u5de5\u5382 changeDemandFactory() // \u9006\u5e8f\u4ea4\u6362\u4e00\u6bb5\u987e\u5ba2\u6307\u6d3e\u7684\u5de5\u5382 reverseDemands() // \u524d\u540e\u4ea4\u6362\u4e24\u4e2a\u8303\u56f4\u7684\u987e\u5ba2\u6307\u6d3e\u7684\u5de5\u5382 swapTwoSegment() // \u5bf9\u7528\u6237\u6307\u6d3e\u7684\u5de5\u5382\u76f4\u63a5\u8fdb\u884c\u53d8\u5f02, // \u4e0d\u6b62\u8c03\u6574\u7528\u6237\u6307\u6d3e\u7684\u5de5\u5382\uff0c // \u4ece\u5de5\u5382\u7ef4\u5ea6\u8df3\u51fa\u5c40\u90e8\u6700\u4f18(\u5173\u952e) variation() \u800c\u9886\u57df\u64cd\u4f5c\u7684\u9009\u62e9\u5219\u662f\u91c7\u7528\u4e86\u4e4b\u524d\u505a\u4eba\u5de5\u667a\u80fd\u9879\u76ee\u65f6\u8001\u5e08\u7ed9\u7684\u5efa\u8bae\uff0c\u5728\u591a\u79cd\u9886\u57df\u64cd\u4f5c\u4e2d\u968f\u673a\u9009\u62e9\u4e00\u79cd\u9886\u57df\u64cd\u4f5c\uff0c\u800c\u56e0\u4e3a\u6211\u4eec\u8fd9\u91cc\u8f83\u4e3a\u7279\u6b8a\u9700\u8981\u9a8c\u8bc1\u89e3\u7684\u6709\u6548\u6027\uff0c\u6240\u4ee5\u9886\u57df\u64cd\u4f5c\u5f97\u5230\u7684\u65b0\u89e3\u6709\u53ef\u80fd\u4e0d\u53ef\u7528\uff0c\u9700\u8981\u91cd\u65b0\u751f\u6210\u65b0\u89e3\uff0c\u8fd9\u91cc\u5c31\u901a\u8fc7\u4e00\u4e2awhile\u5faa\u73af\u6765\u89e3\u51b3\u8be5\u95ee\u9898 public Solution generateNeighourResult () { Solution tmp = null ; while ( tmp == null ) { int opt = ( int ) ( 4 * Math . random ()); switch ( opt ) { case 0 : tmp = changeDemandFactory (); break ; case 1 : tmp = reverseDemands (); break ; case 2 : tmp = swapTwoSegment (); break ; case 3 : tmp = variation (); break ; } } return tmp ; }","title":"\u6a21\u62df\u9000\u706b\u7b97\u6cd5"},{"location":"Leetcode Note/Capacitated Facility Location Problem/#_8","text":"\u9664\u4e86\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u8fd9\u79cd\u5355\u70b9\u641c\u7d22\u7b97\u6cd5\u4e4b\u5916\uff0c\u50cf\u9057\u4f20\u7b97\u6cd5\u8fd9\u79cd\u591a\u70b9\u641c\u7d22\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u5e94\u7528\u5230\u6211\u4eec\u7684\u6c42\u89e3\u5f53\u4e2d\u3002 \u9057\u4f20\u7b97\u6cd5\u7684\u57fa\u672c\u6b65\u9aa4\u5982\u4e0b \u6839\u636e\u7fa4\u4f53\u5927\u5c0f\uff0c\u521d\u59cb\u5316\u7fa4\u4f53(\u8fd9\u91cc\u505a\u4e86\u4e2a\u4f18\u5316\uff0c\u4e00\u5f00\u59cb\u7528\u8d2a\u5fc3\u7b97\u6cd5\u751f\u6210\u521d\u59cb\u89e3\u52a0\u5165\u5230\u521d\u59cb\u7fa4\u4f53\u4e2d) \u5bf9\u5404\u4e2a\u4e2a\u4f53\u8fdb\u884c\u8bc4\u4ef7\uff0c\u8ba1\u7b97\u9002\u5e94\u5ea6 \u4ece\u7fa4\u4f53\u4e2d\u901a\u8fc7\u9009\u62e9\u7b97\u5b50\u9009\u62e9\u7236\u6bcd\u4eb2 \u5bf9\u7236\u6bcd\u4eb2\u8fdb\u884c\u4ea4\u53c9\u5f97\u5230\u65b0\u7fa4\u4f53 \u5c06\u53d8\u5f02\u64cd\u4f5c\u5e94\u7528\u5230\u7fa4\u4f53\u4e2d \u9009\u62e9\u4e0b\u4e00\u4ee3 \u5224\u65ad\u662f\u5426\u8fbe\u5230\u7ed3\u675f\u4ee3\u6570\uff0c\u672a\u8fbe\u5230\u5219\u8fd4\u56de2\u6b65\u7ee7\u7eed\u6267\u884c\uff0c\u5426\u5219\u8df3\u51fa\u5faa\u73af \u5728\u6211\u7684\u7b97\u6cd5\u4e2d\u5177\u4f53\u4e3a\u4e0b public void genetic () { for ( int i = 0 ; i < this . inheritance_number ; i ++) { this . oneGenetic ( i + 1 ); //\u9057\u4f20\u4e00\u4ee3 } } private void oneGenetic ( int geneticNumber ) { this . sonSolutions = new ArrayList <>(); this . hybridization (); //\u6742\u4ea4(\u5305\u542b\u9009\u62e9) this . mutation (); //\u53d8\u5f02\u4e00\u6b21 this . updateEntity (); //\u9009\u62e9(\u5305\u542b\u8ba1\u7b97\u9002\u5e94\u5ea6) this . chooseBest ( geneticNumber ); //\u62e9\u4f18 } \u8fd9\u91cc\u7684\u9009\u62e9\u6211\u91c7\u7528\u7684\u662f\u8f6e\u76d8\u8d4c\u7b97\u6cd5\uff0c\u800c\u9664\u6b64\u4e4b\u5916\u6211\u4e2a\u4eba\u8fd8\u52a0\u5165\u4e86\u7cbe\u82f1\u4fdd\u7559\u7b56\u7565\uff0c\u4fdd\u8bc1\u7b97\u6cd5\u53ef\u4ee5\u6536\u655b \u4ea4\u53c9\u90e8\u5206\u5219\u8f83\u4e3a\u7b80\u5355\uff0c\u5c31\u662f\u968f\u673a\u9009\u53d6index1\u548cindex2\uff0c\u4ea4\u6362\u7236\u6bcd\u7684\u8fd9\u90e8\u5206\uff0c\u5e76\u67e5\u770b\u662f\u5426\u5408\u6cd5\uff0c\u82e5\u662f\u4e00\u6b21\u672a\u751f\u6210\u4e24\u4e2avalid\u5b50\u4ee3\uff0c\u7ee7\u7eed\u6267\u884c\uff0c\u6700\u591a\u8fd0\u884c10\u6b21 /*** * \u4ea4\u53c9\u51fd\u6570 */ public List < Solution > swap ( Solution father , Solution mother ) { List < Solution > result = new ArrayList <>(); int count = 0 ; while ( count < 10 && result . size () < 2 ) { // \u82e5\u672a\u751f\u6210\u4e24\u4e2avalid\u5b50\u4ee3\uff0c\u7ee7\u7eed\u6267\u884c\uff0c\u6700\u591a\u8fd0\u884c10\u6b21 int index1 = ( int ) ( instance . customerNum * Math . random ()); int index2 = ( int ) ( instance . customerNum * Math . random ()); while ( index1 == index2 ) { index1 = ( int ) ( instance . customerNum * Math . random ()); index2 = ( int ) ( instance . customerNum * Math . random ()); } if ( index1 > index2 ) { int tmp = index1 ; index1 = index2 ; index2 = tmp ; } int [] fatherClone = father . customerDemand . clone (); int [] motherClone = mother . customerDemand . clone (); for ( int i = index1 ; i <= index2 ; i ++) { fatherClone [ i ] = mother . customerDemand [ i ]; motherClone [ i ] = father . customerDemand [ i ]; } double fatherCost = instance . valid ( fatherClone ); double motherCost = instance . valid ( motherClone ); if ( fatherCost != - 1 ) { result . add ( new Solution ( fatherClone , fatherCost )); } if ( motherCost != - 1 ) { result . add ( new Solution ( motherClone , motherCost )); } ++ count ; } return result ; } \u53d8\u5f02\u90e8\u5206\u5219\u662f\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u987e\u5ba2\uff0c\u6539\u53d8\u4ed6\u7684\u5206\u914d\u7684\u5de5\u5382 /*** * \u53d8\u5f02\u51fd\u6570 */ public void oneVariable ( Solution solution ) { int index = ( int ) ( instance . customerNum * Math . random ()); int factoryIndex = ( int ) ( instance . factoryNum * Math . random ()); solution . customerDemand [ index ] = factoryIndex ; } \u5230\u8fd9\u91cc\u9057\u4f20\u7b97\u6cd5\u57fa\u672c\u5b8c\u6210","title":"\u9057\u4f20\u7b97\u6cd5"},{"location":"Leetcode Note/Capacitated Facility Location Problem/#_9","text":"\u5206\u522b\u7684\u5bf9\u5e94\u6bcf\u79cd\u7b97\u6cd5\u7684\u5177\u4f53\u7ed3\u679c(\u5e26\u5de5\u5382\u72b6\u6001\u548c\u987e\u5ba2\u5206\u914d\u7ed3\u679c)\u5df2\u7ecf\u653e\u5230\u4e86Github\u4ed3\u5e93\u4e2d \u5206\u6790\u7ed3\u679c\u94fe\u63a5 \u53ef\u4ee5\u770b\u5230\u5355\u7eaf\u8d2a\u5fc3\u7b97\u6cd5\u7684\u8017\u65f6\u5341\u5206\u4e4b\u5c11\uff0c\u6709\u4e9b\u7b80\u5355\u7684\u6d4b\u4f8b\u751a\u81f3\u663e\u793atime\u4e3a0, \u4f46\u662f\u5176\u6c42\u51fa\u7684\u89e3\u663e\u7136\u4e0d\u662f\u8f83\u4f18\u89e3\uff0cSA\u548cGA\u4ece\u7ed3\u679c\u4e0a\u6bd4\u8f83\uff0c\u5404\u6709\u5343\u79cb\uff0c\u4f46\u662f\u663e\u7136\u901a\u8fc7\u4f18\u5316\u7b97\u6cd5\u6c42\u89e3\uff0c\u6211\u4eec\u7684\u89e3\u8981\u6bd4\u8d2a\u5fc3\u7b97\u6cd5\u6c42\u51fa\u7684\u89e3\u597d\u4e0a\u4e0d\u5c11\u3002 \u4ece\u6211\u4eec\u7684\u8fd0\u884c\u65f6\u95f4\u6765\u770b\u64cd\u4f5c\u8f83\u5c11\u7684\u8d2a\u5fc3\u7b97\u6cd5\u663e\u7136\u65f6\u95f4\u6700\u5c11\u3002\u6a21\u62df\u9000\u706b\u4ee5\u53ca\u9057\u4f20\u7b97\u6cd5\u65f6\u95f4\u76f8\u8fd1\uff0c\u4e0d\u8fc7\u8fd9\u4e5f\u8981\u770b\u53c2\u6570\u8c03\u6574\u7ed3\u679c\uff0c\u6bd4\u5982GA\u7b97\u6cd5\uff0c\u7fa4\u4f53\u7684\u5927\u5c0f\u3001\u53d8\u5f02\u7387\u4ee5\u53ca\u9057\u4f20\u7684\u4ee3\u6570\u5bf9\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\u7684\u5f71\u54cd\u90fd\u5f88\u5927\uff0c\u6700\u7ec8\u7ecf\u8fc7\u8c03\u6574\u53c2\u6570\uff0c\u7fa4\u4f53\u7684\u5927\u5c0f\u88ab\u6211\u8bbe\u7f6e\u4e3a100\uff0c\u53d8\u5f02\u7387\u8bbe\u7f6e\u4e3a0.3\uff0c\u9057\u4f20\u4ee3\u6570\u8bbe\u7f6e\u4e3a1000\uff0c\u56e0\u4e3a\u6211\u53d1\u73b0\u57fa\u672c1000\u4ee3\u4e4b\u540e\u7b97\u6cd5\u5c31\u57fa\u672c\u6536\u655b\uff0c\u7ecf\u8fc7\u9a8c\u8bc1\u6548\u679c\u826f\u597d\uff0c\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\u5927\u5927\u51cf\u5c11\uff0cSA\u7684\u8bdd\u8fd0\u884c\u65f6\u95f4\u6536\u5230\u521d\u59cb\u6e29\u5ea6\u3001\u7ed3\u675f\u6e29\u5ea6\u3001\u5355\u6b21\u8fed\u4ee3\u6b21\u6570\u4ee5\u53ca\u964d\u6e29\u7cfb\u6570\u5f71\u54cd\uff0c\u8fd9\u91cc\u7ecf\u8fc7\u8c03\u53c2\u521d\u59cb\u6e29\u5ea6\u6211\u8bbe\u7f6e\u4e3a\u4e86100\uff0c\u7ed3\u675f\u6e29\u5ea6\u8bbe\u7f6e\u4e3a0.001\uff0c\u5355\u6b21\u8fed\u4ee3(\u5185\u5faa\u73af)\u6b21\u6570\u6211\u5219\u8bbe\u7f6e\u4e3a\u4e86500\uff0c\u964d\u6e29\u7cfb\u6570\u4e3a0.99","title":"\u6bd4\u8f83\u7b97\u6cd5\u7ed3\u679c"},{"location":"Leetcode Note/Leetcode 115. Distinct Subsequences \u9898\u89e3/","text":"Leetcode 115. Distinct Subsequences \u9898\u89e3 \u9898\u76ee\u94fe\u63a5 Leetcode 115. Distinct Subsequences \u9898\u76ee\u5185\u5bb9 Given a string S and a string T, count the number of distinct subsequences of S which equals T. A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, \"ACE\" is a subsequence of \"ABCDE\" while \"AEC\" is not). \u89e3\u9898\u601d\u8def \u9762\u5bf9\u8fd9\u6837\u7684\u52a8\u6001\u89c4\u5212\u9898\u76ee\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u5206\u6790\u51fa\u4e00\u4e2a\u5408\u9002\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u6211\u4eec\u628adp[i][j]\u89c4\u5b9a\u4e3a\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4ece0\u5f00\u59cb\u957f\u5ea6\u4e3ai\u7684\u5b57\u7b26\u4e32\u548c\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u4ece0\u5f00\u59cb\u7684\u957f\u5ea6\u4e3aj\u7684\u5b57\u7b26\u5b50\u4e32\u5339\u914d\u7684\u4e2a\u6570 \u521d\u59cb\u60c5\u51b5\u4e3a dp[0][0] = 1 dp[0][1-s2.length()] = 1 dp[1-s1.length()][0] = 0 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b dp[i][j] = dp[i][j-1] + (s1[i-1] == s2[j-1] ? dp[i-1[j-1] : 0) \u5206\u6790\u5982\u4e0b\uff0c\u9996\u5148\uff0c\u6211\u4eec\u81f3\u5c11\u4f1a\u6709dp[i][j] = dp[i][j-1] \u56e0\u4e3a\u82e5\u662fs2\u957f\u5ea6\u589e\u52a0\uff0c\u5176\u539f\u6765\u5339\u914d\u7684\u5b57\u7b26\u4e32\u8fd8\u4f1a\u5339\u914d\uff0c\u4e0d\u4f1a\u6539\u53d8 \u5176\u6b21\uff0c\u82e5\u662fs1[i-1] == s2[j-1]\u539f\u6765dp[i-1][j-1]\u7684\u5339\u914d\u7684\u4e2a\u6570\u5c31\u53ef\u4ee5\u7d2f\u8ba1\u5230\u6211\u4eec\u7684dp[i][j]\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u628a\u539f\u5148\u6b63\u786e\u5339\u914d\u7684\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u66ff\u6362\u6210\u6211\u4eec\u65b0\u627e\u5230\u7684\u5339\u914d\u7684\u5b57\u7b26\u3002 \u5230\u8fd9\u91cc\u6211\u4eec\u7684\u72b6\u6001\u8f6c\u79fb\u5c31\u5206\u6790\u5b8c\u6210\u4e86\u3002 Detail\u7ed3\u679c\u5982\u4e0b \u9898\u76ee\u4ee3\u7801 class Solution { public : int numDistinct ( string s , string t ) { int n = s . size (), m = t . size (); int dp [ n + 1 ][ m + 1 ]; memset ( dp , 0 , sizeof ( dp )); for ( int i = 0 ; i <= n ; i ++ ) dp [ i ][ 0 ] = 1 ; for ( int i = 1 ; i <= n ; i ++ ){ for ( int j = 1 ; j <= m ; j ++ ){ dp [ i ][ j ] = dp [ i - 1 ][ j ]; if ( s [ i - 1 ] == t [ j - 1 ]) dp [ i ][ j ] += ( dp [ i - 1 ][ j - 1 ]); } } return dp [ n ][ m ]; } };","title":"Leetcode 115. Distinct Subsequences \u9898\u89e3-Week10"},{"location":"Leetcode Note/Leetcode 115. Distinct Subsequences \u9898\u89e3/#leetcode-115-distinct-subsequences","text":"","title":"Leetcode 115. Distinct Subsequences \u9898\u89e3"},{"location":"Leetcode Note/Leetcode 115. Distinct Subsequences \u9898\u89e3/#_1","text":"Leetcode 115. Distinct Subsequences","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 115. Distinct Subsequences \u9898\u89e3/#_2","text":"Given a string S and a string T, count the number of distinct subsequences of S which equals T. A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, \"ACE\" is a subsequence of \"ABCDE\" while \"AEC\" is not).","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 115. Distinct Subsequences \u9898\u89e3/#_3","text":"\u9762\u5bf9\u8fd9\u6837\u7684\u52a8\u6001\u89c4\u5212\u9898\u76ee\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u5206\u6790\u51fa\u4e00\u4e2a\u5408\u9002\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u6211\u4eec\u628adp[i][j]\u89c4\u5b9a\u4e3a\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4ece0\u5f00\u59cb\u957f\u5ea6\u4e3ai\u7684\u5b57\u7b26\u4e32\u548c\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u4ece0\u5f00\u59cb\u7684\u957f\u5ea6\u4e3aj\u7684\u5b57\u7b26\u5b50\u4e32\u5339\u914d\u7684\u4e2a\u6570 \u521d\u59cb\u60c5\u51b5\u4e3a dp[0][0] = 1 dp[0][1-s2.length()] = 1 dp[1-s1.length()][0] = 0 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b dp[i][j] = dp[i][j-1] + (s1[i-1] == s2[j-1] ? dp[i-1[j-1] : 0) \u5206\u6790\u5982\u4e0b\uff0c\u9996\u5148\uff0c\u6211\u4eec\u81f3\u5c11\u4f1a\u6709dp[i][j] = dp[i][j-1] \u56e0\u4e3a\u82e5\u662fs2\u957f\u5ea6\u589e\u52a0\uff0c\u5176\u539f\u6765\u5339\u914d\u7684\u5b57\u7b26\u4e32\u8fd8\u4f1a\u5339\u914d\uff0c\u4e0d\u4f1a\u6539\u53d8 \u5176\u6b21\uff0c\u82e5\u662fs1[i-1] == s2[j-1]\u539f\u6765dp[i-1][j-1]\u7684\u5339\u914d\u7684\u4e2a\u6570\u5c31\u53ef\u4ee5\u7d2f\u8ba1\u5230\u6211\u4eec\u7684dp[i][j]\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u628a\u539f\u5148\u6b63\u786e\u5339\u914d\u7684\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u66ff\u6362\u6210\u6211\u4eec\u65b0\u627e\u5230\u7684\u5339\u914d\u7684\u5b57\u7b26\u3002 \u5230\u8fd9\u91cc\u6211\u4eec\u7684\u72b6\u6001\u8f6c\u79fb\u5c31\u5206\u6790\u5b8c\u6210\u4e86\u3002 Detail\u7ed3\u679c\u5982\u4e0b","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 115. Distinct Subsequences \u9898\u89e3/#_4","text":"class Solution { public : int numDistinct ( string s , string t ) { int n = s . size (), m = t . size (); int dp [ n + 1 ][ m + 1 ]; memset ( dp , 0 , sizeof ( dp )); for ( int i = 0 ; i <= n ; i ++ ) dp [ i ][ 0 ] = 1 ; for ( int i = 1 ; i <= n ; i ++ ){ for ( int j = 1 ; j <= m ; j ++ ){ dp [ i ][ j ] = dp [ i - 1 ][ j ]; if ( s [ i - 1 ] == t [ j - 1 ]) dp [ i ][ j ] += ( dp [ i - 1 ][ j - 1 ]); } } return dp [ n ][ m ]; } };","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcode 123. Best Time to Buy and Sell Stock III \u9898\u89e3/","text":"Leetcode 123. Best Time to Buy and Sell Stock III \u9898\u89e3 \u9898\u76ee\u94fe\u63a5 Leetcode 123. Best Time to Buy and Sell Stock III \u9898\u76ee\u5185\u5bb9 Say you have an array for which the i^th element is the price of a given stock on day i. Design an algorithm to find the maximum profit. You may complete at most two transactions. Note : You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again). Example1: Input : [3,3,5,0,0,3,1,4] Output : 6 Example2: Input : [1,2,3,4,5] Output : 4 Example3: Input : [7,6,4,3,1] Output : 0 \u89e3\u9898\u601d\u8def \u56e0\u4e3a\u6211\u662f\u901a\u8fc7\u641c\u7d22Dynamic Programing\u641c\u7d22\u5230\u7684\u8fd9\u9898\u76ee\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u4e2a\u9898\u76ee\u5148\u91c7\u53d6DP\u7684\u601d\u8def\u8fdb\u884c\u5b8c\u6210\uff0c\u901a\u8fc7\u601d\u8003\uff0c\u6211\u4eec\u80fd\u8f83\u5feb\u5f97\u5230\u4e00\u4e2aDP\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b: DP[k][i] = MAX(DP[k][i-1], price[i] - price[j] + DP[k-1][i-1]) K = 0~i-1; (\u901a\u8fc7k\u6b21\u4ea4\u6613\u5728\u7b2ci\u5929\u5185\u7684\u6700\u5927\u6536\u76ca)\uff0c \u901a\u8fc7\u8fd9\u4e2a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u5feb\u5b8c\u6210\u6211\u4eec\u7684\u7f16\u7a0b\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u53ef\u4ee5\u6bcf\u4e00\u6b21\u904d\u5386\u90fd\u5bf9\u6bcf\u4e00\u4e2aj\u8fdb\u884c\u904d\u5386\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u8d85\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e00\u6b21\u6267\u884c\u65f6\u8bb0\u5f55\u6211\u4eec\u7684minVal\uff0c\u4f18\u5316\u4e4b\u540e\uff0c\u6211\u4eec\u7a0b\u5e8f\u7684\u590d\u6742\u5ea6\u5c31\u662fO(n) = O(kn)\u3002 Detail\u63d0\u4ea4\u60c5\u51b5\u5982\u4e0b \u5728\u63d0\u4ea4\u5b8c\u540e\uff0c\u6211\u5728discuss\u91cc\u8fd8\u53d1\u73b0\u4e00\u79cd\u633a\u597d\u7684\u89e3\u6cd5: \u901a\u8fc7\u7ef4\u62a4buy1, sell1, buy1, sell2\u6765\u5b9e\u73b0 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b buy1 = max ( buy1 , - prices [ i ]); sell1 = max ( sell1 , buy1 + prices [ i ]); buy2 = max ( buy2 , sell1 - prices [ i ]); sell2 = max ( sell2 , buy2 + prices [ i ]); \u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),\u4e0d\u8fc7\u5b9e\u9645\u63d0\u4ea4\u4e8b\u4ef6\u4e5f\u662f4ms \u9898\u76ee\u4ee3\u7801 \u7b2c\u4e00\u79cd\u65b9\u6cd5 class Solution { public : int maxProfit ( vector < int >& prices ) { if ( prices . size () == 0 ) return 0 ; int dp [ 3 ][ prices . size ()]; memset ( dp , 0 , sizeof ( dp )); for ( int k = 1 ; k <= 2 ; k ++ ) { int minVal = prices [ 0 ]; for ( int i = 1 ; i < prices . size (); i ++ ) { minVal = min ( minVal , prices [ i ] - dp [ k - 1 ][ i - 1 ]); dp [ k ][ i ] = max ( dp [ k ][ i - 1 ], prices [ i ] - minVal ); } } return dp [ 2 ][ prices . size () - 1 ]; } }; \u7b2c\u4e8c\u79cd\u65b9\u6cd5 class Solution { public : int maxProfit ( vector < int >& prices ) { int sell1 = 0 ; int sell2 = 0 ; int buy1 = INT_MIN ; int buy2 = INT_MIN ; for ( int i = 0 ; i < prices . size (); i ++ ) { buy1 = max ( buy1 , - prices [ i ]); sell1 = max ( sell1 , buy1 + prices [ i ]); buy2 = max ( buy2 , sell1 - prices [ i ]); sell2 = max ( sell2 , buy2 + prices [ i ]); } return sell2 ; } };","title":"Leetcode 123. Best Time to Buy and Sell Stock III \u9898\u89e3-Week9"},{"location":"Leetcode Note/Leetcode 123. Best Time to Buy and Sell Stock III \u9898\u89e3/#leetcode-123-best-time-to-buy-and-sell-stock-iii","text":"","title":"Leetcode 123. Best Time to Buy and Sell Stock III \u9898\u89e3"},{"location":"Leetcode Note/Leetcode 123. Best Time to Buy and Sell Stock III \u9898\u89e3/#_1","text":"Leetcode 123. Best Time to Buy and Sell Stock III","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 123. Best Time to Buy and Sell Stock III \u9898\u89e3/#_2","text":"Say you have an array for which the i^th element is the price of a given stock on day i. Design an algorithm to find the maximum profit. You may complete at most two transactions. Note : You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again). Example1: Input : [3,3,5,0,0,3,1,4] Output : 6 Example2: Input : [1,2,3,4,5] Output : 4 Example3: Input : [7,6,4,3,1] Output : 0","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 123. Best Time to Buy and Sell Stock III \u9898\u89e3/#_3","text":"\u56e0\u4e3a\u6211\u662f\u901a\u8fc7\u641c\u7d22Dynamic Programing\u641c\u7d22\u5230\u7684\u8fd9\u9898\u76ee\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u4e2a\u9898\u76ee\u5148\u91c7\u53d6DP\u7684\u601d\u8def\u8fdb\u884c\u5b8c\u6210\uff0c\u901a\u8fc7\u601d\u8003\uff0c\u6211\u4eec\u80fd\u8f83\u5feb\u5f97\u5230\u4e00\u4e2aDP\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b: DP[k][i] = MAX(DP[k][i-1], price[i] - price[j] + DP[k-1][i-1]) K = 0~i-1; (\u901a\u8fc7k\u6b21\u4ea4\u6613\u5728\u7b2ci\u5929\u5185\u7684\u6700\u5927\u6536\u76ca)\uff0c \u901a\u8fc7\u8fd9\u4e2a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u5feb\u5b8c\u6210\u6211\u4eec\u7684\u7f16\u7a0b\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u53ef\u4ee5\u6bcf\u4e00\u6b21\u904d\u5386\u90fd\u5bf9\u6bcf\u4e00\u4e2aj\u8fdb\u884c\u904d\u5386\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u8d85\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e00\u6b21\u6267\u884c\u65f6\u8bb0\u5f55\u6211\u4eec\u7684minVal\uff0c\u4f18\u5316\u4e4b\u540e\uff0c\u6211\u4eec\u7a0b\u5e8f\u7684\u590d\u6742\u5ea6\u5c31\u662fO(n) = O(kn)\u3002 Detail\u63d0\u4ea4\u60c5\u51b5\u5982\u4e0b \u5728\u63d0\u4ea4\u5b8c\u540e\uff0c\u6211\u5728discuss\u91cc\u8fd8\u53d1\u73b0\u4e00\u79cd\u633a\u597d\u7684\u89e3\u6cd5: \u901a\u8fc7\u7ef4\u62a4buy1, sell1, buy1, sell2\u6765\u5b9e\u73b0 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b buy1 = max ( buy1 , - prices [ i ]); sell1 = max ( sell1 , buy1 + prices [ i ]); buy2 = max ( buy2 , sell1 - prices [ i ]); sell2 = max ( sell2 , buy2 + prices [ i ]); \u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),\u4e0d\u8fc7\u5b9e\u9645\u63d0\u4ea4\u4e8b\u4ef6\u4e5f\u662f4ms","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 123. Best Time to Buy and Sell Stock III \u9898\u89e3/#_4","text":"\u7b2c\u4e00\u79cd\u65b9\u6cd5 class Solution { public : int maxProfit ( vector < int >& prices ) { if ( prices . size () == 0 ) return 0 ; int dp [ 3 ][ prices . size ()]; memset ( dp , 0 , sizeof ( dp )); for ( int k = 1 ; k <= 2 ; k ++ ) { int minVal = prices [ 0 ]; for ( int i = 1 ; i < prices . size (); i ++ ) { minVal = min ( minVal , prices [ i ] - dp [ k - 1 ][ i - 1 ]); dp [ k ][ i ] = max ( dp [ k ][ i - 1 ], prices [ i ] - minVal ); } } return dp [ 2 ][ prices . size () - 1 ]; } }; \u7b2c\u4e8c\u79cd\u65b9\u6cd5 class Solution { public : int maxProfit ( vector < int >& prices ) { int sell1 = 0 ; int sell2 = 0 ; int buy1 = INT_MIN ; int buy2 = INT_MIN ; for ( int i = 0 ; i < prices . size (); i ++ ) { buy1 = max ( buy1 , - prices [ i ]); sell1 = max ( sell1 , buy1 + prices [ i ]); buy2 = max ( buy2 , sell1 - prices [ i ]); sell2 = max ( sell2 , buy2 + prices [ i ]); } return sell2 ; } };","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcode 132.Palindrome Partitioning II \u9898\u89e3/","text":"Leetcode 132.Palindrome Partitioning II \u9898\u89e3 \u9898\u76ee\u94fe\u63a5 Leetcode 132.Palindrome Partitioning II \u9898\u76ee\u5185\u5bb9 Given a string s, partition s such that every substring of the partition is a palindrome. Return the minimum cuts needed for a palindrome partitioning of s. Example: Input : \"aab\" Output : 1 Explanation : The palindrome partitioning [\"aa\",\"b\"] could be produced using 1 cut. \u89e3\u9898\u601d\u8def \u9009\u62e9\u8fd9\u9898\u662f\u56e0\u4e3a\u60f3\u7ec3\u4e60\u4e00\u4e0b\u8fd9\u5468\u5b66\u4e60\u5230\u7684dp\u7b97\u6cd5\uff0c\u5206\u6790\u5b8c\u8fd9\u4e2a\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b: if isReverse ( str . substr ( 0 , i )): dp [ i ] = 0 # defalut dp[i] = i-1 \u56e0\u4e3a\u6700\u591a\u5206\u5272i-1\u6b21 if isReverse ( str . substr ( j , i - j )): dp [ i ] = min ( dp [ i ], dp [ j ] + 1 ) if not isReverse ( str . substr ( j , i - j )) dp [ i ] = min ( dp [ i ], dp [ j ] + i - j ) # j\u5230i\u6700\u591a\u5206\u5272i-j\u6b21 \u4f46\u662f\u63d0\u4ea4\u4e4b\u540e\u867d\u7136\u6b63\u786e\uff0c\u4f46\u662fdetail\u663e\u793a\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u591f\u597d \u540e\u6765\u770b\u4e86\u770b\u522b\u4eba\u7684\u505a\u6cd5\uff0c\u53d1\u73b0\u5176\u5b9e\u8fd8\u53ef\u4ee5\u4f18\u5316\u4e00\u4e0b\u6211\u4eec\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b,\u57fa\u672c\u601d\u8def\u5927\u81f4\u76f8\u540c \uff0c\u90fd\u662f\u901a\u8fc7\u68c0\u9a8c\u662f\u5426\u56de\u6587\u7801\u6765\u7b97dp[i], \u4e0d\u8fc7\u4ed6\u901a\u8fc7\u5728i\u5904\u5de6\u53f3\u4e24\u7aef\u540c\u65f6\u5ef6\u4f38\u7684\u540c\u65f6\uff0c\u968f\u4fbf\u68c0\u9a8c\u662f\u5426\u56de\u6587\uff0c\u540c\u65f6\u8ba1\u7b97min(dp[i+len+1], dp[i-len]+1) \u548c dp[i+len+2] = min(dp[i+len+2], dp[i-len]+1)\u3002\u8fd9\u6837\u514d\u53bb\u4e86\u6211\u4eec\u4e4b\u524d\u5728(0, i)\u7684\u4e0d\u662f\u56de\u6587\u7801\u7684\u65f6\u5019\u5bf9\u4e8e\u6bcf\u4e2astr(j, i-j)\u7684\u56de\u6587\u7801\u68c0\u9a8c\uff0c\u5927\u5927\u51cf\u5c11\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\u3002 \u9898\u76ee\u4ee3\u7801 \u4e00\u5f00\u59cb\u7684\u505a\u6cd5 class Solution { public : int minCut ( string s ) { int n = s . size (); vector < int > dp ( n + 1 , 0 ); dp [ 0 ] = 0 ; // \u521d\u59cb\u5316 for ( int i = 1 ; i <= n ; i ++ ){ if ( isReverseStr ( s . substr ( 0 , i ))){ dp [ i ] = 0 ; continue ; } dp [ i ] = i - 1 ; for ( int j = 1 ; j < i ; j ++ ) { if ( isReverseStr ( s . substr ( j , i - j ))) dp [ i ] = min ( dp [ i ], dp [ j ] + 1 ); else dp [ i ] = min ( dp [ i ], dp [ j ] + i - j ); } } return dp [ n ]; } bool isReverseStr ( string s ) { int size = s . size (); for ( int i = 0 ; i <= ( size - 1 ) / 2 ; i ++ ) { if ( s [ i ] != s [ size - i - 1 ]) return false ; } return true ; } }; \u540e\u9762\u7684\u505a\u6cd5 class Solution { public : int minCut ( string s ) { int n = s . size (); vector < int > dp ( n + 1 , n - 1 ); dp [ 0 ] = - 1 ; //act as a sentinel for ( int i = 0 ; i < n ; i ++ ){ //palindrome of length 1,3,5... for ( int len = 0 ; i - len >= 0 && i + len < n && s [ i - len ] == s [ i + len ]; len ++ ) dp [ i + len + 1 ] = min ( dp [ i + len + 1 ], dp [ i - len ] + 1 ); //palindrome of lenght 2,4,6... for ( int len = 0 ; i - len >= 0 && i + len + 1 < n && s [ i - len ] == s [ i + len + 1 ]; len ++ ) dp [ i + len + 2 ] = min ( dp [ i + len + 2 ], dp [ i - len ] + 1 ); } return dp [ n ]; } };","title":"Leetcode 132.Palindrome Partitioning II \u9898\u89e3-Week8"},{"location":"Leetcode Note/Leetcode 132.Palindrome Partitioning II \u9898\u89e3/#leetcode-132palindrome-partitioning-ii","text":"","title":"Leetcode 132.Palindrome Partitioning II \u9898\u89e3"},{"location":"Leetcode Note/Leetcode 132.Palindrome Partitioning II \u9898\u89e3/#_1","text":"Leetcode 132.Palindrome Partitioning II","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 132.Palindrome Partitioning II \u9898\u89e3/#_2","text":"Given a string s, partition s such that every substring of the partition is a palindrome. Return the minimum cuts needed for a palindrome partitioning of s. Example: Input : \"aab\" Output : 1 Explanation : The palindrome partitioning [\"aa\",\"b\"] could be produced using 1 cut.","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 132.Palindrome Partitioning II \u9898\u89e3/#_3","text":"\u9009\u62e9\u8fd9\u9898\u662f\u56e0\u4e3a\u60f3\u7ec3\u4e60\u4e00\u4e0b\u8fd9\u5468\u5b66\u4e60\u5230\u7684dp\u7b97\u6cd5\uff0c\u5206\u6790\u5b8c\u8fd9\u4e2a\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b: if isReverse ( str . substr ( 0 , i )): dp [ i ] = 0 # defalut dp[i] = i-1 \u56e0\u4e3a\u6700\u591a\u5206\u5272i-1\u6b21 if isReverse ( str . substr ( j , i - j )): dp [ i ] = min ( dp [ i ], dp [ j ] + 1 ) if not isReverse ( str . substr ( j , i - j )) dp [ i ] = min ( dp [ i ], dp [ j ] + i - j ) # j\u5230i\u6700\u591a\u5206\u5272i-j\u6b21 \u4f46\u662f\u63d0\u4ea4\u4e4b\u540e\u867d\u7136\u6b63\u786e\uff0c\u4f46\u662fdetail\u663e\u793a\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u591f\u597d \u540e\u6765\u770b\u4e86\u770b\u522b\u4eba\u7684\u505a\u6cd5\uff0c\u53d1\u73b0\u5176\u5b9e\u8fd8\u53ef\u4ee5\u4f18\u5316\u4e00\u4e0b\u6211\u4eec\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b,\u57fa\u672c\u601d\u8def\u5927\u81f4\u76f8\u540c \uff0c\u90fd\u662f\u901a\u8fc7\u68c0\u9a8c\u662f\u5426\u56de\u6587\u7801\u6765\u7b97dp[i], \u4e0d\u8fc7\u4ed6\u901a\u8fc7\u5728i\u5904\u5de6\u53f3\u4e24\u7aef\u540c\u65f6\u5ef6\u4f38\u7684\u540c\u65f6\uff0c\u968f\u4fbf\u68c0\u9a8c\u662f\u5426\u56de\u6587\uff0c\u540c\u65f6\u8ba1\u7b97min(dp[i+len+1], dp[i-len]+1) \u548c dp[i+len+2] = min(dp[i+len+2], dp[i-len]+1)\u3002\u8fd9\u6837\u514d\u53bb\u4e86\u6211\u4eec\u4e4b\u524d\u5728(0, i)\u7684\u4e0d\u662f\u56de\u6587\u7801\u7684\u65f6\u5019\u5bf9\u4e8e\u6bcf\u4e2astr(j, i-j)\u7684\u56de\u6587\u7801\u68c0\u9a8c\uff0c\u5927\u5927\u51cf\u5c11\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 132.Palindrome Partitioning II \u9898\u89e3/#_4","text":"","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcode 132.Palindrome Partitioning II \u9898\u89e3/#_5","text":"class Solution { public : int minCut ( string s ) { int n = s . size (); vector < int > dp ( n + 1 , 0 ); dp [ 0 ] = 0 ; // \u521d\u59cb\u5316 for ( int i = 1 ; i <= n ; i ++ ){ if ( isReverseStr ( s . substr ( 0 , i ))){ dp [ i ] = 0 ; continue ; } dp [ i ] = i - 1 ; for ( int j = 1 ; j < i ; j ++ ) { if ( isReverseStr ( s . substr ( j , i - j ))) dp [ i ] = min ( dp [ i ], dp [ j ] + 1 ); else dp [ i ] = min ( dp [ i ], dp [ j ] + i - j ); } } return dp [ n ]; } bool isReverseStr ( string s ) { int size = s . size (); for ( int i = 0 ; i <= ( size - 1 ) / 2 ; i ++ ) { if ( s [ i ] != s [ size - i - 1 ]) return false ; } return true ; } };","title":"\u4e00\u5f00\u59cb\u7684\u505a\u6cd5"},{"location":"Leetcode Note/Leetcode 132.Palindrome Partitioning II \u9898\u89e3/#_6","text":"class Solution { public : int minCut ( string s ) { int n = s . size (); vector < int > dp ( n + 1 , n - 1 ); dp [ 0 ] = - 1 ; //act as a sentinel for ( int i = 0 ; i < n ; i ++ ){ //palindrome of length 1,3,5... for ( int len = 0 ; i - len >= 0 && i + len < n && s [ i - len ] == s [ i + len ]; len ++ ) dp [ i + len + 1 ] = min ( dp [ i + len + 1 ], dp [ i - len ] + 1 ); //palindrome of lenght 2,4,6... for ( int len = 0 ; i - len >= 0 && i + len + 1 < n && s [ i - len ] == s [ i + len + 1 ]; len ++ ) dp [ i + len + 2 ] = min ( dp [ i + len + 2 ], dp [ i - len ] + 1 ); } return dp [ n ]; } };","title":"\u540e\u9762\u7684\u505a\u6cd5"},{"location":"Leetcode Note/Leetcode 188. Best Time to Buy and Sell Stock IV \u9898\u89e3/","text":"Leetcode 188. Best Time to Buy and Sell Stock IV \u9898\u89e3 \u9898\u76ee\u94fe\u63a5 Leetcode 188. Best Time to Buy and Sell Stock IV \u9898\u76ee\u5185\u5bb9 Say you have an array for which the ith element is the price of a given stock on day i. Design an algorithm to find the maximum profit. You may complete at most k transactions. Note: You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again). Example1: Input: [2,4,1], k = 2 Output: 2 Explanation: Buy on day 1 (price = 2) and sell on day 2 (price = 4), profit = 4-2 = 2. Example2: Input : [3,2,6,5,0,3], k = 2 Output : 7 Explanation : Buy on day 2 (price = 2) and sell on day 3 (price = 6), profit = 6-2 = 4. Then buy on day 5 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3. \u89e3\u9898\u601d\u8def \u672c\u9898\u662f\u4e4b\u524d\u505a\u8fc7\u7684\u9898\u76ee\u4e2d\u540e\u7eed\u7cfb\u5217\u7684\u9898\u76ee\uff0c\u4e5f\u662f\u7528\u7684dp\u7684\u601d\u60f3\u8fdb\u884c\u89e3\u9898\uff0c\u8fd9\u9898\u4e0e\u4e4b\u524d\u4e0d\u540c\u7684\u662f\uff0c\u53ef\u4ee5\u6307\u5b9a\u4ea4\u6613\u7684\u6700\u5927\u6b21\u6570\uff0c\u6240\u4ee5\uff0c\u5f53k >= prices.size() / 2\u65f6\uff0c\u5176\u6bcf\u6b21\u90fd\u53ef\u4ee5\u4ea4\u6613\uff0c\u6211\u4eec\u53ea\u9700\u770b\u6bcf\u4e00\u6b21\u4ea4\u6613\u4f1a\u4e0d\u4f1a\u8d5a\u94b1\uff0c\u4f1a\u8d5a\u94b1\uff0c\u52a0\u5230\u6536\u76ca\u4e2d\uff0c\u5c31\u53ef\u83b7\u53d6\u6700\u5927\u6536\u76ca\u3002 \u90a3\u4e48\u6b63\u5e38\u60c5\u51b5\u7684dp\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5462\uff0c\u6211\u4eec\u901a\u8fc7\u8ba1\u7b97k\u6b21\u4ea4\u6613\u8d2d\u4e70\u6700\u5c11\u635f\u8017\u7684\u94b1buys\u4ee5\u53cak\u6b21\u4ea4\u6613\u51fa\u552e\u80fd\u83b7\u53d6\u7684\u6700\u591a\u7684\u94b1sells\u6765\u83b7\u53d6\u6211\u4eec\u7684\u7b54\u6848\uff0c\u8f6c\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b: buys[j] default = INT_MIN, sells[j] default = 0 for each p buys[j] = max(buys[j], sells[j-1] - p) (1<=j<=k) sells[j] = max(sells[j], buys[j] + prices[i]); \u6700\u7ec8\u7ed3\u679c\u5373\u4e3a\u6211\u4eec\u7684sells[k]\u3002 \u63d0\u4ea4detail\u4e3a \u9898\u76ee\u4ee3\u7801 class Solution { public : int maxProfit ( int k , vector < int >& prices ) { if ( k >= prices . size () / 2 ) { int res = 0 ; for ( int i = 1 ; i < prices . size (); ++ i ) res += max ( 0 , prices [ i ] - prices [ i - 1 ]); return res ; } vector < int > buys ( k + 1 , INT_MIN ), sells ( k + 1 , 0 ); for ( int i = 0 ; i < prices . size (); i ++ ) { for ( int j = 1 ; i <= k ; ++ i ) { buys [ j ] = max ( buys [ j ], sells [ j - 1 ] - prices [ i ]); sells [ j ] = max ( sells [ j ], buys [ j ] + prices [ i ]); } } return sells [ k ]; } };","title":"Leetcode 188. Best Time to Buy and Sell Stock IV \u9898\u89e3-Week13"},{"location":"Leetcode Note/Leetcode 188. Best Time to Buy and Sell Stock IV \u9898\u89e3/#leetcode-188-best-time-to-buy-and-sell-stock-iv","text":"","title":"Leetcode 188. Best Time to Buy and Sell Stock IV \u9898\u89e3"},{"location":"Leetcode Note/Leetcode 188. Best Time to Buy and Sell Stock IV \u9898\u89e3/#_1","text":"Leetcode 188. Best Time to Buy and Sell Stock IV","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 188. Best Time to Buy and Sell Stock IV \u9898\u89e3/#_2","text":"Say you have an array for which the ith element is the price of a given stock on day i. Design an algorithm to find the maximum profit. You may complete at most k transactions. Note: You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again). Example1: Input: [2,4,1], k = 2 Output: 2 Explanation: Buy on day 1 (price = 2) and sell on day 2 (price = 4), profit = 4-2 = 2. Example2: Input : [3,2,6,5,0,3], k = 2 Output : 7 Explanation : Buy on day 2 (price = 2) and sell on day 3 (price = 6), profit = 6-2 = 4. Then buy on day 5 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 188. Best Time to Buy and Sell Stock IV \u9898\u89e3/#_3","text":"\u672c\u9898\u662f\u4e4b\u524d\u505a\u8fc7\u7684\u9898\u76ee\u4e2d\u540e\u7eed\u7cfb\u5217\u7684\u9898\u76ee\uff0c\u4e5f\u662f\u7528\u7684dp\u7684\u601d\u60f3\u8fdb\u884c\u89e3\u9898\uff0c\u8fd9\u9898\u4e0e\u4e4b\u524d\u4e0d\u540c\u7684\u662f\uff0c\u53ef\u4ee5\u6307\u5b9a\u4ea4\u6613\u7684\u6700\u5927\u6b21\u6570\uff0c\u6240\u4ee5\uff0c\u5f53k >= prices.size() / 2\u65f6\uff0c\u5176\u6bcf\u6b21\u90fd\u53ef\u4ee5\u4ea4\u6613\uff0c\u6211\u4eec\u53ea\u9700\u770b\u6bcf\u4e00\u6b21\u4ea4\u6613\u4f1a\u4e0d\u4f1a\u8d5a\u94b1\uff0c\u4f1a\u8d5a\u94b1\uff0c\u52a0\u5230\u6536\u76ca\u4e2d\uff0c\u5c31\u53ef\u83b7\u53d6\u6700\u5927\u6536\u76ca\u3002 \u90a3\u4e48\u6b63\u5e38\u60c5\u51b5\u7684dp\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5462\uff0c\u6211\u4eec\u901a\u8fc7\u8ba1\u7b97k\u6b21\u4ea4\u6613\u8d2d\u4e70\u6700\u5c11\u635f\u8017\u7684\u94b1buys\u4ee5\u53cak\u6b21\u4ea4\u6613\u51fa\u552e\u80fd\u83b7\u53d6\u7684\u6700\u591a\u7684\u94b1sells\u6765\u83b7\u53d6\u6211\u4eec\u7684\u7b54\u6848\uff0c\u8f6c\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b: buys[j] default = INT_MIN, sells[j] default = 0 for each p buys[j] = max(buys[j], sells[j-1] - p) (1<=j<=k) sells[j] = max(sells[j], buys[j] + prices[i]); \u6700\u7ec8\u7ed3\u679c\u5373\u4e3a\u6211\u4eec\u7684sells[k]\u3002 \u63d0\u4ea4detail\u4e3a","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 188. Best Time to Buy and Sell Stock IV \u9898\u89e3/#_4","text":"class Solution { public : int maxProfit ( int k , vector < int >& prices ) { if ( k >= prices . size () / 2 ) { int res = 0 ; for ( int i = 1 ; i < prices . size (); ++ i ) res += max ( 0 , prices [ i ] - prices [ i - 1 ]); return res ; } vector < int > buys ( k + 1 , INT_MIN ), sells ( k + 1 , 0 ); for ( int i = 0 ; i < prices . size (); i ++ ) { for ( int j = 1 ; i <= k ; ++ i ) { buys [ j ] = max ( buys [ j ], sells [ j - 1 ] - prices [ i ]); sells [ j ] = max ( sells [ j ], buys [ j ] + prices [ i ]); } } return sells [ k ]; } };","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcode 23. merge-k-sorted-lists \u9898\u89e3 - Week6/","text":"Leetcode 23. merge-k-sorted-lists \u9898\u89e3 - Week6 \u9898\u76ee\u94fe\u63a5 Leetcode 23. merge-k-sorted-lists \u9898\u76ee\u5185\u5bb9 Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity. Example: Input : [ 1->4->5, 1->3->4, 2->6 ] Output : 1->1->2->3->4->4->5->6 \u89e3\u9898\u601d\u8def \u8fd9\u9898\u76ee\u8ddf\u6211\u4eec\u8fd9\u5468\u4e0a\u8bfe\u8bb2\u7684\u4e00\u9053\u9898\u76ee\u4e00\u6837\uff0c\u90fd\u662f\u5c06k\u4e2a\u6709\u5e8f\u7684\u94fe\u8868\u8fdb\u884c\u5408\u5e76\uff0c\u521a\u597d\u9a8c\u8bc1\u5177\u4f53\u7684\u601d\u8def\u548c\u5176\u4ee3\u7801\u5b9e\u73b0\uff0c\u9996\u5148\uff0c\u5408\u5e76\u4e24\u4e2aList\u7684\u51fd\u6570\u662f\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u5148\u5b8c\u6210\u5408\u5e76\u4e24\u4e2a\u94fe\u8868\u7684\u51fd\u6570\uff0c\u8fd9\u4e2a\u5341\u5206\u7b80\u5355\uff0c\u4e0d\u8fc7\u4e3a\u4e86\u5185\u5b58\u7684\u8282\u7701\uff0c\u6211\u6ca1\u6709\u4f7f\u7528\u4e00\u822c\u7684\u4e0d\u505c\u65b0\u5efanode\u7684\u65b9\u5f0f\uff0c\u800c\u662f\u901a\u8fc7\u4e0d\u65ad\u628alist2\u4e2d\u5e94\u8be5\u63d2\u5165\u7684\u5143\u7d20\u63d2\u5230node1\u4e2d\uff0c\u6ca1\u6709\u4f7f\u7528\u5230\u65b0\u7684\u7a7a\u95f4\u3002 \u800c\u603b\u4f53\u7684\u601d\u8def\u8ddf\u4e0a\u8bfe\u8bf4\u7684\u4e00\u81f4\uff0c\u90fd\u662f\u5c06\u4e24\u4e24\u94fe\u8868\u5206\u522b\u5408\u5e76\uff0c\u518d\u4e24\u4e24\u5408\u5e76\u65b0\u7684\u94fe\u8868\uff0c\u76f4\u5230\u5269\u4e0b\u4e00\u4e2a\u94fe\u8868\uff0c\u548c\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u8def\u7c7b\u4f3c\u3002\u8fd9\u9898\u76ee\u7684\u521d\u59cb\u72b6\u6001\u76f8\u5f53\u4e8e\u662f\u5f52\u5e76\u6392\u5e8f\u7684\u8fd0\u884c\u5230\u4e2d\u95f4\u8fc7\u7a0b\u7684\u67d0\u4e2a\u72b6\u6001\u3002\u6574\u4f53\u601d\u8def\u8001\u5e08\u4e0a\u8bfe\u7684\u65f6\u5019\u8bb2\u7684\u4e5f\u5f88\u6e05\u695a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u8d58\u8ff0\u4e86\u3002 \u9898\u76ee\u4ee3\u7801 class Solution { public ListNode * mergeTwoLists ( ListNode * node1 , ListNode * node2 ) { if ( node1 == nullptr ) return node2 ; if ( node2 == nullptr ) return node1 ; ListNode * n1 = nullptr , * n2 = nullptr , * head = nullptr , * preNode = nullptr ; node1 -> val < node2 -> val ? ( n1 = node1 , n2 = node2 ) : ( n1 = node2 , n2 = node1 ); head = n1 ; while ( n1 != nullptr && n2 != nullptr ) { if ( n1 -> val <= n2 -> val ) { preNode = n1 ; n1 = n1 -> next ; } else { auto * nodeTmp = n2 -> next ; n2 -> next = n1 ; preNode -> next = n2 ; preNode = n2 ; n2 = nodeTmp ; } } if ( n1 == nullptr ) preNode -> next = n2 ; return head ; } ListNode * mergeKLists ( vector < ListNode *>& lists ) { if ( lists . empty ()) return nullptr ; for ( int i = 0 ; i < lists . size () - 1 ; i += 2 ) { auto * p1 = lists [ i ], * p2 = lists [ i + 1 ]; lists . emplace_back ( mergeTwoLists ( p1 , p2 )); } return lists . back (); } };","title":"Leetcode 23. merge-k-sorted-lists \u9898\u89e3-Week6"},{"location":"Leetcode Note/Leetcode 23. merge-k-sorted-lists \u9898\u89e3 - Week6/#leetcode-23-merge-k-sorted-lists-week6","text":"","title":"Leetcode 23. merge-k-sorted-lists \u9898\u89e3 - Week6"},{"location":"Leetcode Note/Leetcode 23. merge-k-sorted-lists \u9898\u89e3 - Week6/#_1","text":"Leetcode 23. merge-k-sorted-lists","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 23. merge-k-sorted-lists \u9898\u89e3 - Week6/#_2","text":"Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity. Example: Input : [ 1->4->5, 1->3->4, 2->6 ] Output : 1->1->2->3->4->4->5->6","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 23. merge-k-sorted-lists \u9898\u89e3 - Week6/#_3","text":"\u8fd9\u9898\u76ee\u8ddf\u6211\u4eec\u8fd9\u5468\u4e0a\u8bfe\u8bb2\u7684\u4e00\u9053\u9898\u76ee\u4e00\u6837\uff0c\u90fd\u662f\u5c06k\u4e2a\u6709\u5e8f\u7684\u94fe\u8868\u8fdb\u884c\u5408\u5e76\uff0c\u521a\u597d\u9a8c\u8bc1\u5177\u4f53\u7684\u601d\u8def\u548c\u5176\u4ee3\u7801\u5b9e\u73b0\uff0c\u9996\u5148\uff0c\u5408\u5e76\u4e24\u4e2aList\u7684\u51fd\u6570\u662f\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u5148\u5b8c\u6210\u5408\u5e76\u4e24\u4e2a\u94fe\u8868\u7684\u51fd\u6570\uff0c\u8fd9\u4e2a\u5341\u5206\u7b80\u5355\uff0c\u4e0d\u8fc7\u4e3a\u4e86\u5185\u5b58\u7684\u8282\u7701\uff0c\u6211\u6ca1\u6709\u4f7f\u7528\u4e00\u822c\u7684\u4e0d\u505c\u65b0\u5efanode\u7684\u65b9\u5f0f\uff0c\u800c\u662f\u901a\u8fc7\u4e0d\u65ad\u628alist2\u4e2d\u5e94\u8be5\u63d2\u5165\u7684\u5143\u7d20\u63d2\u5230node1\u4e2d\uff0c\u6ca1\u6709\u4f7f\u7528\u5230\u65b0\u7684\u7a7a\u95f4\u3002 \u800c\u603b\u4f53\u7684\u601d\u8def\u8ddf\u4e0a\u8bfe\u8bf4\u7684\u4e00\u81f4\uff0c\u90fd\u662f\u5c06\u4e24\u4e24\u94fe\u8868\u5206\u522b\u5408\u5e76\uff0c\u518d\u4e24\u4e24\u5408\u5e76\u65b0\u7684\u94fe\u8868\uff0c\u76f4\u5230\u5269\u4e0b\u4e00\u4e2a\u94fe\u8868\uff0c\u548c\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u8def\u7c7b\u4f3c\u3002\u8fd9\u9898\u76ee\u7684\u521d\u59cb\u72b6\u6001\u76f8\u5f53\u4e8e\u662f\u5f52\u5e76\u6392\u5e8f\u7684\u8fd0\u884c\u5230\u4e2d\u95f4\u8fc7\u7a0b\u7684\u67d0\u4e2a\u72b6\u6001\u3002\u6574\u4f53\u601d\u8def\u8001\u5e08\u4e0a\u8bfe\u7684\u65f6\u5019\u8bb2\u7684\u4e5f\u5f88\u6e05\u695a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u8d58\u8ff0\u4e86\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 23. merge-k-sorted-lists \u9898\u89e3 - Week6/#_4","text":"class Solution { public ListNode * mergeTwoLists ( ListNode * node1 , ListNode * node2 ) { if ( node1 == nullptr ) return node2 ; if ( node2 == nullptr ) return node1 ; ListNode * n1 = nullptr , * n2 = nullptr , * head = nullptr , * preNode = nullptr ; node1 -> val < node2 -> val ? ( n1 = node1 , n2 = node2 ) : ( n1 = node2 , n2 = node1 ); head = n1 ; while ( n1 != nullptr && n2 != nullptr ) { if ( n1 -> val <= n2 -> val ) { preNode = n1 ; n1 = n1 -> next ; } else { auto * nodeTmp = n2 -> next ; n2 -> next = n1 ; preNode -> next = n2 ; preNode = n2 ; n2 = nodeTmp ; } } if ( n1 == nullptr ) preNode -> next = n2 ; return head ; } ListNode * mergeKLists ( vector < ListNode *>& lists ) { if ( lists . empty ()) return nullptr ; for ( int i = 0 ; i < lists . size () - 1 ; i += 2 ) { auto * p1 = lists [ i ], * p2 = lists [ i + 1 ]; lists . emplace_back ( mergeTwoLists ( p1 , p2 )); } return lists . back (); } };","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcode 315.Count of Smaller Numbers After Self \u9898\u89e3/","text":"Leetcode 315.Count of Smaller Numbers After Self \u9898\u89e3 \u9898\u76ee\u94fe\u63a5 Leetcode 315. Count of Smaller Numbers After Self \u9898\u76ee\u5185\u5bb9 You are given an integer array nums and you have to return a new counts array. The counts array has the property where counts[i] is the number of smaller elements to the right of nums[i]. Input : [5,2,6,1] Output : [2,1,1,0] Explanation : To the right of 5 there are 2 smaller elements (2 and 1). To the right of 2 there is only 1 smaller element (1). To the right of 6 there is 1 smaller element (1). To the right of 1 there is 0 smaller element. \u89e3\u9898\u601d\u8def \u8fd9\u5468\u6211\u53c8\u9009\u62e9\u4e86\u4e00\u9898\u4f7f\u7528\u5f52\u5e76\u7b97\u6cd5\u7684\u9898\u76ee\uff0c\u9898\u76ee\u7684\u8981\u6c42\u662f\u8981\u6211\u4eec\u8ba1\u7b97\u6bcf\u4e2a\u6570\u5b57\u53f3\u8fb9\u7684\u6bd4\u4ed6\u5c0f\u7684\u6570\u5b57\u7684\u6570\u91cf\u3002 \u8fd9\u91cc\u6211\u60f3\u5230\u7684\u5c31\u662f\u901a\u8fc7\u628a\u8bb0\u5f55\u9006\u5e8f\u6570\u7684\u6570\u91cf\u878d\u5408\u5728\u5f52\u5e76\u6392\u5e8f\u4e2d\uff0c\u5728\u6bcf\u4e00\u6b21\u8fdb\u884c\u4e24\u6bb5\u6709\u5e8f\u6570\u7ec4\u5408\u5e76\u7684\u65f6\u5019\uff0c\u5bf9\u53f3\u8fb9\u6570\u7ec4\u4e2d\u6bd4\u5f53\u524dindex[s1]\u5c0f\u7684\u6570\u5b57\u7684\u6570\u76ee\u8fdb\u884c\u8bb0\u5f55\u53d8\u91cf\u4e3anum\uff0c\u800c\u53c8\u56e0\u4e3a\u5de6\u8fb9\u6570\u7ec4\u6709\u5e8f\u6bd4nums[indexs[s1]]\u5c0f\u7684\u6570\u5b57\u5fc5\u5b9a\u6bd4nums[indexs[s1+i]]\u5c0f\uff0c\u6240\u4ee5num\u5728\u6bcf\u6b21\u5408\u5e76\u4e2d\u53ea\u9700\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e4b\u540e\u7d2f\u8ba1\u4e0b\u53bb\u5373\u53ef\uff0c\u800c\u5f53nums[indexs[s1]]push\u8fdbtmp\u65f6\uff0c\u8bb0\u5f55\u5f53\u524d\u7684num\u3002 \u901a\u8fc7\u8fd9\u6837\u7684\u7b97\u6cd5\uff0c\u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u628a\u8bb0\u5f55\u9006\u5e8f\u6570\u6570\u91cf\u878d\u5408\u5230\u5f52\u5e76\u6392\u5e8f\u4e4b\u4e2d\u3002\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u5219\u4e3aT(n) = 2T(n/2) + O(n)\uff0c\u603b\u590d\u6742\u5ea6\u5c31\u662fO(nlogn) \u9898\u76ee\u4ee3\u7801 class Solution { public : void mergeAnalyse ( vector < int >& indexs , int l , int r , vector < int >& results , vector < int >& nums ) { int count = r - l ; if ( count > 1 ) { int step = count / 2 ; int mid = l + step ; mergeAnalyse ( indexs , l , mid , results , nums ); mergeAnalyse ( indexs , mid , r , results , nums ); vector < int > tmp ; tmp . reserve ( count ); int s1 = l ; int s2 = mid ; int num = 0 ; while (( s1 < mid ) || ( s2 < r )) { if ( ( s2 == r ) || (( s1 < mid ) && ( nums [ indexs [ s1 ]] <= nums [ indexs [ s2 ]]))) { tmp . push_back ( indexs [ s1 ]); results [ indexs [ s1 ]] += num ; // \u5f53\u524d\u8303\u56f4\u53f3\u8fb9\u5df2\u7ecf\u6ca1\u6709\u6bd4nums[indexs[s1]]\u7684\u6570\u5b57\uff0c\u8bb0\u5f55\u7ed3\u679c ++ s1 ; } else { tmp . push_back ( indexs [ s2 ]); ++ num ; // \u5f53\u524d\u8303\u56f4\u53f3\u8fb9SmallerNumber\u7684\u6570\u76ee ++ s2 ; } } // \u5f52\u5e76\u6392\u5e8f\u4e2d\u8bb0\u5f55result move ( tmp . begin (), tmp . end (), indexs . begin () + l ); } } vector < int > countSmaller ( vector < int >& nums ) { int n = nums . size (); vector < int > results ( n , 0 ); vector < int > indexs ( n , 0 ); for ( int i = 0 ; i < n ; i ++ ) indexs [ i ] = i ; mergeAnalyse ( indexs , 0 , n , results , nums ); return results ; } }; \u603b\u7ed3 \u8fd9\u9898\u548c\u4e0a\u5468\u7684\u9898\u76ee\u5341\u5206\u76f8\u50cf\uff0c\u90fd\u662f\u628a\u5206\u6790\u4efb\u52a1\u878d\u5408\u5230\u6211\u4eec\u7684\u5f52\u5e76\u6392\u5e8f\u7684\u8fc7\u7a0b\u5f53\u4e2d\u53bb\uff0c\u4f7f\u5f97\u65f6\u95f4\u590d\u6742\u5ea6\u7ef4\u6301\u5728O(NlogN)\u3002\u901a\u8fc7\u8fd9\u4e24\u5468\u7684\u4e24\u4e2a\u9898\u76ee\uff0c\u6211\u4f53\u4f1a\u5230\u4e86\u5f52\u5e76\u6392\u5e8f\u7684\u9b45\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u53d8\u578b\u6210\u4e3a\u5404\u79cd\u5404\u6837\u9ad8\u6548\u7684\u7b97\u6cd5\uff0c\u5b9e\u73b0\u6211\u4eec\u7684\u9700\u6c42\u3002","title":"Leetcode 315\u9898\u89e3-Week2"},{"location":"Leetcode Note/Leetcode 315.Count of Smaller Numbers After Self \u9898\u89e3/#leetcode-315count-of-smaller-numbers-after-self","text":"","title":"Leetcode 315.Count of Smaller Numbers After Self \u9898\u89e3"},{"location":"Leetcode Note/Leetcode 315.Count of Smaller Numbers After Self \u9898\u89e3/#_1","text":"Leetcode 315. Count of Smaller Numbers After Self","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 315.Count of Smaller Numbers After Self \u9898\u89e3/#_2","text":"You are given an integer array nums and you have to return a new counts array. The counts array has the property where counts[i] is the number of smaller elements to the right of nums[i]. Input : [5,2,6,1] Output : [2,1,1,0] Explanation : To the right of 5 there are 2 smaller elements (2 and 1). To the right of 2 there is only 1 smaller element (1). To the right of 6 there is 1 smaller element (1). To the right of 1 there is 0 smaller element.","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 315.Count of Smaller Numbers After Self \u9898\u89e3/#_3","text":"\u8fd9\u5468\u6211\u53c8\u9009\u62e9\u4e86\u4e00\u9898\u4f7f\u7528\u5f52\u5e76\u7b97\u6cd5\u7684\u9898\u76ee\uff0c\u9898\u76ee\u7684\u8981\u6c42\u662f\u8981\u6211\u4eec\u8ba1\u7b97\u6bcf\u4e2a\u6570\u5b57\u53f3\u8fb9\u7684\u6bd4\u4ed6\u5c0f\u7684\u6570\u5b57\u7684\u6570\u91cf\u3002 \u8fd9\u91cc\u6211\u60f3\u5230\u7684\u5c31\u662f\u901a\u8fc7\u628a\u8bb0\u5f55\u9006\u5e8f\u6570\u7684\u6570\u91cf\u878d\u5408\u5728\u5f52\u5e76\u6392\u5e8f\u4e2d\uff0c\u5728\u6bcf\u4e00\u6b21\u8fdb\u884c\u4e24\u6bb5\u6709\u5e8f\u6570\u7ec4\u5408\u5e76\u7684\u65f6\u5019\uff0c\u5bf9\u53f3\u8fb9\u6570\u7ec4\u4e2d\u6bd4\u5f53\u524dindex[s1]\u5c0f\u7684\u6570\u5b57\u7684\u6570\u76ee\u8fdb\u884c\u8bb0\u5f55\u53d8\u91cf\u4e3anum\uff0c\u800c\u53c8\u56e0\u4e3a\u5de6\u8fb9\u6570\u7ec4\u6709\u5e8f\u6bd4nums[indexs[s1]]\u5c0f\u7684\u6570\u5b57\u5fc5\u5b9a\u6bd4nums[indexs[s1+i]]\u5c0f\uff0c\u6240\u4ee5num\u5728\u6bcf\u6b21\u5408\u5e76\u4e2d\u53ea\u9700\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e4b\u540e\u7d2f\u8ba1\u4e0b\u53bb\u5373\u53ef\uff0c\u800c\u5f53nums[indexs[s1]]push\u8fdbtmp\u65f6\uff0c\u8bb0\u5f55\u5f53\u524d\u7684num\u3002 \u901a\u8fc7\u8fd9\u6837\u7684\u7b97\u6cd5\uff0c\u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u628a\u8bb0\u5f55\u9006\u5e8f\u6570\u6570\u91cf\u878d\u5408\u5230\u5f52\u5e76\u6392\u5e8f\u4e4b\u4e2d\u3002\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u5219\u4e3aT(n) = 2T(n/2) + O(n)\uff0c\u603b\u590d\u6742\u5ea6\u5c31\u662fO(nlogn)","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 315.Count of Smaller Numbers After Self \u9898\u89e3/#_4","text":"class Solution { public : void mergeAnalyse ( vector < int >& indexs , int l , int r , vector < int >& results , vector < int >& nums ) { int count = r - l ; if ( count > 1 ) { int step = count / 2 ; int mid = l + step ; mergeAnalyse ( indexs , l , mid , results , nums ); mergeAnalyse ( indexs , mid , r , results , nums ); vector < int > tmp ; tmp . reserve ( count ); int s1 = l ; int s2 = mid ; int num = 0 ; while (( s1 < mid ) || ( s2 < r )) { if ( ( s2 == r ) || (( s1 < mid ) && ( nums [ indexs [ s1 ]] <= nums [ indexs [ s2 ]]))) { tmp . push_back ( indexs [ s1 ]); results [ indexs [ s1 ]] += num ; // \u5f53\u524d\u8303\u56f4\u53f3\u8fb9\u5df2\u7ecf\u6ca1\u6709\u6bd4nums[indexs[s1]]\u7684\u6570\u5b57\uff0c\u8bb0\u5f55\u7ed3\u679c ++ s1 ; } else { tmp . push_back ( indexs [ s2 ]); ++ num ; // \u5f53\u524d\u8303\u56f4\u53f3\u8fb9SmallerNumber\u7684\u6570\u76ee ++ s2 ; } } // \u5f52\u5e76\u6392\u5e8f\u4e2d\u8bb0\u5f55result move ( tmp . begin (), tmp . end (), indexs . begin () + l ); } } vector < int > countSmaller ( vector < int >& nums ) { int n = nums . size (); vector < int > results ( n , 0 ); vector < int > indexs ( n , 0 ); for ( int i = 0 ; i < n ; i ++ ) indexs [ i ] = i ; mergeAnalyse ( indexs , 0 , n , results , nums ); return results ; } };","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcode 315.Count of Smaller Numbers After Self \u9898\u89e3/#_5","text":"\u8fd9\u9898\u548c\u4e0a\u5468\u7684\u9898\u76ee\u5341\u5206\u76f8\u50cf\uff0c\u90fd\u662f\u628a\u5206\u6790\u4efb\u52a1\u878d\u5408\u5230\u6211\u4eec\u7684\u5f52\u5e76\u6392\u5e8f\u7684\u8fc7\u7a0b\u5f53\u4e2d\u53bb\uff0c\u4f7f\u5f97\u65f6\u95f4\u590d\u6742\u5ea6\u7ef4\u6301\u5728O(NlogN)\u3002\u901a\u8fc7\u8fd9\u4e24\u5468\u7684\u4e24\u4e2a\u9898\u76ee\uff0c\u6211\u4f53\u4f1a\u5230\u4e86\u5f52\u5e76\u6392\u5e8f\u7684\u9b45\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u53d8\u578b\u6210\u4e3a\u5404\u79cd\u5404\u6837\u9ad8\u6548\u7684\u7b97\u6cd5\uff0c\u5b9e\u73b0\u6211\u4eec\u7684\u9700\u6c42\u3002","title":"\u603b\u7ed3"},{"location":"Leetcode Note/Leetcode 321. Create Maximum Number/","text":"Leetcode 321. Create Maximum Number \u9898\u76ee\u94fe\u63a5 Leetcode 321. Create Maximum Number \u9898\u76ee\u5185\u5bb9 Given two arrays of length m and n with digits 0-9 representing two numbers. Create the maximum number of length k <= m + n from digits of the two. The relative order of the digits from the same array must be preserved. Return an array of the k digits. Note: You should try to optimize your time and space complexity. Example1 Input: nums1 = [3, 4, 6, 5] nums2 = [9, 1, 2, 5, 8, 3] k = 5 Output: [9, 8, 6, 5, 3] Example2 Input: nums1 = [6, 7] nums2 = [6, 0, 4] k = 5 Output: [6, 7, 6, 0, 4] Example3 Input: nums1 = [3, 9] nums2 = [8, 9] k = 3 Output: [9, 8, 9] \u89e3\u9898\u601d\u8def \u672c\u5468\u7ee7\u7eed\u6211\u4eec\u7684DP\u4e4b\u65c5\uff0c\u672c\u5468\u7684\u9898\u540c\u4e3ahard\u4f46\u662f\u6bd4\u4e4b\u4e4b\u524d\u7684\u8981\u590d\u6742\u4e00\u4e9b\uff0c\u8001\u6837\u5b50\u6211\u4eec\u5148\u627e\u51fa\u6211\u4eec\u7684dp\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c dp[k] = MAX(merge(maxVector1[i], maxVector2[k-i])) \u6709\u4e86\u4e0a\u9762\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u6211\u4eec\u9700\u8981\u5b8c\u6210maxVector, merge\u4ee5\u53ca\u4e00\u4e2a\u6bd4\u8f83\u51fd\u6570\u4e86\uff0cmaxVector\u7528\u5230\u4e86\u7c7b\u4f3c\u4e8e\u8d2a\u5fc3\u7b97\u6cd5\u7684\u601d\u8def \u5f53vector\u7684size\u5927\u4e8e\u6211\u4eec\u6240\u9700\u8981\u7684size\u65f6\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u5b57\u5c0f\u4e8e\u5b83\u540e\u9762\u7684\u4e00\u4e2a\u6570\uff0c\u540e\u4e00\u4e2a\u6570\u5f80\u524d\u66ff\u4ee3\u4ed6\u5fc5\u7136\u4f1a\u4f7f\u6570\u5b57\u66f4\u5927\uff0c\u6240\u4ee5\u76f4\u63a5erase\u5b83 merge\u5219\u7c7b\u4f3c\u4e8e\u5f52\u5e76\u6392\u5e8f\uff0c\u8fd9\u91cc\u4e0d\u591a\u8bf4\u660e \u6bd4\u8f83\u65b9\u9762\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u6309\u4f4d\u6bd4\u8f83\u4e24\u4e2a\u6570\u5b57\uff0c\u5e76\u901a\u8fc7\u5224\u65ad\u6570\u5b57\u7684\u957f\u5ea6\u51b3\u5b9a\u5927\u5c0f\u5173\u7cfb \u7528\u8fd9\u79cd\u65b9\u6cd5\u5f97\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u63d0\u4ea4detail\u4e3a \u4e0d\u592a\u6ee1\u610f\uff0c\u540e\u6765\u7ecf\u8fc7\u601d\u8003\u53d1\u73b0maxVector\u5176\u5b9e\u5f88\u591a\u64cd\u4f5c\u662f\u91cd\u590d\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e00\u6b21\u6027\u7b97\u5b8c\u5355\u4e2avector\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u4f4d\u6570\u7684max\u503c\uff0c\u6240\u4ee5\u5c31\u6709\u4e86\u7b2c\u4e8c\u79cd\u4f18\u5316\u3002 \u63d0\u4ea4\u7684detail\u4e3a \u9898\u76ee\u4ee3\u7801 \u4e00\u5f00\u59cb class Solution { public : vector < int > maxVector ( vector < int > nums , int k ) { while ( nums . size () > k ) { int i = 0 , n = nums . size (); for (; i < n - 1 ; ++ i ) { if ( nums [ i ] < nums [ i + 1 ]) { nums . erase ( nums . begin () + i ); break ; } } if ( i == n - 1 ) nums . erase ( nums . begin () + i ); } return nums ; } bool compare ( vector < int > & nums1 , int i , vector < int > & nums2 , int j ) { while ( i < nums1 . size () && j < nums2 . size () && nums1 [ i ] == nums2 [ j ]) { ++ i ; ++ j ; } if ( j == nums2 . size ()) return true ; if ( i < nums1 . size () && nums1 [ i ] > nums2 [ j ]) return true ; return false ; } vector < int > merge ( vector < int > & nums1 , vector < int > & nums2 , int k ) { vector < int > res ( k , 0 ); for ( int i = 0 , j = 0 , r = 0 ; r < k ; ++ r ) { res [ r ] = compare ( nums1 , i , nums2 , j ) ? nums1 [ i ++ ] : nums2 [ j ++ ]; } return res ; } vector < int > maxNumber ( vector < int >& nums1 , vector < int >& nums2 , int k ) { int m = nums1 . size (), n = nums2 . size (); vector < int > res ( k , 0 ); for ( int i = max ( 0 , k - n ); i <= min ( k , m ); ++ i ) { auto v1 = maxVector ( nums1 , i ); auto v2 = maxVector ( nums2 , k - i ); auto tmp = merge ( v1 , v2 , k ); if ( compare ( tmp , 0 , res , 0 )) res = tmp ; } return res ; } }; \u4f18\u5316 class Solution { public : vector < int > maxNumber ( vector < int >& nums1 , vector < int >& nums2 , int k ) { vector < int > result ; vector < vector < int >> max1 ( k + 1 ), max2 ( k + 1 ); getMax ( nums1 , max1 , k ); getMax ( nums2 , max2 , k ); for ( int i = 0 ; i <= k ; ++ i ){ if ( max1 [ i ]. size () + max2 [ k - i ]. size () < k ){ continue ; } mergeMax ( result , max1 [ i ], max2 [ k - i ], k ); } return result ; } void getMax ( vector < int >& nums , vector < vector < int >>& max , const int k ){ int start = 0 , i = 0 ; while ( nums . size () > 0 ){ if ( nums . size () <= k ){ max [ nums . size ()] = nums ; } for ( i = start ; i + 1 < nums . size () && nums [ i ] >= nums [ i + 1 ]; ++ i ); nums . erase ( nums . begin () + i ); start = (( i == 0 ) ? 0 : i - 1 ); } } void mergeMax ( vector < int >& result , const vector < int >& max1 , const vector < int >& max2 , const int k ){ vector < int > temp ( k , 0 ); int i = 0 , j = 0 ; for ( ; i < max1 . size () && j < max2 . size (); ){ int ii = i ; int jj = j ; while ( ii < max1 . size () && jj < max2 . size ()){ if ( max1 [ ii ] == max2 [ jj ]){ ++ ii ; ++ jj ; } else break ; } if (( ii < max1 . size () && max1 [ ii ] > max2 [ jj ]) || jj >= max2 . size ()){ temp [ i + j ] = max1 [ i ]; ++ i ; } else { temp [ i + j ] = max2 [ j ]; ++ j ; } } for ( ; i < max1 . size (); ++ i ){ temp [ i + j ] = max1 [ i ]; } for ( ; j < max2 . size (); ++ j ){ temp [ i + j ] = max2 [ j ]; } if ( result . empty () || smaller ( result , temp )){ result = temp ; } } bool smaller ( const vector < int >& result , const vector < int >& temp ){ for ( int i = 0 ; i < result . size (); ++ i ){ if ( result [ i ] < temp [ i ]) return true ; if ( result [ i ] > temp [ i ]) return false ; } return false ; } };","title":"Leetcode 321. Create Maximum Number \u9898\u89e3-Week12"},{"location":"Leetcode Note/Leetcode 321. Create Maximum Number/#leetcode-321-create-maximum-number","text":"","title":"Leetcode 321. Create Maximum Number"},{"location":"Leetcode Note/Leetcode 321. Create Maximum Number/#_1","text":"Leetcode 321. Create Maximum Number","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 321. Create Maximum Number/#_2","text":"Given two arrays of length m and n with digits 0-9 representing two numbers. Create the maximum number of length k <= m + n from digits of the two. The relative order of the digits from the same array must be preserved. Return an array of the k digits. Note: You should try to optimize your time and space complexity.","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 321. Create Maximum Number/#example1","text":"Input: nums1 = [3, 4, 6, 5] nums2 = [9, 1, 2, 5, 8, 3] k = 5 Output: [9, 8, 6, 5, 3]","title":"Example1"},{"location":"Leetcode Note/Leetcode 321. Create Maximum Number/#example2","text":"Input: nums1 = [6, 7] nums2 = [6, 0, 4] k = 5 Output: [6, 7, 6, 0, 4]","title":"Example2"},{"location":"Leetcode Note/Leetcode 321. Create Maximum Number/#example3","text":"Input: nums1 = [3, 9] nums2 = [8, 9] k = 3 Output: [9, 8, 9]","title":"Example3"},{"location":"Leetcode Note/Leetcode 321. Create Maximum Number/#_3","text":"\u672c\u5468\u7ee7\u7eed\u6211\u4eec\u7684DP\u4e4b\u65c5\uff0c\u672c\u5468\u7684\u9898\u540c\u4e3ahard\u4f46\u662f\u6bd4\u4e4b\u4e4b\u524d\u7684\u8981\u590d\u6742\u4e00\u4e9b\uff0c\u8001\u6837\u5b50\u6211\u4eec\u5148\u627e\u51fa\u6211\u4eec\u7684dp\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c dp[k] = MAX(merge(maxVector1[i], maxVector2[k-i])) \u6709\u4e86\u4e0a\u9762\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u6211\u4eec\u9700\u8981\u5b8c\u6210maxVector, merge\u4ee5\u53ca\u4e00\u4e2a\u6bd4\u8f83\u51fd\u6570\u4e86\uff0cmaxVector\u7528\u5230\u4e86\u7c7b\u4f3c\u4e8e\u8d2a\u5fc3\u7b97\u6cd5\u7684\u601d\u8def \u5f53vector\u7684size\u5927\u4e8e\u6211\u4eec\u6240\u9700\u8981\u7684size\u65f6\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u5b57\u5c0f\u4e8e\u5b83\u540e\u9762\u7684\u4e00\u4e2a\u6570\uff0c\u540e\u4e00\u4e2a\u6570\u5f80\u524d\u66ff\u4ee3\u4ed6\u5fc5\u7136\u4f1a\u4f7f\u6570\u5b57\u66f4\u5927\uff0c\u6240\u4ee5\u76f4\u63a5erase\u5b83 merge\u5219\u7c7b\u4f3c\u4e8e\u5f52\u5e76\u6392\u5e8f\uff0c\u8fd9\u91cc\u4e0d\u591a\u8bf4\u660e \u6bd4\u8f83\u65b9\u9762\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u6309\u4f4d\u6bd4\u8f83\u4e24\u4e2a\u6570\u5b57\uff0c\u5e76\u901a\u8fc7\u5224\u65ad\u6570\u5b57\u7684\u957f\u5ea6\u51b3\u5b9a\u5927\u5c0f\u5173\u7cfb \u7528\u8fd9\u79cd\u65b9\u6cd5\u5f97\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u63d0\u4ea4detail\u4e3a \u4e0d\u592a\u6ee1\u610f\uff0c\u540e\u6765\u7ecf\u8fc7\u601d\u8003\u53d1\u73b0maxVector\u5176\u5b9e\u5f88\u591a\u64cd\u4f5c\u662f\u91cd\u590d\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e00\u6b21\u6027\u7b97\u5b8c\u5355\u4e2avector\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u4f4d\u6570\u7684max\u503c\uff0c\u6240\u4ee5\u5c31\u6709\u4e86\u7b2c\u4e8c\u79cd\u4f18\u5316\u3002 \u63d0\u4ea4\u7684detail\u4e3a","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 321. Create Maximum Number/#_4","text":"\u4e00\u5f00\u59cb class Solution { public : vector < int > maxVector ( vector < int > nums , int k ) { while ( nums . size () > k ) { int i = 0 , n = nums . size (); for (; i < n - 1 ; ++ i ) { if ( nums [ i ] < nums [ i + 1 ]) { nums . erase ( nums . begin () + i ); break ; } } if ( i == n - 1 ) nums . erase ( nums . begin () + i ); } return nums ; } bool compare ( vector < int > & nums1 , int i , vector < int > & nums2 , int j ) { while ( i < nums1 . size () && j < nums2 . size () && nums1 [ i ] == nums2 [ j ]) { ++ i ; ++ j ; } if ( j == nums2 . size ()) return true ; if ( i < nums1 . size () && nums1 [ i ] > nums2 [ j ]) return true ; return false ; } vector < int > merge ( vector < int > & nums1 , vector < int > & nums2 , int k ) { vector < int > res ( k , 0 ); for ( int i = 0 , j = 0 , r = 0 ; r < k ; ++ r ) { res [ r ] = compare ( nums1 , i , nums2 , j ) ? nums1 [ i ++ ] : nums2 [ j ++ ]; } return res ; } vector < int > maxNumber ( vector < int >& nums1 , vector < int >& nums2 , int k ) { int m = nums1 . size (), n = nums2 . size (); vector < int > res ( k , 0 ); for ( int i = max ( 0 , k - n ); i <= min ( k , m ); ++ i ) { auto v1 = maxVector ( nums1 , i ); auto v2 = maxVector ( nums2 , k - i ); auto tmp = merge ( v1 , v2 , k ); if ( compare ( tmp , 0 , res , 0 )) res = tmp ; } return res ; } }; \u4f18\u5316 class Solution { public : vector < int > maxNumber ( vector < int >& nums1 , vector < int >& nums2 , int k ) { vector < int > result ; vector < vector < int >> max1 ( k + 1 ), max2 ( k + 1 ); getMax ( nums1 , max1 , k ); getMax ( nums2 , max2 , k ); for ( int i = 0 ; i <= k ; ++ i ){ if ( max1 [ i ]. size () + max2 [ k - i ]. size () < k ){ continue ; } mergeMax ( result , max1 [ i ], max2 [ k - i ], k ); } return result ; } void getMax ( vector < int >& nums , vector < vector < int >>& max , const int k ){ int start = 0 , i = 0 ; while ( nums . size () > 0 ){ if ( nums . size () <= k ){ max [ nums . size ()] = nums ; } for ( i = start ; i + 1 < nums . size () && nums [ i ] >= nums [ i + 1 ]; ++ i ); nums . erase ( nums . begin () + i ); start = (( i == 0 ) ? 0 : i - 1 ); } } void mergeMax ( vector < int >& result , const vector < int >& max1 , const vector < int >& max2 , const int k ){ vector < int > temp ( k , 0 ); int i = 0 , j = 0 ; for ( ; i < max1 . size () && j < max2 . size (); ){ int ii = i ; int jj = j ; while ( ii < max1 . size () && jj < max2 . size ()){ if ( max1 [ ii ] == max2 [ jj ]){ ++ ii ; ++ jj ; } else break ; } if (( ii < max1 . size () && max1 [ ii ] > max2 [ jj ]) || jj >= max2 . size ()){ temp [ i + j ] = max1 [ i ]; ++ i ; } else { temp [ i + j ] = max2 [ j ]; ++ j ; } } for ( ; i < max1 . size (); ++ i ){ temp [ i + j ] = max1 [ i ]; } for ( ; j < max2 . size (); ++ j ){ temp [ i + j ] = max2 [ j ]; } if ( result . empty () || smaller ( result , temp )){ result = temp ; } } bool smaller ( const vector < int >& result , const vector < int >& temp ){ for ( int i = 0 ; i < result . size (); ++ i ){ if ( result [ i ] < temp [ i ]) return true ; if ( result [ i ] > temp [ i ]) return false ; } return false ; } };","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcode 327.Count of Range Sum \u9898\u89e3/","text":"Leetcode 327.Count of Range Sum \u9898\u89e3 \u9898\u76ee\u94fe\u63a5 Leetcode 327. Count of Range Sum \u9898\u76ee\u5185\u5bb9 Given an integer array nums, return the number of range sums that lie in [lower, upper] inclusive. Range sum S(i, j) is defined as the sum of the elements in nums between indices i and j (i \u2264 j), inclusive. Note: A naive algorithm of O(n^2) is trivial. You MUST do better than that. Example: Input: nums = [-2,5,-1], lower = -2, upper = 2, Output: 3 Explanation: The three ranges are : [0,0], [2,2], [0,2] and their respective sums are: -2, -1, 2. \u89e3\u9898\u601d\u8def \u9996\u5148\uff0c\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u7684\u6c42\u548c\uff0c\u6211\u60f3\u5230\u7684\u662f\u5148\u628a\u6211\u4eec\u7684\u8f93\u5165\u7684\u6570\u7ec4\u8f6c\u5316\u6210\u4e00\u4e2a\u4ee3\u8868\u524di\u4e2a\u6570\u4e4b\u548c\u7684\u6570\u7ec4Sum,\u518d\u5bf9\u8be5\u6570\u7ec4\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u4e3a\u6211\u4eec\u6c42\u7b2cj\u4f4d\u5230\u7b2ci\u4f4d\u7684\u548c\u53ea\u9700\u8981\u6c42Sum(j,i) = Sum(j) - Sum(i)\u5373\u53ef\u6c42\u5230[i, j) \u8303\u56f4\u7684\u6570\u5b57\u4e4b\u548c\uff0c\u5373\u7b2ci\u4e2a\u6570\u5b57\u5230\u7b2cj-1\u4e2a\u6570\u5b57\u4e4b\u548c\u3002 \u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\uff0c\u6211\u7684Sum\u6570\u7ec4\u4e2d\uff0cSum[0]\u8bbe\u4e3a0\uff0cSum[i]\u51c6\u786e\u8868\u793a\u5230\u7b2c\u51e0\u4e2a\u6570\u5b57\u4e4b\u548c = Sum[i] - Sum[0] \u6709\u4e86\u4ee5\u4e0a\u7684\u8f6c\u53d8\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u6c42\u6cd5\u5c31\u7b80\u5355\u4e86 \u7531\u4e8e\u6211\u662f\u4e3a\u4e86\u7ec3\u4e60\u5f52\u5e76\u7b97\u6cd5\u4e3a\u76ee\u7684\u9009\u62e9\u7684\u8fd9\u4e2a\u9898\u76ee\uff0c\u6240\u4ee5\u6211\u5728\u89e3\u51b3\u65f6\u7528\u5230\u4e86\u7c7b\u4f3c\u5f52\u5e76\u7684\u601d\u8def\u3002 \u901a\u8fc7\u4e0d\u65ad\u628a\u95ee\u9898\u62c6\u5206\u6210\u524d\u4e00\u534a\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570+\u540e\u4e00\u534a\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570+\u5f53\u524d\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570\uff0c\u5e76\u5728\u62c6\u5206\u5230\u53ea\u5269\u4e0b\u4e00\u4e2a\u6570\u5b57\u7684\u65f6\u5019return,\u901a\u8fc7\u8fd9\u6837\u7684\u5f52\u5e76\u7b97\u6cd5\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\u3002 \u56e0\u4e3a\u5728\u5408\u5e76\u65f6\uff0c\u524d\u4e00\u534a\u548c\u540e\u4e00\u822c\u7684\u6570\u91cf\u5df2\u8ba1\u7b97\u51fa\u4e14\u6570\u7ec4\u6709\u5e8f\uff0c\u56e0\u6b64\uff0c\u5f53\u524d\u8303\u56f4\u4e2d\u8ba1\u7b97\u4e2a\u6570\u548c\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u90fd\u5747\u662fO(N)\uff0c\u6240\u4ee5\u6574\u4f53\u7684\u590d\u6742\u5ea6\u4e3aO(N*logN) \u9898\u76ee\u4ee3\u7801 class Solution { public : int mergeAnlyse ( vector < long >& sum , int lower , int upper , int l , int r ) { if ( r - l <= 1 ) return 0 ; int mid = ( r + l ) / 2 , m = mid , n = mid , ans = 0 ; ans = mergeAnlyse ( sum , lower , upper , l , mid ) + mergeAnlyse ( sum , lower , upper , mid , r ); //\u95ee\u9898\u62c6\u5206 for ( int i = l ; i < mid ; i ++ ) { while ( m < r && sum [ m ] - sum [ i ] < lower ) m ++ ; while ( n < r && sum [ n ] - sum [ i ] <= upper ) n ++ ; ans += n - m ; } //\u901a\u8fc7\u904d\u5386\u5bfb\u627e\u5f53\u524d\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570 inplace_merge ( sum . begin () + l , sum . begin () + mid , sum . begin () + r ); //\u4f7f\u7528STL\u5e93\u4e2d\u7684\u51fd\u6570\u5b9e\u73b0\u5f52\u5e76 return ans ; } int countRangeSum ( vector < int >& nums , int lower , int upper ) { int len = nums . size (); vector < long > tmp ( len + 1 , 0 ); for ( int i = 0 ; i < len ; i ++ ) tmp [ i + 1 ] = tmp [ i ] + nums [ i ]; return mergeAnlyse ( tmp , lower , upper , 0 , len + 1 ); } }; \u603b\u7ed3 \u4e2a\u4eba\u89c9\u5f97\u8fd9\u4e2a\u9898\u76ee\u7684\u5173\u952e\u70b9\u5176\u5b9e\u5c31\u5728\u4e8e\u628a\u539f\u5148\u6570\u7ec4\u8f6c\u53d8\u6210\u4e00\u4e2a\u548c\u7684\u6570\u7ec4\u65b9\u4fbf\u8ba1\u7b97\u7b2ci\u4e2a\u6570\u5b57\u5230\u7b2cj-1\u4e2a\u6570\u5b57\u4e4b\u548c\u8fd9\u4e2a\u505a\u9898\u6280\u5de7\uff0c\u800c\u5f52\u5e76\u7b97\u6cd5\u65b9\u9762\u7684\u96be\u5ea6\u5e76\u4e0d\u5927\uff0c\u53ea\u8981\u61c2\u5f97\u5728\u6211\u4eec\u7684\u5f52\u5e76\u7b97\u6cd5\u4e2d\u7ed3\u5408\u5f52\u5e76\u6392\u5e8f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6bcf\u4e00\u6b21\u5bfb\u627e\u7b26\u5408\u8303\u56f4\u4e2a\u6570\u7684\u65f6\u5019\u90fd\u53ef\u4ee5\u901a\u8fc7O(N)\u7684\u590d\u6742\u5ea6\u5c31\u5f97\u5230\u7ed3\u679c\uff0c\u4ece\u800c\u4f7f\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u964d\u4f4e\u5230O(N*LogN)","title":"Leetcode 327\u9898\u89e3-Week1"},{"location":"Leetcode Note/Leetcode 327.Count of Range Sum \u9898\u89e3/#leetcode-327count-of-range-sum","text":"","title":"Leetcode 327.Count of Range Sum \u9898\u89e3"},{"location":"Leetcode Note/Leetcode 327.Count of Range Sum \u9898\u89e3/#_1","text":"Leetcode 327. Count of Range Sum","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 327.Count of Range Sum \u9898\u89e3/#_2","text":"Given an integer array nums, return the number of range sums that lie in [lower, upper] inclusive. Range sum S(i, j) is defined as the sum of the elements in nums between indices i and j (i \u2264 j), inclusive. Note: A naive algorithm of O(n^2) is trivial. You MUST do better than that. Example: Input: nums = [-2,5,-1], lower = -2, upper = 2, Output: 3 Explanation: The three ranges are : [0,0], [2,2], [0,2] and their respective sums are: -2, -1, 2.","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 327.Count of Range Sum \u9898\u89e3/#_3","text":"\u9996\u5148\uff0c\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u7684\u6c42\u548c\uff0c\u6211\u60f3\u5230\u7684\u662f\u5148\u628a\u6211\u4eec\u7684\u8f93\u5165\u7684\u6570\u7ec4\u8f6c\u5316\u6210\u4e00\u4e2a\u4ee3\u8868\u524di\u4e2a\u6570\u4e4b\u548c\u7684\u6570\u7ec4Sum,\u518d\u5bf9\u8be5\u6570\u7ec4\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u4e3a\u6211\u4eec\u6c42\u7b2cj\u4f4d\u5230\u7b2ci\u4f4d\u7684\u548c\u53ea\u9700\u8981\u6c42Sum(j,i) = Sum(j) - Sum(i)\u5373\u53ef\u6c42\u5230[i, j) \u8303\u56f4\u7684\u6570\u5b57\u4e4b\u548c\uff0c\u5373\u7b2ci\u4e2a\u6570\u5b57\u5230\u7b2cj-1\u4e2a\u6570\u5b57\u4e4b\u548c\u3002 \u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\uff0c\u6211\u7684Sum\u6570\u7ec4\u4e2d\uff0cSum[0]\u8bbe\u4e3a0\uff0cSum[i]\u51c6\u786e\u8868\u793a\u5230\u7b2c\u51e0\u4e2a\u6570\u5b57\u4e4b\u548c = Sum[i] - Sum[0] \u6709\u4e86\u4ee5\u4e0a\u7684\u8f6c\u53d8\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u6c42\u6cd5\u5c31\u7b80\u5355\u4e86 \u7531\u4e8e\u6211\u662f\u4e3a\u4e86\u7ec3\u4e60\u5f52\u5e76\u7b97\u6cd5\u4e3a\u76ee\u7684\u9009\u62e9\u7684\u8fd9\u4e2a\u9898\u76ee\uff0c\u6240\u4ee5\u6211\u5728\u89e3\u51b3\u65f6\u7528\u5230\u4e86\u7c7b\u4f3c\u5f52\u5e76\u7684\u601d\u8def\u3002 \u901a\u8fc7\u4e0d\u65ad\u628a\u95ee\u9898\u62c6\u5206\u6210\u524d\u4e00\u534a\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570+\u540e\u4e00\u534a\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570+\u5f53\u524d\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570\uff0c\u5e76\u5728\u62c6\u5206\u5230\u53ea\u5269\u4e0b\u4e00\u4e2a\u6570\u5b57\u7684\u65f6\u5019return,\u901a\u8fc7\u8fd9\u6837\u7684\u5f52\u5e76\u7b97\u6cd5\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\u3002 \u56e0\u4e3a\u5728\u5408\u5e76\u65f6\uff0c\u524d\u4e00\u534a\u548c\u540e\u4e00\u822c\u7684\u6570\u91cf\u5df2\u8ba1\u7b97\u51fa\u4e14\u6570\u7ec4\u6709\u5e8f\uff0c\u56e0\u6b64\uff0c\u5f53\u524d\u8303\u56f4\u4e2d\u8ba1\u7b97\u4e2a\u6570\u548c\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u90fd\u5747\u662fO(N)\uff0c\u6240\u4ee5\u6574\u4f53\u7684\u590d\u6742\u5ea6\u4e3aO(N*logN)","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 327.Count of Range Sum \u9898\u89e3/#_4","text":"class Solution { public : int mergeAnlyse ( vector < long >& sum , int lower , int upper , int l , int r ) { if ( r - l <= 1 ) return 0 ; int mid = ( r + l ) / 2 , m = mid , n = mid , ans = 0 ; ans = mergeAnlyse ( sum , lower , upper , l , mid ) + mergeAnlyse ( sum , lower , upper , mid , r ); //\u95ee\u9898\u62c6\u5206 for ( int i = l ; i < mid ; i ++ ) { while ( m < r && sum [ m ] - sum [ i ] < lower ) m ++ ; while ( n < r && sum [ n ] - sum [ i ] <= upper ) n ++ ; ans += n - m ; } //\u901a\u8fc7\u904d\u5386\u5bfb\u627e\u5f53\u524d\u8303\u56f4\u4e2d\u7b26\u5408\u8981\u6c42\u7684\u4e2a\u6570 inplace_merge ( sum . begin () + l , sum . begin () + mid , sum . begin () + r ); //\u4f7f\u7528STL\u5e93\u4e2d\u7684\u51fd\u6570\u5b9e\u73b0\u5f52\u5e76 return ans ; } int countRangeSum ( vector < int >& nums , int lower , int upper ) { int len = nums . size (); vector < long > tmp ( len + 1 , 0 ); for ( int i = 0 ; i < len ; i ++ ) tmp [ i + 1 ] = tmp [ i ] + nums [ i ]; return mergeAnlyse ( tmp , lower , upper , 0 , len + 1 ); } };","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcode 327.Count of Range Sum \u9898\u89e3/#_5","text":"\u4e2a\u4eba\u89c9\u5f97\u8fd9\u4e2a\u9898\u76ee\u7684\u5173\u952e\u70b9\u5176\u5b9e\u5c31\u5728\u4e8e\u628a\u539f\u5148\u6570\u7ec4\u8f6c\u53d8\u6210\u4e00\u4e2a\u548c\u7684\u6570\u7ec4\u65b9\u4fbf\u8ba1\u7b97\u7b2ci\u4e2a\u6570\u5b57\u5230\u7b2cj-1\u4e2a\u6570\u5b57\u4e4b\u548c\u8fd9\u4e2a\u505a\u9898\u6280\u5de7\uff0c\u800c\u5f52\u5e76\u7b97\u6cd5\u65b9\u9762\u7684\u96be\u5ea6\u5e76\u4e0d\u5927\uff0c\u53ea\u8981\u61c2\u5f97\u5728\u6211\u4eec\u7684\u5f52\u5e76\u7b97\u6cd5\u4e2d\u7ed3\u5408\u5f52\u5e76\u6392\u5e8f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6bcf\u4e00\u6b21\u5bfb\u627e\u7b26\u5408\u8303\u56f4\u4e2a\u6570\u7684\u65f6\u5019\u90fd\u53ef\u4ee5\u901a\u8fc7O(N)\u7684\u590d\u6742\u5ea6\u5c31\u5f97\u5230\u7ed3\u679c\uff0c\u4ece\u800c\u4f7f\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u964d\u4f4e\u5230O(N*LogN)","title":"\u603b\u7ed3"},{"location":"Leetcode Note/Leetcode 41. First Missing Positive \u9898\u89e3/","text":"Leetcode 41. First Missing Positive \u9898\u89e3 \u9898\u76ee\u94fe\u63a5 Leetcode 41. First Missing Positive \u9898\u76ee\u5185\u5bb9 Given an unsorted integer array, find the smallest missing positive integer. Example1: Input : [1,2,0] Output : 3 Example2: Input : [3,4,-1,1] Output : 2 Example2: Input : [7,8,9,11,12] Output : 1 Note : Your algorithm should run in O(n) time and uses constant extra space. \u89e3\u9898\u601d\u8def \u8fd9\u9898\u76ee\u5176\u5b9e\u60f3\u660e\u767d\u4e86\u8fd8\u662f\u5341\u5206\u7b80\u5355\u7684\uff0c\u9898\u76ee\u7684\u610f\u601d\u5c31\u662f\u8981\u6211\u4eec\u627e\u5230\u6ca1\u6709\u5728\u8f93\u5165\u7684Vector\u4e2d\u51fa\u73b0\u7684\u6700\u5c0f\u7684\u6b63\u6570\uff0c\u8fd9\u9898\u8981\u6c42\u6211\u4eec\u5728O(n)\u7684\u65f6\u95f4\u5185\u4f7f\u7528\u5e38\u6570\u7684\u989d\u5916\u7a7a\u95f4\u6765\u89e3\u51b3\u3002\u9996\u5148\u60f3\u5230\u7684\u5c31\u662f\u6392\u5e8f\uff0c\u4f46\u662f\u663e\u7136\u6392\u5e8f \u662f\u4e0d\u53ef\u80fd\u5728O(n)\u65f6\u95f4\u5185\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\uff0c\u4f46\u662f\u6211\u4ece\u6392\u5e8f\u7b97\u6cd5\u4e2d\u6700\u5feb\u7684\u6876\u6392\u5e8fBucket Sort\u4e2d\u627e\u5230\u4e86\u7075\u611f\uff0c\u6876\u6392\u5e8f\u7684\u7f3a\u70b9\u5c31\u662f\u7a7a\u95f4\u6d88\u8017\u8fc7\u5927\uff0c\u4f46\u662f\u82e5\u5176\u5e94\u7528\u5728\u6211\u4eec\u7684\u8fd9\u4e2a\u9898\u76ee\u4e2d\uff0c\u6211\u4eec\u65e0\u9700\u591a\u4f59\u7684\u7a7a\u95f4\u53bb\u5b58\u653e\u8d85\u51fa\u6211\u4eecindex\u7684\u6570\u5b57\uff0c\u8d85\u51faindex\u7684\u6570\u5b57\u6211\u4eec\u76f4\u63a5\u653e\u5728\u539f\u5904\u3002\u5177\u4f53\u7684\u505a\u6cd5\u5c31\u662f\uff0c\u5148\u626b\u63cf\u4e00\u904d\u6211\u4eec\u7684\u8f93\u5165Vector\uff0c\u5982\u679c\u67d0\u4e2a\u5143\u7d20\u57281~size\u4e4b\u95f4\uff0c\u5219\u628a\u5b83\u653e\u5165Vector\u4e2d\u5bf9\u5e94\u7684i-1\u4f4d\u7f6e\uff0c\u5373\u4ea4\u6362\u4e24\u5143\u7d20\u7684\u4f4d\u7f6e\u3002\u6700\u540e\u518d\u626b\u63cfVector\u4e00\u904d\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u6ee1\u8db3Vector[i] != i+1\u7684\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u627e\u5230\u7b2c\u4e00\u4e2a\u7f3a\u5931\u7684\u6b63\u6570\u4e86\uff0c\u82e5\u662f\u626b\u63cfVector\u53d1\u73b0\u5168\u90e8\u7b26\u5408\uff0c\u5219\u610f\u5473\u77401~size\u4e4b\u95f4\u7684\u6570\u5168\u88ab\u5305\u542b\u5728Vector\u4e2d\uff0c\u6700\u5c0f\u7684\u7f3a\u5931\u6b63\u6570\u4e3asize+1\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),Detail\u5982\u4e0b \u9898\u76ee\u4ee3\u7801 class Solution { public : int firstMissingPositive ( vector < int >& nums ) { int n = nums . size (); int i = 0 ; while ( i < n ) if ( nums [ i ] > 0 && nums [ i ] <= nums . size () && nums [ nums [ i ] - 1 ] != nums [ i ]) //nums[nums[i] - 1] != nums[i]\u9632\u6b62\u4e0d\u65ad\u4ea4\u6362 swap ( nums [ i ], nums [ nums [ i ] - 1 ]); else i ++ ; for ( int i = 0 ; i < n ; ++ i ) if ( nums [ i ] != i + 1 ) return i + 1 ; return n + 1 ; } };","title":"Leetcode 41. First Missing Positive-Week5"},{"location":"Leetcode Note/Leetcode 41. First Missing Positive \u9898\u89e3/#leetcode-41-first-missing-positive","text":"","title":"Leetcode 41. First Missing Positive \u9898\u89e3"},{"location":"Leetcode Note/Leetcode 41. First Missing Positive \u9898\u89e3/#_1","text":"Leetcode 41. First Missing Positive","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 41. First Missing Positive \u9898\u89e3/#_2","text":"Given an unsorted integer array, find the smallest missing positive integer. Example1: Input : [1,2,0] Output : 3 Example2: Input : [3,4,-1,1] Output : 2 Example2: Input : [7,8,9,11,12] Output : 1 Note : Your algorithm should run in O(n) time and uses constant extra space.","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 41. First Missing Positive \u9898\u89e3/#_3","text":"\u8fd9\u9898\u76ee\u5176\u5b9e\u60f3\u660e\u767d\u4e86\u8fd8\u662f\u5341\u5206\u7b80\u5355\u7684\uff0c\u9898\u76ee\u7684\u610f\u601d\u5c31\u662f\u8981\u6211\u4eec\u627e\u5230\u6ca1\u6709\u5728\u8f93\u5165\u7684Vector\u4e2d\u51fa\u73b0\u7684\u6700\u5c0f\u7684\u6b63\u6570\uff0c\u8fd9\u9898\u8981\u6c42\u6211\u4eec\u5728O(n)\u7684\u65f6\u95f4\u5185\u4f7f\u7528\u5e38\u6570\u7684\u989d\u5916\u7a7a\u95f4\u6765\u89e3\u51b3\u3002\u9996\u5148\u60f3\u5230\u7684\u5c31\u662f\u6392\u5e8f\uff0c\u4f46\u662f\u663e\u7136\u6392\u5e8f \u662f\u4e0d\u53ef\u80fd\u5728O(n)\u65f6\u95f4\u5185\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\uff0c\u4f46\u662f\u6211\u4ece\u6392\u5e8f\u7b97\u6cd5\u4e2d\u6700\u5feb\u7684\u6876\u6392\u5e8fBucket Sort\u4e2d\u627e\u5230\u4e86\u7075\u611f\uff0c\u6876\u6392\u5e8f\u7684\u7f3a\u70b9\u5c31\u662f\u7a7a\u95f4\u6d88\u8017\u8fc7\u5927\uff0c\u4f46\u662f\u82e5\u5176\u5e94\u7528\u5728\u6211\u4eec\u7684\u8fd9\u4e2a\u9898\u76ee\u4e2d\uff0c\u6211\u4eec\u65e0\u9700\u591a\u4f59\u7684\u7a7a\u95f4\u53bb\u5b58\u653e\u8d85\u51fa\u6211\u4eecindex\u7684\u6570\u5b57\uff0c\u8d85\u51faindex\u7684\u6570\u5b57\u6211\u4eec\u76f4\u63a5\u653e\u5728\u539f\u5904\u3002\u5177\u4f53\u7684\u505a\u6cd5\u5c31\u662f\uff0c\u5148\u626b\u63cf\u4e00\u904d\u6211\u4eec\u7684\u8f93\u5165Vector\uff0c\u5982\u679c\u67d0\u4e2a\u5143\u7d20\u57281~size\u4e4b\u95f4\uff0c\u5219\u628a\u5b83\u653e\u5165Vector\u4e2d\u5bf9\u5e94\u7684i-1\u4f4d\u7f6e\uff0c\u5373\u4ea4\u6362\u4e24\u5143\u7d20\u7684\u4f4d\u7f6e\u3002\u6700\u540e\u518d\u626b\u63cfVector\u4e00\u904d\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u6ee1\u8db3Vector[i] != i+1\u7684\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u627e\u5230\u7b2c\u4e00\u4e2a\u7f3a\u5931\u7684\u6b63\u6570\u4e86\uff0c\u82e5\u662f\u626b\u63cfVector\u53d1\u73b0\u5168\u90e8\u7b26\u5408\uff0c\u5219\u610f\u5473\u77401~size\u4e4b\u95f4\u7684\u6570\u5168\u88ab\u5305\u542b\u5728Vector\u4e2d\uff0c\u6700\u5c0f\u7684\u7f3a\u5931\u6b63\u6570\u4e3asize+1\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),Detail\u5982\u4e0b","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 41. First Missing Positive \u9898\u89e3/#_4","text":"class Solution { public : int firstMissingPositive ( vector < int >& nums ) { int n = nums . size (); int i = 0 ; while ( i < n ) if ( nums [ i ] > 0 && nums [ i ] <= nums . size () && nums [ nums [ i ] - 1 ] != nums [ i ]) //nums[nums[i] - 1] != nums[i]\u9632\u6b62\u4e0d\u65ad\u4ea4\u6362 swap ( nums [ i ], nums [ nums [ i ] - 1 ]); else i ++ ; for ( int i = 0 ; i < n ; ++ i ) if ( nums [ i ] != i + 1 ) return i + 1 ; return n + 1 ; } };","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcode 44. Wildcard Matching \u9898\u89e3/","text":"Leetcode 44. Wildcard Matching \u9898\u89e3 \u9898\u76ee\u94fe\u63a5 Leetcode 44. Wildcard Matching \u9898\u76ee\u5185\u5bb9 Given an input string (s) and a pattern (p), implement wildcard pattern matching with support for '?' and '*'. '?' Matches any single character. '*' Matches any sequence of characters (including the empty sequence). The matching should cover the entire input string (not partial). Note: s could be empty and contains only lowercase letters a-z. p could be empty and contains only lowercase letters a-z, and characters like ? or *. Example1: Input: s = \"aa\" p = \"a\" Output: false Explanation: \"a\" does not match the entire string \"aa\". Example2: Input : s = \"aa\" p = \"*\" Output : true Explanation : '*' matches any sequence. \u89e3\u9898\u601d\u8def \u8fd9\u9898\u6211\u4e00\u5f00\u59cb\u51b3\u5b9a\u4f7f\u7528\u7684\u662fdp\u7684\u65b9\u6cd5\u8fdb\u884c\u89e3\u51b3\uff0c\u6211\u4eec\u5b9a\u4e49dp[i][j]\u4e3a p(0, i) \u4e0e s(0, j)\u662f\u5426\u5339\u914d\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u6211\u628a\u89c4\u5219\u5b57\u7b26\u4e32\u653e\u5230\u4e86\u524d\u9762 \u6211\u4eec\u5148\u770b\u5173\u4e8e*\u4ee5\u53cas\u957f\u5ea6\u4e3a0\u65f6\u7684\u60c5\u51b5\uff0c\u82e5p\u5b57\u7b26\u524d\u9762\u7684\u5b57\u7b26\u4e3a'*'\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u628a\u5230\u8fd9\u4e2a\u5b57\u7b26\u7684dp[0][i]\u8bbe\u7f6e\u4e3atrue\uff0c\u4e4b\u540e\u5c31\u662ffalse \u6b63\u5e38\u60c5\u51b5 if p[j-1] != '*' dp[i][j] = (s[i-1] == p[j-1] || p[j-1] == '?') && dp[i-1][j-1] if p[j-1] == '*' dp[i][j] = dp[i-1][j-1] || dp[i][j-1] || dp[i-1][j]; \u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u7406\u60f3\uff0c\u6240\u4ee5\u5bfb\u627e\u53e6\u4e00\u79cd\u66f4\u5feb\u7684\u65b9\u6848\u3002 \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u5219\u662f\u76f4\u63a5\u987a\u7740s\u5b57\u7b26\u4e32\u626b\u63cf\u4e0b\u53bb\uff0c while sindex < len(s): if p[pindex]== '?' or p[pindex] == s[sindex]: pindex++; sindex++; continue; else if p[pindex] == '*': # \u8bb0\u5f55\u661f\u661f\u4f4d\u7f6e\u4ee5\u53casindex\u8ba9pindex\u7ee7\u7eed\u5f80\u540e continue; if star != -1: # \u82e5\u661f\u661f\u540e\u6ca1\u6709\u5b57\u7b26\u5339\u914d\u7684\u5219\u8ba9s\u4ece\u8bb0\u5f55\u5904\u7ee7\u7eed\u5f80\u540e\u626b\uff0cpindex\u4e5f\u53d8\u4e3a*\u4f4d\u7f6e+1, \u76f4\u5230\u626b\u63cf\u5230\u4e00\u4e2a\u5339\u914d\u7684\u5b57\u7b26\u6216\u662fsindex > s.size()\u4e3a\u6b62 # \u82e5\u5f53\u524d\u626b\u63cf\u5230\u7684\u4f4d\u7f6e\u6ca1\u51fa\u73b0*\uff0c\u4e14\u5b57\u7b26\u6ca1\u6709\u5339\u914d return false \u82e5\u626b\u63cf\u5b8c\u540e, p\u5b57\u7b26\u4e32\u4ecd\u672a\u626b\u5b8c\uff0c\u770b\u5176\u540e\u6709\u65e0*, \u7ee7\u7eed\u626b\u63cf\uff0c\u7ed3\u679c\u5224\u65adpindex==p.size()\u3002 \u8fd9\u79cd\u65b9\u6cd5\u590d\u6742\u5ea6\u6bd4\u4e0a\u9762\u5c11\u4e86\u7ea6\u4e00\u534a\uff0c\u63d0\u4ea4detail\u4e3a \u9898\u76ee\u4ee3\u7801 \u4e00\u5f00\u59cb class Solution { public : bool isMatch ( string s , string p ) { if ( p . empty ()) return s . empty (); int size1 = s . size (), size2 = p . size (); bool dp [ size1 + 1 ][ size2 + 1 ]; memset ( dp , false , sizeof ( dp )); dp [ 0 ][ 0 ] = true ; for ( int i = 1 ; i <= size2 ; i ++ ) { if ( p [ i - 1 ] != '*' ) break ; dp [ 0 ][ i ] = true ; } for ( int i = 1 ; i <= size1 ; i ++ ) { for ( int j = 1 ; j <= size2 ; j ++ ) { bool f_match = s [ i - 1 ] == p [ j - 1 ] || p [ j - 1 ] == '?' ; if ( p [ j - 1 ] == '*' ) { dp [ i ][ j ] = dp [ i - 1 ][ j - 1 ] || dp [ i ][ j - 1 ] || dp [ i - 1 ][ j ]; } else dp [ i ][ j ] = f_match && dp [ i - 1 ][ j - 1 ]; } } return dp [ size1 ][ size2 ]; } }; \u4f18\u5316 class Solution { public : bool isMatch ( string s , string p ) { int star =- 1 ; int ss ; int pindex = 0 , sindex = 0 ; int size = s . size (); while ( sindex < size ){ if (( p [ pindex ] == '?' ) || ( p [ pindex ] == s [ sindex ])){ sindex ++ ; pindex ++ ; continue ; } else if ( p [ pindex ] == '*' ) { star = pindex ++ ; ss = sindex ; continue ; } if ( star !=- 1 ) { pindex = star + 1 ; sindex =++ ss ; continue ; } return false ; } while ( p [ pindex ] == '*' ) { pindex ++ ; } return pindex == p . size (); } };","title":"Leetcode 44. Wildcard Matching \u9898\u89e3-Week14"},{"location":"Leetcode Note/Leetcode 44. Wildcard Matching \u9898\u89e3/#leetcode-44-wildcard-matching","text":"","title":"Leetcode 44. Wildcard Matching \u9898\u89e3"},{"location":"Leetcode Note/Leetcode 44. Wildcard Matching \u9898\u89e3/#_1","text":"Leetcode 44. Wildcard Matching","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 44. Wildcard Matching \u9898\u89e3/#_2","text":"Given an input string (s) and a pattern (p), implement wildcard pattern matching with support for '?' and '*'. '?' Matches any single character. '*' Matches any sequence of characters (including the empty sequence). The matching should cover the entire input string (not partial). Note: s could be empty and contains only lowercase letters a-z. p could be empty and contains only lowercase letters a-z, and characters like ? or *. Example1: Input: s = \"aa\" p = \"a\" Output: false Explanation: \"a\" does not match the entire string \"aa\". Example2: Input : s = \"aa\" p = \"*\" Output : true Explanation : '*' matches any sequence.","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 44. Wildcard Matching \u9898\u89e3/#_3","text":"\u8fd9\u9898\u6211\u4e00\u5f00\u59cb\u51b3\u5b9a\u4f7f\u7528\u7684\u662fdp\u7684\u65b9\u6cd5\u8fdb\u884c\u89e3\u51b3\uff0c\u6211\u4eec\u5b9a\u4e49dp[i][j]\u4e3a p(0, i) \u4e0e s(0, j)\u662f\u5426\u5339\u914d\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u6211\u628a\u89c4\u5219\u5b57\u7b26\u4e32\u653e\u5230\u4e86\u524d\u9762 \u6211\u4eec\u5148\u770b\u5173\u4e8e*\u4ee5\u53cas\u957f\u5ea6\u4e3a0\u65f6\u7684\u60c5\u51b5\uff0c\u82e5p\u5b57\u7b26\u524d\u9762\u7684\u5b57\u7b26\u4e3a'*'\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u628a\u5230\u8fd9\u4e2a\u5b57\u7b26\u7684dp[0][i]\u8bbe\u7f6e\u4e3atrue\uff0c\u4e4b\u540e\u5c31\u662ffalse \u6b63\u5e38\u60c5\u51b5 if p[j-1] != '*' dp[i][j] = (s[i-1] == p[j-1] || p[j-1] == '?') && dp[i-1][j-1] if p[j-1] == '*' dp[i][j] = dp[i-1][j-1] || dp[i][j-1] || dp[i-1][j]; \u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u7406\u60f3\uff0c\u6240\u4ee5\u5bfb\u627e\u53e6\u4e00\u79cd\u66f4\u5feb\u7684\u65b9\u6848\u3002 \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u5219\u662f\u76f4\u63a5\u987a\u7740s\u5b57\u7b26\u4e32\u626b\u63cf\u4e0b\u53bb\uff0c while sindex < len(s): if p[pindex]== '?' or p[pindex] == s[sindex]: pindex++; sindex++; continue; else if p[pindex] == '*': # \u8bb0\u5f55\u661f\u661f\u4f4d\u7f6e\u4ee5\u53casindex\u8ba9pindex\u7ee7\u7eed\u5f80\u540e continue; if star != -1: # \u82e5\u661f\u661f\u540e\u6ca1\u6709\u5b57\u7b26\u5339\u914d\u7684\u5219\u8ba9s\u4ece\u8bb0\u5f55\u5904\u7ee7\u7eed\u5f80\u540e\u626b\uff0cpindex\u4e5f\u53d8\u4e3a*\u4f4d\u7f6e+1, \u76f4\u5230\u626b\u63cf\u5230\u4e00\u4e2a\u5339\u914d\u7684\u5b57\u7b26\u6216\u662fsindex > s.size()\u4e3a\u6b62 # \u82e5\u5f53\u524d\u626b\u63cf\u5230\u7684\u4f4d\u7f6e\u6ca1\u51fa\u73b0*\uff0c\u4e14\u5b57\u7b26\u6ca1\u6709\u5339\u914d return false \u82e5\u626b\u63cf\u5b8c\u540e, p\u5b57\u7b26\u4e32\u4ecd\u672a\u626b\u5b8c\uff0c\u770b\u5176\u540e\u6709\u65e0*, \u7ee7\u7eed\u626b\u63cf\uff0c\u7ed3\u679c\u5224\u65adpindex==p.size()\u3002 \u8fd9\u79cd\u65b9\u6cd5\u590d\u6742\u5ea6\u6bd4\u4e0a\u9762\u5c11\u4e86\u7ea6\u4e00\u534a\uff0c\u63d0\u4ea4detail\u4e3a","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 44. Wildcard Matching \u9898\u89e3/#_4","text":"\u4e00\u5f00\u59cb class Solution { public : bool isMatch ( string s , string p ) { if ( p . empty ()) return s . empty (); int size1 = s . size (), size2 = p . size (); bool dp [ size1 + 1 ][ size2 + 1 ]; memset ( dp , false , sizeof ( dp )); dp [ 0 ][ 0 ] = true ; for ( int i = 1 ; i <= size2 ; i ++ ) { if ( p [ i - 1 ] != '*' ) break ; dp [ 0 ][ i ] = true ; } for ( int i = 1 ; i <= size1 ; i ++ ) { for ( int j = 1 ; j <= size2 ; j ++ ) { bool f_match = s [ i - 1 ] == p [ j - 1 ] || p [ j - 1 ] == '?' ; if ( p [ j - 1 ] == '*' ) { dp [ i ][ j ] = dp [ i - 1 ][ j - 1 ] || dp [ i ][ j - 1 ] || dp [ i - 1 ][ j ]; } else dp [ i ][ j ] = f_match && dp [ i - 1 ][ j - 1 ]; } } return dp [ size1 ][ size2 ]; } }; \u4f18\u5316 class Solution { public : bool isMatch ( string s , string p ) { int star =- 1 ; int ss ; int pindex = 0 , sindex = 0 ; int size = s . size (); while ( sindex < size ){ if (( p [ pindex ] == '?' ) || ( p [ pindex ] == s [ sindex ])){ sindex ++ ; pindex ++ ; continue ; } else if ( p [ pindex ] == '*' ) { star = pindex ++ ; ss = sindex ; continue ; } if ( star !=- 1 ) { pindex = star + 1 ; sindex =++ ss ; continue ; } return false ; } while ( p [ pindex ] == '*' ) { pindex ++ ; } return pindex == p . size (); } };","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcode 45. Jump Game II \u9898\u89e3/","text":"Leetcode 45. Jump Game II \u9898\u89e3 \u9898\u76ee\u94fe\u63a5 Leetcode 45. Jump Game II \u9898\u76ee\u5185\u5bb9 Given an array of non-negative integers, you are initially positioned at the first index of the array. Each element in the array represents your maximum jump length at that position. Your goal is to reach the last index in the minimum number of jumps. Example: Input : [2,3,1,1,4] Output : 2 Explanation : The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index. \u89e3\u9898\u601d\u8def \u8fd9\u9898\u662f\u6211\u8fd9\u5468\u4eceleetcode\u4e0a\u968f\u4fbf\u627e\u7684\u4e00\u9898hard\u96be\u5ea6\u7684\u9898\u76ee\u3002\u770b\u5230\u9898\u76ee\u6211\u4e00\u5f00\u59cb\u60f3\u5230\u7684\u5c31\u662f\u901a\u8fc7BFS\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u901a\u8fc7\u6211\u4eec\u719f\u6089\u7684BFS\u5b8c\u6210\u6df1\u641c\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\uff0c\u63d0\u4ea4\u4e4b\u540e\u53d1\u73b0\u4f7f\u7528BFS\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u4ec5\u4ec5\u6bd437.07%\u7684\u4f7f\u7528CPP\u7684AC\u63d0\u4ea4\u8981\u5feb\uff0c\u6240\u4ee5\u6211\u540e\u6765\u60f3\u5230\u4e86\u53e6\u4e00\u79cd\u4e0d\u592a\u4e25\u683c\u7684\u8d2a\u5fc3\u7b97\u6cd5\u3002 \u7b2c\u4e8c\u4e2a\u7b97\u6cd5\u4e3b\u8981\u7684\u601d\u60f3\u5c31\u662f\uff0c\u53ea\u7528\u4e00\u6b21\u904d\u5386(O(n))\uff0c\u901a\u8fc7\u5728\u904d\u5386\u4e2d\u4e0d\u65ad\u7ef4\u62a4ans(\u5f53\u524d\u6b65\u6570)\uff0clast(\u524d\u4e00\u6b65\u8df3\u8dc3\u8fbe\u5230\u7684\u6700\u8fdc\u8303\u56f4)\uff0ccur(\u5f53\u524d\u8df3\u4e00\u6b65\u53ef\u4ee5\u8fbe\u5230\u7684\u6700\u8fdc\u8303\u56f4)\u8fd9\u4e09\u4e2a\u53d8\u91cf\uff0c\u4f7f\u5f97\u53ef\u4ee5\u5224\u65ad\u6bcf\u4e00\u6b65\u53ef\u4ee5\u8fbe\u5230\u7684\u8303\u56f4\u548c\u4e0b\u4e00\u6b65\u53ef\u8fbe\u5230\u7684\u6700\u5927\u8303\u56f4\uff0c\u4e00\u65e6\u904d\u5386\u5230\u7684i\u5927\u4e8e\u4e0a\u4e00\u6b65\u7684\u6700\u5927\u8303\u56f4\uff0c\u4f46\u662f\u662f\u8fd9\u4e00\u6b65\u53ef\u4ee5\u8fbe\u5230\u7684\u8303\u56f4\uff0c\u5219\u8df3\u8dc3\uff0c\u66f4\u65b0ans, last = cur, \u5e76\u7ee7\u7eed\u7ef4\u62a4cur\u4e3a\u5f53\u524d\u8df3\u4e00\u6b65\u53ef\u4ee5\u8fbe\u5230\u7684\u6700\u5927\u8303\u56f4\uff0c\u76f4\u5230\u904d\u5386\u5230\u6700\u540e\u4e00\u4e2aindex\u3002\u5f53\u6211\u4eec\u904d\u5386\u5230\u6700\u540e\u4e00\u4e2aindex\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053index\u5728\u7b2c\u51e0\u6b65\u7684\u8303\u56f4\u5185\uff0c\u5373\u6211\u4eec\u6700\u5c11\u9700\u8981\u51e0\u6b65\u8fbe\u5230last index.\u7b2c\u4e8c\u79cd\u89e3\u6cd5\u7684Detail\u5982\u4e0b \u9898\u76ee\u4ee3\u7801 BFS\u65b9\u6cd5 class Solution { public : int jump ( vector < int >& nums ) { int size = nums . size (); if ( size == 1 ) return 0 ; vector < int > result ( nums . size () - 1 , - 1 ); queue < int > tmpData ; result [ 0 ] = 0 ; tmpData . push ( 0 ); while ( ! result . empty ()) { int tmp = tmpData . front (); tmpData . pop (); for ( int i = nums [ tmp ]; i > 0 ; i -- ) { if ( tmp + i >= size ) continue ; if ( tmp + i == size - 1 ) return result [ tmp ] + 1 ; if ( result [ tmp + i ] < 0 ) { result [ tmp + i ] = result [ tmp ] + 1 ; tmpData . push ( tmp + i ); } } } return - 1 ; } }; \u4e0d\u4e25\u683c\u7684\u8d2a\u5fc3\u7b97\u6cd5 class Solution { public : int jump ( vector < int >& nums ) { int ans = 0 ; int size = nums . size (); int last = 0 ; //\u4e0a\u4e00\u8df3\u4e3a\u6b62\u53ef\u8fbe\u6700\u8fdc\u8ddd\u79bb int cur = 0 ; //\u5f53\u524d\u53ef\u8fbe\u6700\u8fdc\u8ddd\u79bb for ( int i = 0 ; i < size ; ++ i ) { if ( i > cur ){ return - 1 ; } // \u5f53\u524d\u6700\u8fdc\u8ddd\u79bb\u65e0\u6cd5\u8df3\u5230i\u76f4\u63a5\u8fd4\u56de-1 if ( i > last ) { last = cur ; ++ ans ; } // i > last\u8868\u793a\u4e0a\u4e00\u6b65jump\u5230\u8fbe\u7684\u8303\u56f4\u5df2\u7ecf\u65e0\u6cd5\u5305\u542bi,\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u8df3\u8dc3\u4ee5\u66f4\u65b0last\u548cans,\u5373\u66f4\u65b0\u5f53\u6b65\u53ef\u4ee5\u8df3\u5230\u7684\u8303\u56f4\u4ee5\u5305\u542bi cur = max ( cur , i + nums [ i ]); //\u8bb0\u5f55\u5f53\u524d\u53ef\u8fbe\u7684\u6700\u8fdc\u70b9 } return ans ; } };","title":"Leetcode 45\u9898\u89e3-Week3"},{"location":"Leetcode Note/Leetcode 45. Jump Game II \u9898\u89e3/#leetcode-45-jump-game-ii","text":"","title":"Leetcode 45. Jump Game II \u9898\u89e3"},{"location":"Leetcode Note/Leetcode 45. Jump Game II \u9898\u89e3/#_1","text":"Leetcode 45. Jump Game II","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 45. Jump Game II \u9898\u89e3/#_2","text":"Given an array of non-negative integers, you are initially positioned at the first index of the array. Each element in the array represents your maximum jump length at that position. Your goal is to reach the last index in the minimum number of jumps. Example: Input : [2,3,1,1,4] Output : 2 Explanation : The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 45. Jump Game II \u9898\u89e3/#_3","text":"\u8fd9\u9898\u662f\u6211\u8fd9\u5468\u4eceleetcode\u4e0a\u968f\u4fbf\u627e\u7684\u4e00\u9898hard\u96be\u5ea6\u7684\u9898\u76ee\u3002\u770b\u5230\u9898\u76ee\u6211\u4e00\u5f00\u59cb\u60f3\u5230\u7684\u5c31\u662f\u901a\u8fc7BFS\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u901a\u8fc7\u6211\u4eec\u719f\u6089\u7684BFS\u5b8c\u6210\u6df1\u641c\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\uff0c\u63d0\u4ea4\u4e4b\u540e\u53d1\u73b0\u4f7f\u7528BFS\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u4ec5\u4ec5\u6bd437.07%\u7684\u4f7f\u7528CPP\u7684AC\u63d0\u4ea4\u8981\u5feb\uff0c\u6240\u4ee5\u6211\u540e\u6765\u60f3\u5230\u4e86\u53e6\u4e00\u79cd\u4e0d\u592a\u4e25\u683c\u7684\u8d2a\u5fc3\u7b97\u6cd5\u3002 \u7b2c\u4e8c\u4e2a\u7b97\u6cd5\u4e3b\u8981\u7684\u601d\u60f3\u5c31\u662f\uff0c\u53ea\u7528\u4e00\u6b21\u904d\u5386(O(n))\uff0c\u901a\u8fc7\u5728\u904d\u5386\u4e2d\u4e0d\u65ad\u7ef4\u62a4ans(\u5f53\u524d\u6b65\u6570)\uff0clast(\u524d\u4e00\u6b65\u8df3\u8dc3\u8fbe\u5230\u7684\u6700\u8fdc\u8303\u56f4)\uff0ccur(\u5f53\u524d\u8df3\u4e00\u6b65\u53ef\u4ee5\u8fbe\u5230\u7684\u6700\u8fdc\u8303\u56f4)\u8fd9\u4e09\u4e2a\u53d8\u91cf\uff0c\u4f7f\u5f97\u53ef\u4ee5\u5224\u65ad\u6bcf\u4e00\u6b65\u53ef\u4ee5\u8fbe\u5230\u7684\u8303\u56f4\u548c\u4e0b\u4e00\u6b65\u53ef\u8fbe\u5230\u7684\u6700\u5927\u8303\u56f4\uff0c\u4e00\u65e6\u904d\u5386\u5230\u7684i\u5927\u4e8e\u4e0a\u4e00\u6b65\u7684\u6700\u5927\u8303\u56f4\uff0c\u4f46\u662f\u662f\u8fd9\u4e00\u6b65\u53ef\u4ee5\u8fbe\u5230\u7684\u8303\u56f4\uff0c\u5219\u8df3\u8dc3\uff0c\u66f4\u65b0ans, last = cur, \u5e76\u7ee7\u7eed\u7ef4\u62a4cur\u4e3a\u5f53\u524d\u8df3\u4e00\u6b65\u53ef\u4ee5\u8fbe\u5230\u7684\u6700\u5927\u8303\u56f4\uff0c\u76f4\u5230\u904d\u5386\u5230\u6700\u540e\u4e00\u4e2aindex\u3002\u5f53\u6211\u4eec\u904d\u5386\u5230\u6700\u540e\u4e00\u4e2aindex\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053index\u5728\u7b2c\u51e0\u6b65\u7684\u8303\u56f4\u5185\uff0c\u5373\u6211\u4eec\u6700\u5c11\u9700\u8981\u51e0\u6b65\u8fbe\u5230last index.\u7b2c\u4e8c\u79cd\u89e3\u6cd5\u7684Detail\u5982\u4e0b","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 45. Jump Game II \u9898\u89e3/#_4","text":"","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcode 45. Jump Game II \u9898\u89e3/#bfs","text":"class Solution { public : int jump ( vector < int >& nums ) { int size = nums . size (); if ( size == 1 ) return 0 ; vector < int > result ( nums . size () - 1 , - 1 ); queue < int > tmpData ; result [ 0 ] = 0 ; tmpData . push ( 0 ); while ( ! result . empty ()) { int tmp = tmpData . front (); tmpData . pop (); for ( int i = nums [ tmp ]; i > 0 ; i -- ) { if ( tmp + i >= size ) continue ; if ( tmp + i == size - 1 ) return result [ tmp ] + 1 ; if ( result [ tmp + i ] < 0 ) { result [ tmp + i ] = result [ tmp ] + 1 ; tmpData . push ( tmp + i ); } } } return - 1 ; } };","title":"BFS\u65b9\u6cd5"},{"location":"Leetcode Note/Leetcode 45. Jump Game II \u9898\u89e3/#_5","text":"class Solution { public : int jump ( vector < int >& nums ) { int ans = 0 ; int size = nums . size (); int last = 0 ; //\u4e0a\u4e00\u8df3\u4e3a\u6b62\u53ef\u8fbe\u6700\u8fdc\u8ddd\u79bb int cur = 0 ; //\u5f53\u524d\u53ef\u8fbe\u6700\u8fdc\u8ddd\u79bb for ( int i = 0 ; i < size ; ++ i ) { if ( i > cur ){ return - 1 ; } // \u5f53\u524d\u6700\u8fdc\u8ddd\u79bb\u65e0\u6cd5\u8df3\u5230i\u76f4\u63a5\u8fd4\u56de-1 if ( i > last ) { last = cur ; ++ ans ; } // i > last\u8868\u793a\u4e0a\u4e00\u6b65jump\u5230\u8fbe\u7684\u8303\u56f4\u5df2\u7ecf\u65e0\u6cd5\u5305\u542bi,\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u8df3\u8dc3\u4ee5\u66f4\u65b0last\u548cans,\u5373\u66f4\u65b0\u5f53\u6b65\u53ef\u4ee5\u8df3\u5230\u7684\u8303\u56f4\u4ee5\u5305\u542bi cur = max ( cur , i + nums [ i ]); //\u8bb0\u5f55\u5f53\u524d\u53ef\u8fbe\u7684\u6700\u8fdc\u70b9 } return ans ; } };","title":"\u4e0d\u4e25\u683c\u7684\u8d2a\u5fc3\u7b97\u6cd5"},{"location":"Leetcode Note/Leetcode 72. Edit Distance \u9898\u89e3/","text":"Leetcode 72. Edit Distance \u9898\u89e3 \u9898\u76ee\u94fe\u63a5 Leetcode 72. Edit Distance \u9898\u76ee\u5185\u5bb9 Given two words word1 and word2, find the minimum number of operations required to convert word1 to word2. You have the following 3 operations permitted on a word: Insert a character Delete a character Replace a character \u89e3\u9898\u601d\u8def \u672c\u5468\u7ee7\u7eed\u6211\u4eec\u7684DP\u4e4b\u65c5\uff0c\u5bf9\u4e8e\u8fd9\u5468\u8fd9\u79cd\u9898\u76ee\uff0c\u57fa\u672c\u7b2c\u4e00\u65f6\u95f4\u53ef\u4ee5\u60f3\u5230\u7684\u5c31\u662f\u6211\u4eec\u7684\u4e00\u4e2aO(mn)\u7684\u4e00\u4e2a\u7b97\u6cd5\uff0c \u6211\u4eec\u4ee4dp[i][j]\u4e3aword1.substr(0, i)\u548cword2.substr(0, j)\u4e4b\u95f4\u7684\u7f16\u8f91\u8ddd\u79bb\uff0c\u90a3\u4e48\u6211\u4eec\u6709\u4ee5\u4e0b\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b dp[i][j] = 0 if (i == 0 or j == 0) dp[i][j] = dp[i-1][j-1] if (word1[i - 1] == word2[j-1]) dp[i][j] = min(dp[i-1] j , dp[i] j-1 , dp[i-1] j-1 ) + 1 \u8fd9\u79cd\u65b9\u6cd5\u505a\u51fa\u6765\u7684\u7ed3\u679c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662fO(mn)\uff0cdetail\u63d0\u4ea4\u7ed3\u679c\u5982\u4e0b: \u9898\u76ee\u4ee3\u7801 class Solution { public : int minDistance ( string word1 , string word2 ) { int m = word1 . size (); int n = word2 . size (); vector < vector < int >> dp ( m + 1 , vector < int > ( n + 1 , 0 )); for ( int i = 0 ; i <= m ; i ++ ) dp [ i ][ 0 ] = i ; for ( int j = 0 ; j <= n ; j ++ ) dp [ 0 ][ j ] = j ; for ( int i = 1 ; i <= m ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { if ( word1 [ i - 1 ] == word2 [ j - 1 ]){ dp [ i ][ j ] = dp [ i - 1 ][ j - 1 ]; } else { int deleteAction = dp [ i - 1 ][ j ]; int insert = dp [ i ][ j - 1 ]; int replace = dp [ i - 1 ][ j - 1 ]; dp [ i ][ j ] = min ( deleteAction , min ( insert , replace )) + 1 ; } } } return dp [ m ][ n ]; } };","title":"Leetcode 72. Edit Distance \u9898\u89e3-Week11"},{"location":"Leetcode Note/Leetcode 72. Edit Distance \u9898\u89e3/#leetcode-72-edit-distance","text":"","title":"Leetcode 72. Edit Distance \u9898\u89e3"},{"location":"Leetcode Note/Leetcode 72. Edit Distance \u9898\u89e3/#_1","text":"Leetcode 72. Edit Distance","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 72. Edit Distance \u9898\u89e3/#_2","text":"Given two words word1 and word2, find the minimum number of operations required to convert word1 to word2. You have the following 3 operations permitted on a word: Insert a character Delete a character Replace a character","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 72. Edit Distance \u9898\u89e3/#_3","text":"\u672c\u5468\u7ee7\u7eed\u6211\u4eec\u7684DP\u4e4b\u65c5\uff0c\u5bf9\u4e8e\u8fd9\u5468\u8fd9\u79cd\u9898\u76ee\uff0c\u57fa\u672c\u7b2c\u4e00\u65f6\u95f4\u53ef\u4ee5\u60f3\u5230\u7684\u5c31\u662f\u6211\u4eec\u7684\u4e00\u4e2aO(mn)\u7684\u4e00\u4e2a\u7b97\u6cd5\uff0c \u6211\u4eec\u4ee4dp[i][j]\u4e3aword1.substr(0, i)\u548cword2.substr(0, j)\u4e4b\u95f4\u7684\u7f16\u8f91\u8ddd\u79bb\uff0c\u90a3\u4e48\u6211\u4eec\u6709\u4ee5\u4e0b\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b dp[i][j] = 0 if (i == 0 or j == 0) dp[i][j] = dp[i-1][j-1] if (word1[i - 1] == word2[j-1]) dp[i][j] = min(dp[i-1] j , dp[i] j-1 , dp[i-1] j-1 ) + 1 \u8fd9\u79cd\u65b9\u6cd5\u505a\u51fa\u6765\u7684\u7ed3\u679c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662fO(mn)\uff0cdetail\u63d0\u4ea4\u7ed3\u679c\u5982\u4e0b:","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 72. Edit Distance \u9898\u89e3/#_4","text":"class Solution { public : int minDistance ( string word1 , string word2 ) { int m = word1 . size (); int n = word2 . size (); vector < vector < int >> dp ( m + 1 , vector < int > ( n + 1 , 0 )); for ( int i = 0 ; i <= m ; i ++ ) dp [ i ][ 0 ] = i ; for ( int j = 0 ; j <= n ; j ++ ) dp [ 0 ][ j ] = j ; for ( int i = 1 ; i <= m ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { if ( word1 [ i - 1 ] == word2 [ j - 1 ]){ dp [ i ][ j ] = dp [ i - 1 ][ j - 1 ]; } else { int deleteAction = dp [ i - 1 ][ j ]; int insert = dp [ i ][ j - 1 ]; int replace = dp [ i - 1 ][ j - 1 ]; dp [ i ][ j ] = min ( deleteAction , min ( insert , replace )) + 1 ; } } } return dp [ m ][ n ]; } };","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcode 765.Couples Holding Hands \u9898\u89e3/","text":"Leetcode 765.Couples Holding Hands \u9898\u89e3 \u9898\u76ee\u94fe\u63a5 Leetcode 765.Couples Holding Hands \u9898\u76ee\u5185\u5bb9 N couples sit in 2N seats arranged in a row and want to hold hands. We want to know the minimum number of swaps so that every couple is sitting side by side. A swap consists of choosing any two people, then they stand up and switch seats. The people and seats are represented by an integer from 0 to 2N-1, the couples are numbered in order, the first couple being (0, 1), the second couple being (2, 3), and so on with the last couple being (2N-2, 2N-1). The couples' initial seating is given by row[i] being the value of the person who is initially sitting in the i-th seat. Example1: Input : row = [0, 2, 1, 3] Output : 1 Explanation : We only need to swap the second (row[1]) and third (row[2]) person. Example2: Input : row = [3, 2, 0, 1] Output : 0 Explanation : All couples are already seated side by side. Note : 1. len(row) is even and in the range of [4, 60]. 2. row is guaranteed to be a permutation of 0...len(row)-1. \u89e3\u9898\u601d\u8def \u9996\u5148\uff0c\u770b\u5b8c\u9898\u76ee\uff0c\u6211\u5c31\u5728\u60f3\u5982\u4f55\u786e\u8ba4\u4ea4\u6362\u6570\u76ee\u6700\u5c0f\uff0c\u56e0\u4e3a\u7ecf\u8fc7\u81ea\u5df1\u6bd4\u5212\u4e86\u51e0\u4e2a\u6837\u4f8b\uff0c\u601d\u8003\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u7531\u4e8e\u6bcf\u4e2a\u9519\u4f4d\u7684people\u90fd\u9700\u8981\u4e00\u6b21\u4ea4\u6362\uff0c\u6240\u4ee5, n\u5bf9\u9519\u4f4d\u7684Couples\u9700\u8981\u7684\u4ea4\u6362\u6b21\u6570\u81f3\u5c11\u4e3a(int)((n+1)/2), \u5176\u6700\u5c11\u6b21\u6570\u7684\u4ea4\u6362\u4e5f\u5c31\u662f\u4ece\u5de6\u5f80\u53f3\u4ea4\u6362\u4f9d\u6b21\u9519\u4f4d\u7684people\uff0c\u6ca1\u6709\u66f4\u5c11\u6b21\u6570\u7684\u79fb\u52a8\u65b9\u6cd5\u3002\u8fd9\u9053\u9898\u76ee\u8f83\u6c34\uff0c\u53ea\u8981\u7406\u89e3\u4e86\u4e3a\u4ec0\u4e48\u4ece\u5de6\u5f80\u53f3\u904d\u5386\u6b21\u6570\u6700\u5c11\u5c31\u5f88\u5feb\u5c31\u5b8c\u6210\u4e86\u3002 \u6240\u4ee5\u8fd9\u9898\u5c31\u53d8\u6210\u4e86\u5982\u4f55\u5feb\u901f\u627e\u5230\u5bf9\u5e94\u7684pos\u8fdb\u884c\u4ea4\u6362\uff0c\u56e0\u4e3arow\u4e2d\u7684\u503c\u5c31\u662f\u57280-size\u7684\u8303\u56f4\u5185\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u76f4\u63a5\u7528\u4e86\u4e00\u4e2aindecies Vector\u53bb\u5b58\u50a8\u5404\u4e2apeople\u5bf9\u5e94\u7684index\uff0c\u901a\u8fc7\u7ef4\u62a4indecies[x]\u8868\u793ax\u7684index\u6765\u5b9e\u73b0pos\u7684\u5feb\u901f\u67e5\u627e\uff0c\u4f7f\u5f97\u6574\u4f53\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fbe\u5230O(n),\u8fd9\u5e94\u8be5\u662f\u8fd9\u9053\u9898\u6700\u5feb\u7684\u65b9\u6cd5\uff0c\u63d0\u4ea4\u7684Detail\u5982\u4e0b: \u9898\u76ee\u4ee3\u7801 class Solution { public : int minSwapsCouples ( vector < int >& row ) { int size = row . size (); int ans = 0 ; if ( size == 2 ) return 0 ; vector < int > indecies ( size , 0 ); // indecies[x] \u4e3ax\u5bf9\u5e94\u7684index for ( int i = 0 ; i < size ; i ++ ) indecies [ row [ i ]] = i ; for ( int i = 0 ; i < size ; i += 2 ) { int trueVal = ( row [ i ] % 2 == 0 ) ? row [ i ] + 1 : row [ i ] - 1 ; if ( row [ i + 1 ] != trueVal ) { ++ ans ; row [ indecies [ trueVal ]] = row [ i + 1 ]; // \u4ea4\u6362\u6210\u5458 indecies [ row [ i + 1 ]] = indecies [ trueVal ]; // \u66f4\u65b0Pos row [ i + 1 ] = trueVal ; // \u4ea4\u6362\u6210\u5458 indecies [ row [ i + 1 ]] = i + 1 ; // \u66f4\u65b0Pos } } return ans ; } };","title":"Leetcode 765\u9898\u89e3-Week4"},{"location":"Leetcode Note/Leetcode 765.Couples Holding Hands \u9898\u89e3/#leetcode-765couples-holding-hands","text":"","title":"Leetcode 765.Couples Holding Hands \u9898\u89e3"},{"location":"Leetcode Note/Leetcode 765.Couples Holding Hands \u9898\u89e3/#_1","text":"Leetcode 765.Couples Holding Hands","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 765.Couples Holding Hands \u9898\u89e3/#_2","text":"N couples sit in 2N seats arranged in a row and want to hold hands. We want to know the minimum number of swaps so that every couple is sitting side by side. A swap consists of choosing any two people, then they stand up and switch seats. The people and seats are represented by an integer from 0 to 2N-1, the couples are numbered in order, the first couple being (0, 1), the second couple being (2, 3), and so on with the last couple being (2N-2, 2N-1). The couples' initial seating is given by row[i] being the value of the person who is initially sitting in the i-th seat. Example1: Input : row = [0, 2, 1, 3] Output : 1 Explanation : We only need to swap the second (row[1]) and third (row[2]) person. Example2: Input : row = [3, 2, 0, 1] Output : 0 Explanation : All couples are already seated side by side. Note : 1. len(row) is even and in the range of [4, 60]. 2. row is guaranteed to be a permutation of 0...len(row)-1.","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 765.Couples Holding Hands \u9898\u89e3/#_3","text":"\u9996\u5148\uff0c\u770b\u5b8c\u9898\u76ee\uff0c\u6211\u5c31\u5728\u60f3\u5982\u4f55\u786e\u8ba4\u4ea4\u6362\u6570\u76ee\u6700\u5c0f\uff0c\u56e0\u4e3a\u7ecf\u8fc7\u81ea\u5df1\u6bd4\u5212\u4e86\u51e0\u4e2a\u6837\u4f8b\uff0c\u601d\u8003\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u7531\u4e8e\u6bcf\u4e2a\u9519\u4f4d\u7684people\u90fd\u9700\u8981\u4e00\u6b21\u4ea4\u6362\uff0c\u6240\u4ee5, n\u5bf9\u9519\u4f4d\u7684Couples\u9700\u8981\u7684\u4ea4\u6362\u6b21\u6570\u81f3\u5c11\u4e3a(int)((n+1)/2), \u5176\u6700\u5c11\u6b21\u6570\u7684\u4ea4\u6362\u4e5f\u5c31\u662f\u4ece\u5de6\u5f80\u53f3\u4ea4\u6362\u4f9d\u6b21\u9519\u4f4d\u7684people\uff0c\u6ca1\u6709\u66f4\u5c11\u6b21\u6570\u7684\u79fb\u52a8\u65b9\u6cd5\u3002\u8fd9\u9053\u9898\u76ee\u8f83\u6c34\uff0c\u53ea\u8981\u7406\u89e3\u4e86\u4e3a\u4ec0\u4e48\u4ece\u5de6\u5f80\u53f3\u904d\u5386\u6b21\u6570\u6700\u5c11\u5c31\u5f88\u5feb\u5c31\u5b8c\u6210\u4e86\u3002 \u6240\u4ee5\u8fd9\u9898\u5c31\u53d8\u6210\u4e86\u5982\u4f55\u5feb\u901f\u627e\u5230\u5bf9\u5e94\u7684pos\u8fdb\u884c\u4ea4\u6362\uff0c\u56e0\u4e3arow\u4e2d\u7684\u503c\u5c31\u662f\u57280-size\u7684\u8303\u56f4\u5185\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u76f4\u63a5\u7528\u4e86\u4e00\u4e2aindecies Vector\u53bb\u5b58\u50a8\u5404\u4e2apeople\u5bf9\u5e94\u7684index\uff0c\u901a\u8fc7\u7ef4\u62a4indecies[x]\u8868\u793ax\u7684index\u6765\u5b9e\u73b0pos\u7684\u5feb\u901f\u67e5\u627e\uff0c\u4f7f\u5f97\u6574\u4f53\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fbe\u5230O(n),\u8fd9\u5e94\u8be5\u662f\u8fd9\u9053\u9898\u6700\u5feb\u7684\u65b9\u6cd5\uff0c\u63d0\u4ea4\u7684Detail\u5982\u4e0b:","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 765.Couples Holding Hands \u9898\u89e3/#_4","text":"class Solution { public : int minSwapsCouples ( vector < int >& row ) { int size = row . size (); int ans = 0 ; if ( size == 2 ) return 0 ; vector < int > indecies ( size , 0 ); // indecies[x] \u4e3ax\u5bf9\u5e94\u7684index for ( int i = 0 ; i < size ; i ++ ) indecies [ row [ i ]] = i ; for ( int i = 0 ; i < size ; i += 2 ) { int trueVal = ( row [ i ] % 2 == 0 ) ? row [ i ] + 1 : row [ i ] - 1 ; if ( row [ i + 1 ] != trueVal ) { ++ ans ; row [ indecies [ trueVal ]] = row [ i + 1 ]; // \u4ea4\u6362\u6210\u5458 indecies [ row [ i + 1 ]] = indecies [ trueVal ]; // \u66f4\u65b0Pos row [ i + 1 ] = trueVal ; // \u4ea4\u6362\u6210\u5458 indecies [ row [ i + 1 ]] = i + 1 ; // \u66f4\u65b0Pos } } return ans ; } };","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcode 84. Largest Rectangle in Histogram \u9898\u89e3/","text":"Leetcode 84. Largest Rectangle in Histogram \u9898\u89e3 \u9898\u76ee\u94fe\u63a5 Leetcode 84. Largest Rectangle in Histogram \u9898\u76ee\u5185\u5bb9 Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram. Example: Input : [2,1,5,6,2,3] Output : 10 \u89e3\u9898\u601d\u8def \u8fd9\u4e2a\u9898\u76ee\u7684\u6700\u7b80\u5355\u7684\u601d\u8def\u80af\u5b9a\u5c31\u662fdp\u4e86\uff0c\u4f46\u662f\u6beb\u65e0\u7591\u95ee\u4f7f\u7528dp\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u80af\u5b9a\u4f1a\u8d85\u3002\u8fd9\u9898\u6bd4\u8f83\u597d\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528\u6808\u6765\u6784\u9020\u4e00\u4e2a\u5347\u5e8f\u5e8f\u5217\uff0c\u9996\u5148\uff0c\u5982\u679c\u6211\u4eec\u7684height\u6570\u7ec4\u662f\u5347\u5e8f\u7684\u8bdd\uff0c\u4ee51, 2, 3, 4, 5\u4e3a\u4f8b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53d6\u6700\u5927\u9762\u79ef$$max(1 5, 2 4, 3 3, 4 2, 5*1)= 9$$\uff0c\u6211\u4eec\u4f7f\u7528\u6808\u7684\u76ee\u7684\u4e5f\u662f\u4e3a\u4e86\u6784\u5efa\u8fd9\u4e48\u4e00\u4e2a\u5347\u5e8f\u961f\u5217\uff0c\u6211\u4eec\u7684\u6784\u5efa\u65b9\u6cd5\u5c31\u662f: \u9996\u5148height[0]\u8fdb\u6808\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u4e2a\u540e\u9762\u7684height\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u5347\u5e8f\uff0c\u82e5\u6ee1\u8db3\u5219push\u8fdb\u6808\u7ee7\u7eed\uff0c\u82e5\u4e0d\u6ee1\u8db3\uff0c\u5219\u5f39\u51fa\u90e8\u5206\u5143\u7d20\uff0c\u76f4\u5230\u6ee1\u8db3\u5347\u5e8f\u6761\u4ef6\uff0c\u5e76\u5728\u5f39\u51fa\u8fc7\u7a0b\u4e2d\u8ba1\u7b97\u9762\u79ef\u4e0e\u6211\u4eec\u7684\u9762\u79ef\u6bd4\u8f83\uff0c\u7ef4\u62a4\u6211\u4eec\u7684\u6700\u5927\u9762\u79ef\uff0c\u6ee1\u8db3\u540e\u5c06\u5f39\u51fa\u7684\u5143\u7d20\u66ff\u6362\u6210\u5f53\u524d\u7684height\u7ee7\u7eed\u64cd\u4f5c\uff0c\u6784\u5efa\u5b8c\u6210\u540e\uff0c\u6309\u7167\u6211\u4eec\u4ee5\u4e0a\u8bf4\u7684\u5347\u5e8f\u5e8f\u5217\u6c42\u6700\u5927\u9762\u79ef\u7684\u8ba1\u7b97\u65b9\u6cd5\u518d\u8ddf\u4e4b\u524d\u6211\u4eec\u7ef4\u62a4\u7684\u6700\u5927\u9762\u79ef\u6bd4\u8f83\uff0c\u6211\u4eec\u5c31\u80fd\u5f97\u51fa\u6211\u4eec\u7684\u6700\u5927\u9762\u79ef\u4e86\u3002 \u63d0\u4ea4\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5982\u4e0b: \u9898\u76ee\u4ee3\u7801 class Solution { public : int largestRectangleArea ( vector < int > & height ) { int area = 0 ; stack < int > tmp ; for ( int i = 0 ; i < height . size (); i ++ ) { if ( tmp . empty () || tmp . top () <= height [ i ]) tmp . push ( height [ i ]); else { int length = 0 ; while ( ! tmp . empty () && tmp . top () > height [ i ]) { ++ length ; area = max ( area , tmp . top () * length ); tmp . pop (); } while ( length -- ) tmp . push ( height [ i ]); tmp . push ( height [ i ]); } } int length = 1 ; while ( ! tmp . empty ()) { area = max ( area , tmp . top () * length ); tmp . pop (); ++ length ; } return area ; } };","title":"Leetcode 84. Largest Rectangle in Histogram \u9898\u89e3-Week7"},{"location":"Leetcode Note/Leetcode 84. Largest Rectangle in Histogram \u9898\u89e3/#leetcode-84-largest-rectangle-in-histogram","text":"","title":"Leetcode 84. Largest Rectangle in Histogram \u9898\u89e3"},{"location":"Leetcode Note/Leetcode 84. Largest Rectangle in Histogram \u9898\u89e3/#_1","text":"Leetcode 84. Largest Rectangle in Histogram","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 84. Largest Rectangle in Histogram \u9898\u89e3/#_2","text":"Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram. Example: Input : [2,1,5,6,2,3] Output : 10","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 84. Largest Rectangle in Histogram \u9898\u89e3/#_3","text":"\u8fd9\u4e2a\u9898\u76ee\u7684\u6700\u7b80\u5355\u7684\u601d\u8def\u80af\u5b9a\u5c31\u662fdp\u4e86\uff0c\u4f46\u662f\u6beb\u65e0\u7591\u95ee\u4f7f\u7528dp\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u80af\u5b9a\u4f1a\u8d85\u3002\u8fd9\u9898\u6bd4\u8f83\u597d\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528\u6808\u6765\u6784\u9020\u4e00\u4e2a\u5347\u5e8f\u5e8f\u5217\uff0c\u9996\u5148\uff0c\u5982\u679c\u6211\u4eec\u7684height\u6570\u7ec4\u662f\u5347\u5e8f\u7684\u8bdd\uff0c\u4ee51, 2, 3, 4, 5\u4e3a\u4f8b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53d6\u6700\u5927\u9762\u79ef$$max(1 5, 2 4, 3 3, 4 2, 5*1)= 9$$\uff0c\u6211\u4eec\u4f7f\u7528\u6808\u7684\u76ee\u7684\u4e5f\u662f\u4e3a\u4e86\u6784\u5efa\u8fd9\u4e48\u4e00\u4e2a\u5347\u5e8f\u961f\u5217\uff0c\u6211\u4eec\u7684\u6784\u5efa\u65b9\u6cd5\u5c31\u662f: \u9996\u5148height[0]\u8fdb\u6808\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u4e2a\u540e\u9762\u7684height\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u5347\u5e8f\uff0c\u82e5\u6ee1\u8db3\u5219push\u8fdb\u6808\u7ee7\u7eed\uff0c\u82e5\u4e0d\u6ee1\u8db3\uff0c\u5219\u5f39\u51fa\u90e8\u5206\u5143\u7d20\uff0c\u76f4\u5230\u6ee1\u8db3\u5347\u5e8f\u6761\u4ef6\uff0c\u5e76\u5728\u5f39\u51fa\u8fc7\u7a0b\u4e2d\u8ba1\u7b97\u9762\u79ef\u4e0e\u6211\u4eec\u7684\u9762\u79ef\u6bd4\u8f83\uff0c\u7ef4\u62a4\u6211\u4eec\u7684\u6700\u5927\u9762\u79ef\uff0c\u6ee1\u8db3\u540e\u5c06\u5f39\u51fa\u7684\u5143\u7d20\u66ff\u6362\u6210\u5f53\u524d\u7684height\u7ee7\u7eed\u64cd\u4f5c\uff0c\u6784\u5efa\u5b8c\u6210\u540e\uff0c\u6309\u7167\u6211\u4eec\u4ee5\u4e0a\u8bf4\u7684\u5347\u5e8f\u5e8f\u5217\u6c42\u6700\u5927\u9762\u79ef\u7684\u8ba1\u7b97\u65b9\u6cd5\u518d\u8ddf\u4e4b\u524d\u6211\u4eec\u7ef4\u62a4\u7684\u6700\u5927\u9762\u79ef\u6bd4\u8f83\uff0c\u6211\u4eec\u5c31\u80fd\u5f97\u51fa\u6211\u4eec\u7684\u6700\u5927\u9762\u79ef\u4e86\u3002 \u63d0\u4ea4\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5982\u4e0b:","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 84. Largest Rectangle in Histogram \u9898\u89e3/#_4","text":"class Solution { public : int largestRectangleArea ( vector < int > & height ) { int area = 0 ; stack < int > tmp ; for ( int i = 0 ; i < height . size (); i ++ ) { if ( tmp . empty () || tmp . top () <= height [ i ]) tmp . push ( height [ i ]); else { int length = 0 ; while ( ! tmp . empty () && tmp . top () > height [ i ]) { ++ length ; area = max ( area , tmp . top () * length ); tmp . pop (); } while ( length -- ) tmp . push ( height [ i ]); tmp . push ( height [ i ]); } } int length = 1 ; while ( ! tmp . empty ()) { area = max ( area , tmp . top () * length ); tmp . pop (); ++ length ; } return area ; } };","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"Leetcode Note/Leetcode 891. Sum of Subsequence Widths \u9898\u89e3/","text":"Leetcode 891. Sum of Subsequence Widths - Week15 \u9898\u76ee\u94fe\u63a5 Leetcode 891. Sum of Subsequence Widths \u9898\u76ee\u5185\u5bb9 Given an array of integers A, consider all non-empty subsequences of A. For any sequence S, let the width of S be the difference between the maximum and minimum element of S. Return the sum of the widths of all subsequences of A. As the answer may be very large, return the answer modulo 10^9 + 7. Example Input: [2,1,3] Output: 6 Explanation: Subsequences are [1], [2], [3], [2,1], [2,3], [1,3], [2,1,3]. The corresponding widths are 0, 0, 0, 1, 1, 2, 2. The sum of these widths is 6. \u89e3\u9898\u601d\u8def \u9898\u76ee\u610f\u601d\u5c31\u662f\u6c42\u5176\u7ed9\u51fa\u6570\u7ec4\u7684\u6240\u6709\u5b50\u5e8f\u5217\u7684\u5bbd\u5ea6\u548c\uff0c\u800c\u8fd9\u4e2a\u5e8f\u5217\u7684\u5bbd\u5ea6\u548c\u4e3a\u8be5\u5e8f\u5217\u6700\u5927\u503c\u51cf\u53bb\u8be5\u5e8f\u5217\u6700\u5c0f\u503c\u3002 \u8fd9\u91cc\u5f88\u5bb9\u6613\u60f3\u7684\u7684\u65b9\u6cd5\u5c31\u662f\u66b4\u529b\u7a77\u4e3e\uff0c\u4f46\u662f\u663e\u7136\u8fd9\u79cd\u8fd9\u4e48\u5bb9\u6613\u60f3\u5230\u7684\u65b9\u6cd5\u4e0d\u4f1a\u5f97\u5230AC\uff0c\u90a3\u4e48\u6211\u4eec\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u9898\u76ee\uff0c\u65e2\u7136\u5bf9\u4e8e\u6bcf\u4e2a\u5e8f\u5217\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u5e8f\u5217\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5148\u5bf9\u6211\u4eec\u6570\u7ec4\u8fdb\u884c\u4e00\u4e2a\u6392\u5e8f\u64cd\u4f5c\uff0c\u7136\u540e\u6211\u4eec\u7684\u89e3\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u904d\u5386\u8ba1\u7b97\u5f97\u5230\uff0c\u5bf9\u4e8e\u6bcf\u4e2aa[i]\u67092^i\u4e2a\u5b50\u5e8f\u5217\u4ee5\u4ed6\u4e3a\u6700\u5927\u503c\uff0c\u67092^(n-i-1)\u4e2a\u5b57\u5e8f\u5217\u4ee5\u5b83\u4e3a\u6700\u5c0f\u503c\uff0c\u5bf9\u5e94\u6bcf\u4e2ai $$Ans = Ans + a[i] (2^i) - a[i] 2^{n - i - 1}$$ ANS\u7684\u5bf9\u5e94\u516c\u5f0f\u5982\u4e0b $$Ans = \\sum_{i=1}^{n}(2^{n-i-1} - 2^{i}) * ai$$ \u8fdb\u884c\u4f18\u5316\u540e\uff0c\u6211\u4eec\u5b57\u5e8f\u5217\u6570(num)\u65e0\u9700\u6bcf\u6b21\u91cd\u65b0\u8ba1\u7b97\uff0c\u6211\u4eec\u6bcf\u6b21\u52a0\u4e0aA[i] * num \u5e76\u51cf\u53bb A[A.size() - i - 1] * num\uff0c\u8fdb\u884c\u904d\u5386\u5373\u53ef \u7ecf\u8fc7\u6709\u6548\u5206\u6790\uff0c\u9898\u76ee\u5c31\u8f83\u4e3a\u7b80\u5355\u4e86\uff0c\u5728\u4e0a\u9762\u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u518d\u52a0\u4e0a\u4e00\u4e2a\u53d6\u4f59\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5f97\u51fa\u4e86 \u5728\u4e0d\u53bb\u6389C++\u7684\u8f93\u5165\u8f93\u51fa\u7684\u517c\u5bb9\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u63d0\u4ea4detail\u4e3a \u9898\u76ee\u4ee3\u7801 class Solution { public : int sumSubseqWidths ( vector < int >& A ) { sort ( A . begin (), A . end ()); long width = 0 , num = 1 ; long mod = 1e9 + 7 ; for ( int i = 0 ; i < A . size (); i ++ ) { width = (( width + A [ i ] * num ) - ( A [ A . size () - i - 1 ] * num )) % mod ; num = ( num << 1 ) % mod ; } return width % mod ; } };","title":"Leetcode 891. Sum of Subsequence Widths \u9898\u89e3-Week15"},{"location":"Leetcode Note/Leetcode 891. Sum of Subsequence Widths \u9898\u89e3/#leetcode-891-sum-of-subsequence-widths-week15","text":"","title":"Leetcode 891. Sum of Subsequence Widths - Week15"},{"location":"Leetcode Note/Leetcode 891. Sum of Subsequence Widths \u9898\u89e3/#_1","text":"Leetcode 891. Sum of Subsequence Widths","title":"\u9898\u76ee\u94fe\u63a5"},{"location":"Leetcode Note/Leetcode 891. Sum of Subsequence Widths \u9898\u89e3/#_2","text":"Given an array of integers A, consider all non-empty subsequences of A. For any sequence S, let the width of S be the difference between the maximum and minimum element of S. Return the sum of the widths of all subsequences of A. As the answer may be very large, return the answer modulo 10^9 + 7.","title":"\u9898\u76ee\u5185\u5bb9"},{"location":"Leetcode Note/Leetcode 891. Sum of Subsequence Widths \u9898\u89e3/#example","text":"Input: [2,1,3] Output: 6 Explanation: Subsequences are [1], [2], [3], [2,1], [2,3], [1,3], [2,1,3]. The corresponding widths are 0, 0, 0, 1, 1, 2, 2. The sum of these widths is 6.","title":"Example"},{"location":"Leetcode Note/Leetcode 891. Sum of Subsequence Widths \u9898\u89e3/#_3","text":"\u9898\u76ee\u610f\u601d\u5c31\u662f\u6c42\u5176\u7ed9\u51fa\u6570\u7ec4\u7684\u6240\u6709\u5b50\u5e8f\u5217\u7684\u5bbd\u5ea6\u548c\uff0c\u800c\u8fd9\u4e2a\u5e8f\u5217\u7684\u5bbd\u5ea6\u548c\u4e3a\u8be5\u5e8f\u5217\u6700\u5927\u503c\u51cf\u53bb\u8be5\u5e8f\u5217\u6700\u5c0f\u503c\u3002 \u8fd9\u91cc\u5f88\u5bb9\u6613\u60f3\u7684\u7684\u65b9\u6cd5\u5c31\u662f\u66b4\u529b\u7a77\u4e3e\uff0c\u4f46\u662f\u663e\u7136\u8fd9\u79cd\u8fd9\u4e48\u5bb9\u6613\u60f3\u5230\u7684\u65b9\u6cd5\u4e0d\u4f1a\u5f97\u5230AC\uff0c\u90a3\u4e48\u6211\u4eec\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u9898\u76ee\uff0c\u65e2\u7136\u5bf9\u4e8e\u6bcf\u4e2a\u5e8f\u5217\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u5e8f\u5217\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5148\u5bf9\u6211\u4eec\u6570\u7ec4\u8fdb\u884c\u4e00\u4e2a\u6392\u5e8f\u64cd\u4f5c\uff0c\u7136\u540e\u6211\u4eec\u7684\u89e3\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u904d\u5386\u8ba1\u7b97\u5f97\u5230\uff0c\u5bf9\u4e8e\u6bcf\u4e2aa[i]\u67092^i\u4e2a\u5b50\u5e8f\u5217\u4ee5\u4ed6\u4e3a\u6700\u5927\u503c\uff0c\u67092^(n-i-1)\u4e2a\u5b57\u5e8f\u5217\u4ee5\u5b83\u4e3a\u6700\u5c0f\u503c\uff0c\u5bf9\u5e94\u6bcf\u4e2ai $$Ans = Ans + a[i] (2^i) - a[i] 2^{n - i - 1}$$ ANS\u7684\u5bf9\u5e94\u516c\u5f0f\u5982\u4e0b $$Ans = \\sum_{i=1}^{n}(2^{n-i-1} - 2^{i}) * ai$$ \u8fdb\u884c\u4f18\u5316\u540e\uff0c\u6211\u4eec\u5b57\u5e8f\u5217\u6570(num)\u65e0\u9700\u6bcf\u6b21\u91cd\u65b0\u8ba1\u7b97\uff0c\u6211\u4eec\u6bcf\u6b21\u52a0\u4e0aA[i] * num \u5e76\u51cf\u53bb A[A.size() - i - 1] * num\uff0c\u8fdb\u884c\u904d\u5386\u5373\u53ef \u7ecf\u8fc7\u6709\u6548\u5206\u6790\uff0c\u9898\u76ee\u5c31\u8f83\u4e3a\u7b80\u5355\u4e86\uff0c\u5728\u4e0a\u9762\u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u518d\u52a0\u4e0a\u4e00\u4e2a\u53d6\u4f59\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5f97\u51fa\u4e86 \u5728\u4e0d\u53bb\u6389C++\u7684\u8f93\u5165\u8f93\u51fa\u7684\u517c\u5bb9\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u63d0\u4ea4detail\u4e3a","title":"\u89e3\u9898\u601d\u8def"},{"location":"Leetcode Note/Leetcode 891. Sum of Subsequence Widths \u9898\u89e3/#_4","text":"class Solution { public : int sumSubseqWidths ( vector < int >& A ) { sort ( A . begin (), A . end ()); long width = 0 , num = 1 ; long mod = 1e9 + 7 ; for ( int i = 0 ; i < A . size (); i ++ ) { width = (( width + A [ i ] * num ) - ( A [ A . size () - i - 1 ] * num )) % mod ; num = ( num << 1 ) % mod ; } return width % mod ; } };","title":"\u9898\u76ee\u4ee3\u7801"},{"location":"ServiceComputingOnCloud/CentOS Go\u8bed\u8a00\u73af\u5883\u5b89\u88c5/","text":"CentOS Go\u8bed\u8a00\u73af\u5883\u5b89\u88c5 \u5b89\u88c5Golang \u4f7f\u7528yum\u5305\u7ba1\u7406\u5668\u5982\u4f55\u5b89\u88c5golang\u5728\u8001\u5e08\u7684\u535a\u5ba2\u91cc\u5df2\u7ecf\u975e\u5e38\u6e05\u6670\u4e86\uff0c Go\u5f00\u53d1\u73af\u5883\u5b89\u88c5 \u8fd9\u91cc\u6211\u8c08\u8c08\u5982\u4f55\u5728\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5305\u81ea\u5df1\u5b89\u88c5 \u9996\u5148\uff0c\u4e0a\u5b98\u7f51\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u5b89\u88c5\u5305\uff0c\u590d\u5236\u5176\u4e0b\u8f7d\u5730\u5740\uff0c\u7136\u540e\uff0cwget\u628a\u5b83\u4e0b\u8f7d\u4e0b\u6765 wget https://dl.google.com/go/go1.11.linux-amd64.tar.gz \u8fd9\u91cc\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u7684centOS\u76f4\u63a5\u628a\u8fd9\u4e2a\u7f51\u7ad9\u89e3\u6790\u6210ipv6\u5730\u5740,\u4f7f\u7f51\u7edc\u4e0d\u53ef\u8fbe \u4e8e\u662f\u6211\u5728\u7ad9\u957f\u4e4b\u5bb6\u90a3\u91cc\u627e\u5230\u4e00\u4e2a\u5408\u9002\u7684ip\uff0c\u4fee\u6539hosts\u6587\u4ef6\uff0c\u4f7f\u5f97dl.google.com\u6b63\u5e38\u89e3\u6790\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e0b\u8f7d\u3002 \u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u89e3\u538b\u6587\u4ef6 tar zxvf go1.8.linux-amd64.tar.gz -C /usr/local \u65b0\u5efa\u6211\u4eec\u7684go\u9879\u76ee\u6839\u76ee\u5f55 mkdir $HOME/gowork \u914d\u7f6e\u73af\u5883\u53d8\u91cf vim /etc/profile # \u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9 export GOROOT = /usr/local/go export GOBIN = $GOROOT /bin export PATH = $PATH : $GOBIN export GOPATH = $HOME /gowork # \u5b8c\u6210\u540e\u6267\u884c source /etc/profile # \u9a8c\u8bc1\u662f\u5426\u6210\u529f go version go env Git\u4f7f\u7528 \u9996\u5148\u80af\u5b9a\u662f\u8981\u5b89\u88c5git\u4e86\uff0c\u4ee5root\u6743\u9650\u8fd0\u884c yum install git \u7136\u540e\u6211\u4eec\u5b89\u88c5go\u7684\u4e00\u4e9b\u5de5\u5177 \u56e0\u4e3a\u4e2d\u56fd\u7f51\u7edc\u73af\u5883\u4e0b\u65e0\u6cd5\u8bbf\u95eeGolang.org\uff0c\u4e0d\u80fd\u8fd0\u884cgo get golang.org/x/XX\u6765\u83b7\u53d6Golang packages\uff0c\u6240\u4ee5\u6211\u4eec\u628aGithub\u4e0a\u7684\u955c\u50cf\u7684\u5bf9\u5e94\u5185\u5bb9get\u4e0b\u6765\uff0c\u590d\u5236\u5230golang.org\u6587\u4ef6\u5939\u5bf9\u5e94\u7684\u5730\u65b9 # \u521b\u5efa\u6587\u4ef6\u5939 mkdir $GOPATH /src/golang.org/x/ # \u4e0b\u8f7d\u6e90\u7801 go get -d github.com/golang/tools # copy cp $GOPATH /src/github.com/golang/tools $GOPATH /src/golang.org/x/ -rf # \u5b89\u88c5\u5de5\u5177\u5305 go install golang.org/x/tools/go/buildutil \u4ee5hello.go\u4e3a\u4f8b\uff0c\u8bf4\u660eGit\u5728go\u4e2d\u7684\u4f7f\u7528 \u521b\u5efa\u6211\u4eec\u6e90\u4ee3\u7801\u7684\u76ee\u5f55 # github-user\u6539\u4e3a\u4f60\u81ea\u5df1\u7684\u7528\u6237\u540d(\u4e0b\u9762\u7684\u90fd\u662f) mkdir $GOPATH /src/github.com/github-user/hello -p # \u521b\u5efa hello.go touch hello.go \u6587\u4ef6\u5185\u5bb9\u5982\u4e0b package main import \"fmt\" func main () { fmt . Printf ( \"hello, world\\n\" ) } \u6d4b\u8bd5\u6709\u65e0\u95ee\u9898 $ go run hello.go hello, world $ go install github.com/github-user/hello # build $ hello hello-world \u5728Github\u4e0a\u521b\u5efa\u5bf9\u5e94\u7684\u65b0\u4ed3\u5e93, \u672c\u5730\u6e90\u4ee3\u7801\u76ee\u5f55\uff0c\u7ed1\u5b9a\u6211\u4eec\u65b0\u4ed3\u5e93\u7684\u547d\u4ee4\u5982\u4e0b # \u8fdb\u5165\u6587\u4ef6\u5939\uff0c\u521b\u5efaGit\u4ed3\u5e93 git init # \u628a\u5f53\u524d\u5185\u5bb9commit\u5230Git\u4ed3\u5e93 git add --all git commit -m \"XXX\" # \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5b8c\u6210github \u5bf9\u5e94\u7684\u8fdc\u7a0b\u4ed3\u5e93\u7684\u7ed1\u5b9a git remote add origin https://github.com/zhongwq/go-helloworld.git # \u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 git push -u origin master \u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u6211\u4eecgit\u672c\u5730\u4ed3\u5e93\u4e0egithub \u5bf9\u5e94\u7684\u8fdc\u7a0b\u4ed3\u5e93\u7684\u7ed1\u5b9a\u4e86\u3002","title":"CentOS Go\u8bed\u8a00\u73af\u5883\u5b89\u88c5"},{"location":"ServiceComputingOnCloud/CentOS Go\u8bed\u8a00\u73af\u5883\u5b89\u88c5/#centos-go","text":"","title":"CentOS Go\u8bed\u8a00\u73af\u5883\u5b89\u88c5"},{"location":"ServiceComputingOnCloud/CentOS Go\u8bed\u8a00\u73af\u5883\u5b89\u88c5/#golang","text":"\u4f7f\u7528yum\u5305\u7ba1\u7406\u5668\u5982\u4f55\u5b89\u88c5golang\u5728\u8001\u5e08\u7684\u535a\u5ba2\u91cc\u5df2\u7ecf\u975e\u5e38\u6e05\u6670\u4e86\uff0c Go\u5f00\u53d1\u73af\u5883\u5b89\u88c5 \u8fd9\u91cc\u6211\u8c08\u8c08\u5982\u4f55\u5728\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5305\u81ea\u5df1\u5b89\u88c5 \u9996\u5148\uff0c\u4e0a\u5b98\u7f51\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u5b89\u88c5\u5305\uff0c\u590d\u5236\u5176\u4e0b\u8f7d\u5730\u5740\uff0c\u7136\u540e\uff0cwget\u628a\u5b83\u4e0b\u8f7d\u4e0b\u6765 wget https://dl.google.com/go/go1.11.linux-amd64.tar.gz \u8fd9\u91cc\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u7684centOS\u76f4\u63a5\u628a\u8fd9\u4e2a\u7f51\u7ad9\u89e3\u6790\u6210ipv6\u5730\u5740,\u4f7f\u7f51\u7edc\u4e0d\u53ef\u8fbe \u4e8e\u662f\u6211\u5728\u7ad9\u957f\u4e4b\u5bb6\u90a3\u91cc\u627e\u5230\u4e00\u4e2a\u5408\u9002\u7684ip\uff0c\u4fee\u6539hosts\u6587\u4ef6\uff0c\u4f7f\u5f97dl.google.com\u6b63\u5e38\u89e3\u6790\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e0b\u8f7d\u3002 \u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u89e3\u538b\u6587\u4ef6 tar zxvf go1.8.linux-amd64.tar.gz -C /usr/local \u65b0\u5efa\u6211\u4eec\u7684go\u9879\u76ee\u6839\u76ee\u5f55 mkdir $HOME/gowork \u914d\u7f6e\u73af\u5883\u53d8\u91cf vim /etc/profile # \u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9 export GOROOT = /usr/local/go export GOBIN = $GOROOT /bin export PATH = $PATH : $GOBIN export GOPATH = $HOME /gowork # \u5b8c\u6210\u540e\u6267\u884c source /etc/profile # \u9a8c\u8bc1\u662f\u5426\u6210\u529f go version go env","title":"\u5b89\u88c5Golang"},{"location":"ServiceComputingOnCloud/CentOS Go\u8bed\u8a00\u73af\u5883\u5b89\u88c5/#git","text":"\u9996\u5148\u80af\u5b9a\u662f\u8981\u5b89\u88c5git\u4e86\uff0c\u4ee5root\u6743\u9650\u8fd0\u884c yum install git \u7136\u540e\u6211\u4eec\u5b89\u88c5go\u7684\u4e00\u4e9b\u5de5\u5177 \u56e0\u4e3a\u4e2d\u56fd\u7f51\u7edc\u73af\u5883\u4e0b\u65e0\u6cd5\u8bbf\u95eeGolang.org\uff0c\u4e0d\u80fd\u8fd0\u884cgo get golang.org/x/XX\u6765\u83b7\u53d6Golang packages\uff0c\u6240\u4ee5\u6211\u4eec\u628aGithub\u4e0a\u7684\u955c\u50cf\u7684\u5bf9\u5e94\u5185\u5bb9get\u4e0b\u6765\uff0c\u590d\u5236\u5230golang.org\u6587\u4ef6\u5939\u5bf9\u5e94\u7684\u5730\u65b9 # \u521b\u5efa\u6587\u4ef6\u5939 mkdir $GOPATH /src/golang.org/x/ # \u4e0b\u8f7d\u6e90\u7801 go get -d github.com/golang/tools # copy cp $GOPATH /src/github.com/golang/tools $GOPATH /src/golang.org/x/ -rf # \u5b89\u88c5\u5de5\u5177\u5305 go install golang.org/x/tools/go/buildutil","title":"Git\u4f7f\u7528"},{"location":"ServiceComputingOnCloud/CentOS Go\u8bed\u8a00\u73af\u5883\u5b89\u88c5/#hellogogitgo","text":"\u521b\u5efa\u6211\u4eec\u6e90\u4ee3\u7801\u7684\u76ee\u5f55 # github-user\u6539\u4e3a\u4f60\u81ea\u5df1\u7684\u7528\u6237\u540d(\u4e0b\u9762\u7684\u90fd\u662f) mkdir $GOPATH /src/github.com/github-user/hello -p # \u521b\u5efa hello.go touch hello.go \u6587\u4ef6\u5185\u5bb9\u5982\u4e0b package main import \"fmt\" func main () { fmt . Printf ( \"hello, world\\n\" ) } \u6d4b\u8bd5\u6709\u65e0\u95ee\u9898 $ go run hello.go hello, world $ go install github.com/github-user/hello # build $ hello hello-world \u5728Github\u4e0a\u521b\u5efa\u5bf9\u5e94\u7684\u65b0\u4ed3\u5e93, \u672c\u5730\u6e90\u4ee3\u7801\u76ee\u5f55\uff0c\u7ed1\u5b9a\u6211\u4eec\u65b0\u4ed3\u5e93\u7684\u547d\u4ee4\u5982\u4e0b # \u8fdb\u5165\u6587\u4ef6\u5939\uff0c\u521b\u5efaGit\u4ed3\u5e93 git init # \u628a\u5f53\u524d\u5185\u5bb9commit\u5230Git\u4ed3\u5e93 git add --all git commit -m \"XXX\" # \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5b8c\u6210github \u5bf9\u5e94\u7684\u8fdc\u7a0b\u4ed3\u5e93\u7684\u7ed1\u5b9a git remote add origin https://github.com/zhongwq/go-helloworld.git # \u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 git push -u origin master \u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u6211\u4eecgit\u672c\u5730\u4ed3\u5e93\u4e0egithub \u5bf9\u5e94\u7684\u8fdc\u7a0b\u4ed3\u5e93\u7684\u7ed1\u5b9a\u4e86\u3002","title":"\u4ee5hello.go\u4e3a\u4f8b\uff0c\u8bf4\u660eGit\u5728go\u4e2d\u7684\u4f7f\u7528"},{"location":"ServiceComputingOnCloud/Github - Travis CI - Docker hub - VPS \u201c\u4e0d\u843d\u5730\u201d\u4e91\u8f6f\u4ef6\u5f00\u53d1\u6d41\u6c34\u7ebf\u5b9e\u6218/","text":"Github - Travis CI - Docker hub - VPS \u201c\u4e0d\u843d\u5730\u201d\u4e91\u8f6f\u4ef6\u5f00\u53d1\u6d41\u6c34\u7ebf\u5b9e\u6218 \u8fd9\u5468\u7684web\u670d\u52a1\u7a0b\u5e8f\u6211\u9009\u62e9\u5b8c\u6210\u7684\u662f\u4e00\u4e2a\u5177\u6709\u6ce8\u518c\u3001\u901a\u8fc7\u8d26\u6237\u5bc6\u7801\u83b7\u53d6\u7528\u6237\u4fe1\u606f\u7684\u4e00\u4e2a\u901a\u8fc7sqlite3\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\u7684\u4e00\u4e2a\u5c0fdemo\uff0c\u5b9e\u8df5\u4e00\u4e0bgolang \u4e2d\u6570\u636e\u5e93\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u7a0b\u5e8f\u65b9\u9762\u8fd9\u91cc\u4e0d\u591a\u8c08\uff0c\u4ee3\u7801\u53ef\u89c1\u4e8e \u6211\u7684Github\u4ed3\u5e93 \u56e0\u4e3aAWS\u5b8c\u6210\u6ce8\u518c\u9700\u8981\u4fe1\u7528\u5361\u7b49\u4fe1\u606f\uff0c\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u6211\u4e2a\u4eba\u7684\u4e00\u4e2ado\u7684vps\u8fdb\u884c\u66ff\u4ee3\uff0c\u57fa\u672c\u64cd\u4f5c\u7c7b\u4f3c \u8fd9\u91cc\u4e3b\u8981\u8bf4\u8bf4\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u901a\u8fc7CI\u670d\u52a1\uff0c\u5b9e\u73b0Github - Travis CI - Docker hub - VPS \u201c\u4e0d\u843d\u5730\u201d\u4e91\u8f6f\u4ef6\u5f00\u53d1\u6d41\u6c34\u7ebf\u7684\u4e00\u4e2a\u5b9e\u8df5\uff0c\u542c\u8d77\u6765\u597d\u50cf\u5341\u5206\u9ad8\u5927\u4e0a\uff0c\u4f46\u662f\u7ec6\u60f3\u4e00\u4e0b\uff0c\u64cd\u4f5c\u8d77\u6765\u8c8c\u4f3c\u5e76\u4e0d\u662f\u592a\u96be\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5408\u7406\u4e66\u5199\u6211\u4eec\u7684.travis.yml\uff0c\u5e76\u5728\u670d\u52a1\u5668\u4e0a\u5199\u597d\u76f8\u5e94\u7684\u90e8\u7f72\u811a\u672c\u4f9bssh\u8c03\u7528\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0push\u6539\u52a8\u5230github\u5c31\u53ef\u4ee5\u901a\u8fc7travis ci\u5b9e\u73b0Github - Travis CI - Docker hub - VPS\u7684\u8fd9\u4e48\u4e00\u4e2a\u6240\u8c13\u201c\u4e0d\u843d\u5730\u201d\u7684Workflow\uff0c\u4e0b\u9762\u6211\u8bf4\u8bf4\u6211\u7684\u5177\u4f53\u6d41\u7a0b \u5177\u4f53\u6d41\u7a0b Step1 \u9996\u5148\uff0c\u6211\u4eec\u5728 Docker Hub \u4e0a\u6ce8\u518c\u8d26\u6237\uff0c\u5efa\u7acb\u6211\u4eec\u5bf9\u5e94\u7684\u4ed3\u5e93\u5982\u4e0b Step2 \u7136\u540e\u6211\u4eec\u5f00\u59cb\u7f16\u5199\u6211\u4eecbuild docker img\u9700\u8981\u4f7f\u7528\u5230\u7684Dockerfile FROM golang:1.8 MAINTAINER WilsonZhong \"1316628630@qq.com\" WORKDIR $GOPATH/src/github.com/zhongwq/TestDocker ADD . $GOPATH/src/github.com/zhongwq/TestDocker RUN go get github.com/codegangsta/negroni RUN go get github.com/gorilla/mux RUN go get github.com/unrolled/render RUN go get github.com/mattn/go-sqlite3 RUN go get github.com/spf13/pflag RUN go build . EXPOSE 9999 ENTRYPOINT [\"./TestDocker\"] dockerfile\u7f16\u5199\u65b9\u9762\u6211\u53c2\u7167\u7684\u662fgo\u8bed\u8a00\u4e2d\u6587\u7f51\u7684\u4e00\u4e2a\u6559\u7a0b Docker\u5b66\u4e60\u7b14\u8bb0---Dockerfile \uff0c\u6bd4\u8f83\u7b80\u5355\uff0c\u5927\u5bb6\u82e5\u662f\u9700\u8981\u53ef\u4ee5\u53c2\u7167\u6559\u7a0b\u8fdb\u884c\u7f16\u5199 \u7f16\u5199\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u73b0\u5728\u672c\u5730\u6267\u884cdocker build\u547d\u4ee4\uff0c\u770b\u770b\u6709\u65e0\u9519\u8bef\u4ea7\u751f\uff0c\u50cf\u6211\u4e00\u5f00\u59cb\u5fd8\u8bb0\u5b89\u88c5\u4f9d\u8d56\u518dbuild\uff0c\u6839\u636e\u62a5\u9519\uff0c\u6211\u5f88\u5feb\u5c31\u6539\u4e86\u56de\u6765\uff0cbug\u5f88\u5feb\u5c31\u6d88\u9664\u4e86\uff0c\u53ea\u8981\u6211\u4eec\u8ddf\u7740\u62a5\u9519\u4fe1\u606f\u4e00\u6b65\u6b65\u505a\uff0c\u5f88\u5feb\u5c31\u53ef\u4ee5\u6b63\u786e\u5b8c\u6210docker file\u7684\u4e66\u5199 \u5b8c\u6210\u4e86dockerfile\u540e\uff0c\u5c31\u5230\u4e86\u6211\u4eec\u8fd9\u6700\u5173\u952e\u7684.travis.yml\u4e86 language : go go : - 1.8 sudo : required services : - docker notifications : email : false install : - go get - u github . com / codegangsta / negroni - go get - u github . com / gorilla / mux - go get - u github . com / unrolled / render - go get - u github . com / mattn / go - sqlite3 script : - docker build -- rm - t wilsonzhong / testdocker . before_install : - openssl aes - 256 - cbc - K $ encrypted_5fbf7abaab3f_key - iv $ encrypted_5fbf7abaab3f_iv - in id_rsa . enc - out ~/ . ssh / id_rsa - d - chmod 600 ~/ . ssh / id_rsa addons : ssh_known_hosts : 104.236.150.212 after_success : - docker login - u = \"$DOCKER_USERNAME\" - p = \"$DOCKER_PASSWORD\" ; - docker tag wilsonzhong / testdocker : latest wilsonzhong / testdocker : latest - docker push wilsonzhong / testdocker : latest - ssh root @104.236.150.212 \"cd ~ && sh build.sh\" \u8fd9\u4e00\u6b65\u6700\u5173\u952e\u7684\u5c31\u662fid_rsa\u7684\u52a0\u5bc6\u4f20\u8f93\u4ee5\u53ca\u50cf\\$DOCKER_USERNAME\u548c\\$DOCKER_PASSWORD \u8fd9\u6837\u7684\u4e0d\u5e94\u8be5\u5199\u5728.travis.yml\u4e2d\u5374\u8981\u4f7f\u7528\u7684\u53d8\u91cf\u5982\u4f55\u8fdb\u884c\u5904\u7406\u3002\u8fd9\u91cctravis\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4ed3\u5e93\u7684settings\u4e2d\u8bbe\u7f6e\u6211\u4eec\u7684Environment Variables\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5728.travis.yml\u4e2d\u901a\u8fc7$KEY\u4f7f\u7528\u5bf9\u5e94\u7684\u53d8\u91cf\uff0c\u50cf\u6211\u4eec\u672c\u6b21\u9879\u76ee\u6211\u4eec\u5c31\u53ef\u4ee5\u628aDOCKER_USERNAME\u548cUSER_PASSWORD\u653e\u5230\u6211\u4eec\u7684Environment Variables\u4e2d \u81f3\u4e8e\u52a0\u5bc6\u6587\u4ef6\uff0c\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u4f7f\u7528\u7684\u662f\u6211\u4eec\u7684ssh\u5bc6\u94a5\u4ee5\u4fbftravis ssh\u6211\u4eec\u7684\u670d\u52a1\u5668\u8c03\u7528\u6211\u4eec\u7684\u66f4\u65b0\u811a\u672c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u901a\u8fc7travis\u52a0\u5bc6\u6211\u4eec\u94fe\u63a5\u6211\u4eec\u670d\u52a1\u5668\u7684\u5bc6\u94a5\uff0c\u9996\u5148\u6211\u4eec\u5728\u6211\u4eec\u7684\u7535\u8111\u4e0a\u5b89\u88c5travis\uff0cmacOS\u4e0b\u6211\u4eec\u76f4\u63a5brew install travis\u5373\u53ef\uff0c\u5728linux\u4e0b\u6211\u4eec\u5219\u9700\u8981\u4f7f\u7528gem\u8fdb\u884c\u5b89\u88c5, sudo apt install ruby ruby-dev && sudo gem install travis ,\u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u767b\u9646travis, travis login , \u5728\u6211\u4eec.travis.yml\u5bf9\u5e94\u7684\u76ee\u5f55\u6267\u884c\u5982\u4e0b\u547d\u4ee4 travis encrypt-file ~/.ssh/id_rsa --add \u4ed6\u5c31\u4f1a\u81ea\u52a8\u628a\u5b83\u6dfb\u52a0\u5230\u6211\u4eec\u7684.travis.yml\u4e2d\uff0c\u5185\u5bb9\u5982\u4e0b before_install: - openssl aes-256-cbc -K $encrypted_5fbf7abaab3f_key -iv $encrypted_5fbf7abaab3f_iv -in id_rsa.enc -out ~/.ssh/id_rsa -d - chmod 600 ~/.ssh/id_rsa // \u8be5\u884c\u9700\u8981\u81ea\u5df1\u6dfb\u52a0 \u5728\u8fd9\u91cc\u6211\u4eec\u8fd8\u9700\u8981\u7406\u89e3travis\u7684\u94a9\u5b50 before_install\uff1ainstall \u9636\u6bb5\u4e4b\u524d\u6267\u884c before_script\uff1ascript \u9636\u6bb5\u4e4b\u524d\u6267\u884c after_failure\uff1ascript \u9636\u6bb5\u5931\u8d25\u65f6\u6267\u884c after_success\uff1ascript \u9636\u6bb5\u6210\u529f\u65f6\u6267\u884c before_deploy\uff1adeploy \u6b65\u9aa4\u4e4b\u524d\u6267\u884c after_deploy\uff1adeploy \u6b65\u9aa4\u4e4b\u540e\u6267\u884c after_script\uff1ascript \u9636\u6bb5\u4e4b\u540e\u6267\u884c \u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5728script\u6210\u529f\uff0c\u5373docker img\u88ab\u6210\u529fbuild\u4f20\u4e4b\u540e\uff0c\u4e0a\u4f20\u6211\u4eec\u65b0build\u7684img\u5e76\u6267\u884c\u6211\u4eec\u670d\u52a1\u5668\u4e0a\u7684\u90e8\u7f72\u811a\u672c\u3002\u6211\u4eec\u53ea\u9700\u5728after_success\u90e8\u5206\u52a0\u5165\u5bf9\u5e94\u7684\u6267\u884c\u547d\u4ee4\u5373\u53ef after_success : - docker login - u = \"$DOCKER_USERNAME\" - p = \"$DOCKER_PASSWORD\" ; - docker tag wilsonzhong / testdocker : latest wilsonzhong / testdocker : latest - docker push wilsonzhong / testdocker : latest - ssh root @104.236.150.212 \"cd ~ && sh build.sh\" \u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u7684.travis.yml\u5c31\u5b8c\u6210\u4e86 Step3 \u6700\u540e\u6211\u4eec\u5c31\u5269\u4e0b\u4e86\u7f16\u5199\u670d\u52a1\u5668\u4e0a\u7684\u90e8\u7f72\u811a\u672c\uff0c\u8fd9\u4e2a\u5c31\u9700\u8981\u6211\u4eec\u6839\u636e\u6211\u4eec\u81ea\u5df1\u7684\u9879\u76ee\u8fdb\u884c\u8c03\u6574\u4e86 #!/bin/bash cd TestDocker git pull docker stop testdocker docker cp . testdocker:/go/src/github.com/zhongwq/TestDocker docker start testdocker echo \"Starting service\" docker exec testdocker /bin/bash -c \\ \"go build . && ./TestDocker > out.log 2>&1 &\" echo \"Deploy Done!\" \u7f16\u8f91\u597d\u4e86build.sh\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7ssh root@ip \"cd ~ && sh build.sh\"\u8c03\u7528\u670d\u52a1\u5668\u4e0a\u7684\u66f4\u65b0\u811a\u672c\u4e86 Summary \u8fd9\u6b21\u4f5c\u4e1a\uff0c\u662f\u5728\u4e0a\u6b21\u4f7f\u7528travis\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\u4e4b\u4e0a\u7684\u4e00\u6b21\u66f4\u597d\u7684\u6df1\u5316\uff0ct\u901a\u8fc7\u5408\u7406\u5229\u7528travis ci,\u6211\u4eec\u5c31\u53ef\u4ee5\u9ad8\u6548\u7387\u5b8c\u6210\u670d\u52a1\u5668\u4e0a\u670d\u52a1\u7684\u66f4\u65b0\u3002\u5927\u5927\u589e\u52a0\u4e86\u6211\u4eec\u7684\u6548\u7387\u3002Github - Travis CI - Docker hub - VPS \u201c\u4e0d\u843d\u5730\u201d\u4e91\u8f6f\u4ef6\u5f00\u53d1\u6d41\u6c34\u7ebf\u5b9e\u6218\u5c31\u8bf4\u5230\u8fd9\u91cc\uff0c\u81f3\u4e8ecurl\u548chey\u7684\u6d4b\u8bd5\uff0c\u5927\u5bb6\u53ef\u4ee5\u5728\u9879\u76ee\u7684README\u4e2d\u770b\u5230\u3002","title":"Github - Travis CI - Docker hub - VPS \u201c\u4e0d\u843d\u5730\u201d\u4e91\u8f6f\u4ef6\u5f00\u53d1\u6d41\u6c34\u7ebf\u5b9e\u6218"},{"location":"ServiceComputingOnCloud/Github - Travis CI - Docker hub - VPS \u201c\u4e0d\u843d\u5730\u201d\u4e91\u8f6f\u4ef6\u5f00\u53d1\u6d41\u6c34\u7ebf\u5b9e\u6218/#github-travis-ci-docker-hub-vps","text":"\u8fd9\u5468\u7684web\u670d\u52a1\u7a0b\u5e8f\u6211\u9009\u62e9\u5b8c\u6210\u7684\u662f\u4e00\u4e2a\u5177\u6709\u6ce8\u518c\u3001\u901a\u8fc7\u8d26\u6237\u5bc6\u7801\u83b7\u53d6\u7528\u6237\u4fe1\u606f\u7684\u4e00\u4e2a\u901a\u8fc7sqlite3\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\u7684\u4e00\u4e2a\u5c0fdemo\uff0c\u5b9e\u8df5\u4e00\u4e0bgolang \u4e2d\u6570\u636e\u5e93\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u7a0b\u5e8f\u65b9\u9762\u8fd9\u91cc\u4e0d\u591a\u8c08\uff0c\u4ee3\u7801\u53ef\u89c1\u4e8e \u6211\u7684Github\u4ed3\u5e93 \u56e0\u4e3aAWS\u5b8c\u6210\u6ce8\u518c\u9700\u8981\u4fe1\u7528\u5361\u7b49\u4fe1\u606f\uff0c\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u6211\u4e2a\u4eba\u7684\u4e00\u4e2ado\u7684vps\u8fdb\u884c\u66ff\u4ee3\uff0c\u57fa\u672c\u64cd\u4f5c\u7c7b\u4f3c \u8fd9\u91cc\u4e3b\u8981\u8bf4\u8bf4\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u901a\u8fc7CI\u670d\u52a1\uff0c\u5b9e\u73b0Github - Travis CI - Docker hub - VPS \u201c\u4e0d\u843d\u5730\u201d\u4e91\u8f6f\u4ef6\u5f00\u53d1\u6d41\u6c34\u7ebf\u7684\u4e00\u4e2a\u5b9e\u8df5\uff0c\u542c\u8d77\u6765\u597d\u50cf\u5341\u5206\u9ad8\u5927\u4e0a\uff0c\u4f46\u662f\u7ec6\u60f3\u4e00\u4e0b\uff0c\u64cd\u4f5c\u8d77\u6765\u8c8c\u4f3c\u5e76\u4e0d\u662f\u592a\u96be\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5408\u7406\u4e66\u5199\u6211\u4eec\u7684.travis.yml\uff0c\u5e76\u5728\u670d\u52a1\u5668\u4e0a\u5199\u597d\u76f8\u5e94\u7684\u90e8\u7f72\u811a\u672c\u4f9bssh\u8c03\u7528\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0push\u6539\u52a8\u5230github\u5c31\u53ef\u4ee5\u901a\u8fc7travis ci\u5b9e\u73b0Github - Travis CI - Docker hub - VPS\u7684\u8fd9\u4e48\u4e00\u4e2a\u6240\u8c13\u201c\u4e0d\u843d\u5730\u201d\u7684Workflow\uff0c\u4e0b\u9762\u6211\u8bf4\u8bf4\u6211\u7684\u5177\u4f53\u6d41\u7a0b","title":"Github - Travis CI - Docker hub - VPS \u201c\u4e0d\u843d\u5730\u201d\u4e91\u8f6f\u4ef6\u5f00\u53d1\u6d41\u6c34\u7ebf\u5b9e\u6218"},{"location":"ServiceComputingOnCloud/Github - Travis CI - Docker hub - VPS \u201c\u4e0d\u843d\u5730\u201d\u4e91\u8f6f\u4ef6\u5f00\u53d1\u6d41\u6c34\u7ebf\u5b9e\u6218/#_1","text":"","title":"\u5177\u4f53\u6d41\u7a0b"},{"location":"ServiceComputingOnCloud/Github - Travis CI - Docker hub - VPS \u201c\u4e0d\u843d\u5730\u201d\u4e91\u8f6f\u4ef6\u5f00\u53d1\u6d41\u6c34\u7ebf\u5b9e\u6218/#step1","text":"\u9996\u5148\uff0c\u6211\u4eec\u5728 Docker Hub \u4e0a\u6ce8\u518c\u8d26\u6237\uff0c\u5efa\u7acb\u6211\u4eec\u5bf9\u5e94\u7684\u4ed3\u5e93\u5982\u4e0b","title":"Step1"},{"location":"ServiceComputingOnCloud/Github - Travis CI - Docker hub - VPS \u201c\u4e0d\u843d\u5730\u201d\u4e91\u8f6f\u4ef6\u5f00\u53d1\u6d41\u6c34\u7ebf\u5b9e\u6218/#step2","text":"\u7136\u540e\u6211\u4eec\u5f00\u59cb\u7f16\u5199\u6211\u4eecbuild docker img\u9700\u8981\u4f7f\u7528\u5230\u7684Dockerfile FROM golang:1.8 MAINTAINER WilsonZhong \"1316628630@qq.com\" WORKDIR $GOPATH/src/github.com/zhongwq/TestDocker ADD . $GOPATH/src/github.com/zhongwq/TestDocker RUN go get github.com/codegangsta/negroni RUN go get github.com/gorilla/mux RUN go get github.com/unrolled/render RUN go get github.com/mattn/go-sqlite3 RUN go get github.com/spf13/pflag RUN go build . EXPOSE 9999 ENTRYPOINT [\"./TestDocker\"] dockerfile\u7f16\u5199\u65b9\u9762\u6211\u53c2\u7167\u7684\u662fgo\u8bed\u8a00\u4e2d\u6587\u7f51\u7684\u4e00\u4e2a\u6559\u7a0b Docker\u5b66\u4e60\u7b14\u8bb0---Dockerfile \uff0c\u6bd4\u8f83\u7b80\u5355\uff0c\u5927\u5bb6\u82e5\u662f\u9700\u8981\u53ef\u4ee5\u53c2\u7167\u6559\u7a0b\u8fdb\u884c\u7f16\u5199 \u7f16\u5199\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u73b0\u5728\u672c\u5730\u6267\u884cdocker build\u547d\u4ee4\uff0c\u770b\u770b\u6709\u65e0\u9519\u8bef\u4ea7\u751f\uff0c\u50cf\u6211\u4e00\u5f00\u59cb\u5fd8\u8bb0\u5b89\u88c5\u4f9d\u8d56\u518dbuild\uff0c\u6839\u636e\u62a5\u9519\uff0c\u6211\u5f88\u5feb\u5c31\u6539\u4e86\u56de\u6765\uff0cbug\u5f88\u5feb\u5c31\u6d88\u9664\u4e86\uff0c\u53ea\u8981\u6211\u4eec\u8ddf\u7740\u62a5\u9519\u4fe1\u606f\u4e00\u6b65\u6b65\u505a\uff0c\u5f88\u5feb\u5c31\u53ef\u4ee5\u6b63\u786e\u5b8c\u6210docker file\u7684\u4e66\u5199 \u5b8c\u6210\u4e86dockerfile\u540e\uff0c\u5c31\u5230\u4e86\u6211\u4eec\u8fd9\u6700\u5173\u952e\u7684.travis.yml\u4e86 language : go go : - 1.8 sudo : required services : - docker notifications : email : false install : - go get - u github . com / codegangsta / negroni - go get - u github . com / gorilla / mux - go get - u github . com / unrolled / render - go get - u github . com / mattn / go - sqlite3 script : - docker build -- rm - t wilsonzhong / testdocker . before_install : - openssl aes - 256 - cbc - K $ encrypted_5fbf7abaab3f_key - iv $ encrypted_5fbf7abaab3f_iv - in id_rsa . enc - out ~/ . ssh / id_rsa - d - chmod 600 ~/ . ssh / id_rsa addons : ssh_known_hosts : 104.236.150.212 after_success : - docker login - u = \"$DOCKER_USERNAME\" - p = \"$DOCKER_PASSWORD\" ; - docker tag wilsonzhong / testdocker : latest wilsonzhong / testdocker : latest - docker push wilsonzhong / testdocker : latest - ssh root @104.236.150.212 \"cd ~ && sh build.sh\" \u8fd9\u4e00\u6b65\u6700\u5173\u952e\u7684\u5c31\u662fid_rsa\u7684\u52a0\u5bc6\u4f20\u8f93\u4ee5\u53ca\u50cf\\$DOCKER_USERNAME\u548c\\$DOCKER_PASSWORD \u8fd9\u6837\u7684\u4e0d\u5e94\u8be5\u5199\u5728.travis.yml\u4e2d\u5374\u8981\u4f7f\u7528\u7684\u53d8\u91cf\u5982\u4f55\u8fdb\u884c\u5904\u7406\u3002\u8fd9\u91cctravis\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4ed3\u5e93\u7684settings\u4e2d\u8bbe\u7f6e\u6211\u4eec\u7684Environment Variables\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5728.travis.yml\u4e2d\u901a\u8fc7$KEY\u4f7f\u7528\u5bf9\u5e94\u7684\u53d8\u91cf\uff0c\u50cf\u6211\u4eec\u672c\u6b21\u9879\u76ee\u6211\u4eec\u5c31\u53ef\u4ee5\u628aDOCKER_USERNAME\u548cUSER_PASSWORD\u653e\u5230\u6211\u4eec\u7684Environment Variables\u4e2d \u81f3\u4e8e\u52a0\u5bc6\u6587\u4ef6\uff0c\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u4f7f\u7528\u7684\u662f\u6211\u4eec\u7684ssh\u5bc6\u94a5\u4ee5\u4fbftravis ssh\u6211\u4eec\u7684\u670d\u52a1\u5668\u8c03\u7528\u6211\u4eec\u7684\u66f4\u65b0\u811a\u672c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u901a\u8fc7travis\u52a0\u5bc6\u6211\u4eec\u94fe\u63a5\u6211\u4eec\u670d\u52a1\u5668\u7684\u5bc6\u94a5\uff0c\u9996\u5148\u6211\u4eec\u5728\u6211\u4eec\u7684\u7535\u8111\u4e0a\u5b89\u88c5travis\uff0cmacOS\u4e0b\u6211\u4eec\u76f4\u63a5brew install travis\u5373\u53ef\uff0c\u5728linux\u4e0b\u6211\u4eec\u5219\u9700\u8981\u4f7f\u7528gem\u8fdb\u884c\u5b89\u88c5, sudo apt install ruby ruby-dev && sudo gem install travis ,\u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u767b\u9646travis, travis login , \u5728\u6211\u4eec.travis.yml\u5bf9\u5e94\u7684\u76ee\u5f55\u6267\u884c\u5982\u4e0b\u547d\u4ee4 travis encrypt-file ~/.ssh/id_rsa --add \u4ed6\u5c31\u4f1a\u81ea\u52a8\u628a\u5b83\u6dfb\u52a0\u5230\u6211\u4eec\u7684.travis.yml\u4e2d\uff0c\u5185\u5bb9\u5982\u4e0b before_install: - openssl aes-256-cbc -K $encrypted_5fbf7abaab3f_key -iv $encrypted_5fbf7abaab3f_iv -in id_rsa.enc -out ~/.ssh/id_rsa -d - chmod 600 ~/.ssh/id_rsa // \u8be5\u884c\u9700\u8981\u81ea\u5df1\u6dfb\u52a0 \u5728\u8fd9\u91cc\u6211\u4eec\u8fd8\u9700\u8981\u7406\u89e3travis\u7684\u94a9\u5b50 before_install\uff1ainstall \u9636\u6bb5\u4e4b\u524d\u6267\u884c before_script\uff1ascript \u9636\u6bb5\u4e4b\u524d\u6267\u884c after_failure\uff1ascript \u9636\u6bb5\u5931\u8d25\u65f6\u6267\u884c after_success\uff1ascript \u9636\u6bb5\u6210\u529f\u65f6\u6267\u884c before_deploy\uff1adeploy \u6b65\u9aa4\u4e4b\u524d\u6267\u884c after_deploy\uff1adeploy \u6b65\u9aa4\u4e4b\u540e\u6267\u884c after_script\uff1ascript \u9636\u6bb5\u4e4b\u540e\u6267\u884c \u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5728script\u6210\u529f\uff0c\u5373docker img\u88ab\u6210\u529fbuild\u4f20\u4e4b\u540e\uff0c\u4e0a\u4f20\u6211\u4eec\u65b0build\u7684img\u5e76\u6267\u884c\u6211\u4eec\u670d\u52a1\u5668\u4e0a\u7684\u90e8\u7f72\u811a\u672c\u3002\u6211\u4eec\u53ea\u9700\u5728after_success\u90e8\u5206\u52a0\u5165\u5bf9\u5e94\u7684\u6267\u884c\u547d\u4ee4\u5373\u53ef after_success : - docker login - u = \"$DOCKER_USERNAME\" - p = \"$DOCKER_PASSWORD\" ; - docker tag wilsonzhong / testdocker : latest wilsonzhong / testdocker : latest - docker push wilsonzhong / testdocker : latest - ssh root @104.236.150.212 \"cd ~ && sh build.sh\" \u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u7684.travis.yml\u5c31\u5b8c\u6210\u4e86","title":"Step2"},{"location":"ServiceComputingOnCloud/Github - Travis CI - Docker hub - VPS \u201c\u4e0d\u843d\u5730\u201d\u4e91\u8f6f\u4ef6\u5f00\u53d1\u6d41\u6c34\u7ebf\u5b9e\u6218/#step3","text":"\u6700\u540e\u6211\u4eec\u5c31\u5269\u4e0b\u4e86\u7f16\u5199\u670d\u52a1\u5668\u4e0a\u7684\u90e8\u7f72\u811a\u672c\uff0c\u8fd9\u4e2a\u5c31\u9700\u8981\u6211\u4eec\u6839\u636e\u6211\u4eec\u81ea\u5df1\u7684\u9879\u76ee\u8fdb\u884c\u8c03\u6574\u4e86 #!/bin/bash cd TestDocker git pull docker stop testdocker docker cp . testdocker:/go/src/github.com/zhongwq/TestDocker docker start testdocker echo \"Starting service\" docker exec testdocker /bin/bash -c \\ \"go build . && ./TestDocker > out.log 2>&1 &\" echo \"Deploy Done!\" \u7f16\u8f91\u597d\u4e86build.sh\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7ssh root@ip \"cd ~ && sh build.sh\"\u8c03\u7528\u670d\u52a1\u5668\u4e0a\u7684\u66f4\u65b0\u811a\u672c\u4e86","title":"Step3"},{"location":"ServiceComputingOnCloud/Github - Travis CI - Docker hub - VPS \u201c\u4e0d\u843d\u5730\u201d\u4e91\u8f6f\u4ef6\u5f00\u53d1\u6d41\u6c34\u7ebf\u5b9e\u6218/#summary","text":"\u8fd9\u6b21\u4f5c\u4e1a\uff0c\u662f\u5728\u4e0a\u6b21\u4f7f\u7528travis\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\u4e4b\u4e0a\u7684\u4e00\u6b21\u66f4\u597d\u7684\u6df1\u5316\uff0ct\u901a\u8fc7\u5408\u7406\u5229\u7528travis ci,\u6211\u4eec\u5c31\u53ef\u4ee5\u9ad8\u6548\u7387\u5b8c\u6210\u670d\u52a1\u5668\u4e0a\u670d\u52a1\u7684\u66f4\u65b0\u3002\u5927\u5927\u589e\u52a0\u4e86\u6211\u4eec\u7684\u6548\u7387\u3002Github - Travis CI - Docker hub - VPS \u201c\u4e0d\u843d\u5730\u201d\u4e91\u8f6f\u4ef6\u5f00\u53d1\u6d41\u6c34\u7ebf\u5b9e\u6218\u5c31\u8bf4\u5230\u8fd9\u91cc\uff0c\u81f3\u4e8ecurl\u548chey\u7684\u6d4b\u8bd5\uff0c\u5927\u5bb6\u53ef\u4ee5\u5728\u9879\u76ee\u7684README\u4e2d\u770b\u5230\u3002","title":"Summary"},{"location":"ServiceComputingOnCloud/Go-Blog\u9879\u76ee\u4f53\u4f1a-\u4f7f\u7528MOCK\u670d\u52a1\u5f00\u53d1\u521d\u4f53\u9a8c/","text":"Go-Blog\u9879\u76ee\u4f53\u4f1a-\u4f7f\u7528MOCK\u670d\u52a1\u5f00\u53d1\u521d\u4f53\u9a8c \u672c\u6b21\u9879\u76ee\u4e2d\uff0c\u6211\u7b2c\u4e00\u6b21\u4f7f\u7528\u5230\u4e86swagger\u4ee5\u53camock\u670d\u52a1\uff0c\u534f\u4f5c\u524d\u540e\u7aef\u8fdb\u884c\u5206\u79bb\u5f00\u53d1\uff0c\u4f53\u4f1a\u5230\u4e86swagger\u4ee5\u53camock\u7684\u5f3a\u5927\u4e4b\u5904\uff0c\u6211\u4eec\u9996\u5148\u4e00\u8d77\u8bbe\u8ba1\u4e86\u540e\u7aef\u5e94\u8be5\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u5e76\u5b8c\u6210swagger\u6587\u6863\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u6211\u4eec\u8fd9\u6b21\u535a\u5ba2\u7684\u91cd\u70b9\u4e86\uff0c\u4f7f\u7528MOCK\u534f\u52a9\u5206\u79bb\u5f00\u53d1\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5728swaggerhub\u4e2d, Export \u6211\u4eec\u7684\u5199\u597d\u7684\u63a5\u53e3\u6587\u6863\uff0c\u5176\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2aswagger.json\u6587\u4ef6\u4f9b\u6211\u4eec\u4f7f\u7528\u3002 \u5f97\u5230\u4e86\u8fd9\u4e2ajson\u6587\u4ef6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u6211\u4eec\u559c\u6b22\u7684mock\u670d\u52a1\uff0c\u5bf9\u63a5\u53e3\u7684\u6570\u636e\u8fdb\u884c\u6a21\u62df\uff0c\u8fd9\u91cc\u6211\u9009\u62e9\u7684\u662f Easy Mock \u6ce8\u518c\u6210\u529f\u4e4b\u540e\uff0c\u6211\u4eec\u70b9\u51fb\u53f3\u4e0b\u89d2\u7684+,\u8fdb\u5165\u6dfb\u52a0\u9879\u76ee\u9875\u9762 \u586b\u597d\u57fa\u672c\u4fe1\u606f\u4e4b\u540e\uff0c\u628ajson\u62d6\u8fdb\u5bf9\u5e94\u7684\u5730\u65b9 \u70b9\u51fb\u521b\u5efa\uff0c\u6211\u4eec\u7684\u9879\u76ee\u5c31\u521b\u5efa\u5b8c\u6210\u4e86 \u70b9\u51fb\u8fdb\u5165\u65b0\u5efa\u7684\u9879\u76ee\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u751f\u6210\u7684\u63a5\u53e3\u4e86\uff0c\u5982\u679c\u90e8\u5206\u63a5\u53e3\u7684\u8fd4\u56de\u5185\u5bb9\u5728swagger\u4e2d\u4e0d\u65b9\u4fbf\u4e66\u5199\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u64cd\u4f5c\u7684\u7b2c\u4e8c\u4e2a\u6309\u94ae\uff0c\u66f4\u6df1\u5ea6\u5b9a\u4e49\u8fd4\u56de\u7684\u6570\u636e \u6211\u4eec\u9009\u53d6\u4e00\u9879\u8fdb\u884c\u4e3e\u4f8b \u6211\u4eec\u9009\u62e9GET /user/:id\u8fdb\u884c\u4e3e\u4f8b \u901a\u8fc7\u70b9\u51fb\u53f3\u8fb9\u64cd\u4f5c\u7b2c\u4e09\u4e2a\u6309\u94ae\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u590d\u5236\u5bf9\u5e94\u7684\u63a5\u53e3\u5730\u5740 \u6211\u4eec\u4f7f\u7528postman\u8fdb\u884c\u67e5\u770b\u8bf7\u6c42\u8fd4\u56de\u7684\u7ed3\u679c \u6709\u4e86\u8fd9\u4e48\u4e00\u4e2a\u4e1c\u897f\u4e4b\u540e\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u7b80\u5355\u7684\u9700\u6c42\uff0c\u6211\u4eec\u524d\u7aef\u548c\u540e\u7aef\u5c31\u4e00\u8fdb\u884c\u5206\u79bb\u7684\u5e76\u884c\u5f00\u53d1\u4e86 \u901a\u8fc7\u8fd9\u4e48\u4e2amock\u670d\u52a1\uff0c\u53ef\u4ee5\u8ba9\u524d\u7aef\u653b\u57ce\u5e08\u72ec\u7acb\u4e8e\u540e\u7aef\u8fdb\u884c\u5f00\u53d1\u5e76\u901a\u8fc7\u968f\u673a\u6570\u636e,\u6a21\u62df\u5404\u79cd\u573a\u666f\u3002\u4f53\u9a8c\u8fd8\u662f \u5f88\u4e0d\u9519\u7684\u3002","title":"Go-Blog\u9879\u76ee\u4f53\u4f1a-\u4f7f\u7528MOCK\u670d\u52a1\u5f00\u53d1\u521d\u4f53\u9a8c"},{"location":"ServiceComputingOnCloud/Go-Blog\u9879\u76ee\u4f53\u4f1a-\u4f7f\u7528MOCK\u670d\u52a1\u5f00\u53d1\u521d\u4f53\u9a8c/#go-blog-mock","text":"\u672c\u6b21\u9879\u76ee\u4e2d\uff0c\u6211\u7b2c\u4e00\u6b21\u4f7f\u7528\u5230\u4e86swagger\u4ee5\u53camock\u670d\u52a1\uff0c\u534f\u4f5c\u524d\u540e\u7aef\u8fdb\u884c\u5206\u79bb\u5f00\u53d1\uff0c\u4f53\u4f1a\u5230\u4e86swagger\u4ee5\u53camock\u7684\u5f3a\u5927\u4e4b\u5904\uff0c\u6211\u4eec\u9996\u5148\u4e00\u8d77\u8bbe\u8ba1\u4e86\u540e\u7aef\u5e94\u8be5\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u5e76\u5b8c\u6210swagger\u6587\u6863\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u6211\u4eec\u8fd9\u6b21\u535a\u5ba2\u7684\u91cd\u70b9\u4e86\uff0c\u4f7f\u7528MOCK\u534f\u52a9\u5206\u79bb\u5f00\u53d1\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5728swaggerhub\u4e2d, Export \u6211\u4eec\u7684\u5199\u597d\u7684\u63a5\u53e3\u6587\u6863\uff0c\u5176\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2aswagger.json\u6587\u4ef6\u4f9b\u6211\u4eec\u4f7f\u7528\u3002 \u5f97\u5230\u4e86\u8fd9\u4e2ajson\u6587\u4ef6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u6211\u4eec\u559c\u6b22\u7684mock\u670d\u52a1\uff0c\u5bf9\u63a5\u53e3\u7684\u6570\u636e\u8fdb\u884c\u6a21\u62df\uff0c\u8fd9\u91cc\u6211\u9009\u62e9\u7684\u662f Easy Mock \u6ce8\u518c\u6210\u529f\u4e4b\u540e\uff0c\u6211\u4eec\u70b9\u51fb\u53f3\u4e0b\u89d2\u7684+,\u8fdb\u5165\u6dfb\u52a0\u9879\u76ee\u9875\u9762 \u586b\u597d\u57fa\u672c\u4fe1\u606f\u4e4b\u540e\uff0c\u628ajson\u62d6\u8fdb\u5bf9\u5e94\u7684\u5730\u65b9 \u70b9\u51fb\u521b\u5efa\uff0c\u6211\u4eec\u7684\u9879\u76ee\u5c31\u521b\u5efa\u5b8c\u6210\u4e86 \u70b9\u51fb\u8fdb\u5165\u65b0\u5efa\u7684\u9879\u76ee\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u751f\u6210\u7684\u63a5\u53e3\u4e86\uff0c\u5982\u679c\u90e8\u5206\u63a5\u53e3\u7684\u8fd4\u56de\u5185\u5bb9\u5728swagger\u4e2d\u4e0d\u65b9\u4fbf\u4e66\u5199\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u64cd\u4f5c\u7684\u7b2c\u4e8c\u4e2a\u6309\u94ae\uff0c\u66f4\u6df1\u5ea6\u5b9a\u4e49\u8fd4\u56de\u7684\u6570\u636e \u6211\u4eec\u9009\u53d6\u4e00\u9879\u8fdb\u884c\u4e3e\u4f8b \u6211\u4eec\u9009\u62e9GET /user/:id\u8fdb\u884c\u4e3e\u4f8b \u901a\u8fc7\u70b9\u51fb\u53f3\u8fb9\u64cd\u4f5c\u7b2c\u4e09\u4e2a\u6309\u94ae\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u590d\u5236\u5bf9\u5e94\u7684\u63a5\u53e3\u5730\u5740 \u6211\u4eec\u4f7f\u7528postman\u8fdb\u884c\u67e5\u770b\u8bf7\u6c42\u8fd4\u56de\u7684\u7ed3\u679c \u6709\u4e86\u8fd9\u4e48\u4e00\u4e2a\u4e1c\u897f\u4e4b\u540e\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u7b80\u5355\u7684\u9700\u6c42\uff0c\u6211\u4eec\u524d\u7aef\u548c\u540e\u7aef\u5c31\u4e00\u8fdb\u884c\u5206\u79bb\u7684\u5e76\u884c\u5f00\u53d1\u4e86 \u901a\u8fc7\u8fd9\u4e48\u4e2amock\u670d\u52a1\uff0c\u53ef\u4ee5\u8ba9\u524d\u7aef\u653b\u57ce\u5e08\u72ec\u7acb\u4e8e\u540e\u7aef\u8fdb\u884c\u5f00\u53d1\u5e76\u901a\u8fc7\u968f\u673a\u6570\u636e,\u6a21\u62df\u5404\u79cd\u573a\u666f\u3002\u4f53\u9a8c\u8fd8\u662f \u5f88\u4e0d\u9519\u7684\u3002","title":"Go-Blog\u9879\u76ee\u4f53\u4f1a-\u4f7f\u7528MOCK\u670d\u52a1\u5f00\u53d1\u521d\u4f53\u9a8c"},{"location":"ServiceComputingOnCloud/Golang\u4f7f\u7528Travis CI\u5bf9\u9879\u76ee\u8fdb\u884c\u6301\u7eed\u96c6\u6210-\u521d\u4f53\u9a8c/","text":"Golang\u4f7f\u7528Travis CI\u5bf9\u9879\u76ee\u8fdb\u884c\u6301\u7eed\u96c6\u6210 - \u521d\u4f53\u9a8c \u57fa\u7840\u7684\u7528\u6cd5\u53ef\u4ee5\u770b\u770b\u962e\u4e00\u5cf0\u7684\u8fd9\u7bc7\u6587\u7ae0 \u6301\u7eed\u96c6\u6210\u670d\u52a1 Travis CI \u6559\u7a0b ,\u8fd9\u7bc7\u6587\u7ae0\u4e0a\u8bf4\u4e86\u4e00\u4e9b\u5173\u4e8eTravis CI\u7684\u57fa\u672c\u4f7f\u7528\u6280\u5de7\u3002\u4e0b\u9762\u8fd9\u7bc7\u535a\u5ba2\uff0c\u6211\u8bf4\u8bf4\u6211\u4eec\u8fd9\u4e2a\u9879\u76ee\u5bf9Travis CI\u7684\u5e94\u7528 \u9879\u76ee\u5730\u5740 https://github.com/zhongwq/Agenda-Golang \u5177\u4f53\u6d41\u7a0b \u6211\u4eec\u5148\u6765\u8bf4\u8bf4\u6211\u4eec\u7684\u4f7f\u7528\u6d41\u7a0b\u5427 \u9996\u5148\uff0c\u6309\u7167\u6559\u7a0b\u6240\u8bf4\u7684\uff0c\u6211\u4eec\u5148\u5728 Travis CI \u5b8c\u6210\u6ce8\u518c\uff0c\u4e0e\u6211\u4eec\u7684Github\u8d26\u6237\u8fdb\u884c\u7ed1\u5b9a\u3002 \u6211\u4eec\u9700\u8981\u5728Profile\u4e2d\u6fc0\u6d3b\u6211\u4eec\u7684\u9879\u76ee \u6fc0\u6d3b\u5b8c\u6210\u4e4b\u540e\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u6211\u4eec\u5355\u5143\u6d4b\u8bd5\u4ee5\u53ca.travis.yml\u7684\u4e66\u5199\u4e86 \u5355\u5143\u6d4b\u8bd5\u65b9\u9762\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4e0d\u4f5c\u7ec6\u8bb2\uff0c\u6709\u9700\u8981\u7684\u540c\u5b66\u53ef\u4ee5\u53bb\u8fd9\u4e2a\u7f51\u7ad9 [\u8bd1]GO \u4e2d\u5982\u4f55\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5 \u770b\u770b\u6709\u5173\u7684\u6559\u7a0b\uff0c\u6211\u89c9\u5f97\u8fd9\u4e2ablog\u5199\u7684\u8fd8\u662f\u5341\u5206\u6e05\u6670\u660e\u4e86\u7684\u3002 \u4e0b\u9762\u6211\u4eec\u4e3b\u8981\u8bf4\u8bf4golang\u5982\u4f55\u6b63\u786e\u4e66\u5199.travis.yml\u6587\u4ef6 language : go go : - 1.8 - tip go_import_path : # / before_install : - mv $HOME /gopath/src/github.com/zhongwq/Agenda-Golang $HOME/gopath/s rc script : - cd $HOME /gopath/src/ Agenda - Golang - go test - v ./... \u6211\u4eec\u8fd9\u6b21\u9879\u76ee\u7684.travis.yml\u6587\u4ef6\u5982\u4e0a\uff0c\u4e0b\u9762\u6211\u4eec\u8bf4\u4e00\u4e0b\u5404\u4e2a\u90e8\u5206\u5177\u4f53\u7684\u610f\u601d language\u6307\u7684\u662f\u6211\u4eec\u7684\u8fd0\u884c\u73af\u5883\uff0cgo\u91cc\u7684\u5185\u5bb9\u6307\u6211\u4eec\u9700\u8981\u6d4b\u8bd5\u7684go\u7684\u73af\u5883\uff0cbefore_install\u6307\u7684\u662f\u5b89\u88c5\u4f9d\u8d56\u524d\u8981\u6267\u884c\u7684\u547d\u4ee4\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u9879\u76ee\u662f\u9700\u8981\u653e\u5728$GOPATH/src\u4e2d\u8fd0\u884c\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u901a\u8fc7mv\u628a\u5176\u8f6c\u79fb\u5230\u91cc\u9762\uff0c\u7136\u540e\u5c31\u662f\u6211\u4eec\u7684script\u4e86\uff0c\u8fd9\u91cc\u6211\u4eec\u6253\u5f00\u5bf9\u5e94\u7684\u6587\u4ef6\u5939\uff0c\u8fd0\u884c\u6211\u4eec\u5b8c\u6210\u7684\u5355\u5143\u6d4b\u8bd5\u6587\u4ef6\uff0c\u6267\u884c\u547d\u4ee4go test -v ./...\u5373\u53ef \u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u4e00\u65e6\u63d0\u4ea4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u524d\u5f80Travis\u7684\u7f51\u9875\u67e5\u770b\u6211\u4eec\u9879\u76ee\u7684\u60c5\u51b5\u4e86\u3002\u82e5\u662f\u6210\u529f\uff0c\u6211\u4eec\u70b9\u8fdb\u6211\u4eec\u7684\u9879\u76ee\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u7684\u4fe1\u606f \u70b9\u51fb\u4e0a\u9762\u7eff\u8272\u7684pass\u6309\u94ae\uff0c\u9009\u62e9markdown\uff0c\u628a\u4e0b\u9762\u7684\u94fe\u63a5\u590d\u5236\uff0c\u7c98\u8d34\u5230\u6211\u4eec\u7684README.md\u4e2d \u7c98\u8d34\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230README\u4e2d\u51fa\u73b0\u4e86\u5f88\u591a\u5927\u7684\u5f00\u6e90\u9879\u76ee\u90fd\u6709\u7684\u6807\u5fd7 \u770b\u8d77\u6765\u8fd8\u662f\u6709\u70b9\u723d\u7684\u3002 \u4f53\u4f1a \u901a\u8fc7\u5728\u4e00\u4e2a\u9879\u76ee\u4e2d\u4f7f\u7528Travis\uff0c\u4e00\u65e6\u4efb\u4f55\u4eba\u5bf9\u4ee3\u7801\u5e93\u7684\u4efb\u4f55\u6539\u52a8\uff0c\u90fd\u4f1a\u89e6\u53d1\u6211\u4eecCI\u670d\u52a1\u5668\u81ea\u52a8\u5bf9\u9879\u76ee\u8fdb\u884c\u6784\u5efa\uff0c\u81ea\u52a8\u8fd0\u884c\u6d4b\u8bd5\uff0c\u751a\u81f3\u81ea\u52a8\u90e8\u7f72\u5230\u6d4b\u8bd5\u73af\u5883\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u5c31\u662f\uff0c\u968f\u65f6\u53d1\u73b0\u95ee\u9898\uff0c\u968f\u65f6\u4fee\u590d\u3002\u56e0\u4e3a\u4fee\u590d\u95ee\u9898\u7684\u6210\u672c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u589e\u957f\uff0c\u8d8a\u65e9\u53d1\u73b0\uff0c\u4fee\u590d\u6210\u672c\u8d8a\u4f4e\u3002\u8fd9\u6837\u5c31\u51cf\u5c11\u4e86\u5f88\u591a\u90e8\u7f72\u3001\u6d4b\u8bd5\u7684\u6210\u672c\uff0c\u4e5f\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u63d0\u9ad8\u4e86\u6211\u4eec\u7684\u5de5\u4f5c\u6548\u7387\u3002","title":"Golang\u4f7f\u7528Travis CI\u5bf9\u9879\u76ee\u8fdb\u884c\u6301\u7eed\u96c6\u6210-\u521d\u4f53\u9a8c"},{"location":"ServiceComputingOnCloud/Golang\u4f7f\u7528Travis CI\u5bf9\u9879\u76ee\u8fdb\u884c\u6301\u7eed\u96c6\u6210-\u521d\u4f53\u9a8c/#golangtravis-ci-","text":"\u57fa\u7840\u7684\u7528\u6cd5\u53ef\u4ee5\u770b\u770b\u962e\u4e00\u5cf0\u7684\u8fd9\u7bc7\u6587\u7ae0 \u6301\u7eed\u96c6\u6210\u670d\u52a1 Travis CI \u6559\u7a0b ,\u8fd9\u7bc7\u6587\u7ae0\u4e0a\u8bf4\u4e86\u4e00\u4e9b\u5173\u4e8eTravis CI\u7684\u57fa\u672c\u4f7f\u7528\u6280\u5de7\u3002\u4e0b\u9762\u8fd9\u7bc7\u535a\u5ba2\uff0c\u6211\u8bf4\u8bf4\u6211\u4eec\u8fd9\u4e2a\u9879\u76ee\u5bf9Travis CI\u7684\u5e94\u7528","title":"Golang\u4f7f\u7528Travis CI\u5bf9\u9879\u76ee\u8fdb\u884c\u6301\u7eed\u96c6\u6210 - \u521d\u4f53\u9a8c"},{"location":"ServiceComputingOnCloud/Golang\u4f7f\u7528Travis CI\u5bf9\u9879\u76ee\u8fdb\u884c\u6301\u7eed\u96c6\u6210-\u521d\u4f53\u9a8c/#_1","text":"https://github.com/zhongwq/Agenda-Golang","title":"\u9879\u76ee\u5730\u5740"},{"location":"ServiceComputingOnCloud/Golang\u4f7f\u7528Travis CI\u5bf9\u9879\u76ee\u8fdb\u884c\u6301\u7eed\u96c6\u6210-\u521d\u4f53\u9a8c/#_2","text":"\u6211\u4eec\u5148\u6765\u8bf4\u8bf4\u6211\u4eec\u7684\u4f7f\u7528\u6d41\u7a0b\u5427 \u9996\u5148\uff0c\u6309\u7167\u6559\u7a0b\u6240\u8bf4\u7684\uff0c\u6211\u4eec\u5148\u5728 Travis CI \u5b8c\u6210\u6ce8\u518c\uff0c\u4e0e\u6211\u4eec\u7684Github\u8d26\u6237\u8fdb\u884c\u7ed1\u5b9a\u3002 \u6211\u4eec\u9700\u8981\u5728Profile\u4e2d\u6fc0\u6d3b\u6211\u4eec\u7684\u9879\u76ee \u6fc0\u6d3b\u5b8c\u6210\u4e4b\u540e\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u6211\u4eec\u5355\u5143\u6d4b\u8bd5\u4ee5\u53ca.travis.yml\u7684\u4e66\u5199\u4e86 \u5355\u5143\u6d4b\u8bd5\u65b9\u9762\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4e0d\u4f5c\u7ec6\u8bb2\uff0c\u6709\u9700\u8981\u7684\u540c\u5b66\u53ef\u4ee5\u53bb\u8fd9\u4e2a\u7f51\u7ad9 [\u8bd1]GO \u4e2d\u5982\u4f55\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5 \u770b\u770b\u6709\u5173\u7684\u6559\u7a0b\uff0c\u6211\u89c9\u5f97\u8fd9\u4e2ablog\u5199\u7684\u8fd8\u662f\u5341\u5206\u6e05\u6670\u660e\u4e86\u7684\u3002 \u4e0b\u9762\u6211\u4eec\u4e3b\u8981\u8bf4\u8bf4golang\u5982\u4f55\u6b63\u786e\u4e66\u5199.travis.yml\u6587\u4ef6 language : go go : - 1.8 - tip go_import_path : # / before_install : - mv $HOME /gopath/src/github.com/zhongwq/Agenda-Golang $HOME/gopath/s rc script : - cd $HOME /gopath/src/ Agenda - Golang - go test - v ./... \u6211\u4eec\u8fd9\u6b21\u9879\u76ee\u7684.travis.yml\u6587\u4ef6\u5982\u4e0a\uff0c\u4e0b\u9762\u6211\u4eec\u8bf4\u4e00\u4e0b\u5404\u4e2a\u90e8\u5206\u5177\u4f53\u7684\u610f\u601d language\u6307\u7684\u662f\u6211\u4eec\u7684\u8fd0\u884c\u73af\u5883\uff0cgo\u91cc\u7684\u5185\u5bb9\u6307\u6211\u4eec\u9700\u8981\u6d4b\u8bd5\u7684go\u7684\u73af\u5883\uff0cbefore_install\u6307\u7684\u662f\u5b89\u88c5\u4f9d\u8d56\u524d\u8981\u6267\u884c\u7684\u547d\u4ee4\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u9879\u76ee\u662f\u9700\u8981\u653e\u5728$GOPATH/src\u4e2d\u8fd0\u884c\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u901a\u8fc7mv\u628a\u5176\u8f6c\u79fb\u5230\u91cc\u9762\uff0c\u7136\u540e\u5c31\u662f\u6211\u4eec\u7684script\u4e86\uff0c\u8fd9\u91cc\u6211\u4eec\u6253\u5f00\u5bf9\u5e94\u7684\u6587\u4ef6\u5939\uff0c\u8fd0\u884c\u6211\u4eec\u5b8c\u6210\u7684\u5355\u5143\u6d4b\u8bd5\u6587\u4ef6\uff0c\u6267\u884c\u547d\u4ee4go test -v ./...\u5373\u53ef \u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u4e00\u65e6\u63d0\u4ea4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u524d\u5f80Travis\u7684\u7f51\u9875\u67e5\u770b\u6211\u4eec\u9879\u76ee\u7684\u60c5\u51b5\u4e86\u3002\u82e5\u662f\u6210\u529f\uff0c\u6211\u4eec\u70b9\u8fdb\u6211\u4eec\u7684\u9879\u76ee\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u7684\u4fe1\u606f \u70b9\u51fb\u4e0a\u9762\u7eff\u8272\u7684pass\u6309\u94ae\uff0c\u9009\u62e9markdown\uff0c\u628a\u4e0b\u9762\u7684\u94fe\u63a5\u590d\u5236\uff0c\u7c98\u8d34\u5230\u6211\u4eec\u7684README.md\u4e2d \u7c98\u8d34\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230README\u4e2d\u51fa\u73b0\u4e86\u5f88\u591a\u5927\u7684\u5f00\u6e90\u9879\u76ee\u90fd\u6709\u7684\u6807\u5fd7 \u770b\u8d77\u6765\u8fd8\u662f\u6709\u70b9\u723d\u7684\u3002","title":"\u5177\u4f53\u6d41\u7a0b"},{"location":"ServiceComputingOnCloud/Golang\u4f7f\u7528Travis CI\u5bf9\u9879\u76ee\u8fdb\u884c\u6301\u7eed\u96c6\u6210-\u521d\u4f53\u9a8c/#_3","text":"\u901a\u8fc7\u5728\u4e00\u4e2a\u9879\u76ee\u4e2d\u4f7f\u7528Travis\uff0c\u4e00\u65e6\u4efb\u4f55\u4eba\u5bf9\u4ee3\u7801\u5e93\u7684\u4efb\u4f55\u6539\u52a8\uff0c\u90fd\u4f1a\u89e6\u53d1\u6211\u4eecCI\u670d\u52a1\u5668\u81ea\u52a8\u5bf9\u9879\u76ee\u8fdb\u884c\u6784\u5efa\uff0c\u81ea\u52a8\u8fd0\u884c\u6d4b\u8bd5\uff0c\u751a\u81f3\u81ea\u52a8\u90e8\u7f72\u5230\u6d4b\u8bd5\u73af\u5883\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u5c31\u662f\uff0c\u968f\u65f6\u53d1\u73b0\u95ee\u9898\uff0c\u968f\u65f6\u4fee\u590d\u3002\u56e0\u4e3a\u4fee\u590d\u95ee\u9898\u7684\u6210\u672c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u589e\u957f\uff0c\u8d8a\u65e9\u53d1\u73b0\uff0c\u4fee\u590d\u6210\u672c\u8d8a\u4f4e\u3002\u8fd9\u6837\u5c31\u51cf\u5c11\u4e86\u5f88\u591a\u90e8\u7f72\u3001\u6d4b\u8bd5\u7684\u6210\u672c\uff0c\u4e5f\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u63d0\u9ad8\u4e86\u6211\u4eec\u7684\u5de5\u4f5c\u6548\u7387\u3002","title":"\u4f53\u4f1a"},{"location":"ServiceComputingOnCloud/Golang\u7248\u672c\u7684 Selpg/","text":"Golang\u7248\u672c\u7684 Selpg Golang\u7248\u672c\u7684 Selpg \u5173\u4e8eSelpg\u7684\u8bf4\u660e \u5177\u4f53\u4ee3\u7801 \u5f00\u53d1\u8fc7\u7a0b \u7a0b\u5e8f\u603b\u4f53\u8bbe\u8ba1 \u8bfb\u53d6\u547d\u4ee4\u884c\u8f93\u5165\u7684\u6307\u4ee4\u5e76\u89e3\u6790\uff0c\u5c06\u5176\u4e2d\u7684\u53c2\u6570\u7ed3\u6784\u5316 \u68c0\u9a8c\u53c2\u6570\u662f\u5426\u5408\u6cd5 \u5b9e\u73b0\u547d\u4ee4\u5bf9\u5e94\u7684\u64cd\u4f5c \u8f93\u5165\u547d\u4ee4\u4e0d\u5408\u6cd5\u6216\u8005\u64cd\u4f5c\u51fa\u9519\u65f6\u7684\u63d0\u793a \u6d4b\u8bd5\u7a0b\u5e8f bash\u751f\u6210\u6d4b\u8bd5\u6570\u636e \u6d4b\u8bd5 \u5173\u4e8eSelpg\u7684\u8bf4\u660e \u5f00\u53d1Linux \u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f\u4e2d\u7684selpg Selpg\u7684C\u8bed\u8a00\u7248\u672c \u5177\u4f53\u4ee3\u7801 \u6211\u7684Github\u4ed3\u5e93 \u5f00\u53d1\u8fc7\u7a0b \u7a0b\u5e8f\u603b\u4f53\u8bbe\u8ba1 \u5728\u770b\u5b8c\u4e0a\u9762 \u5f00\u53d1Linux \u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f\u4e2d\u7684selpg \u7684\u5185\u5bb9\u4ee5\u53ca\u5206\u6790\u5b8c Selpg\u7684C\u8bed\u8a00\u7248\u672c \u540e\uff0c\u6211\u53d1\u73b0\u547d\u4ee4\u884c\u7a0b\u5e8f\u7684\u5f00\u53d1\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206: \u8bfb\u53d6\u547d\u4ee4\u884c\u8f93\u5165\u7684\u6307\u4ee4 \u89e3\u6790\u547d\u4ee4\uff0c\u5c06\u5176\u4e2d\u7684\u53c2\u6570\u7ed3\u6784\u5316\u5e76\u68c0\u9a8c\u662f\u5426\u5408\u6cd5 \u5b9e\u73b0\u547d\u4ee4\u5bf9\u5e94\u7684\u64cd\u4f5c \u8f93\u5165\u547d\u4ee4\u4e0d\u5408\u6cd5\u6216\u8005\u64cd\u4f5c\u51fa\u9519\u65f6\u7684\u63d0\u793a \u8bfb\u53d6\u547d\u4ee4\u884c\u8f93\u5165\u7684\u6307\u4ee4\u5e76\u89e3\u6790\uff0c\u5c06\u5176\u4e2d\u7684\u53c2\u6570\u7ed3\u6784\u5316 \u5728go\u7684\u5f00\u53d1\u4e2d\uff0c\u6211\u628a\u8bfb\u53d6\u6307\u4ee4\u53ca\u89e3\u6790\u53c2\u6570\u653e\u5230\u4e86\u4e00\u4e2a\u90e8\u5206\uff0c\u56e0\u4e3a\u5728golang\u4e2d\uff0c\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684flag(Pflag)\u5e93\uff0c\u6211\u4eec\u5f88\u8f7b\u677e\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u5b8c\u6210\u6307\u4ee4\u7684\u8bfb\u53d6\u4ee5\u53ca\u89e3\u6790\u5982\u4e0b: sa := new ( selpg_args ) // Get args by flag(Pflag) flag . IntVar ( & sa . start_page , \"s\" , - 1 , \"The start page\" ) flag . IntVar ( & sa . end_page , \"e\" , - 1 , \"The end page\" ) flag . IntVar ( & sa . page_len , \"l\" , - 1 , \"The length of the page\" ) flag . StringVar ( & sa . print_dest , \"d\" , \"\" , \"The destination to print\" ) f_flag := flag . Bool ( \"f\" , false , \"\" ) flag . Parse () if * f_flag { sa . page_type = false sa . page_len = - 1 } else { sa . page_type = true // page_type default True } sa . in_filename = \"\" if flag . NArg () == 1 { sa . in_filename = flag . Arg ( 0 ) } \u7531\u4e8e\u9898\u76ee\u8981\u6c42\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662fPflag, \u5728\u5bfc\u5165\u7684\u65f6\u5019\uff0c\u76f4\u63a5 import flag \"github.com/spf13/pflag\"\u5373\u53ef\uff0c\u901a\u8fc7\u8be5\u5e93\uff0c\u8fd9\u4e00\u6b65\u5f88\u5feb\u5c31\u5f97\u4ee5\u5b8c\u6210\u6307\u4ee4\u7684\u8bfb\u53d6\u4e0e\u89e3\u6790 \u68c0\u9a8c\u53c2\u6570\u662f\u5426\u5408\u6cd5 \u8fd9\u4e00\u6b65\u4e3b\u8981\u662f\u68c0\u9a8c\u53c2\u6570\u662f\u5426\u8fc7\u591a, start_page\u548cend_page\u662f\u5426\u8f93\u5165\u4e14\u8f93\u5165\u662f\u5426\u5408\u6cd5\u4ee5\u53ca--l\u548c--f\u662f\u5426\u51b2\u7a81\uff0c\u56e0\u4e3a\u6211\u4eec\u7684start_page\u548cend_page\u521d\u59cb\u4e3a-1\uff0c\u68c0\u9a8c\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e0\u4e0d\u4ec5\u80fd\u68c0\u9a8c\u662f\u5426\u5408\u6cd5\uff0c\u8fd8\u80fd\u68c0\u9a8c\u662f\u5426\u8f93\u5165\u4e86start_page\u548cend_page func validate_args ( sa selpg_args , rest int ) { // \u68c0\u9a8c\u8f93\u5165\u53c2\u6570\u662f\u5426\u5408\u6cd5\uff0crest\u4e3a\u5269\u4f59\u7684\u53c2\u6570\u6570\u76ee if rest > 1 { fmt . Fprintf ( os . Stderr , \"./selpg: too much arguments\\n\" ) usage () os . Exit ( 1 ) } if sa . start_page <= 0 || sa . end_page <= 0 || sa . end_page < sa . start_page { fmt . Fprintf ( os . Stderr , \"./selpg: Invalid start, end page or line number\" ) usage () os . Exit ( 1 ) } if sa . page_type == false && sa . page_len != - 1 { fmt . Fprintf ( os . Stderr , \"./selpg: Conflict flags: -f and -l\" ) usage () os . Exit ( 1 ) } } \u5b9e\u73b0\u547d\u4ee4\u5bf9\u5e94\u7684\u64cd\u4f5c \u6309\u7167c\u8bed\u8a00\u7248\u672c\u7684\u7a0b\u5e8f\uff0c\u6211\u4eec\u5bf9\u5e94\u52a0\u4e0a\u9700\u8981\u4f7f\u7528\u7684\u53c2\u6570 // initial fin := os . Stdin fout := os . Stdout line_ctr := 0 /* line counter */ page_ctr := 1 /* page counter */ var inpipe io . WriteCloser var err error // store err msg \u5224\u65ad\u6709\u65e0\u8f93\u5165\u6587\u4ef6\uff0c\u5373\u5224\u65ad\u662f\u952e\u76d8\u8f93\u5165\u8fd8\u662f\u6587\u4ef6\u8f93\u5165 if sa . in_filename != \"\" { fin , err = os . Open ( sa . in_filename ) if err != nil { fmt . Fprintf ( os . Stderr , \"./selpg: could not open input file \\\"%s\\\"\\n\" , sa . in_filename ) usage () os . Exit ( 1 ) } defer fin . Close () // \u51fd\u6570\u8fd4\u56de\u524d\u6267\u884cfin.Close() } \u5224\u65ad\u8f93\u51fa\u65b9\u5f0f if sa . print_dest != \"\" { cmd := exec . Command ( \"lp\" , \"-d\" , sa . print_dest ) inpipe , err = cmd . StdinPipe () if err != nil { fmt . Fprintf ( os . Stderr , \"could not open pipe to \\\"%s\\\"\\n\" , sa . print_dest ) usage () os . Exit ( 1 ) } defer inpipe . Close () cmd . Stdout = fout cmd . Start () } \u6839\u636e\u5206\u9875\u65b9\u5f0f\u8fdb\u884c\u8bfb\u5165 if sa . page_type == true { line := bufio . NewScanner ( fin ) for line . Scan () { if page_ctr >= sa . start_page && page_ctr <= sa . end_page { fout . Write ([] byte ( line . Text () + \"\\n\" )) if sa . print_dest != \"\" { inpipe . Write ([] byte ( line . Text () + \"\\n\" )) } } line_ctr ++ if line_ctr == sa . page_len { page_ctr ++ line_ctr = 0 } } } else { reader := bufio . NewReader ( fin ) for { pageContent , err := reader . ReadString ( '\\f' ) if err != nil || err == io . EOF { if err == io . EOF { if page_ctr >= sa . start_page && page_ctr <= sa . end_page { fmt . Fprintf ( fout , \"%s\" , pageContent ) } } } break pageContent = strings . Replace ( pageContent , \"\\f\" , \"\" , - 1 ) page_ctr ++ if page_ctr >= sa . start_page && page_ctr <= sa . end_page { fmt . Fprintf ( fout , \"%s\" , pageContent ) } } } \u5224\u65ad\u9875\u6570\u662f\u5426\u6709\u8bef if page_ctr < sa . start_page { fmt . Fprintf ( os . Stderr , \"./selpg: start_page (%d) greater than total pages (%d), less output than expected\\n\" , sa . start_page , page_ctr ) } else if page_ctr < sa . end_page { fmt . Fprintf ( os . Stderr , \"./selpg: end_page (%d) greater than total pages (%d), less output than expected\\n\" , sa . end_page , page_ctr ) } \u8f93\u5165\u547d\u4ee4\u4e0d\u5408\u6cd5\u6216\u8005\u64cd\u4f5c\u51fa\u9519\u65f6\u7684\u63d0\u793a \u5bf9\u5e94\u539fc\u8bed\u8a00\u7a0b\u5e8f\u4e2d\u7684Usage\u51fd\u6570 func usage () { fmt . Fprintf ( os . Stderr , \"\\nUSAGE: ./selpg --s start_page --e end_page [ --f | --l lines_per_page ] [ --d dest ] [ in_filename ]\\n\" ) } \u6d4b\u8bd5\u7a0b\u5e8f bash\u751f\u6210\u6d4b\u8bd5\u6570\u636e \u4f7f\u7528bash\u81ea\u52a8\u751f\u6210\u6211\u4eec\u9700\u8981\u7684\u6d4b\u8bd5\u7a0b\u5e8f for (( i = 1 ; i< 200 ; i++ )) do echo \"line\" $i >> test done for (( i = 1 ; i< 20 ; i += 4 )) do echo \"line\" $i >> testpage echo \"line\" $i +1 >> testpage echo \"line\" $i +2 >> testpage echo \"line\" $i +3 >> testpage echo -e '\\f' >> testpage done \u6d4b\u8bd5 $./selpg --s 1 --e 1 test \u7ed3\u679c\u8f93\u51faline1-199,\u6b63\u786e $./selpg --s 1 --e 3 testpage $./selpg --s 1 --e 2 --f testpage ./selpg --s 1 --e 2 testpage 2 >error_file ./selpg --s 1 --e 2 testpage >output_file 2 >error_file","title":"Golang\u7248\u672c\u7684 Selpg"},{"location":"ServiceComputingOnCloud/Golang\u7248\u672c\u7684 Selpg/#golang-selpg","text":"Golang\u7248\u672c\u7684 Selpg \u5173\u4e8eSelpg\u7684\u8bf4\u660e \u5177\u4f53\u4ee3\u7801 \u5f00\u53d1\u8fc7\u7a0b \u7a0b\u5e8f\u603b\u4f53\u8bbe\u8ba1 \u8bfb\u53d6\u547d\u4ee4\u884c\u8f93\u5165\u7684\u6307\u4ee4\u5e76\u89e3\u6790\uff0c\u5c06\u5176\u4e2d\u7684\u53c2\u6570\u7ed3\u6784\u5316 \u68c0\u9a8c\u53c2\u6570\u662f\u5426\u5408\u6cd5 \u5b9e\u73b0\u547d\u4ee4\u5bf9\u5e94\u7684\u64cd\u4f5c \u8f93\u5165\u547d\u4ee4\u4e0d\u5408\u6cd5\u6216\u8005\u64cd\u4f5c\u51fa\u9519\u65f6\u7684\u63d0\u793a \u6d4b\u8bd5\u7a0b\u5e8f bash\u751f\u6210\u6d4b\u8bd5\u6570\u636e \u6d4b\u8bd5","title":"Golang\u7248\u672c\u7684 Selpg"},{"location":"ServiceComputingOnCloud/Golang\u7248\u672c\u7684 Selpg/#selpg","text":"\u5f00\u53d1Linux \u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f\u4e2d\u7684selpg Selpg\u7684C\u8bed\u8a00\u7248\u672c","title":"\u5173\u4e8eSelpg\u7684\u8bf4\u660e"},{"location":"ServiceComputingOnCloud/Golang\u7248\u672c\u7684 Selpg/#_1","text":"\u6211\u7684Github\u4ed3\u5e93","title":"\u5177\u4f53\u4ee3\u7801"},{"location":"ServiceComputingOnCloud/Golang\u7248\u672c\u7684 Selpg/#_2","text":"","title":"\u5f00\u53d1\u8fc7\u7a0b"},{"location":"ServiceComputingOnCloud/Golang\u7248\u672c\u7684 Selpg/#_3","text":"\u5728\u770b\u5b8c\u4e0a\u9762 \u5f00\u53d1Linux \u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f\u4e2d\u7684selpg \u7684\u5185\u5bb9\u4ee5\u53ca\u5206\u6790\u5b8c Selpg\u7684C\u8bed\u8a00\u7248\u672c \u540e\uff0c\u6211\u53d1\u73b0\u547d\u4ee4\u884c\u7a0b\u5e8f\u7684\u5f00\u53d1\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206: \u8bfb\u53d6\u547d\u4ee4\u884c\u8f93\u5165\u7684\u6307\u4ee4 \u89e3\u6790\u547d\u4ee4\uff0c\u5c06\u5176\u4e2d\u7684\u53c2\u6570\u7ed3\u6784\u5316\u5e76\u68c0\u9a8c\u662f\u5426\u5408\u6cd5 \u5b9e\u73b0\u547d\u4ee4\u5bf9\u5e94\u7684\u64cd\u4f5c \u8f93\u5165\u547d\u4ee4\u4e0d\u5408\u6cd5\u6216\u8005\u64cd\u4f5c\u51fa\u9519\u65f6\u7684\u63d0\u793a","title":"\u7a0b\u5e8f\u603b\u4f53\u8bbe\u8ba1"},{"location":"ServiceComputingOnCloud/Golang\u7248\u672c\u7684 Selpg/#_4","text":"\u5728go\u7684\u5f00\u53d1\u4e2d\uff0c\u6211\u628a\u8bfb\u53d6\u6307\u4ee4\u53ca\u89e3\u6790\u53c2\u6570\u653e\u5230\u4e86\u4e00\u4e2a\u90e8\u5206\uff0c\u56e0\u4e3a\u5728golang\u4e2d\uff0c\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684flag(Pflag)\u5e93\uff0c\u6211\u4eec\u5f88\u8f7b\u677e\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u5b8c\u6210\u6307\u4ee4\u7684\u8bfb\u53d6\u4ee5\u53ca\u89e3\u6790\u5982\u4e0b: sa := new ( selpg_args ) // Get args by flag(Pflag) flag . IntVar ( & sa . start_page , \"s\" , - 1 , \"The start page\" ) flag . IntVar ( & sa . end_page , \"e\" , - 1 , \"The end page\" ) flag . IntVar ( & sa . page_len , \"l\" , - 1 , \"The length of the page\" ) flag . StringVar ( & sa . print_dest , \"d\" , \"\" , \"The destination to print\" ) f_flag := flag . Bool ( \"f\" , false , \"\" ) flag . Parse () if * f_flag { sa . page_type = false sa . page_len = - 1 } else { sa . page_type = true // page_type default True } sa . in_filename = \"\" if flag . NArg () == 1 { sa . in_filename = flag . Arg ( 0 ) } \u7531\u4e8e\u9898\u76ee\u8981\u6c42\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662fPflag, \u5728\u5bfc\u5165\u7684\u65f6\u5019\uff0c\u76f4\u63a5 import flag \"github.com/spf13/pflag\"\u5373\u53ef\uff0c\u901a\u8fc7\u8be5\u5e93\uff0c\u8fd9\u4e00\u6b65\u5f88\u5feb\u5c31\u5f97\u4ee5\u5b8c\u6210\u6307\u4ee4\u7684\u8bfb\u53d6\u4e0e\u89e3\u6790","title":"\u8bfb\u53d6\u547d\u4ee4\u884c\u8f93\u5165\u7684\u6307\u4ee4\u5e76\u89e3\u6790\uff0c\u5c06\u5176\u4e2d\u7684\u53c2\u6570\u7ed3\u6784\u5316"},{"location":"ServiceComputingOnCloud/Golang\u7248\u672c\u7684 Selpg/#_5","text":"\u8fd9\u4e00\u6b65\u4e3b\u8981\u662f\u68c0\u9a8c\u53c2\u6570\u662f\u5426\u8fc7\u591a, start_page\u548cend_page\u662f\u5426\u8f93\u5165\u4e14\u8f93\u5165\u662f\u5426\u5408\u6cd5\u4ee5\u53ca--l\u548c--f\u662f\u5426\u51b2\u7a81\uff0c\u56e0\u4e3a\u6211\u4eec\u7684start_page\u548cend_page\u521d\u59cb\u4e3a-1\uff0c\u68c0\u9a8c\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e0\u4e0d\u4ec5\u80fd\u68c0\u9a8c\u662f\u5426\u5408\u6cd5\uff0c\u8fd8\u80fd\u68c0\u9a8c\u662f\u5426\u8f93\u5165\u4e86start_page\u548cend_page func validate_args ( sa selpg_args , rest int ) { // \u68c0\u9a8c\u8f93\u5165\u53c2\u6570\u662f\u5426\u5408\u6cd5\uff0crest\u4e3a\u5269\u4f59\u7684\u53c2\u6570\u6570\u76ee if rest > 1 { fmt . Fprintf ( os . Stderr , \"./selpg: too much arguments\\n\" ) usage () os . Exit ( 1 ) } if sa . start_page <= 0 || sa . end_page <= 0 || sa . end_page < sa . start_page { fmt . Fprintf ( os . Stderr , \"./selpg: Invalid start, end page or line number\" ) usage () os . Exit ( 1 ) } if sa . page_type == false && sa . page_len != - 1 { fmt . Fprintf ( os . Stderr , \"./selpg: Conflict flags: -f and -l\" ) usage () os . Exit ( 1 ) } }","title":"\u68c0\u9a8c\u53c2\u6570\u662f\u5426\u5408\u6cd5"},{"location":"ServiceComputingOnCloud/Golang\u7248\u672c\u7684 Selpg/#_6","text":"\u6309\u7167c\u8bed\u8a00\u7248\u672c\u7684\u7a0b\u5e8f\uff0c\u6211\u4eec\u5bf9\u5e94\u52a0\u4e0a\u9700\u8981\u4f7f\u7528\u7684\u53c2\u6570 // initial fin := os . Stdin fout := os . Stdout line_ctr := 0 /* line counter */ page_ctr := 1 /* page counter */ var inpipe io . WriteCloser var err error // store err msg \u5224\u65ad\u6709\u65e0\u8f93\u5165\u6587\u4ef6\uff0c\u5373\u5224\u65ad\u662f\u952e\u76d8\u8f93\u5165\u8fd8\u662f\u6587\u4ef6\u8f93\u5165 if sa . in_filename != \"\" { fin , err = os . Open ( sa . in_filename ) if err != nil { fmt . Fprintf ( os . Stderr , \"./selpg: could not open input file \\\"%s\\\"\\n\" , sa . in_filename ) usage () os . Exit ( 1 ) } defer fin . Close () // \u51fd\u6570\u8fd4\u56de\u524d\u6267\u884cfin.Close() } \u5224\u65ad\u8f93\u51fa\u65b9\u5f0f if sa . print_dest != \"\" { cmd := exec . Command ( \"lp\" , \"-d\" , sa . print_dest ) inpipe , err = cmd . StdinPipe () if err != nil { fmt . Fprintf ( os . Stderr , \"could not open pipe to \\\"%s\\\"\\n\" , sa . print_dest ) usage () os . Exit ( 1 ) } defer inpipe . Close () cmd . Stdout = fout cmd . Start () } \u6839\u636e\u5206\u9875\u65b9\u5f0f\u8fdb\u884c\u8bfb\u5165 if sa . page_type == true { line := bufio . NewScanner ( fin ) for line . Scan () { if page_ctr >= sa . start_page && page_ctr <= sa . end_page { fout . Write ([] byte ( line . Text () + \"\\n\" )) if sa . print_dest != \"\" { inpipe . Write ([] byte ( line . Text () + \"\\n\" )) } } line_ctr ++ if line_ctr == sa . page_len { page_ctr ++ line_ctr = 0 } } } else { reader := bufio . NewReader ( fin ) for { pageContent , err := reader . ReadString ( '\\f' ) if err != nil || err == io . EOF { if err == io . EOF { if page_ctr >= sa . start_page && page_ctr <= sa . end_page { fmt . Fprintf ( fout , \"%s\" , pageContent ) } } } break pageContent = strings . Replace ( pageContent , \"\\f\" , \"\" , - 1 ) page_ctr ++ if page_ctr >= sa . start_page && page_ctr <= sa . end_page { fmt . Fprintf ( fout , \"%s\" , pageContent ) } } } \u5224\u65ad\u9875\u6570\u662f\u5426\u6709\u8bef if page_ctr < sa . start_page { fmt . Fprintf ( os . Stderr , \"./selpg: start_page (%d) greater than total pages (%d), less output than expected\\n\" , sa . start_page , page_ctr ) } else if page_ctr < sa . end_page { fmt . Fprintf ( os . Stderr , \"./selpg: end_page (%d) greater than total pages (%d), less output than expected\\n\" , sa . end_page , page_ctr ) }","title":"\u5b9e\u73b0\u547d\u4ee4\u5bf9\u5e94\u7684\u64cd\u4f5c"},{"location":"ServiceComputingOnCloud/Golang\u7248\u672c\u7684 Selpg/#_7","text":"\u5bf9\u5e94\u539fc\u8bed\u8a00\u7a0b\u5e8f\u4e2d\u7684Usage\u51fd\u6570 func usage () { fmt . Fprintf ( os . Stderr , \"\\nUSAGE: ./selpg --s start_page --e end_page [ --f | --l lines_per_page ] [ --d dest ] [ in_filename ]\\n\" ) }","title":"\u8f93\u5165\u547d\u4ee4\u4e0d\u5408\u6cd5\u6216\u8005\u64cd\u4f5c\u51fa\u9519\u65f6\u7684\u63d0\u793a"},{"location":"ServiceComputingOnCloud/Golang\u7248\u672c\u7684 Selpg/#_8","text":"","title":"\u6d4b\u8bd5\u7a0b\u5e8f"},{"location":"ServiceComputingOnCloud/Golang\u7248\u672c\u7684 Selpg/#bash","text":"\u4f7f\u7528bash\u81ea\u52a8\u751f\u6210\u6211\u4eec\u9700\u8981\u7684\u6d4b\u8bd5\u7a0b\u5e8f for (( i = 1 ; i< 200 ; i++ )) do echo \"line\" $i >> test done for (( i = 1 ; i< 20 ; i += 4 )) do echo \"line\" $i >> testpage echo \"line\" $i +1 >> testpage echo \"line\" $i +2 >> testpage echo \"line\" $i +3 >> testpage echo -e '\\f' >> testpage done","title":"bash\u751f\u6210\u6d4b\u8bd5\u6570\u636e"},{"location":"ServiceComputingOnCloud/Golang\u7248\u672c\u7684 Selpg/#_9","text":"$./selpg --s 1 --e 1 test \u7ed3\u679c\u8f93\u51faline1-199,\u6b63\u786e $./selpg --s 1 --e 3 testpage $./selpg --s 1 --e 2 --f testpage ./selpg --s 1 --e 2 testpage 2 >error_file ./selpg --s 1 --e 2 testpage >output_file 2 >error_file","title":"\u6d4b\u8bd5"},{"location":"ServiceComputingOnCloud/Go\u8bed\u8a00 - gPRC\u5b9e\u6218/","text":"Go\u8bed\u8a00 - gPRC\u5b9e\u6218 \u73af\u5883\u914d\u7f6e Protocol Buffers\u5b89\u88c5 \u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684Protobuf\u5b89\u88c5\u5305 wget https://github.com/protocolbuffers/protobuf/releases/download/v3.6.1/protobuf-all-3.6.1.tar.gz \u89e3\u538b\u5b89\u88c5\u5305 tar zxvf protobuf-all-3.6.1.tar.gz \u5b89\u88c5Protobuf cd protobuf-3.6.1/ ./configure && make && sudo make install \u5b89\u88c5 Protobuf Golang \u63d2\u4ef6 go get -u -v github.com/golang/protobuf/protoc-gen-go \u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f protoc --version \u5b89\u88c5gRPC \u56e0\u4e3a\u6211\u4eec\u5904\u4e8e\u5899\u5185\uff0c\u7f51\u7edc\u73af\u5883\u4e0d\u5141\u8bb8\u6211\u4eec\u76f4\u63a5\u6267\u884c go get -u -v google.golang.org/grpc \u6211\u4eec\u9700\u8981\u5982\u4e0b\u64cd\u4f5c\u8fdb\u884c\u5b89\u88c5 \u5728 GOPATH \u4e0b\u521b\u5efa google.golang.org \u76ee\u5f55 mkdir -p $GOPATH/src/google.golang.org/ cd $GOPATH/src/google.golang.org/ \u4e0b\u8f7d gRPC \u6700\u65b0\u4ee3\u7801\u5e76\u89e3\u538b wget https://github.com/grpc/grpc-go/archive/master.tar.gz tar zxvf master.tar.gz mv grpc-go-master/ grpc \u5b89\u88c5 gRPC go install google.golang.org/grpc \u82e5\u53d1\u751f\u4f9d\u8d56\u5e93\u7f3a\u5931\u9519\u8bef, \u5219\u5b89\u88c5 golang.org/x/* \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u811a\u672c\u5b8c\u6210 1 2 3 4 5 6 7 #!/bin/bash MODULES = \"crypto net oauth2 sys text tools\" for module in ${ MODULES } do wget https://github.com/golang/ ${ module } /archive/master.tar.gz -O ${ GOPATH } /src/golang.org/x/ ${ module } .tar.gz cd ${ GOPATH } /src/golang.org/x && tar zxvf ${ module } .tar.gz && mv ${ module } -master/ ${ module } done \u5b89\u88c5 google.golang.org/genproto wget https://github.com/google/go-genproto/archive/master.tar.gz -O ${ GOPATH } /src/google.golang.org/genproto.tar.gz cd ${ GOPATH } /src/google.golang.org && tar zxvf genproto.tar.gz && mv go-genproto-master genproto \u5b8c\u6210\u4f9d\u8d56\u5b89\u88c5\u540e\uff0c\u518d\u6267\u884cgo install google.golang.org/grpc \u6211\u4eec\u7684gRPC\u5b89\u88c5\u5c31\u5b8c\u6210\u4e86 \u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684gRPC\u670d\u52a1 \u6211\u4eec\u5c31\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684helloworld\u5427 \u5148\u521b\u5efa\u6211\u4eec\u7684helloworld.proto syntax = \"proto3\" ; option java_package = \"io.grpc.examples\" ; package helloworld ; // The greeter service definition. service Greeter { // Sends a greeting rpc SayHello ( HelloRequest ) returns ( HelloReply ) {} } // The request message containing the user's name. message HelloRequest { string name = 1 ; } // The response message containing the greetings message HelloReply { string message = 1 ; } \u5bf9\u5176\u8fdb\u884c\u7f16\u8bd1 protoc --go_out=plugins=grpc:. helloworld.proto \u7f16\u8bd1\u5b8c\u53ef\u4ee5\u770b\u5230\u5bf9\u5e94\u76ee\u5f55\u751f\u6210\u4e86\u4e00\u4e2apb.go\u6587\u4ef6\uff0c\u56e0\u4e3a\u8fd9\u91cc\u7528\u4e86plugins\u9009\u9879\uff0c\u63d0\u4f9b\u5bf9grpc\u7684\u652f\u6301\uff0c\u6240\u4ee5\u751f\u6210Service\u7684\u63a5\u53e3\u3002 \u751f\u6210\u7684\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b // Code generated by protoc - gen - go . DO NOT EDIT . // source : helloworld . proto package helloworld import ( context \"context\" fmt \"fmt\" proto \"github.com/golang/protobuf/proto\" grpc \"google.golang.org/grpc\" math \"math\" ) // Reference imports to suppress errors if they are not otherwise used . var _ = proto . Marshal var _ = fmt . Errorf var _ = math . Inf // This is a compile - time assertion to ensure that this generated file // is compatible with the proto package it is being compiled against . // A compilation error at this line likely means your copy of the // proto package needs to be updated . const _ = proto . ProtoPackageIsVersion3 // please upgrade the proto package // The request message containing the user 's name. type HelloRequest struct { Name string `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"` XXX_NoUnkeyedLiteral struct {} `json:\"-\"` XXX_unrecognized [] byte `json:\"-\"` XXX_sizecache int32 `json:\"-\"` } func ( m * HelloRequest ) Reset () { * m = HelloRequest {} } func ( m * HelloRequest ) String () string { return proto . CompactTextString ( m ) } func ( * HelloRequest ) ProtoMessage () {} func ( * HelloRequest ) Descriptor () ([] byte , [] int ) { return fileDescriptor_17b8c58d586b62f2 , [] int { 0 } } func ( m * HelloRequest ) XXX_Unmarshal ( b [] byte ) error { return xxx_messageInfo_HelloRequest . Unmarshal ( m , b ) } func ( m * HelloRequest ) XXX_Marshal ( b [] byte , deterministic bool ) ([] byte , error ) { return xxx_messageInfo_HelloRequest . Marshal ( b , m , deterministic ) } func ( m * HelloRequest ) XXX_Merge ( src proto . Message ) { xxx_messageInfo_HelloRequest . Merge ( m , src ) } func ( m * HelloRequest ) XXX_Size () int { return xxx_messageInfo_HelloRequest . Size ( m ) } func ( m * HelloRequest ) XXX_DiscardUnknown () { xxx_messageInfo_HelloRequest . DiscardUnknown ( m ) } var xxx_messageInfo_HelloRequest proto . InternalMessageInfo func ( m * HelloRequest ) GetName () string { if m != nil { return m . Name } return \"\" } // The response message containing the greetings type HelloReply struct { Message string `protobuf:\"bytes,1,opt,name=message,proto3\" json:\"message,omitempty\"` XXX_NoUnkeyedLiteral struct {} `json:\"-\"` XXX_unrecognized [] byte `json:\"-\"` XXX_sizecache int32 `json:\"-\"` } func ( m * HelloReply ) Reset () { * m = HelloReply {} } func ( m * HelloReply ) String () string { return proto . CompactTextString ( m ) } func ( * HelloReply ) ProtoMessage () {} func ( * HelloReply ) Descriptor () ([] byte , [] int ) { return fileDescriptor_17b8c58d586b62f2 , [] int { 1 } } func ( m * HelloReply ) XXX_Unmarshal ( b [] byte ) error { return xxx_messageInfo_HelloReply . Unmarshal ( m , b ) } func ( m * HelloReply ) XXX_Marshal ( b [] byte , deterministic bool ) ([] byte , error ) { return xxx_messageInfo_HelloReply . Marshal ( b , m , deterministic ) } func ( m * HelloReply ) XXX_Merge ( src proto . Message ) { xxx_messageInfo_HelloReply . Merge ( m , src ) } func ( m * HelloReply ) XXX_Size () int { return xxx_messageInfo_HelloReply . Size ( m ) } func ( m * HelloReply ) XXX_DiscardUnknown () { xxx_messageInfo_HelloReply . DiscardUnknown ( m ) } var xxx_messageInfo_HelloReply proto . InternalMessageInfo func ( m * HelloReply ) GetMessage () string { if m != nil { return m . Message } return \"\" } func init () { proto . RegisterType (( * HelloRequest )( nil ), \"helloworld.HelloRequest\" ) proto . RegisterType (( * HelloReply )( nil ), \"helloworld.HelloReply\" ) } func init () { proto . RegisterFile ( \"helloworld.proto\" , fileDescriptor_17b8c58d586b62f2 ) } var fileDescriptor_17b8c58d586b62f2 = [] byte { // 161 bytes of a gzipped FileDescriptorProto 0x1f , 0x8b , 0x08 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x02 , 0xff , 0xe2 , 0x12 , 0xc8 , 0x48 , 0xcd , 0xc9 , 0xc9 , 0x2f , 0xcf , 0x2f , 0xca , 0x49 , 0xd1 , 0x2b , 0x28 , 0xca , 0x2f , 0xc9 , 0x17 , 0xe2 , 0x42 , 0x88 , 0x28 , 0x29 , 0x71 , 0xf1 , 0x78 , 0x80 , 0x78 , 0x41 , 0xa9 , 0x85 , 0xa5 , 0xa9 , 0xc5 , 0x25 , 0x42 , 0x42 , 0x5c , 0x2c , 0x79 , 0x89 , 0xb9 , 0xa9 , 0x12 , 0x8c , 0x0a , 0x8c , 0x1a , 0x9c , 0x41 , 0x60 , 0xb6 , 0x92 , 0x1a , 0x17 , 0x17 , 0x54 , 0x4d , 0x41 , 0x4e , 0xa5 , 0x90 , 0x04 , 0x17 , 0x7b , 0x6e , 0x6a , 0x71 , 0x71 , 0x62 , 0x3a , 0x4c , 0x11 , 0x8c , 0x6b , 0xe4 , 0xc9 , 0xc5 , 0xee , 0x5e , 0x94 , 0x9a , 0x5a , 0x92 , 0x5a , 0x24 , 0x64 , 0xc7 , 0xc5 , 0x11 , 0x9c , 0x58 , 0x09 , 0xd6 , 0x25 , 0x24 , 0xa1 , 0x87 , 0xe4 , 0x02 , 0x64 , 0xcb , 0xa4 , 0xc4 , 0xb0 , 0xc8 , 0x14 , 0xe4 , 0x54 , 0x2a , 0x31 , 0x38 , 0x09 , 0x71 , 0x09 , 0x64 , 0xe6 , 0xeb , 0xa5 , 0x17 , 0x15 , 0x24 , 0xeb , 0xa5 , 0x56 , 0x24 , 0xe6 , 0x16 , 0xe4 , 0xa4 , 0x16 , 0x27 , 0xb1 , 0x81 , 0x5d , 0x6f , 0x0c , 0x08 , 0x00 , 0x00 , 0xff , 0xff , 0xa1 , 0xa6 , 0xfd , 0x48 , 0xd1 , 0x00 , 0x00 , 0x00 , } // Reference imports to suppress errors if they are not otherwise used . var _ context . Context var _ grpc . ClientConn // This is a compile - time assertion to ensure that this generated file // is compatible with the grpc package it is being compiled against . const _ = grpc . SupportPackageIsVersion4 // GreeterClient is the client API for Greeter service . // // For semantics around ctx use and closing / ending streaming RPCs , please refer to https : // godoc . org / google . golang . org / grpc #ClientConn.NewStream. type GreeterClient interface { // Sends a greeting SayHello ( ctx context . Context , in * HelloRequest , opts ... grpc . CallOption ) ( * HelloReply , error ) } type greeterClient struct { cc * grpc . ClientConn } func NewGreeterClient ( cc * grpc . ClientConn ) GreeterClient { return & greeterClient { cc } } func ( c * greeterClient ) SayHello ( ctx context . Context , in * HelloRequest , opts ... grpc . CallOption ) ( * HelloReply , error ) { out : = new ( HelloReply ) err : = c . cc . Invoke ( ctx , \"/helloworld.Greeter/SayHello\" , in , out , opts ... ) if err != nil { return nil , err } return out , nil } // GreeterServer is the server API for Greeter service . type GreeterServer interface { // Sends a greeting SayHello ( context . Context , * HelloRequest ) ( * HelloReply , error ) } func RegisterGreeterServer ( s * grpc . Server , srv GreeterServer ) { s . RegisterService ( & _Greeter_serviceDesc , srv ) } func _Greeter_SayHello_Handler ( srv interface {}, ctx context . Context , dec func ( interface {}) error , interceptor grpc . UnaryServerInterceptor ) ( interface {}, error ) { in : = new ( HelloRequest ) if err : = dec ( in ); err != nil { return nil , err } if interceptor == nil { return srv . ( GreeterServer ) . SayHello ( ctx , in ) } info : = & grpc . UnaryServerInfo { Server : srv , FullMethod : \"/helloworld.Greeter/SayHello\" , } handler : = func ( ctx context . Context , req interface {}) ( interface {}, error ) { return srv . ( GreeterServer ) . SayHello ( ctx , req . ( * HelloRequest )) } return interceptor ( ctx , in , info , handler ) } var _Greeter_serviceDesc = grpc . ServiceDesc { ServiceName : \"helloworld.Greeter\" , HandlerType : ( * GreeterServer )( nil ), Methods : [] grpc . MethodDesc { { MethodName : \"SayHello\" , Handler : _Greeter_SayHello_Handler , }, }, Streams : [] grpc . StreamDesc {}, Metadata : \"helloworld.proto\" , } Client.go package main import ( \"log\" \"os\" pb \"awesomeProject2/helloworld\" \"golang.org/x/net/context\" \"google.golang.org/grpc\" ) const ( address = \"localhost:50051\" defaultName = \"world\" ) func main () { // Set up a connection to the server. conn , err := grpc . Dial ( address , grpc . WithInsecure ()) if err != nil { log . Fatalf ( \"did not connect: %v\" , err ) } defer conn . Close () c := pb . NewGreeterClient ( conn ) // Contact the server and print out its response. name := defaultName if len ( os . Args ) > 1 { name = os . Args [ 1 ] } r , err := c . SayHello ( context . Background (), & pb . HelloRequest { Name : name }) if err != nil { log . Fatalf ( \"could not greet: %v\" , err ) } log . Printf ( \"Greeting: %s\" , r . Message ) } \u8fd9\u91cc\u901a\u8fc7pb.NewGreeterClient()\u4f20\u5165\u4e00\u4e2aconn\u521b\u5efa\u4e00\u4e2aclient\uff0c\u7136\u540e\u76f4\u63a5\u8c03\u7528client\u4e0a\u9762\u5bf9\u5e94\u7684\u670d\u52a1\u5668\u7684\u63a5\u53e3\uff0c\u8fd4\u56de*HelloReply \u5bf9\u8c61\uff0c\u7a0b\u5e8f\u518d\u5bf9\u8fd4\u56de\u5185\u5bb9\u8fdb\u884c\u8f93\u51fa Server.go package main import ( \"log\" \"net\" pb \"awesomeProject2/helloworld\" \"golang.org/x/net/context\" \"google.golang.org/grpc\" ) const ( port = \":50051\" ) // server is used to implement helloworld.GreeterServer. type server struct {} // SayHello implements helloworld.GreeterServer func ( s * server ) SayHello ( ctx context . Context , in * pb . HelloRequest ) ( * pb . HelloReply , error ) { log . Printf ( \"Received: %s\" , in . Name ) return & pb . HelloReply { Message : \"Hello \" + in . Name }, nil } func main () { lis , err := net . Listen ( \"tcp\" , port ) if err != nil { log . Fatalf ( \"failed to listen: %v\" , err ) } s := grpc . NewServer () pb . RegisterGreeterServer ( s , & server {}) s . Serve ( lis ) } Server\u8fd9\u91cc\u9996\u5148\u5b9a\u4e49\u4e00\u4e2aserver\u7ed3\u6784\uff0c\u7136\u540e\u5b9e\u73b0SayHello\u7684\u63a5\u53e3\uff0c\u5176\u5b9a\u4e49\u5728\u6211\u4eec\u90a3\u4e2apb.go\u6587\u4ef6\u4e2d \u7136\u540e\u6211\u4eec\u8c03\u7528grpc.NewServer() \u521b\u5efa\u4e00\u4e2aserver s\u3002\u63a5\u7740\u6ce8\u518c\u8fd9\u4e2aserver s\u5230\u7ed3\u6784server\u4e0a\u9762 pb.RegisterGreeterServer(s, &server{}) \u6700\u540e\u5c06\u521b\u5efa\u7684net.Listener\u4f20\u7ed9s.Serve()\u3002\u5c31\u53ef\u4ee5\u5f00\u59cb\u76d1\u542c\u5e76\u670d\u52a1\u4e86\u3002 \u8fd0\u884c\u67e5\u770b\u7ed3\u679c \u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u4f5c\u4e3a\u670d\u52a1\u5668 go run server.go \u6253\u5f00\u4e00\u4e2a\u4f5c\u4e3a\u5ba2\u6237\u673a go run client.go \u67e5\u770b\u7ed3\u679c Server go run server.go 2019/01/17 14:09:45 Received: world 2019/01/17 14:09:48 Received: world Client 2019/01/17 14:09:48 Greeting: Hello world","title":"Go\u8bed\u8a00 - gPRC\u5b9e\u6218"},{"location":"ServiceComputingOnCloud/Go\u8bed\u8a00 - gPRC\u5b9e\u6218/#go-gprc","text":"","title":"Go\u8bed\u8a00 - gPRC\u5b9e\u6218"},{"location":"ServiceComputingOnCloud/Go\u8bed\u8a00 - gPRC\u5b9e\u6218/#_1","text":"","title":"\u73af\u5883\u914d\u7f6e"},{"location":"ServiceComputingOnCloud/Go\u8bed\u8a00 - gPRC\u5b9e\u6218/#protocol-buffers","text":"\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684Protobuf\u5b89\u88c5\u5305 wget https://github.com/protocolbuffers/protobuf/releases/download/v3.6.1/protobuf-all-3.6.1.tar.gz \u89e3\u538b\u5b89\u88c5\u5305 tar zxvf protobuf-all-3.6.1.tar.gz \u5b89\u88c5Protobuf cd protobuf-3.6.1/ ./configure && make && sudo make install \u5b89\u88c5 Protobuf Golang \u63d2\u4ef6 go get -u -v github.com/golang/protobuf/protoc-gen-go \u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f protoc --version","title":"Protocol Buffers\u5b89\u88c5"},{"location":"ServiceComputingOnCloud/Go\u8bed\u8a00 - gPRC\u5b9e\u6218/#grpc","text":"\u56e0\u4e3a\u6211\u4eec\u5904\u4e8e\u5899\u5185\uff0c\u7f51\u7edc\u73af\u5883\u4e0d\u5141\u8bb8\u6211\u4eec\u76f4\u63a5\u6267\u884c go get -u -v google.golang.org/grpc \u6211\u4eec\u9700\u8981\u5982\u4e0b\u64cd\u4f5c\u8fdb\u884c\u5b89\u88c5 \u5728 GOPATH \u4e0b\u521b\u5efa google.golang.org \u76ee\u5f55 mkdir -p $GOPATH/src/google.golang.org/ cd $GOPATH/src/google.golang.org/ \u4e0b\u8f7d gRPC \u6700\u65b0\u4ee3\u7801\u5e76\u89e3\u538b wget https://github.com/grpc/grpc-go/archive/master.tar.gz tar zxvf master.tar.gz mv grpc-go-master/ grpc \u5b89\u88c5 gRPC go install google.golang.org/grpc \u82e5\u53d1\u751f\u4f9d\u8d56\u5e93\u7f3a\u5931\u9519\u8bef, \u5219\u5b89\u88c5 golang.org/x/* \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u811a\u672c\u5b8c\u6210 1 2 3 4 5 6 7 #!/bin/bash MODULES = \"crypto net oauth2 sys text tools\" for module in ${ MODULES } do wget https://github.com/golang/ ${ module } /archive/master.tar.gz -O ${ GOPATH } /src/golang.org/x/ ${ module } .tar.gz cd ${ GOPATH } /src/golang.org/x && tar zxvf ${ module } .tar.gz && mv ${ module } -master/ ${ module } done","title":"\u5b89\u88c5gRPC"},{"location":"ServiceComputingOnCloud/Go\u8bed\u8a00 - gPRC\u5b9e\u6218/#googlegolangorggenproto","text":"wget https://github.com/google/go-genproto/archive/master.tar.gz -O ${ GOPATH } /src/google.golang.org/genproto.tar.gz cd ${ GOPATH } /src/google.golang.org && tar zxvf genproto.tar.gz && mv go-genproto-master genproto \u5b8c\u6210\u4f9d\u8d56\u5b89\u88c5\u540e\uff0c\u518d\u6267\u884cgo install google.golang.org/grpc \u6211\u4eec\u7684gRPC\u5b89\u88c5\u5c31\u5b8c\u6210\u4e86","title":"\u5b89\u88c5 google.golang.org/genproto"},{"location":"ServiceComputingOnCloud/Go\u8bed\u8a00 - gPRC\u5b9e\u6218/#grpc_1","text":"\u6211\u4eec\u5c31\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684helloworld\u5427 \u5148\u521b\u5efa\u6211\u4eec\u7684helloworld.proto syntax = \"proto3\" ; option java_package = \"io.grpc.examples\" ; package helloworld ; // The greeter service definition. service Greeter { // Sends a greeting rpc SayHello ( HelloRequest ) returns ( HelloReply ) {} } // The request message containing the user's name. message HelloRequest { string name = 1 ; } // The response message containing the greetings message HelloReply { string message = 1 ; } \u5bf9\u5176\u8fdb\u884c\u7f16\u8bd1 protoc --go_out=plugins=grpc:. helloworld.proto \u7f16\u8bd1\u5b8c\u53ef\u4ee5\u770b\u5230\u5bf9\u5e94\u76ee\u5f55\u751f\u6210\u4e86\u4e00\u4e2apb.go\u6587\u4ef6\uff0c\u56e0\u4e3a\u8fd9\u91cc\u7528\u4e86plugins\u9009\u9879\uff0c\u63d0\u4f9b\u5bf9grpc\u7684\u652f\u6301\uff0c\u6240\u4ee5\u751f\u6210Service\u7684\u63a5\u53e3\u3002 \u751f\u6210\u7684\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b // Code generated by protoc - gen - go . DO NOT EDIT . // source : helloworld . proto package helloworld import ( context \"context\" fmt \"fmt\" proto \"github.com/golang/protobuf/proto\" grpc \"google.golang.org/grpc\" math \"math\" ) // Reference imports to suppress errors if they are not otherwise used . var _ = proto . Marshal var _ = fmt . Errorf var _ = math . Inf // This is a compile - time assertion to ensure that this generated file // is compatible with the proto package it is being compiled against . // A compilation error at this line likely means your copy of the // proto package needs to be updated . const _ = proto . ProtoPackageIsVersion3 // please upgrade the proto package // The request message containing the user 's name. type HelloRequest struct { Name string `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"` XXX_NoUnkeyedLiteral struct {} `json:\"-\"` XXX_unrecognized [] byte `json:\"-\"` XXX_sizecache int32 `json:\"-\"` } func ( m * HelloRequest ) Reset () { * m = HelloRequest {} } func ( m * HelloRequest ) String () string { return proto . CompactTextString ( m ) } func ( * HelloRequest ) ProtoMessage () {} func ( * HelloRequest ) Descriptor () ([] byte , [] int ) { return fileDescriptor_17b8c58d586b62f2 , [] int { 0 } } func ( m * HelloRequest ) XXX_Unmarshal ( b [] byte ) error { return xxx_messageInfo_HelloRequest . Unmarshal ( m , b ) } func ( m * HelloRequest ) XXX_Marshal ( b [] byte , deterministic bool ) ([] byte , error ) { return xxx_messageInfo_HelloRequest . Marshal ( b , m , deterministic ) } func ( m * HelloRequest ) XXX_Merge ( src proto . Message ) { xxx_messageInfo_HelloRequest . Merge ( m , src ) } func ( m * HelloRequest ) XXX_Size () int { return xxx_messageInfo_HelloRequest . Size ( m ) } func ( m * HelloRequest ) XXX_DiscardUnknown () { xxx_messageInfo_HelloRequest . DiscardUnknown ( m ) } var xxx_messageInfo_HelloRequest proto . InternalMessageInfo func ( m * HelloRequest ) GetName () string { if m != nil { return m . Name } return \"\" } // The response message containing the greetings type HelloReply struct { Message string `protobuf:\"bytes,1,opt,name=message,proto3\" json:\"message,omitempty\"` XXX_NoUnkeyedLiteral struct {} `json:\"-\"` XXX_unrecognized [] byte `json:\"-\"` XXX_sizecache int32 `json:\"-\"` } func ( m * HelloReply ) Reset () { * m = HelloReply {} } func ( m * HelloReply ) String () string { return proto . CompactTextString ( m ) } func ( * HelloReply ) ProtoMessage () {} func ( * HelloReply ) Descriptor () ([] byte , [] int ) { return fileDescriptor_17b8c58d586b62f2 , [] int { 1 } } func ( m * HelloReply ) XXX_Unmarshal ( b [] byte ) error { return xxx_messageInfo_HelloReply . Unmarshal ( m , b ) } func ( m * HelloReply ) XXX_Marshal ( b [] byte , deterministic bool ) ([] byte , error ) { return xxx_messageInfo_HelloReply . Marshal ( b , m , deterministic ) } func ( m * HelloReply ) XXX_Merge ( src proto . Message ) { xxx_messageInfo_HelloReply . Merge ( m , src ) } func ( m * HelloReply ) XXX_Size () int { return xxx_messageInfo_HelloReply . Size ( m ) } func ( m * HelloReply ) XXX_DiscardUnknown () { xxx_messageInfo_HelloReply . DiscardUnknown ( m ) } var xxx_messageInfo_HelloReply proto . InternalMessageInfo func ( m * HelloReply ) GetMessage () string { if m != nil { return m . Message } return \"\" } func init () { proto . RegisterType (( * HelloRequest )( nil ), \"helloworld.HelloRequest\" ) proto . RegisterType (( * HelloReply )( nil ), \"helloworld.HelloReply\" ) } func init () { proto . RegisterFile ( \"helloworld.proto\" , fileDescriptor_17b8c58d586b62f2 ) } var fileDescriptor_17b8c58d586b62f2 = [] byte { // 161 bytes of a gzipped FileDescriptorProto 0x1f , 0x8b , 0x08 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x02 , 0xff , 0xe2 , 0x12 , 0xc8 , 0x48 , 0xcd , 0xc9 , 0xc9 , 0x2f , 0xcf , 0x2f , 0xca , 0x49 , 0xd1 , 0x2b , 0x28 , 0xca , 0x2f , 0xc9 , 0x17 , 0xe2 , 0x42 , 0x88 , 0x28 , 0x29 , 0x71 , 0xf1 , 0x78 , 0x80 , 0x78 , 0x41 , 0xa9 , 0x85 , 0xa5 , 0xa9 , 0xc5 , 0x25 , 0x42 , 0x42 , 0x5c , 0x2c , 0x79 , 0x89 , 0xb9 , 0xa9 , 0x12 , 0x8c , 0x0a , 0x8c , 0x1a , 0x9c , 0x41 , 0x60 , 0xb6 , 0x92 , 0x1a , 0x17 , 0x17 , 0x54 , 0x4d , 0x41 , 0x4e , 0xa5 , 0x90 , 0x04 , 0x17 , 0x7b , 0x6e , 0x6a , 0x71 , 0x71 , 0x62 , 0x3a , 0x4c , 0x11 , 0x8c , 0x6b , 0xe4 , 0xc9 , 0xc5 , 0xee , 0x5e , 0x94 , 0x9a , 0x5a , 0x92 , 0x5a , 0x24 , 0x64 , 0xc7 , 0xc5 , 0x11 , 0x9c , 0x58 , 0x09 , 0xd6 , 0x25 , 0x24 , 0xa1 , 0x87 , 0xe4 , 0x02 , 0x64 , 0xcb , 0xa4 , 0xc4 , 0xb0 , 0xc8 , 0x14 , 0xe4 , 0x54 , 0x2a , 0x31 , 0x38 , 0x09 , 0x71 , 0x09 , 0x64 , 0xe6 , 0xeb , 0xa5 , 0x17 , 0x15 , 0x24 , 0xeb , 0xa5 , 0x56 , 0x24 , 0xe6 , 0x16 , 0xe4 , 0xa4 , 0x16 , 0x27 , 0xb1 , 0x81 , 0x5d , 0x6f , 0x0c , 0x08 , 0x00 , 0x00 , 0xff , 0xff , 0xa1 , 0xa6 , 0xfd , 0x48 , 0xd1 , 0x00 , 0x00 , 0x00 , } // Reference imports to suppress errors if they are not otherwise used . var _ context . Context var _ grpc . ClientConn // This is a compile - time assertion to ensure that this generated file // is compatible with the grpc package it is being compiled against . const _ = grpc . SupportPackageIsVersion4 // GreeterClient is the client API for Greeter service . // // For semantics around ctx use and closing / ending streaming RPCs , please refer to https : // godoc . org / google . golang . org / grpc #ClientConn.NewStream. type GreeterClient interface { // Sends a greeting SayHello ( ctx context . Context , in * HelloRequest , opts ... grpc . CallOption ) ( * HelloReply , error ) } type greeterClient struct { cc * grpc . ClientConn } func NewGreeterClient ( cc * grpc . ClientConn ) GreeterClient { return & greeterClient { cc } } func ( c * greeterClient ) SayHello ( ctx context . Context , in * HelloRequest , opts ... grpc . CallOption ) ( * HelloReply , error ) { out : = new ( HelloReply ) err : = c . cc . Invoke ( ctx , \"/helloworld.Greeter/SayHello\" , in , out , opts ... ) if err != nil { return nil , err } return out , nil } // GreeterServer is the server API for Greeter service . type GreeterServer interface { // Sends a greeting SayHello ( context . Context , * HelloRequest ) ( * HelloReply , error ) } func RegisterGreeterServer ( s * grpc . Server , srv GreeterServer ) { s . RegisterService ( & _Greeter_serviceDesc , srv ) } func _Greeter_SayHello_Handler ( srv interface {}, ctx context . Context , dec func ( interface {}) error , interceptor grpc . UnaryServerInterceptor ) ( interface {}, error ) { in : = new ( HelloRequest ) if err : = dec ( in ); err != nil { return nil , err } if interceptor == nil { return srv . ( GreeterServer ) . SayHello ( ctx , in ) } info : = & grpc . UnaryServerInfo { Server : srv , FullMethod : \"/helloworld.Greeter/SayHello\" , } handler : = func ( ctx context . Context , req interface {}) ( interface {}, error ) { return srv . ( GreeterServer ) . SayHello ( ctx , req . ( * HelloRequest )) } return interceptor ( ctx , in , info , handler ) } var _Greeter_serviceDesc = grpc . ServiceDesc { ServiceName : \"helloworld.Greeter\" , HandlerType : ( * GreeterServer )( nil ), Methods : [] grpc . MethodDesc { { MethodName : \"SayHello\" , Handler : _Greeter_SayHello_Handler , }, }, Streams : [] grpc . StreamDesc {}, Metadata : \"helloworld.proto\" , } Client.go package main import ( \"log\" \"os\" pb \"awesomeProject2/helloworld\" \"golang.org/x/net/context\" \"google.golang.org/grpc\" ) const ( address = \"localhost:50051\" defaultName = \"world\" ) func main () { // Set up a connection to the server. conn , err := grpc . Dial ( address , grpc . WithInsecure ()) if err != nil { log . Fatalf ( \"did not connect: %v\" , err ) } defer conn . Close () c := pb . NewGreeterClient ( conn ) // Contact the server and print out its response. name := defaultName if len ( os . Args ) > 1 { name = os . Args [ 1 ] } r , err := c . SayHello ( context . Background (), & pb . HelloRequest { Name : name }) if err != nil { log . Fatalf ( \"could not greet: %v\" , err ) } log . Printf ( \"Greeting: %s\" , r . Message ) } \u8fd9\u91cc\u901a\u8fc7pb.NewGreeterClient()\u4f20\u5165\u4e00\u4e2aconn\u521b\u5efa\u4e00\u4e2aclient\uff0c\u7136\u540e\u76f4\u63a5\u8c03\u7528client\u4e0a\u9762\u5bf9\u5e94\u7684\u670d\u52a1\u5668\u7684\u63a5\u53e3\uff0c\u8fd4\u56de*HelloReply \u5bf9\u8c61\uff0c\u7a0b\u5e8f\u518d\u5bf9\u8fd4\u56de\u5185\u5bb9\u8fdb\u884c\u8f93\u51fa Server.go package main import ( \"log\" \"net\" pb \"awesomeProject2/helloworld\" \"golang.org/x/net/context\" \"google.golang.org/grpc\" ) const ( port = \":50051\" ) // server is used to implement helloworld.GreeterServer. type server struct {} // SayHello implements helloworld.GreeterServer func ( s * server ) SayHello ( ctx context . Context , in * pb . HelloRequest ) ( * pb . HelloReply , error ) { log . Printf ( \"Received: %s\" , in . Name ) return & pb . HelloReply { Message : \"Hello \" + in . Name }, nil } func main () { lis , err := net . Listen ( \"tcp\" , port ) if err != nil { log . Fatalf ( \"failed to listen: %v\" , err ) } s := grpc . NewServer () pb . RegisterGreeterServer ( s , & server {}) s . Serve ( lis ) } Server\u8fd9\u91cc\u9996\u5148\u5b9a\u4e49\u4e00\u4e2aserver\u7ed3\u6784\uff0c\u7136\u540e\u5b9e\u73b0SayHello\u7684\u63a5\u53e3\uff0c\u5176\u5b9a\u4e49\u5728\u6211\u4eec\u90a3\u4e2apb.go\u6587\u4ef6\u4e2d \u7136\u540e\u6211\u4eec\u8c03\u7528grpc.NewServer() \u521b\u5efa\u4e00\u4e2aserver s\u3002\u63a5\u7740\u6ce8\u518c\u8fd9\u4e2aserver s\u5230\u7ed3\u6784server\u4e0a\u9762 pb.RegisterGreeterServer(s, &server{}) \u6700\u540e\u5c06\u521b\u5efa\u7684net.Listener\u4f20\u7ed9s.Serve()\u3002\u5c31\u53ef\u4ee5\u5f00\u59cb\u76d1\u542c\u5e76\u670d\u52a1\u4e86\u3002","title":"\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684gRPC\u670d\u52a1"},{"location":"ServiceComputingOnCloud/Go\u8bed\u8a00 - gPRC\u5b9e\u6218/#_2","text":"\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u4f5c\u4e3a\u670d\u52a1\u5668 go run server.go \u6253\u5f00\u4e00\u4e2a\u4f5c\u4e3a\u5ba2\u6237\u673a go run client.go \u67e5\u770b\u7ed3\u679c Server go run server.go 2019/01/17 14:09:45 Received: world 2019/01/17 14:09:48 Received: world Client 2019/01/17 14:09:48 Greeting: Hello world","title":"\u8fd0\u884c\u67e5\u770b\u7ed3\u679c"},{"location":"ServiceComputingOnCloud/MacOS VirtualBox \u914d\u7f6eUbuntu\u57fa\u672c\u73af\u5883/","text":"MacOS VirtualBox \u914d\u7f6eUbuntu\u57fa\u672c\u73af\u5883 \u90e8\u5206\u4f7f\u7528Mac\u7684\u540c\u5b66\u7684VirtualBox\u5b89\u88c5\u6709\u95ee\u9898\uff0c\u8fd9\u4e3b\u8981\u53ef\u80fd\u662fMacOS\u963b\u6b62\u4e86\u5b89\u88c5\u7a0b\u5e8f\u7684\u5b89\u88c5\uff0c\u5728\u5b89\u5168\u6027\u4e0e\u9690\u79c1\u4e0b\u9762\u8fd9\u4e2a\u6846\u91cc\u540c\u610f\u5c31\u53ef\u4ee5\u4e86(\u6211\u662f\u8fd9\u4e48\u89e3\u51b3\u7684\uff0c\u4e0d\u77e5\u9053\u5bf9\u540c\u5b66\u4eec\u6709\u6ca1\u5e2e\u52a9) \u7ecf\u8fc7\u601d\u8003\uff0c\u4e2a\u4eba\u5bf9\u4e8eUbuntu\u7684\u4f7f\u7528\u4ee5\u53ca\u5404\u65b9\u9762\u7684\u914d\u7f6e\u6bd4\u8f83\u719f\u6089\uff0c\u6240\u4ee5\u5728CentOS\u4ee5\u53caUbuntu\u4e4b\u95f4\uff0c\u6211\u9009\u62e9\u4e86Ubuntu\u4f5c\u4e3a\u8fd9\u6b21\u670d\u52a1\u8ba1\u7b97\u7684\u5b66\u4e60\u73af\u5883\uff0c\u56e0\u4e3a\u6211\u7684\u7535\u8111\u4e4b\u524d\u5220\u6389\u4e86\u4e4b\u524dVmware Fusion\u5b89\u88c5\u8fc7\u7684Ubuntu\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u7528\u6211\u7684\u7b14\u8bb0\u672c\u4f5c\u4e3a\u793a\u8303 \u6210\u529f\u5b89\u88c5\u4e86VirtualBox\u540e\uff0c\u5176\u5b9e\u6d41\u7a0b\u633a\u7b80\u5355\u7684\uff0c\u5c31\u662f\u5b89\u88c5\u63d0\u793a\u521b\u5efa\u65b0\u7684\u865a\u62df\u673a \u9009\u62e9\u4e0b\u8f7d\u597d\u7684\u955c\u50cf \u5f00\u542f\u865a\u62df\u673a\uff0c\u5b89\u88c5\u63d0\u793a\u5b89\u88c5\u597d\u5c31\u53ef\u4ee5\u4e86 \u4e0b\u9762\u8bf4\u8bf4\u4e00\u4e9b\u589e\u5f3a\u4f53\u9a8c\u7684\u4e1c\u897f Ubuntu\u5b89\u88c5\u8f93\u5165\u6cd5 \u8f93\u5165\u6cd5\u7684\u8bdd\u6211\u9009\u62e9\u7684\u662fsogou\u62fc\u97f3 \u8fd9\u91cc\u6709\u76f8\u5173\u7684\u6559\u7a0b Ubuntu16.04 \u641c\u72d7\u62fc\u97f3\u5b89\u88c5 \u53cc\u5411\u7c98\u8d34\u3001\u6587\u4ef6\u62d6\u62fd(\u5916\u5230\u5185) \u9996\u5148\u5728\u8bbe\u5907\u8bbe\u7f6e>\u5e38\u89c4>\u9ad8\u7ea7\u949f\u8bbe\u7f6e\u5171\u4eab\u7c98\u8d34\u677f\u3001\u62d6\u653e\u4e3a\u53cc\u5411 \u6253\u5f00\u865a\u62df\u673a\uff0c\u70b9\u51fb\u4e0a\u9762 Device > Install Guest Additions CD images\u5c31\u53ef\u4ee5\u5b89\u88c5VirtualBox\u7684\u589e\u5f3a\u529f\u80fd,\u5b89\u88c5\u5b8c\u6210\uff0c\u91cd\u542f\u540e\uff0c\u4e5f\u5c31\u80fd\u591f\u4f7f\u6211\u4eec\u7684\u7cfb\u7edf\u80fd\u591f\u6b63\u786e\u4f7f\u7528\u4e0a\u9762\u6211\u4eec\u9009\u62e9\u7684\u529f\u80fd\u4e86 \u63d0\u4f9b\u8fdc\u7a0b\u7f51\u7edc\u8bbf\u95ee(maybe\u51fa\u79df\u5229\u5668\u54c8\u54c8?) \u8fd9\u4e2a\u4e4b\u524d\u5176\u5b9e\u6211\u5c31\u6b63\u5728\u6211\u7684\u7535\u8111\u4e3b\u673a\u4e0a\u7528\uff0c\u63d0\u4f9b\u4e00\u4e2a\u5728\u6821\u5185\u7ed9\u672c\u4eba\u4f5c\u4f7f\u7528\u7684\u4e00\u4e2a\u865a\u62df\u73af\u5883\u3002\u4e0d\u8fc7\u4e4b\u524d\u662f\u4f7f\u7528\u7684Vmware,\u73b0\u5728\u5728\u8fd9\u91cc\u6211\u4eec\u770b\u770b\u5982\u4f55\u5728VirtualBox\u4e2d\u5f00\u542f\u8fd9\u4e2a\u529f\u80fd \u5728https://www.virtualbox.org/wiki/Downloads \u4e2d\u4e0b\u8f7dVirtualBox 5.2.18 Oracle VM VirtualBox Extension Pack \u5728\u8bbe\u7f6e\u7684\u62d3\u5c55\u4e2d\u9009\u62e9\u5176\u8fdb\u884c\u5b89\u88c5\uff0c\u5b8c\u6210\u540e\u6211\u4eec\u5c31\u80fd\u5728\u865a\u62df\u673a\u7684\u8bbe\u7f6e\u7684\u663e\u793a\u9879\u76ee\u91cc\u8fdb\u884c\u8bbe\u7f6e \u8bbe\u7f6e\u5b8c\u6210\u540e\uff0c\u91cd\u542f\u8f6f\u4ef6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86 Windows\u81ea\u5e26\u7684\u8fdc\u7a0b\u684c\u9762\u8fde\u63a5\u5c31\u53ef\u4ee5\u8fde\u4e0a\u6211\u4eec\u7684\u865a\u62df\u673a","title":"MacOS VirtualBox \u914d\u7f6eUbuntu\u57fa\u672c\u73af\u5883"},{"location":"ServiceComputingOnCloud/MacOS VirtualBox \u914d\u7f6eUbuntu\u57fa\u672c\u73af\u5883/#macos-virtualbox-ubuntu","text":"\u90e8\u5206\u4f7f\u7528Mac\u7684\u540c\u5b66\u7684VirtualBox\u5b89\u88c5\u6709\u95ee\u9898\uff0c\u8fd9\u4e3b\u8981\u53ef\u80fd\u662fMacOS\u963b\u6b62\u4e86\u5b89\u88c5\u7a0b\u5e8f\u7684\u5b89\u88c5\uff0c\u5728\u5b89\u5168\u6027\u4e0e\u9690\u79c1\u4e0b\u9762\u8fd9\u4e2a\u6846\u91cc\u540c\u610f\u5c31\u53ef\u4ee5\u4e86(\u6211\u662f\u8fd9\u4e48\u89e3\u51b3\u7684\uff0c\u4e0d\u77e5\u9053\u5bf9\u540c\u5b66\u4eec\u6709\u6ca1\u5e2e\u52a9) \u7ecf\u8fc7\u601d\u8003\uff0c\u4e2a\u4eba\u5bf9\u4e8eUbuntu\u7684\u4f7f\u7528\u4ee5\u53ca\u5404\u65b9\u9762\u7684\u914d\u7f6e\u6bd4\u8f83\u719f\u6089\uff0c\u6240\u4ee5\u5728CentOS\u4ee5\u53caUbuntu\u4e4b\u95f4\uff0c\u6211\u9009\u62e9\u4e86Ubuntu\u4f5c\u4e3a\u8fd9\u6b21\u670d\u52a1\u8ba1\u7b97\u7684\u5b66\u4e60\u73af\u5883\uff0c\u56e0\u4e3a\u6211\u7684\u7535\u8111\u4e4b\u524d\u5220\u6389\u4e86\u4e4b\u524dVmware Fusion\u5b89\u88c5\u8fc7\u7684Ubuntu\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u7528\u6211\u7684\u7b14\u8bb0\u672c\u4f5c\u4e3a\u793a\u8303 \u6210\u529f\u5b89\u88c5\u4e86VirtualBox\u540e\uff0c\u5176\u5b9e\u6d41\u7a0b\u633a\u7b80\u5355\u7684\uff0c\u5c31\u662f\u5b89\u88c5\u63d0\u793a\u521b\u5efa\u65b0\u7684\u865a\u62df\u673a \u9009\u62e9\u4e0b\u8f7d\u597d\u7684\u955c\u50cf \u5f00\u542f\u865a\u62df\u673a\uff0c\u5b89\u88c5\u63d0\u793a\u5b89\u88c5\u597d\u5c31\u53ef\u4ee5\u4e86 \u4e0b\u9762\u8bf4\u8bf4\u4e00\u4e9b\u589e\u5f3a\u4f53\u9a8c\u7684\u4e1c\u897f","title":"MacOS VirtualBox \u914d\u7f6eUbuntu\u57fa\u672c\u73af\u5883"},{"location":"ServiceComputingOnCloud/MacOS VirtualBox \u914d\u7f6eUbuntu\u57fa\u672c\u73af\u5883/#ubuntu","text":"\u8f93\u5165\u6cd5\u7684\u8bdd\u6211\u9009\u62e9\u7684\u662fsogou\u62fc\u97f3 \u8fd9\u91cc\u6709\u76f8\u5173\u7684\u6559\u7a0b Ubuntu16.04 \u641c\u72d7\u62fc\u97f3\u5b89\u88c5","title":"Ubuntu\u5b89\u88c5\u8f93\u5165\u6cd5"},{"location":"ServiceComputingOnCloud/MacOS VirtualBox \u914d\u7f6eUbuntu\u57fa\u672c\u73af\u5883/#_1","text":"\u9996\u5148\u5728\u8bbe\u5907\u8bbe\u7f6e>\u5e38\u89c4>\u9ad8\u7ea7\u949f\u8bbe\u7f6e\u5171\u4eab\u7c98\u8d34\u677f\u3001\u62d6\u653e\u4e3a\u53cc\u5411 \u6253\u5f00\u865a\u62df\u673a\uff0c\u70b9\u51fb\u4e0a\u9762 Device > Install Guest Additions CD images\u5c31\u53ef\u4ee5\u5b89\u88c5VirtualBox\u7684\u589e\u5f3a\u529f\u80fd,\u5b89\u88c5\u5b8c\u6210\uff0c\u91cd\u542f\u540e\uff0c\u4e5f\u5c31\u80fd\u591f\u4f7f\u6211\u4eec\u7684\u7cfb\u7edf\u80fd\u591f\u6b63\u786e\u4f7f\u7528\u4e0a\u9762\u6211\u4eec\u9009\u62e9\u7684\u529f\u80fd\u4e86","title":"\u53cc\u5411\u7c98\u8d34\u3001\u6587\u4ef6\u62d6\u62fd(\u5916\u5230\u5185)"},{"location":"ServiceComputingOnCloud/MacOS VirtualBox \u914d\u7f6eUbuntu\u57fa\u672c\u73af\u5883/#maybe","text":"\u8fd9\u4e2a\u4e4b\u524d\u5176\u5b9e\u6211\u5c31\u6b63\u5728\u6211\u7684\u7535\u8111\u4e3b\u673a\u4e0a\u7528\uff0c\u63d0\u4f9b\u4e00\u4e2a\u5728\u6821\u5185\u7ed9\u672c\u4eba\u4f5c\u4f7f\u7528\u7684\u4e00\u4e2a\u865a\u62df\u73af\u5883\u3002\u4e0d\u8fc7\u4e4b\u524d\u662f\u4f7f\u7528\u7684Vmware,\u73b0\u5728\u5728\u8fd9\u91cc\u6211\u4eec\u770b\u770b\u5982\u4f55\u5728VirtualBox\u4e2d\u5f00\u542f\u8fd9\u4e2a\u529f\u80fd \u5728https://www.virtualbox.org/wiki/Downloads \u4e2d\u4e0b\u8f7dVirtualBox 5.2.18 Oracle VM VirtualBox Extension Pack \u5728\u8bbe\u7f6e\u7684\u62d3\u5c55\u4e2d\u9009\u62e9\u5176\u8fdb\u884c\u5b89\u88c5\uff0c\u5b8c\u6210\u540e\u6211\u4eec\u5c31\u80fd\u5728\u865a\u62df\u673a\u7684\u8bbe\u7f6e\u7684\u663e\u793a\u9879\u76ee\u91cc\u8fdb\u884c\u8bbe\u7f6e \u8bbe\u7f6e\u5b8c\u6210\u540e\uff0c\u91cd\u542f\u8f6f\u4ef6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86 Windows\u81ea\u5e26\u7684\u8fdc\u7a0b\u684c\u9762\u8fde\u63a5\u5c31\u53ef\u4ee5\u8fde\u4e0a\u6211\u4eec\u7684\u865a\u62df\u673a","title":"\u63d0\u4f9b\u8fdc\u7a0b\u7f51\u7edc\u8bbf\u95ee(maybe\u51fa\u79df\u5229\u5668\u54c8\u54c8?)"},{"location":"ServiceComputingOnCloud/\u9879\u76ee\u5bb9\u5668\u5316-DockerFile\u5b66\u4e60\u4e4b\u8def/","text":"\u9879\u76ee\u5bb9\u5668\u5316-DockerFile\u5b66\u4e60\u4e4b\u8def \u8fd9\u5468\u6211\u4e3b\u8981\u8d1f\u8d23\u7684\u5c31\u662f\u6211\u4eec\u9879\u76ee\u6574\u4e2a\u7684\u5bb9\u5668\u5316\u4ee5\u53caDocker-Compose\u7684\u4e66\u5199\uff0cDocker-Compose\u7684\u4f7f\u7528\uff0cDocker-Compose\u7684\u4f7f\u7528\u5728\u5c0f\u7ec4\u62a5\u544a\u4e2d\u5df2\u7ecf\u5199\u51fa\uff0c\u8fd9\u91cc\u4e3b\u8981\u8bb2\u8bb2\u5b8c\u6210Dockerfile\u65f6\u7684\u4e00\u4e9b\u9047\u5230\u7684\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\u7684\u65b9\u6cd5\uff0c\u4f9b\u540c\u5b66\u4eec\u53c2\u9605\uff0c\u57fa\u7840\u7684Dockerfile\u4f7f\u7528\u8fd9\u91cc\u4e0d\u591a\u8bb2\uff0c\u5728\u6211\u7684 \u524d\u9762\u4e00\u7bc7\u535a\u5ba2 \u5df2\u7ecf\u8c08\u5230\u8fc7\u3002 \u670d\u52a1\u7aef\u90e8\u7f72 \u8fd9\u90e8\u5206\u7684Dockerfile\u8f83\u4e3a\u7b80\u5355, \u76f4\u63a5\u4f7f\u7528golang\u5b98\u65b9\u7684\u955c\u50cf\u5373\u53ef Go-Server FROM golang:1.8 MAINTAINER WilsonZhong \"1316628630@qq.com\" WORKDIR $GOPATH/src/github.com/GoProjectGroupForEducation/Go-Blog ADD . $GOPATH/src/github.com/GoProjectGroupForEducation/Go-Blog RUN go get -v github.com/GoProjectGroupForEducation/Go-Blog EXPOSE 8081 ENTRYPOINT [\"Go-Blog\"] \u524d\u7aef\u90e8\u7f72 \u8fd9\u90e8\u5206\u76f8\u6bd4\u670d\u52a1\u7aef\u76f8\u5bf9\u590d\u6742\uff0c\u56e0\u4e3a\u8fd9\u91cc\u6d89\u53ca\u5230\u8de8\u57df\u95ee\u9898\uff0c\u9700\u8981\u8fd0\u7528nginx\u505a\u4e00\u4e2a\u53cd\u5411\u4ee3\u7406\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684Dockerfile\u662f\u5c06node\u4ee5\u53canginx\u7ed3\u5408\u5230\u4e86\u4e00\u8d77\u8fdb\u884c\u4f7f\u7528\uff0c\u8fd9\u91cc\u6211\u662f\u5148build\u51fadist/\uff0c\u81ea\u5df1\u5b8c\u6210\u914d\u7f6e\u6587\u4ef6default.conf\u7684\u4e66\u5199\u540e\uff0cCOPY\u5230\u5bf9\u5e94\u7684\u5bb9\u5668\u5185\u7684\u76ee\u5f55\uff0c\u8fd0\u884cnginx\uff0c\u4e3b\u8981\u6d89\u53ca\u5230\u4e24\u4e2a\u955c\u50cf\u7684\u5171\u7528 # build stage FROM node:9.11.1-alpine as build-stage WORKDIR /app COPY package*.json ./ RUN npm install COPY . . RUN npm run build # production stage FROM nginx:1.13.12-alpine as production-stage COPY --from=build-stage /app/dist /usr/share/nginx/html COPY --from=build-stage /app/default.conf /etc/nginx/conf.d/default.conf EXPOSE 80 CMD [\"nginx\", \"-g\", \"daemon off;\"] MySQL\u5bb9\u5668\u642d\u5efa 3\u4e2a\u5bb9\u5668\u5f53\u4e2d\uff0c\u8017\u8d39\u6211\u65f6\u95f4\u6700\u4e45\u7684\u5c31\u662fMySQL\u5bb9\u5668\uff0c\u56e0\u4e3a\u5176\u6d89\u53ca\u5230\u4e0e\u5176\u4ed6\u5bb9\u5668\u7684\u8fde\u901a\uff0c\u5982\u4f55\u4f7f\u6570\u636e\u5e93\u53ef\u4ee5\u7531\u5916\u754c\u8bbf\u95ee\uff0c\u5e76\u63a7\u5236\u7528\u6237\u7684\u8bbf\u95ee\u6743\u9650\u4e4b\u7c7b\u7684\u5f88\u591a\u95ee\u9898 \u6211\u4e00\u5f00\u59cb\u76f4\u63a5\u5199\u4e86\u4e00\u4e2ash\u5728Dockerfile\u4e2d\u5c1d\u8bd5\u8c03\u7528\uff0c\u540e\u6765\u95ee\u9898\u6709\u70b9\u591a\uff0c\u5b9e\u5728\u9876\u4e0d\u4f4f\u4e4b\u540e\u5f00\u59cb\u9605\u8bfbmysql:latest\u7684Dockerfile\uff0c\u6211\u53d1\u73b0mysql\u955c\u50cf\u7684\u6bcf\u6b21\u8fd0\u884c\u90fd\u4f1a\u8fd0\u884c/docker-entrypoint-initdb.d\u6587\u4ef6\u5939\u4e0b\u7684sql\u6587\u4ef6\uff0c\u6211\u53ea\u9700\u8981\u628a\u521d\u59cb\u5316\u6570\u636e\u5e93\u7684\u6587\u4ef6COPY\u5230\u5bb9\u5668\u7684\u5bf9\u5e94\u76ee\u5f55\uff0c\u6211\u5c31\u5b8c\u6210\u6570\u636e\u5e93\u7684\u521d\u59cb\u5316\u4e86\uff0c\u901a\u8fc7\u5408\u7406\u4e66\u5199create.sql\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fbe\u5230\u63a7\u5236\u8bbf\u95ee\u6743\u9650\u7684\u6548\u679c FROM mysql:latest # \u590d\u5236\u6570\u636e\u5e93\u521d\u59cb\u5316\u811a\u672csql\u5230/docker-entrypoint-initdb.d\u6587\u4ef6\u5939\u4e0b COPY create.sql /docker-entrypoint-initdb.d create.sql\u5982\u4e0b create database `blogdb`; set global max_connections = 30000; use mysql; CREATE USER 'blogdb'@'%' IDENTIFIED BY 'zsy2720a'; alter user 'blogdb' identified with mysql_native_password by 'zsy2720a'; grant all on blogdb.* to 'blogdb'@'%'; flush privileges; select host, user from user; \u81f3\u4e8e\u670d\u52a1\u7aef\u5728docker-compose\u4e2d\u4e0emysql\u5bb9\u5668\u8054\u52a8\u7684\u95ee\u9898\uff0c\u6211\u4e5f\u5728\u5c0f\u7ec4\u62a5\u544a\u4e2d\u7ed9\u51fa\u4e86\u89e3\u51b3\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c\u800cdocker-compose\u7684\u4e66\u5199\uff0c\u4e5f\u5728\u5c0f\u7ec4\u535a\u5ba2\u4e4b\u4e2d\uff0c\u8fd9\u91cc\u4e0d\u591a\u8d58\u8ff0","title":"\u9879\u76ee\u5bb9\u5668\u5316-DockerFile\u5b66\u4e60\u4e4b\u8def"},{"location":"ServiceComputingOnCloud/\u9879\u76ee\u5bb9\u5668\u5316-DockerFile\u5b66\u4e60\u4e4b\u8def/#-dockerfile","text":"\u8fd9\u5468\u6211\u4e3b\u8981\u8d1f\u8d23\u7684\u5c31\u662f\u6211\u4eec\u9879\u76ee\u6574\u4e2a\u7684\u5bb9\u5668\u5316\u4ee5\u53caDocker-Compose\u7684\u4e66\u5199\uff0cDocker-Compose\u7684\u4f7f\u7528\uff0cDocker-Compose\u7684\u4f7f\u7528\u5728\u5c0f\u7ec4\u62a5\u544a\u4e2d\u5df2\u7ecf\u5199\u51fa\uff0c\u8fd9\u91cc\u4e3b\u8981\u8bb2\u8bb2\u5b8c\u6210Dockerfile\u65f6\u7684\u4e00\u4e9b\u9047\u5230\u7684\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\u7684\u65b9\u6cd5\uff0c\u4f9b\u540c\u5b66\u4eec\u53c2\u9605\uff0c\u57fa\u7840\u7684Dockerfile\u4f7f\u7528\u8fd9\u91cc\u4e0d\u591a\u8bb2\uff0c\u5728\u6211\u7684 \u524d\u9762\u4e00\u7bc7\u535a\u5ba2 \u5df2\u7ecf\u8c08\u5230\u8fc7\u3002","title":"\u9879\u76ee\u5bb9\u5668\u5316-DockerFile\u5b66\u4e60\u4e4b\u8def"},{"location":"ServiceComputingOnCloud/\u9879\u76ee\u5bb9\u5668\u5316-DockerFile\u5b66\u4e60\u4e4b\u8def/#_1","text":"\u8fd9\u90e8\u5206\u7684Dockerfile\u8f83\u4e3a\u7b80\u5355, \u76f4\u63a5\u4f7f\u7528golang\u5b98\u65b9\u7684\u955c\u50cf\u5373\u53ef Go-Server FROM golang:1.8 MAINTAINER WilsonZhong \"1316628630@qq.com\" WORKDIR $GOPATH/src/github.com/GoProjectGroupForEducation/Go-Blog ADD . $GOPATH/src/github.com/GoProjectGroupForEducation/Go-Blog RUN go get -v github.com/GoProjectGroupForEducation/Go-Blog EXPOSE 8081 ENTRYPOINT [\"Go-Blog\"]","title":"\u670d\u52a1\u7aef\u90e8\u7f72"},{"location":"ServiceComputingOnCloud/\u9879\u76ee\u5bb9\u5668\u5316-DockerFile\u5b66\u4e60\u4e4b\u8def/#_2","text":"\u8fd9\u90e8\u5206\u76f8\u6bd4\u670d\u52a1\u7aef\u76f8\u5bf9\u590d\u6742\uff0c\u56e0\u4e3a\u8fd9\u91cc\u6d89\u53ca\u5230\u8de8\u57df\u95ee\u9898\uff0c\u9700\u8981\u8fd0\u7528nginx\u505a\u4e00\u4e2a\u53cd\u5411\u4ee3\u7406\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684Dockerfile\u662f\u5c06node\u4ee5\u53canginx\u7ed3\u5408\u5230\u4e86\u4e00\u8d77\u8fdb\u884c\u4f7f\u7528\uff0c\u8fd9\u91cc\u6211\u662f\u5148build\u51fadist/\uff0c\u81ea\u5df1\u5b8c\u6210\u914d\u7f6e\u6587\u4ef6default.conf\u7684\u4e66\u5199\u540e\uff0cCOPY\u5230\u5bf9\u5e94\u7684\u5bb9\u5668\u5185\u7684\u76ee\u5f55\uff0c\u8fd0\u884cnginx\uff0c\u4e3b\u8981\u6d89\u53ca\u5230\u4e24\u4e2a\u955c\u50cf\u7684\u5171\u7528 # build stage FROM node:9.11.1-alpine as build-stage WORKDIR /app COPY package*.json ./ RUN npm install COPY . . RUN npm run build # production stage FROM nginx:1.13.12-alpine as production-stage COPY --from=build-stage /app/dist /usr/share/nginx/html COPY --from=build-stage /app/default.conf /etc/nginx/conf.d/default.conf EXPOSE 80 CMD [\"nginx\", \"-g\", \"daemon off;\"]","title":"\u524d\u7aef\u90e8\u7f72"},{"location":"ServiceComputingOnCloud/\u9879\u76ee\u5bb9\u5668\u5316-DockerFile\u5b66\u4e60\u4e4b\u8def/#mysql","text":"3\u4e2a\u5bb9\u5668\u5f53\u4e2d\uff0c\u8017\u8d39\u6211\u65f6\u95f4\u6700\u4e45\u7684\u5c31\u662fMySQL\u5bb9\u5668\uff0c\u56e0\u4e3a\u5176\u6d89\u53ca\u5230\u4e0e\u5176\u4ed6\u5bb9\u5668\u7684\u8fde\u901a\uff0c\u5982\u4f55\u4f7f\u6570\u636e\u5e93\u53ef\u4ee5\u7531\u5916\u754c\u8bbf\u95ee\uff0c\u5e76\u63a7\u5236\u7528\u6237\u7684\u8bbf\u95ee\u6743\u9650\u4e4b\u7c7b\u7684\u5f88\u591a\u95ee\u9898 \u6211\u4e00\u5f00\u59cb\u76f4\u63a5\u5199\u4e86\u4e00\u4e2ash\u5728Dockerfile\u4e2d\u5c1d\u8bd5\u8c03\u7528\uff0c\u540e\u6765\u95ee\u9898\u6709\u70b9\u591a\uff0c\u5b9e\u5728\u9876\u4e0d\u4f4f\u4e4b\u540e\u5f00\u59cb\u9605\u8bfbmysql:latest\u7684Dockerfile\uff0c\u6211\u53d1\u73b0mysql\u955c\u50cf\u7684\u6bcf\u6b21\u8fd0\u884c\u90fd\u4f1a\u8fd0\u884c/docker-entrypoint-initdb.d\u6587\u4ef6\u5939\u4e0b\u7684sql\u6587\u4ef6\uff0c\u6211\u53ea\u9700\u8981\u628a\u521d\u59cb\u5316\u6570\u636e\u5e93\u7684\u6587\u4ef6COPY\u5230\u5bb9\u5668\u7684\u5bf9\u5e94\u76ee\u5f55\uff0c\u6211\u5c31\u5b8c\u6210\u6570\u636e\u5e93\u7684\u521d\u59cb\u5316\u4e86\uff0c\u901a\u8fc7\u5408\u7406\u4e66\u5199create.sql\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fbe\u5230\u63a7\u5236\u8bbf\u95ee\u6743\u9650\u7684\u6548\u679c FROM mysql:latest # \u590d\u5236\u6570\u636e\u5e93\u521d\u59cb\u5316\u811a\u672csql\u5230/docker-entrypoint-initdb.d\u6587\u4ef6\u5939\u4e0b COPY create.sql /docker-entrypoint-initdb.d create.sql\u5982\u4e0b create database `blogdb`; set global max_connections = 30000; use mysql; CREATE USER 'blogdb'@'%' IDENTIFIED BY 'zsy2720a'; alter user 'blogdb' identified with mysql_native_password by 'zsy2720a'; grant all on blogdb.* to 'blogdb'@'%'; flush privileges; select host, user from user; \u81f3\u4e8e\u670d\u52a1\u7aef\u5728docker-compose\u4e2d\u4e0emysql\u5bb9\u5668\u8054\u52a8\u7684\u95ee\u9898\uff0c\u6211\u4e5f\u5728\u5c0f\u7ec4\u62a5\u544a\u4e2d\u7ed9\u51fa\u4e86\u89e3\u51b3\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c\u800cdocker-compose\u7684\u4e66\u5199\uff0c\u4e5f\u5728\u5c0f\u7ec4\u535a\u5ba2\u4e4b\u4e2d\uff0c\u8fd9\u91cc\u4e0d\u591a\u8d58\u8ff0","title":"MySQL\u5bb9\u5668\u642d\u5efa"},{"location":"SystemAnalysis/Vue\u524d\u7aef\u8def\u7531\u9274\u6743\u7684\u4f7f\u7528/","text":"Vue\u524d\u7aef\u8def\u7531\u9274\u6743\u7684\u4f7f\u7528 vue\u9879\u76ee\u524d\u7aef\u9274\u6743\u65b9\u5f0f vue\u9879\u76ee\u524d\u7aef\u9274\u6743\u65b9\u5f0f\u5e38\u7528\u7684\u6709\u4ee5\u4e0b\u4e09\u79cd\uff1a \u6e32\u67d3\u83dc\u5355\u65f6\u63a7\u5236\u6a21\u5757\u6309\u94ae\u7684\u663e\u793a\u9690\u85cf\uff08\u4e0d\u8db3\uff1a\u76f4\u63a5\u8f93\u5165\u94fe\u63a5\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u6a21\u5757\uff09 \u5728\u8def\u7531\u5bfc\u822a\u5b88\u536b\u4e2d\u62e6\u622a\uff0c\u9488\u5bf9\u6ca1\u6709\u6743\u9650\u7684\u6a21\u5757\u8fdb\u884c\u91cd\u5b9a\u5411\uff08\u4e0d\u8db3\uff1a\u6bcf\u6b21\u8bbf\u95ee\u6a21\u5757\u90fd\u9700\u8981\u9274\u5b9a\u6743\u9650\uff0c\u6a21\u5757\u6570\u91cf\u8fc7\u591a\u65f6\u4f1a\u5f71\u54cd\u7cfb\u7edf\u6027\u80fd\uff09 \u501f\u52a9vue-router 2.x\u7248\u672c\u65b0\u52a0\u7684API addRouters\u52a8\u6001\u6dfb\u52a0\u8def\u7531\u4fe1\u606f\uff08\u4e0d\u8db3\uff1a\u9996\u6b21\u52a0\u8f7d\u9700\u8981\u89e3\u6790\u548c\u6dfb\u52a0\uff0c\u591a\u8df3\u8f6c\u4e00\u6b21\u8def\u7531\uff09 \u8def\u7531\u5bfc\u822a\u5b88\u536b\u4e2d\u62e6\u622a \u8fd9\u91cc\u6211\u5148\u8bb2\u8bb2\u6211\u4eec\u9879\u76ee\u4e2d\u7528\u5230\u7684\u8def\u7531\u9274\u6743\u65b9\u5f0f\uff0c\u8fd9\u91cc\u6211\u4eec\u4e3b\u8981\u7528\u5230\u6211\u4eecVue Router\u4e2d\u7684router.beforeEach, \u8fd9\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u5c31\u662f\u6ce8\u518c\u4e00\u4e2a\u5168\u5c40\u524d\u7f6e\u5b88\u536b \u5f53\u4e00\u4e2a\u5bfc\u822a\u89e6\u53d1\u65f6\uff0c\u5168\u5c40\u524d\u7f6e\u5b88\u536b\u6309\u7167\u521b\u5efa\u987a\u5e8f\u8c03\u7528\u3002\u5b88\u536b\u662f\u5f02\u6b65\u89e3\u6790\u6267\u884c\uff0c\u6b64\u65f6\u5bfc\u822a\u5728\u6240\u6709\u5b88\u536b resolve \u5b8c\u4e4b\u524d\u4e00\u76f4\u5904\u4e8e \u7b49\u5f85\u4e2d\u3002 \u6bcf\u4e2a\u5b88\u536b\u65b9\u6cd5\u63a5\u6536\u4e09\u4e2a\u53c2\u6570\uff1a to: Route: \u5373\u5c06\u8981\u8fdb\u5165\u7684\u76ee\u6807 \u8def\u7531\u5bf9\u8c61 from: Route: \u5f53\u524d\u5bfc\u822a\u6b63\u8981\u79bb\u5f00\u7684\u8def\u7531 next: Function: \u4e00\u5b9a\u8981\u8c03\u7528\u8be5\u65b9\u6cd5\u6765 resolve \u8fd9\u4e2a\u94a9\u5b50\u3002\u6267\u884c\u6548\u679c\u4f9d\u8d56 next \u65b9\u6cd5\u7684\u8c03\u7528\u53c2\u6570\u3002 router.beforeEach((to, from, next) => { if (to.matched.some(record => record.meta.requiresAuth)) { if (!sessionStorage || !sessionStorage.getItem('token')) { next('/login') } else { next() } } else { next() } }) \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8fd9\u91cc\u5f04\u4e86\u4e00\u4e2a\u4f18\u5316\uff0c\u6211\u4eec\u4f7f\u7528record.meta.requiresAuth\u6765\u67e5\u770b\u6211\u4eec\u524d\u5f80\u7684\u8def\u7531\u662f\u5426\u662f\u9700\u8981\u9274\u6743\u7684\uff0c\u5728\u8fd9\u57fa\u7840\u4e4b\u4e0a\uff0c\u6211\u4eec\u6dfb\u52a0\u9700\u8981\u9274\u6743\u7684\u8def\u7531\u65f6\uff0c\u65e0\u9700\u5728\u8fd9\u4e2a\u51fd\u6570\u8fdb\u884c\u4fee\u6539\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ed9\u6211\u4eec\u8def\u7531\u6dfb\u52a0meta\u4fe1\u606f\u5982\u4e0b { path: '/user/settings', name: 'Settings', meta: { requiresAuth: true }, component: Settings } \u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u6211\u4eec\u524d\u7aef\u7684\u9274\u6743\u4e86","title":"Vue\u524d\u7aef\u8def\u7531\u9274\u6743\u7684\u4f7f\u7528"},{"location":"SystemAnalysis/Vue\u524d\u7aef\u8def\u7531\u9274\u6743\u7684\u4f7f\u7528/#vue","text":"","title":"Vue\u524d\u7aef\u8def\u7531\u9274\u6743\u7684\u4f7f\u7528"},{"location":"SystemAnalysis/Vue\u524d\u7aef\u8def\u7531\u9274\u6743\u7684\u4f7f\u7528/#vue_1","text":"vue\u9879\u76ee\u524d\u7aef\u9274\u6743\u65b9\u5f0f\u5e38\u7528\u7684\u6709\u4ee5\u4e0b\u4e09\u79cd\uff1a \u6e32\u67d3\u83dc\u5355\u65f6\u63a7\u5236\u6a21\u5757\u6309\u94ae\u7684\u663e\u793a\u9690\u85cf\uff08\u4e0d\u8db3\uff1a\u76f4\u63a5\u8f93\u5165\u94fe\u63a5\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u6a21\u5757\uff09 \u5728\u8def\u7531\u5bfc\u822a\u5b88\u536b\u4e2d\u62e6\u622a\uff0c\u9488\u5bf9\u6ca1\u6709\u6743\u9650\u7684\u6a21\u5757\u8fdb\u884c\u91cd\u5b9a\u5411\uff08\u4e0d\u8db3\uff1a\u6bcf\u6b21\u8bbf\u95ee\u6a21\u5757\u90fd\u9700\u8981\u9274\u5b9a\u6743\u9650\uff0c\u6a21\u5757\u6570\u91cf\u8fc7\u591a\u65f6\u4f1a\u5f71\u54cd\u7cfb\u7edf\u6027\u80fd\uff09 \u501f\u52a9vue-router 2.x\u7248\u672c\u65b0\u52a0\u7684API addRouters\u52a8\u6001\u6dfb\u52a0\u8def\u7531\u4fe1\u606f\uff08\u4e0d\u8db3\uff1a\u9996\u6b21\u52a0\u8f7d\u9700\u8981\u89e3\u6790\u548c\u6dfb\u52a0\uff0c\u591a\u8df3\u8f6c\u4e00\u6b21\u8def\u7531\uff09","title":"vue\u9879\u76ee\u524d\u7aef\u9274\u6743\u65b9\u5f0f"},{"location":"SystemAnalysis/Vue\u524d\u7aef\u8def\u7531\u9274\u6743\u7684\u4f7f\u7528/#_1","text":"\u8fd9\u91cc\u6211\u5148\u8bb2\u8bb2\u6211\u4eec\u9879\u76ee\u4e2d\u7528\u5230\u7684\u8def\u7531\u9274\u6743\u65b9\u5f0f\uff0c\u8fd9\u91cc\u6211\u4eec\u4e3b\u8981\u7528\u5230\u6211\u4eecVue Router\u4e2d\u7684router.beforeEach, \u8fd9\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u5c31\u662f\u6ce8\u518c\u4e00\u4e2a\u5168\u5c40\u524d\u7f6e\u5b88\u536b \u5f53\u4e00\u4e2a\u5bfc\u822a\u89e6\u53d1\u65f6\uff0c\u5168\u5c40\u524d\u7f6e\u5b88\u536b\u6309\u7167\u521b\u5efa\u987a\u5e8f\u8c03\u7528\u3002\u5b88\u536b\u662f\u5f02\u6b65\u89e3\u6790\u6267\u884c\uff0c\u6b64\u65f6\u5bfc\u822a\u5728\u6240\u6709\u5b88\u536b resolve \u5b8c\u4e4b\u524d\u4e00\u76f4\u5904\u4e8e \u7b49\u5f85\u4e2d\u3002 \u6bcf\u4e2a\u5b88\u536b\u65b9\u6cd5\u63a5\u6536\u4e09\u4e2a\u53c2\u6570\uff1a to: Route: \u5373\u5c06\u8981\u8fdb\u5165\u7684\u76ee\u6807 \u8def\u7531\u5bf9\u8c61 from: Route: \u5f53\u524d\u5bfc\u822a\u6b63\u8981\u79bb\u5f00\u7684\u8def\u7531 next: Function: \u4e00\u5b9a\u8981\u8c03\u7528\u8be5\u65b9\u6cd5\u6765 resolve \u8fd9\u4e2a\u94a9\u5b50\u3002\u6267\u884c\u6548\u679c\u4f9d\u8d56 next \u65b9\u6cd5\u7684\u8c03\u7528\u53c2\u6570\u3002 router.beforeEach((to, from, next) => { if (to.matched.some(record => record.meta.requiresAuth)) { if (!sessionStorage || !sessionStorage.getItem('token')) { next('/login') } else { next() } } else { next() } }) \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8fd9\u91cc\u5f04\u4e86\u4e00\u4e2a\u4f18\u5316\uff0c\u6211\u4eec\u4f7f\u7528record.meta.requiresAuth\u6765\u67e5\u770b\u6211\u4eec\u524d\u5f80\u7684\u8def\u7531\u662f\u5426\u662f\u9700\u8981\u9274\u6743\u7684\uff0c\u5728\u8fd9\u57fa\u7840\u4e4b\u4e0a\uff0c\u6211\u4eec\u6dfb\u52a0\u9700\u8981\u9274\u6743\u7684\u8def\u7531\u65f6\uff0c\u65e0\u9700\u5728\u8fd9\u4e2a\u51fd\u6570\u8fdb\u884c\u4fee\u6539\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ed9\u6211\u4eec\u8def\u7531\u6dfb\u52a0meta\u4fe1\u606f\u5982\u4e0b { path: '/user/settings', name: 'Settings', meta: { requiresAuth: true }, component: Settings } \u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u6211\u4eec\u524d\u7aef\u7684\u9274\u6743\u4e86","title":"\u8def\u7531\u5bfc\u822a\u5b88\u536b\u4e2d\u62e6\u622a"},{"location":"SystemAnalysis/\u524d\u7aef\u591a\u7aef\u9002\u914d\u521d\u8bc6/","text":"\u524d\u7aef\u591a\u7aef\u9002\u914d\u521d\u8bc6 \u6211\u4eec\u7684\u9879\u76ee\u505a\u6210\u4e86\u4e00\u4e2aPWA\u5e94\u7528\uff0c\u5e76\u9002\u914d\u4e86\u79fb\u52a8\u7aef\u548c\u7535\u8111\u7aef\uff0c\u8fd9\u91cc\u6211\u4eec\u8bf4\u8bf4\u6211\u4eec\u9002\u914d\u7684\u65b9\u5f0f \u8fd9\u91cc\u6211\u4eec\u4e3b\u8981\u4f7f\u7528\u4e86\u4e24\u79cd\u65b9\u6cd5 \u4e24\u5957\u8d44\u6e90 \u5bf9\u4e8e\u4e00\u4e9b\u4e0d\u65b9\u4fbf\u4f7f\u7528css\u9002\u914d\u7684\u9875\u9762\uff0c\u6211\u4eec\u901a\u8fc7\u68c0\u6d4b\u7528\u6237\u7684\u767b\u5f55\u7aef\u7684\u7c7b\u578b\u5224\u65ad\u5e94\u8be5\u7ed9\u4ed6\u6e32\u67d3\u4ec0\u4e48\u9875\u9762\uff0c\u8fd9\u91cc\u6211\u4eec\u8bf4\u8bf4\u6211\u4eec\u5224\u65ad\u7684\u65b9\u5f0f\uff0c\u7531\u4e8e\u6211\u4eec\u52a0\u5165\u4e86\u670d\u52a1\u7aef\u6e32\u67d3\uff0c\u670d\u52a1\u7aef\u6e32\u67d3\u7684\u65f6\u5019\uff0c\u5e76\u6ca1\u6709\u6d4f\u89c8\u5668\u7684navigator\uff0c\u6240\u4ee5\u8fd9\u91cc\u5199\u4e86\u4e24\u79cd\u5224\u65ad\u65b9\u5f0f export function isPC ( ua ) { if ( typeof navigator !== 'undefined' ) { return isClientPC () } else { return isServerPC ( ua ) } } export function isClientPC () { var flag = true var Agents = [ 'Android' , 'iPhone' , 'SymbianOS' , 'Windows Phone' , 'iPad' , 'iPod' ] if ( typeof navigator !== 'undefined' ) { var userAgentInfo = navigator . userAgent for ( var v = 0 ; v < Agents . length ; v ++ ) { if ( userAgentInfo . includes ( Agents [ v ])) { flag = false break } } } return flag } export function isServerPC ( ua ) { var flag = true var Agents = [ 'Android' , 'iPhone' , 'SymbianOS' , 'Windows Phone' , 'iPad' , 'iPod' ] for ( var v = 0 ; v < Agents . length ; v ++ ) { if ( ua . includes ( Agents [ v ])) { flag = false break } } return flag } \u8fd9\u6837\uff0c\u901a\u8fc7\u8c03\u7528isPC\u6211\u4eec\u5c31\u53ef\u4ee5\u5224\u65ad\u7528\u6237\u5c5e\u4e8e\u624b\u673a\u7aef\u8fd8\u662f\u7535\u8111\u7aef\uff0c\u7ed9\u7528\u6237\u6e32\u67d3\u76f8\u5e94\u7684\u8d44\u6e90 \u9996\u5148\u6211\u4eec\u6709\u4e24\u4e2aentry\uff0c\u8fd9\u91cc\u4e3b\u8981\u8bf4\u8bf4\u5ba2\u6237\u7aef\u7684\u4f7f\u7528 entry-client.js import { createApp } from './main' import { isPC } from './utils/utils' const { app , router } = createApp () router . isPC = isPC () router . onReady (() => { app . $ mount ( '#app' ) }) if ( 'serviceWorker' in navigator ) { window . addEventListener ( 'load' , () => { navigator . serviceWorker . register ( '/serviceWorker.js' ) . then ( registration => { console . log ( 'SW registered: ' , registration ) }) . catch ( registrationError => { console . log ( 'SW registration failed: ' , registrationError ) }) }) } \u6211\u4eec\u8fd0\u884c\u65f6\u5c31\u6839\u636e\u662fserver\u7aef\u8fd8\u662fclient\u7aef\u6765\u9009\u62e9entry\u6587\u4ef6\uff0c\u6211\u4eecclient\u7aef\u7684entry\u628aisPC\u52a0\u5230router\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728router.js\u4e2d\u76f4\u63a5\u4f7f\u7528\uff0c\u5982\u4e0b\uff0c\u5224\u65ad\u662f\u5426\u65f6pc\u7aef\u6765\u9009\u62e9\u5bf9\u5e94\u7684\u8d44\u6e90 { path : '/questionnaire' , name : 'questionnaire' , component : Questionaire , meta : { requiresAuth : true }, beforeEnter : ( to , from , next ) => { if ( ! router . isPC ) { next () } else { next ( '/questionnairePC' ) } } }, css\u9002\u914d css\u9002\u914d\u6bd4\u8f83\u7b80\u5355\u5c31\u662f\u901a\u8fc7css\u7684media\u6765\u8fdb\u884c\u9002\u914d\uff0c\u5199\u591a\u5957css \u6211\u4eec\u4e3b\u8981\u7528\u5230\u4e863\u79cd\u5c3a\u5bf8\uff0c\u628a\u5bf9\u5e94\u5c3a\u5bf8\u7684css\u5199\u5728\u5bf9\u5e94\u7684\u5730\u65b9\u5c31\u884c\u4e86 @ media ( min-width 1200px ) ... @ media ( min-width 576px ) and ( max-width 1200px ) ... @ media ( max-width 576px ) ...","title":"\u524d\u7aef\u591a\u7aef\u9002\u914d\u521d\u8bc6"},{"location":"SystemAnalysis/\u524d\u7aef\u591a\u7aef\u9002\u914d\u521d\u8bc6/#_1","text":"\u6211\u4eec\u7684\u9879\u76ee\u505a\u6210\u4e86\u4e00\u4e2aPWA\u5e94\u7528\uff0c\u5e76\u9002\u914d\u4e86\u79fb\u52a8\u7aef\u548c\u7535\u8111\u7aef\uff0c\u8fd9\u91cc\u6211\u4eec\u8bf4\u8bf4\u6211\u4eec\u9002\u914d\u7684\u65b9\u5f0f \u8fd9\u91cc\u6211\u4eec\u4e3b\u8981\u4f7f\u7528\u4e86\u4e24\u79cd\u65b9\u6cd5","title":"\u524d\u7aef\u591a\u7aef\u9002\u914d\u521d\u8bc6"},{"location":"SystemAnalysis/\u524d\u7aef\u591a\u7aef\u9002\u914d\u521d\u8bc6/#_2","text":"\u5bf9\u4e8e\u4e00\u4e9b\u4e0d\u65b9\u4fbf\u4f7f\u7528css\u9002\u914d\u7684\u9875\u9762\uff0c\u6211\u4eec\u901a\u8fc7\u68c0\u6d4b\u7528\u6237\u7684\u767b\u5f55\u7aef\u7684\u7c7b\u578b\u5224\u65ad\u5e94\u8be5\u7ed9\u4ed6\u6e32\u67d3\u4ec0\u4e48\u9875\u9762\uff0c\u8fd9\u91cc\u6211\u4eec\u8bf4\u8bf4\u6211\u4eec\u5224\u65ad\u7684\u65b9\u5f0f\uff0c\u7531\u4e8e\u6211\u4eec\u52a0\u5165\u4e86\u670d\u52a1\u7aef\u6e32\u67d3\uff0c\u670d\u52a1\u7aef\u6e32\u67d3\u7684\u65f6\u5019\uff0c\u5e76\u6ca1\u6709\u6d4f\u89c8\u5668\u7684navigator\uff0c\u6240\u4ee5\u8fd9\u91cc\u5199\u4e86\u4e24\u79cd\u5224\u65ad\u65b9\u5f0f export function isPC ( ua ) { if ( typeof navigator !== 'undefined' ) { return isClientPC () } else { return isServerPC ( ua ) } } export function isClientPC () { var flag = true var Agents = [ 'Android' , 'iPhone' , 'SymbianOS' , 'Windows Phone' , 'iPad' , 'iPod' ] if ( typeof navigator !== 'undefined' ) { var userAgentInfo = navigator . userAgent for ( var v = 0 ; v < Agents . length ; v ++ ) { if ( userAgentInfo . includes ( Agents [ v ])) { flag = false break } } } return flag } export function isServerPC ( ua ) { var flag = true var Agents = [ 'Android' , 'iPhone' , 'SymbianOS' , 'Windows Phone' , 'iPad' , 'iPod' ] for ( var v = 0 ; v < Agents . length ; v ++ ) { if ( ua . includes ( Agents [ v ])) { flag = false break } } return flag } \u8fd9\u6837\uff0c\u901a\u8fc7\u8c03\u7528isPC\u6211\u4eec\u5c31\u53ef\u4ee5\u5224\u65ad\u7528\u6237\u5c5e\u4e8e\u624b\u673a\u7aef\u8fd8\u662f\u7535\u8111\u7aef\uff0c\u7ed9\u7528\u6237\u6e32\u67d3\u76f8\u5e94\u7684\u8d44\u6e90 \u9996\u5148\u6211\u4eec\u6709\u4e24\u4e2aentry\uff0c\u8fd9\u91cc\u4e3b\u8981\u8bf4\u8bf4\u5ba2\u6237\u7aef\u7684\u4f7f\u7528 entry-client.js import { createApp } from './main' import { isPC } from './utils/utils' const { app , router } = createApp () router . isPC = isPC () router . onReady (() => { app . $ mount ( '#app' ) }) if ( 'serviceWorker' in navigator ) { window . addEventListener ( 'load' , () => { navigator . serviceWorker . register ( '/serviceWorker.js' ) . then ( registration => { console . log ( 'SW registered: ' , registration ) }) . catch ( registrationError => { console . log ( 'SW registration failed: ' , registrationError ) }) }) } \u6211\u4eec\u8fd0\u884c\u65f6\u5c31\u6839\u636e\u662fserver\u7aef\u8fd8\u662fclient\u7aef\u6765\u9009\u62e9entry\u6587\u4ef6\uff0c\u6211\u4eecclient\u7aef\u7684entry\u628aisPC\u52a0\u5230router\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728router.js\u4e2d\u76f4\u63a5\u4f7f\u7528\uff0c\u5982\u4e0b\uff0c\u5224\u65ad\u662f\u5426\u65f6pc\u7aef\u6765\u9009\u62e9\u5bf9\u5e94\u7684\u8d44\u6e90 { path : '/questionnaire' , name : 'questionnaire' , component : Questionaire , meta : { requiresAuth : true }, beforeEnter : ( to , from , next ) => { if ( ! router . isPC ) { next () } else { next ( '/questionnairePC' ) } } },","title":"\u4e24\u5957\u8d44\u6e90"},{"location":"SystemAnalysis/\u524d\u7aef\u591a\u7aef\u9002\u914d\u521d\u8bc6/#css","text":"css\u9002\u914d\u6bd4\u8f83\u7b80\u5355\u5c31\u662f\u901a\u8fc7css\u7684media\u6765\u8fdb\u884c\u9002\u914d\uff0c\u5199\u591a\u5957css \u6211\u4eec\u4e3b\u8981\u7528\u5230\u4e863\u79cd\u5c3a\u5bf8\uff0c\u628a\u5bf9\u5e94\u5c3a\u5bf8\u7684css\u5199\u5728\u5bf9\u5e94\u7684\u5730\u65b9\u5c31\u884c\u4e86 @ media ( min-width 1200px ) ... @ media ( min-width 576px ) and ( max-width 1200px ) ... @ media ( max-width 576px ) ...","title":"css\u9002\u914d"},{"location":"SystemAnalysis/\u540e\u7aef\u9879\u76ee\u5bb9\u5668\u5316(\u4f9d\u8d56\u5173\u7cfb\u955c\u50cf\u4e2ddocker-compose\u4e66\u5199)-DockerFile\u5b66\u4e60\u4e4b\u8def/","text":"\u540e\u7aef\u9879\u76ee\u5bb9\u5668\u5316(\u4f9d\u8d56\u5173\u7cfb\u955c\u50cf\u4e2ddocker-compose\u4e66\u5199)-DockerFile\u5b66\u4e60\u4e4b\u8def \u5728\u5f00\u53d1\u9879\u76ee\u7684\u540e\u671f\uff0c\u6211\u8d1f\u8d23\u4e86\u6211\u4eec\u540e\u7aef\u9879\u76ee\u7684\u5bb9\u5668\u5316\uff0c\u540e\u7aef\u4e3b\u8981\u5305\u542b\u6709\u4e24\u4e2a\u4e3b\u8981\u7684\u5bb9\u5668\uff0c\u4e00\u4e2a\u5c31\u662f\u6211\u4eec\u7684Nodejs\u540e\u53f0\u670d\u52a1\uff0c\u4e00\u4e2a\u5c31\u662f\u6211\u4eec\u7684MySQL\u670d\u52a1\u5bb9\u5668\uff0c\u8fd9\u91cc\u6211\u4ee5\u6211\u4eec\u7684\u9879\u76ee\u4e3a\u4f8b\uff0c\u5411\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\u5982\u4f55\u5728\u8fd9\u79cdNodejs\u670d\u52a1\u5bb9\u5668\u4f9d\u8d56MYSQL\u670d\u52a1\u5bb9\u5668\u7684\u60c5\u666f\u4e0b\uff0c\u5b8c\u6210docker-compose\u7684\u4e66\u5199\u3002 \u5f88\u591a\u4eba\u89c9\u5f97\uff0cdocker-compse\u4e0d\u662f\u6709\u4e00\u4e2adepends-on\u5417\uff0c\u4f7f\u7528depends-on\u4e0d\u5c31\u53ef\u4ee5\u4e86\u561b\uff0c\u4f46\u662f\uff0c\u8fd9\u4e9b\u540c\u5b66\u5ffd\u89c6\u4e86mysql\u5bb9\u5668\u672c\u8eab\u7684\u542f\u52a8\u65f6\u95f4\uff0c\u5355\u7eaf\u4f7f\u7528depends-on\u5e76\u4e0d\u80fd\u771f\u6b63\u89e3\u51b3\u6211\u4eec\u7684\u95ee\u9898\uff0c\u6211\u4eec\u4e0b\u9762\u4f7f\u7528\u4e00\u4e2a\u5c0f\u6280\u5de7\u6765\u89e3\u51b3\u6211\u4eec\u7684\u95ee\u9898 \u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7528\u5230\u4e00\u4e2a\u811a\u672c\uff0c\u8be5\u811a\u672c\u7ed9\u6211\u4eec\u7528\u4e8e\u4e0d\u65ad\u8bbf\u95eemysql\u670d\u52a1\uff0c\u77e5\u9053\u53ef\u4ee5\u8bbf\u95ee\u5230\uff0c\u7ee7\u7eed\u8fd0\u884cDockerfile\u7684\u6307\u4ee4 \u8fd9\u4e2a\u811a\u6b65\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5730\u5740\u5982\u4e0b\uff0c\u8fd9\u662f\u6211\u4eec\u5728\u90e8\u7f72\u7684\u65f6\u5019\u9700\u8981\u7528\u5230\u7684 https://github.com/ufoscout/docker-compose-wait/releases/download/2.2.1/wait \u90a3\u4e48\u6211\u4eec\u600e\u4e48\u6574\u5408\u5230\u6211\u4eec\u7684DockerFile\u4e2d\u5462? \u5927\u5bb6\u53ef\u4ee5\u770b\u770b\u6211\u4eecNodejs\u7684DockerFile #\u5236\u5b9anode\u955c\u50cf\u7684\u7248\u672c FROM node:8.9-alpine #\u58f0\u660e\u4f5c\u8005 MAINTAINER WilsonZhong #\u79fb\u52a8\u5f53\u524d\u76ee\u5f55\u4e0b\u9762\u7684\u6587\u4ef6\u5230app\u76ee\u5f55\u4e0b ADD . /app/ #\u8fdb\u5165\u5230app\u76ee\u5f55\u4e0b\u9762\uff0c\u7c7b\u4f3ccd WORKDIR /app #\u5b89\u88c5\u4f9d\u8d56 RUN npm install #\u5bf9\u5916\u66b4\u9732\u7684\u7aef\u53e3 EXPOSE 8080 ADD https://github.com/ufoscout/docker-compose-wait/releases/download/2.2.1/wait /wait RUN chmod +x /wait ## Launch the wait tool and then your application CMD /wait && npm start \u53ef\u4ee5\u770b\u5230\uff0c\u5728\u628a\u811a\u6b65\u7684\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u653e\u5230\u5bb9\u5668\u6839\u76ee\u5f55\u540e\uff0c\u7136\u540e\u8d4b\u4e88\u4ed6\u6743\u9650\uff0c\u6700\u540e\u8fd0\u884c/wait && npm start, \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u5bb9\u5668\u8fd0\u884c\u5b8c\u6210\u540e\u518d\u6267\u884cnpm start \u5355\u5355\u8fd9\u6837\u8fd8\u4e0d\u591f\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u7f16\u5199\u6211\u4eec\u7684Docker-compose\u6587\u4ef6 version: \"3\" services: server: image: wilsonzhong/earn_money_backend:latest container_name: earn_money_backend environment: HOST: mysql ports: - 8080:8080 depends_on: - mysql environment: WAIT_HOSTS: mysql:3306 volumes: - ~/public:/app/public mysql: image: wilsonzhong/earn_money_sql:latest environment: MYSQL_ROOT_PASSWORD: EarnMoney container_name: mysql hostname: mysql ports: - 3306:3306 volumes: - ~/mysql:/var/lib/mysql \u8fd9\u91cc\u9700\u8981\u505a\u7684\u5c31\u662f\u628a\u6211\u4eec\u9700\u8981\u7b49\u5f85\u7684hosts\u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\u7ed9\u5230\u6211\u4eec\u7684\u811a\u6b65\uff0c\u5e76\u4f7f\u7528depends_on\u89c4\u5b9a\u542f\u52a8\u987a\u5e8f \u5230\u8fd9\u91cc\u6211\u4eec\u7684\u95ee\u9898\u57fa\u672c\u89e3\u51b3\uff0c\u6709\u540c\u6837\u7591\u8651\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u770b\u6211\u8fd9\u7bc7\u6587\u7ae0\uff0c\u81ea\u5df1\u5c1d\u8bd5\u4e00\u4e0b","title":"\u540e\u7aef\u9879\u76ee\u5bb9\u5668\u5316(\u4f9d\u8d56\u5173\u7cfb\u955c\u50cf\u4e2ddocker-compose\u4e66\u5199)-DockerFile\u5b66\u4e60\u4e4b\u8def"},{"location":"SystemAnalysis/\u540e\u7aef\u9879\u76ee\u5bb9\u5668\u5316(\u4f9d\u8d56\u5173\u7cfb\u955c\u50cf\u4e2ddocker-compose\u4e66\u5199)-DockerFile\u5b66\u4e60\u4e4b\u8def/#docker-compose-dockerfile","text":"\u5728\u5f00\u53d1\u9879\u76ee\u7684\u540e\u671f\uff0c\u6211\u8d1f\u8d23\u4e86\u6211\u4eec\u540e\u7aef\u9879\u76ee\u7684\u5bb9\u5668\u5316\uff0c\u540e\u7aef\u4e3b\u8981\u5305\u542b\u6709\u4e24\u4e2a\u4e3b\u8981\u7684\u5bb9\u5668\uff0c\u4e00\u4e2a\u5c31\u662f\u6211\u4eec\u7684Nodejs\u540e\u53f0\u670d\u52a1\uff0c\u4e00\u4e2a\u5c31\u662f\u6211\u4eec\u7684MySQL\u670d\u52a1\u5bb9\u5668\uff0c\u8fd9\u91cc\u6211\u4ee5\u6211\u4eec\u7684\u9879\u76ee\u4e3a\u4f8b\uff0c\u5411\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\u5982\u4f55\u5728\u8fd9\u79cdNodejs\u670d\u52a1\u5bb9\u5668\u4f9d\u8d56MYSQL\u670d\u52a1\u5bb9\u5668\u7684\u60c5\u666f\u4e0b\uff0c\u5b8c\u6210docker-compose\u7684\u4e66\u5199\u3002 \u5f88\u591a\u4eba\u89c9\u5f97\uff0cdocker-compse\u4e0d\u662f\u6709\u4e00\u4e2adepends-on\u5417\uff0c\u4f7f\u7528depends-on\u4e0d\u5c31\u53ef\u4ee5\u4e86\u561b\uff0c\u4f46\u662f\uff0c\u8fd9\u4e9b\u540c\u5b66\u5ffd\u89c6\u4e86mysql\u5bb9\u5668\u672c\u8eab\u7684\u542f\u52a8\u65f6\u95f4\uff0c\u5355\u7eaf\u4f7f\u7528depends-on\u5e76\u4e0d\u80fd\u771f\u6b63\u89e3\u51b3\u6211\u4eec\u7684\u95ee\u9898\uff0c\u6211\u4eec\u4e0b\u9762\u4f7f\u7528\u4e00\u4e2a\u5c0f\u6280\u5de7\u6765\u89e3\u51b3\u6211\u4eec\u7684\u95ee\u9898 \u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7528\u5230\u4e00\u4e2a\u811a\u672c\uff0c\u8be5\u811a\u672c\u7ed9\u6211\u4eec\u7528\u4e8e\u4e0d\u65ad\u8bbf\u95eemysql\u670d\u52a1\uff0c\u77e5\u9053\u53ef\u4ee5\u8bbf\u95ee\u5230\uff0c\u7ee7\u7eed\u8fd0\u884cDockerfile\u7684\u6307\u4ee4 \u8fd9\u4e2a\u811a\u6b65\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5730\u5740\u5982\u4e0b\uff0c\u8fd9\u662f\u6211\u4eec\u5728\u90e8\u7f72\u7684\u65f6\u5019\u9700\u8981\u7528\u5230\u7684 https://github.com/ufoscout/docker-compose-wait/releases/download/2.2.1/wait \u90a3\u4e48\u6211\u4eec\u600e\u4e48\u6574\u5408\u5230\u6211\u4eec\u7684DockerFile\u4e2d\u5462? \u5927\u5bb6\u53ef\u4ee5\u770b\u770b\u6211\u4eecNodejs\u7684DockerFile #\u5236\u5b9anode\u955c\u50cf\u7684\u7248\u672c FROM node:8.9-alpine #\u58f0\u660e\u4f5c\u8005 MAINTAINER WilsonZhong #\u79fb\u52a8\u5f53\u524d\u76ee\u5f55\u4e0b\u9762\u7684\u6587\u4ef6\u5230app\u76ee\u5f55\u4e0b ADD . /app/ #\u8fdb\u5165\u5230app\u76ee\u5f55\u4e0b\u9762\uff0c\u7c7b\u4f3ccd WORKDIR /app #\u5b89\u88c5\u4f9d\u8d56 RUN npm install #\u5bf9\u5916\u66b4\u9732\u7684\u7aef\u53e3 EXPOSE 8080 ADD https://github.com/ufoscout/docker-compose-wait/releases/download/2.2.1/wait /wait RUN chmod +x /wait ## Launch the wait tool and then your application CMD /wait && npm start \u53ef\u4ee5\u770b\u5230\uff0c\u5728\u628a\u811a\u6b65\u7684\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u653e\u5230\u5bb9\u5668\u6839\u76ee\u5f55\u540e\uff0c\u7136\u540e\u8d4b\u4e88\u4ed6\u6743\u9650\uff0c\u6700\u540e\u8fd0\u884c/wait && npm start, \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u5bb9\u5668\u8fd0\u884c\u5b8c\u6210\u540e\u518d\u6267\u884cnpm start \u5355\u5355\u8fd9\u6837\u8fd8\u4e0d\u591f\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u7f16\u5199\u6211\u4eec\u7684Docker-compose\u6587\u4ef6 version: \"3\" services: server: image: wilsonzhong/earn_money_backend:latest container_name: earn_money_backend environment: HOST: mysql ports: - 8080:8080 depends_on: - mysql environment: WAIT_HOSTS: mysql:3306 volumes: - ~/public:/app/public mysql: image: wilsonzhong/earn_money_sql:latest environment: MYSQL_ROOT_PASSWORD: EarnMoney container_name: mysql hostname: mysql ports: - 3306:3306 volumes: - ~/mysql:/var/lib/mysql \u8fd9\u91cc\u9700\u8981\u505a\u7684\u5c31\u662f\u628a\u6211\u4eec\u9700\u8981\u7b49\u5f85\u7684hosts\u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\u7ed9\u5230\u6211\u4eec\u7684\u811a\u6b65\uff0c\u5e76\u4f7f\u7528depends_on\u89c4\u5b9a\u542f\u52a8\u987a\u5e8f \u5230\u8fd9\u91cc\u6211\u4eec\u7684\u95ee\u9898\u57fa\u672c\u89e3\u51b3\uff0c\u6709\u540c\u6837\u7591\u8651\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u770b\u6211\u8fd9\u7bc7\u6587\u7ae0\uff0c\u81ea\u5df1\u5c1d\u8bd5\u4e00\u4e0b","title":"\u540e\u7aef\u9879\u76ee\u5bb9\u5668\u5316(\u4f9d\u8d56\u5173\u7cfb\u955c\u50cf\u4e2ddocker-compose\u4e66\u5199)-DockerFile\u5b66\u4e60\u4e4b\u8def"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework1/","text":"\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework1 \u7b80\u7b54\u9898 1. \u8f6f\u4ef6\u5de5\u7a0b\u7684\u5b9a\u4e49 \u8f6f\u4ef6\u5de5\u7a0b\u662f\u5728\u8f6f\u4ef6\u7684\u5f00\u53d1\u3001\u8fd0\u884c\u548c\u7ef4\u62a4\u4e2d\u5e94\u7528\u7684\u4e00\u79cd\u7cfb\u7edf\u7684\u3001\u53ef\u91cf\u5316\u7684\u65b9\u6cd5\uff0c\u540c\u65f6\u5305\u542b\u4e86\u5bf9\u8fd9\u4e00\u65b9\u6cd5\u7684\u7814\u7a76\uff0c\u4e0e\u8f6f\u4ef6\u751f\u4ea7\u7684\u6240\u6709\u65b9\u9762\u76f8\u5173\u7684\u5de5\u7a0b\u5b66\u79d1\u3002\u662f\u5bf9\u8f6f\u4ef6\u7684\u5de5\u7a0b\u5e94\u7528\u3002 2. \u89e3\u91ca\u5bfc\u81f4 software crisis \u672c\u8d28\u539f\u56e0\u3001\u8868\u73b0\uff0c\u8ff0\u8bf4\u514b\u670d\u8f6f\u4ef6\u5371\u673a\u7684\u65b9\u6cd5 \u672c\u8d28\u539f\u56e0: \u786c\u4ef6\u7684\u5feb\u901f\u53d1\u5c55\u5bfc\u81f4\u8ba1\u7b97\u80fd\u529b\u7684\u6781\u5927\u63d0\u9ad8\uff0c\u8d85\u8fc7\u4e86\u5f00\u53d1\u8f6f\u4ef6\u6709\u6548\u5229\u7528\u8fd9\u4e9b\u8ba1\u7b97\u6027\u80fd\u7684\u80fd\u529b\u3002\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u70b9\u4f53\u73b0 \u65e5\u76ca\u589e\u957f\u7684\u9700\u6c42\u4f7f\u5f97\u8f6f\u4ef6\u751f\u4ea7\u529b\u6548\u7387\u8ddf\u4e0d\u4e0a \u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5\u6ca1\u6709\u8ddf\u4e0a\u8d8a\u6765\u8d8a\u590d\u6742\u7684\u8f6f\u4ef6\u5f00\u53d1\u3002\u968f\u7740\u8f6f\u4ef6\u7684\u590d\u6742\u5ea6\u4e0d\u65ad\u589e\u52a0\uff0c\u7531\u4e8e\u73b0\u6709\u65b9\u6cd5\u4e0d\u8db3\uff0c\u5bf9\u5927\u578b\u3001\u590d\u6742\u8f6f\u4ef6\u5b58\u5728\u65e0\u6cd5\u89e3\u51b3\u95ee\u9898\u7684\u60c5\u51b5\u3002 \u8868\u73b0 \u9879\u76ee\u8fd0\u884c\u8d85\u8fc7\u9884\u7b97 \u9879\u76ee\u8fd0\u884c\u8d85\u65f6 \u8f6f\u4ef6\u7684\u4f7f\u7528\u6548\u7387\u8f83\u4f4e \u8f6f\u4ef6\u8d28\u91cf\u8fc7\u5dee \u8f6f\u4ef6\u4e0d\u80fd\u6ee1\u8db3\u7528\u6237\u9700\u6c42 \u9879\u76ee\u65e0\u6cd5\u7ba1\u7406\uff0c\u4ee3\u7801\u96be\u4ee5\u7ef4\u62a4 \u8f6f\u4ef6\u65e0\u6cd5\u4ea4\u4ed8 \u514b\u670d\u8f6f\u4ef6\u5371\u673a\u7684\u65b9\u6cd5 \u6b63\u786e\u8ba4\u8bc6\u8ba1\u7b97\u673a\u8f6f\u4ef6\u7684\u5185\u6db5 \u91c7\u7528\u5de5\u7a0b\u9879\u76ee\u7ba1\u7406\u65b9\u6cd5\u5b9e\u65bd\u8f6f\u4ef6\u5f00\u53d1\u7684\u7ec4\u7ec7\u7ba1\u7406, \u4f7f\u5176\u6210\u4e3a\u4e00\u79cd\u7ec4\u7ec7\u826f\u597d\u3001\u7ba1\u7406\u4e25\u5bc6\u3001\u534f\u540c\u914d\u5408\u7684\u6d3b\u52a8\u3002 \u91c7\u7528\u6210\u719f\u7684\u8f6f\u4ef6\u5f00\u53d1\u6280\u672f\u548c\u65b9\u6cd5, \u5f00\u53d1\u548c\u4f7f\u7528\u9002\u5f53\u7684\u8f6f\u4ef6\u5de5\u5177 3. \u8f6f\u4ef6\u751f\u547d\u5468\u671f \u8f6f\u4ef6\u751f\u547d\u5468\u671f\u662f\u8f6f\u4ef6\u7684\u4ea7\u751f\u76f4\u5230\u62a5\u5e9f\u6216\u505c\u6b62\u4f7f\u7528\u7684\u751f\u547d\u5468\u671f\uff0c\u5468\u671f\u5185\u6709\u9700\u6c42\u5b9a\u4e49\u3001\u53ef\u884c\u6027\u5206\u6790\u3001\u603b\u4f53\u63cf\u8ff0\u3001\u7cfb\u7edf\u8bbe\u8ba1\u3001\u7f16\u7801\u3001\u8c03\u8bd5\u548c\u6d4b\u8bd5\u3001\u9a8c\u6536\u4e0e\u8fd0\u884c\u3001\u7ef4\u62a4\u5347\u7ea7\u5230\u5e9f\u5f03\u7b49\u9636\u6bb5\u3002 4. SWEBoK \u7684 15 \u4e2a\u77e5\u8bc6\u57df\uff08An Overview of the SWEBOK Guide \u8bf7\u4e2d\u6587\u7ffb\u8bd1\u5176\u540d\u79f0\u4e0e\u7b80\u77ed\u8bf4\u660e\uff09 Software Requirements \u8f6f\u4ef6\u9700\u6c42 \u7528\u6765\u63cf\u8ff0\u89e3\u51b3\u73b0\u5b9e\u4e16\u754c\u67d0\u4e2a\u95ee\u9898\u7684\u8f6f\u4ef6\u4ea7\u54c1\u53ca\u5bf9\u8f6f\u4ef6\u4ea7\u54c1\u7684\u7ea6\u675f\uff0c\u8bbe\u8ba1\u9700\u6c42\u83b7\u53d6\u3001\u9700\u6c42\u5206\u6790\u3001\u5efa\u7acb\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u548c\u786e\u8ba4\uff0c\u9886\u57df\u95ee\u9898\u5efa\u6a21\uff0c\u8f6f\u4ef6\u5f00\u53d1\u6280\u672f\u3001\u7ecf\u6d4e\u548c\u65f6\u95f4\u53ef\u884c\u6027\u5206\u6790\u3002 \u8f6f\u4ef6\u9700\u6c42\u7684\u597d\u574f\u76f4\u63a5\u5f71\u54cd\u8f6f\u4ef6\u5f00\u53d1\u5168\u8fc7\u7a0b\u3002 Software Design \u8f6f\u4ef6\u8bbe\u8ba1 \u8f6f\u4ef6\u5de5\u7a0b\u6700\u6838\u5fc3\u7684\u5185\u5bb9\u3002\u8f6f\u4ef6\u8bbe\u8ba1\u7531\u8f6f\u4ef6\u4f53\u7cfb\u7ed3\u6784\u8bbe\u8ba1\u3001\u8f6f\u4ef6\u8be6\u7ec6\u8bbe\u8ba1\u4e24\u79cd\u6d3b\u52a8\u7ec4\u6210\u3002\u5b83\u6d89\u53ca\u8f6f\u4ef6\u4f53\u7cfb\u7ed3\u6784\u3001\u6784\u4ef6\u3001\u63a5\u53e3\uff0c\u8fd8\u8bbe\u8ba1\u8f6f\u4ef6\u8bbe\u8ba1\u8d28\u91cf\u5206\u6790\u548c\u8bc4\u4f30\u3001\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u8868\u793a\u3001\u8f6f\u4ef6\u8bbe\u8ba1\u7b56\u7565\u548c\u65b9\u6cd5\u7b49\u3002 Software Construction \u8f6f\u4ef6\u6784\u9020 \u8f6f\u4ef6\u6784\u9020\u6307\u901a\u8fc7\u7f16\u7801\u3001\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u3001\u8c03\u8bd5\u3001\u786e\u8ba4\u7b49\u6d3b\u52a8\uff0c\u751f\u6210\u53ef\u7528\u7684\u3001\u6709\u610f\u4e49\u7684\u8f6f\u4ef6\u3002\u8f6f\u4ef6\u6784\u9020\u9664\u8981\u6c42\u7c89\u76d2\u8bbe\u8ba1\u529f\u80fd\u5916\uff0c\u8fd8\u8981\u6c42\u63a7\u5236\u548c\u964d\u4f4e\u7a0b\u5e8f\u590d\u6742\u6027\u3001\u9884\u8ba1\u53d8\u66f4\u3001\u8fdb\u884c\u7a0b\u5e8f\u9a8c\u8bc1\u548c\u5236\u5b9a\u8f6f\u4ef6\u6784\u9020\u6807\u51c6\u3002\u8f6f\u4ef6\u6784\u9020\u4e0e\u8f6f\u4ef6\u914d\u7f6e\u7ba1\u7406\u3001\u5de5\u5177\u548c\u65b9\u6cd5\u3002 Software Testing \u8f6f\u4ef6\u6d4b\u8bd5 \u8f6f\u4ef6\u6d4b\u8bd5\u662f\u8f6f\u4ef6\u751f\u5b58\u5468\u671f\u7684\u91cd\u8981\u90e8\u5206\uff0c\u6d89\u53ca\u6d4b\u8bd5\u6807\u51c6\u3001\u6280\u672f\u3001\u5ea6\u91cf\u548c\u6d4b\u8bd5\u8fc7\u7a0b\u3002 \u8f6f\u4ef6\u6d4b\u8bd5\u7684\u76ee\u7684\u662f\u6807\u8bc6\u7f3a\u9677\u548c\u95ee\u9898\uff0c\u6539\u5584\u4ea7\u54c1\u8d28\u91cf\u3002\u8f6f\u4ef6\u6d4b\u8bd5\u8986\u76d6\u6574\u4e2a\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u3002\u6b63\u786e\u7684\u8f6f\u4ef6\u5de5\u7a0b\u8d28\u91cf\u89c2\u662f\u9884\u9632\u3001\u907f\u514d\u7f3a\u9677\u548c\u95ee\u9898\u3002\u6d4b\u8bd5\u7684\u7ec8\u70b9\u662f\u5efa\u7acb\u4e00\u4e2a\u6709\u9650\u7684\u6d4b\u8bd5\u7528\u4f8b\u96c6\uff0c\u52a8\u6001\u5730\u9a8c\u8bc1\u7a0b\u5e8f\u662f\u5426\u8fbe\u5230\u9884\u671f\u884c\u4e3a\u3002 Software Maintenance \u8f6f\u4ef6\u7ef4\u62a4 \u8f6f\u4ef6\u7ef4\u62a4\u662f\u8f6f\u4ef6\u751f\u5b58\u5468\u671f\u7684\u7ec4\u6210\u90e8\u5206\u3002\u8f6f\u4ef6\u7ef4\u62a4\u8981\u652f\u6301\u7cfb\u7edf\u5feb\u901f\u5730\u3001\u4fbf\u6377\u5730\u6ee1\u8db3\u65b0\u7684\u9700\u6c42\u3002\u57fa\u4e8e\u670d\u52a1\u7684\u8f6f\u4ef6\u7ef4\u62a4\u8d8a\u6765\u8d8a\u53d7\u5230\u91cd\u89c6\u3002\u8f6f\u4ef6\u7ec4\u7ec7\u529b\u56fe\u4f7f\u8f6f\u4ef6\u8fd0\u8425\u65f6\u95f4\u66f4\u957f\uff0c\u8f6f\u4ef6\u7ef4\u62a4\u6210\u4e3a\u4ee4\u4eba\u5173\u6ce8\u7684\u7126\u70b9\u3002 Software Configuration Management \u8f6f\u4ef6\u914d\u7f6e\u7ba1\u7406 \u8f6f\u4ef6\u914d\u7f6e\u7ba1\u7406\u662f\u4e00\u79cd\u6807\u8bc6\u3001\u7ec4\u7ec7\u548c\u63a7\u5236\u4fee\u6539\u7684\u6280\u672f\uff0c\u7ef4\u62a4\u6574\u4e2a\u7cfb\u7edf\u751f\u547d\u5468\u671f\u4e2d\u8f6f\u4ef6\u914d\u7f6e\u7684\u4e00\u81f4\u6027\u548c\u53ef\u8ffd\u8e2a\u6027\u3002\u5185\u5bb9\u5305\u62ec\u914d\u7f6e\u7ba1\u7406\u8fc7\u7a0b\u7684\u7ba1\u7406\u3001\u8f6f\u4ef6\u914d\u7f6e\u9274\u522b\u3001\u914d\u7f6e\u7ba1\u7406\u63a7\u5236\u7ba1\u7406\u3001\u914d\u7f6e\u7ba1\u7406\u72b6\u6001\u8bb0\u5f55\u3001\u914d\u7f6e\u7ba1\u7406\u5ba1\u8ba1\u3001\u8f6f\u4ef6\u53d1\u5e03\u548c\u4ea4\u4ed8\u7ba1\u7406\u3002 Software Engineering Management \u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406 \u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406\u6d89\u53ca\u89c4\u5212\uff0c\u534f\u8c03\uff0c\u6d4b\u91cf\uff0c\u62a5\u544a\u548c\u9879\u76ee/\u7a0b\u5e8f\u63a7\u5236\uff0c\u4ee5\u786e\u4fdd\u5f00\u53d1\u548c\u7ef4\u62a4\u8f6f\u4ef6\u662f\u7cfb\u7edf\u7684\uff0c\u89c4\u8303\u5316\u7684\u4e14\u91cf\u5316\u7684\u3002 \u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406\u77e5\u8bc6\u9886\u57df\u6db5\u76d6\u542f\u52a8\u548c\u8303\u56f4\u5b9a\u4e49\uff0c\u8f6f\u4ef6\u9879\u76ee\u89c4\u5212\uff0c\u8f6f\u4ef6\u9879\u76ee\u5236\u5b9a\uff0c\u4ea7\u54c1\u9a8c\u6536\uff0c\u9879\u76ee\u7ee9\u6548\u5ba1\u67e5\u548c\u5206\u6790\uff0c\u9879\u76ee\u7ed3\u675f\u548c\u8f6f\u4ef6\u7ba1\u7406\u5de5\u5177\u3002 Software Engineering Process \u8f6f\u4ef6\u5de5\u7a0b\u8fc7\u7a0b \u8f6f\u4ef6\u5de5\u7a0b\u77e5\u8bc6\u9886\u57df\u5173\u6ce8\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u8fc7\u7a0b\u7684\u5b9a\u4e49\uff0c\u5b9e\u73b0\uff0c\u8bc4\u4f30\uff0c\u6d4b\u91cf\uff0c\u7ba1\u7406\u548c\u6539\u8fdb\u3002\u4e3b\u9898\u5305\u62ec\u8fc7\u7a0b\u5b9e\u73b0\u548c\u6539\u53d8\uff0c\u8fc7\u7a0b\u5b9a\u4e49\uff0c\u8fc7\u7a0b\u8bc4\u4f30\u6a21\u578b\u548c\u65b9\u6cd5\uff0c\u6d4b\u91cf\u548c\u8f6f\u4ef6\u8fc7\u7a0b\u5de5\u5177\u3002 Software Engineering Models and Methods \u8f6f\u4ef6\u5de5\u7a0b\u6a21\u578b\u4e0e\u65b9\u6cd5 \u8f6f\u4ef6\u5de5\u7a0b\u6a21\u578b\u548c\u65b9\u6cd5\u89e3\u51b3\u4e86\u6db5\u76d6\u591a\u4e2a\u751f\u547d\u5468\u671f\u9636\u6bb5\u7684\u65b9\u6cd5;\u5176\u4ed6\u6db5\u76d6\u7279\u5b9a\u751f\u547d\u5468\u671f\u9636\u6bb5\u7684\u7279\u5b9a\u65b9\u6cd5\u3002 Software Quality \u8f6f\u4ef6\u8d28\u91cf \u8f6f\u4ef6\u8d28\u91cf\u662f\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u666e\u904d\u5173\u6ce8\u7684\u3002 \u6b64\u5916\uff0c\u8f6f\u4ef6\u8d28\u91cf\u77e5\u8bc6\u9886\u57df\u5305\u62ec\u8f6f\u4ef6\u8d28\u91cf\u57fa\u7840\uff0c\u8f6f\u4ef6\u8d28\u91cf\u7ba1\u7406\u8fc7\u7a0b\u548c\u5b9e\u9645\u8003\u91cf\u3002 Software Engineering Professional Practice \u8f6f\u4ef6\u5de5\u7a0b\u4e13\u4e1a\u5b9e\u8df5 \u8f6f\u4ef6\u5de5\u7a0b\u4e13\u4e1a\u5b9e\u8df5\u5173\u6ce8\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5fc5\u987b\u5177\u5907\u7684\u77e5\u8bc6\uff0c\u6280\u5de7\u548c\u6001\u5ea6\uff0c\u4ee5\u7528\u4e00\u79cd\u4e13\u4e1a\uff0c\u8d1f\u8d23\u548c\u6b63\u76f4\u7684\u6001\u5ea6\u6765\u65f6\u95f4\u8f6f\u4ef6\u5de5\u7a0b Software Engineering Economics \u8f6f\u4ef6\u5de5\u7a0b\u7ecf\u6d4e\u5b66 \u8f6f\u4ef6\u5de5\u7a0b\u7ecf\u6d4e\u5b66\u77e5\u8bc6\u9886\u57df\u5173\u6ce8\u5728\u5546\u4e1a\u73af\u5883\u4e2d\u505a\u51fa\u51b3\u7b56\uff0c\u4ee5\u4f7f\u6280\u672f\u51b3\u7b56\u548c\u5546\u4e1a\u76ee\u6807\u8fbe\u6210\u4e00\u81f4\u3002 Computing Foundations \u8ba1\u7b97\u57fa\u7840 \u63d0\u4f9b\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u6240\u9700\u7684\u8ba1\u7b97\u80cc\u666f\uff0c\u6db5\u76d6\u4e86\u63d0\u4f9b\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u6240\u9700\u7684\u8ba1\u7b97\u80cc\u666f\u7684\u57fa\u7840\u4e3b\u9898\u3002 Mathematical Foundations \u6570\u5b66\u57fa\u7840 \u63d0\u4f9b\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u6240\u9700\u7684\u6570\u5b66\u80cc\u666f\uff0c\u6db5\u76d6\u4e86\u63d0\u4f9b\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u6240\u5fc5\u9700\u7684\u6570\u5b66\u80cc\u666f\u7684\u57fa\u7840\u4e3b\u9898 Engineering Foundations \u5de5\u7a0b\u57fa\u7840 \u63d0\u4f9b\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u6240\u9700\u7684\u5de5\u7a0b\u80cc\u666f\uff0c\u6db5\u76d6\u4e86\u63d0\u4f9b\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u6240\u5fc5\u9700\u7684\u5de5\u7a0b\u80cc\u666f\u7684\u57fa\u7840\u4e3b\u9898\u3002 5. \u7b80\u5355\u89e3\u91ca CMMI \u7684\u4e94\u4e2a\u7ea7\u522b\u3002\u4f8b\u5982\uff1aLevel 1 - Initial\uff1a\u65e0\u5e8f\uff0c\u81ea\u53d1\u751f\u4ea7\u6a21\u5f0f\u3002 Level 1 - Initial\uff08\u521d\u59cb\u7ea7\uff09\uff1a \u8f6f\u4ef6\u8fc7\u7a0b\u662f\u65e0\u5e8f\u7684\uff0c\u6709\u65f6\u751a\u81f3\u662f\u6df7\u4e71\u7684\uff0c\u5bf9\u8fc7\u7a0b\u51e0\u4e4e\u6ca1\u6709\u5b9a\u4e49\uff0c\u6210\u529f\u53d6\u51b3\u4e8e\u4e2a\u4eba\u52aa\u529b\u3002\u7ba1\u7406\u662f\u53cd\u5e94\u5f0f\u7684\u3002 Level 2 - Managed\uff08\u53ef\u7ba1\u7406\u7ea7\uff09\uff1a \u5efa\u7acb\u4e86\u57fa\u672c\u7684\u9879\u76ee\u7ba1\u7406\u8fc7\u7a0b\u6765\u8ddf\u8e2a\u8d39\u7528\u3001\u8fdb\u5ea6\u548c\u529f\u80fd\u7279\u6027\u3002\u5236\u5b9a\u4e86\u5fc5\u8981\u7684\u8fc7\u7a0b\u7eaa\u5f8b\uff0c\u80fd\u91cd\u590d\u65e9\u5148\u7c7b\u4f3c\u5e94\u7528\u9879\u76ee\u53d6\u5f97\u7684\u6210\u529f\u7ecf\u9a8c\u3002 Level 3 - Defined\uff08\u5df2\u5b9a\u4e49\u7ea7\uff09\uff1a \u5df2\u5c06\u8f6f\u4ef6\u7ba1\u7406\u548c\u5de5\u7a0b\u4e24\u65b9\u9762\u7684\u8fc7\u7a0b\u6587\u6863\u5316\u3001\u6807\u51c6\u5316\uff0c\u5e76\u7efc\u5408\u6210\u8be5\u7ec4\u7ec7\u7684\u6807\u51c6\u8f6f\u4ef6\u8fc7\u7a0b\u3002\u6240\u6709\u9879\u76ee\u5747\u4f7f\u7528\u7ecf\u6279\u51c6\u3001\u526a\u88c1\u7684\u6807\u51c6\u8f6f\u4ef6\u8fc7\u7a0b\u6765\u5f00\u53d1\u548c\u7ef4\u62a4\u8f6f\u4ef6\uff0c\u8f6f\u4ef6\u4ea7\u54c1\u7684\u751f\u4ea7\u5728\u6574\u4e2a\u8f6f\u4ef6\u8fc7\u7a0b\u662f\u53ef\u89c1\u7684\u3002 Level 4 - Quantitatively Managed\uff08\u91cf\u5316\u7ba1\u7406\u7ea7\uff09\uff1a \u5206\u6790\u5bf9\u8f6f\u4ef6\u8fc7\u7a0b\u548c\u4ea7\u54c1\u8d28\u91cf\u7684\u8be6\u7ec6\u5ea6\u91cf\u6570\u636e\uff0c\u5bf9\u8f6f\u4ef6\u8fc7\u7a0b\u548c\u4ea7\u54c1\u90fd\u6709\u5b9a\u91cf\u7684\u7406\u89e3\u4e0e\u63a7\u5236\u3002\u7ba1\u7406\u6709\u4e00\u4e2a\u4f5c\u51fa\u7ed3\u8bba\u7684\u5ba2\u89c2\u4f9d\u636e\uff0c\u7ba1\u7406\u80fd\u591f\u5728\u5b9a\u91cf\u7684\u8303\u56f4\u5185\u9884\u6d4b\u6027\u80fd\u3002 Level 5 - Optimizing\uff08\u4f18\u5316\u7ea7\uff09\uff1a \u8fc7\u7a0b\u7684\u91cf\u5316\u53cd\u9988\u548c\u5148\u8fdb\u7684\u65b0\u601d\u60f3\u3001\u65b0\u6280\u672f\u4fc3\u4f7f\u8fc7\u7a0b\u6301\u7eed\u4e0d\u65ad\u6539\u8fdb\u3002 6. SWEBok & CMMI SWEBoK \u5176\u5168\u79f0\u4e3a\u8f6f\u4ef6\u5de5\u7a0b\u77e5\u8bc6\u4f53\u7cfb\uff0c\u5176\u76ee\u7684\u662f\u4e3a\u8f6f\u4ef6\u5de5\u7a0b\u5b66\u79d1\u7684\u8303\u56f4\u63d0\u4f9b\u4e00\u81f4\u7684\u8ba4\u8bc6\uff0c\u4e3a\u652f\u6301\u8be5\u5b66\u79d1\u7684\u672c\u4f53\u77e5\u8bc6\u63d0\u4f9b\u6307\u5bfc\uff0c\u4e3a\u8f6f\u4ef6\u5de5\u7a0b\u7684\u7cfb\u7edf\u6027\u89c4\u8303\u6027\u4ee5\u53ca\u53ef\u91cf\u5316\u6027\u3002SWEBoK\u5c06\u8f6f\u4ef6\u5de5\u7a0b\u5b66\u79d1\u7684\u672c\u4f53\u77e5\u8bc6\u5206\u4e3a15\u4e2a\u77e5\u8bc6\u57df\uff0c\u5e76\u5bf9\u6bcf\u4e2a\u77e5\u8bc6\u57df\u4e2d\u7684\u91cd\u8981\u6982\u5ff5\u548c\u533a\u522b\u52a0\u4ee5\u9610\u8ff0\u8bf4\u660e\uff0c\u6307\u5bfc\u4e86\u8f6f\u4ef6\u5de5\u7a0b\u7684\u53d1\u5c55\u3002\u5176\u610f\u4e49\u5728\u4e8e\u5c06\u539f\u672c\u6df7\u6742\u7684\u8f6f\u4ef6\u5de5\u7a0b\u77e5\u8bc6\u4f53\u7cfb\u5316\uff0c\u5c06\u539f\u672c\u5b58\u5728\u7684\u77e5\u8bc6\u5206\u7c7b\u6574\u7406\uff0c\u6700\u540e\u5f62\u6210\u4e00\u4e2a\u5177\u6709\u5171\u8bc6\u6027\u548c\u65b9\u5411\u6027\u7684\u6307\u5357\u3002 CMMI \u5176\u5168\u79f0\u4e3a\u80fd\u529b\u6210\u719f\u5ea6\u6a21\u578b\u96c6\u6210\uff0c\u662f\u4e00\u4e2a\u8fc7\u7a0b\u7ea7\u522b\u7684\u6539\u8fdb\u6a21\u578b\uff0c\u96c6\u6210\u4e86\u5404\u79cd\u73b0\u5b58\u5b9e\u65bd\u7684\u4e0e\u5c06\u88ab\u53d1\u5c55\u51fa\u6765\u7684\u80fd\u529b\u6210\u719f\u5ea6\u6a21\u578b\uff0c\u672c\u8d28\u662f\u8f6f\u4ef6\u7ba1\u7406\u5de5\u7a0b\u7684\u4e00\u90e8\u5206\u3002\u5176\u76ee\u7684\u662f\u5e2e\u52a9\u8f6f\u4ef6\u4f01\u4e1a\u5bf9\u8f6f\u4ef6\u5de5\u7a0b\u8fc7\u7a0b\u8fdb\u884c\u7ba1\u7406\u548c\u6539\u8fdb\uff0c\u589e\u5f3a\u5f00\u53d1\u4e0e\u6539\u8fdb\u80fd\u529b\uff0c\u4ece\u800c\u80fd\u6309\u65f6\u5730\u3001\u4e0d\u8d85\u9884\u7b97\u5730\u5f00\u53d1\u51fa\u9ad8\u8d28\u91cf\u7684\u8f6f\u4ef6\u3002CMMI\u63d0\u4f9b\u4e00\u4e2a\u5355\u4e00\u7684\u96c6\u6210\u5316\u6846\u67b6\uff0c\u4ece\u800c\u6d88\u9664\u4e86\u5404\u4e2a\u6a21\u578b\u7684\u4e0d\u4e00\u81f4\u6027\uff0c\u51cf\u5c11\u4e86\u6a21\u578b\u95f4\u7684\u91cd\u590d\uff0c\u589e\u52a0\u900f\u660e\u5ea6\u548c\u7406\u89e3\uff0c\u4ece\u603b\u4f53\u4e0a\u6539\u8fdb\u7ec4\u7ec7\u7684\u8d28\u91cf\u548c\u6548\u7387\u3002CMMI\u4e3b\u8981\u5173\u6ce8\u70b9\u5c31\u662f\u6210\u672c\u6548\u76ca\u3001\u660e\u786e\u91cd\u70b9\u3001\u8fc7\u7a0b\u96c6\u4e2d\u548c\u7075\u6d3b\u6027\u56db\u4e2a\u65b9\u9762\u3002","title":"\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework1"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework1/#homework1","text":"","title":"\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework1"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework1/#_1","text":"","title":"\u7b80\u7b54\u9898"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework1/#1","text":"\u8f6f\u4ef6\u5de5\u7a0b\u662f\u5728\u8f6f\u4ef6\u7684\u5f00\u53d1\u3001\u8fd0\u884c\u548c\u7ef4\u62a4\u4e2d\u5e94\u7528\u7684\u4e00\u79cd\u7cfb\u7edf\u7684\u3001\u53ef\u91cf\u5316\u7684\u65b9\u6cd5\uff0c\u540c\u65f6\u5305\u542b\u4e86\u5bf9\u8fd9\u4e00\u65b9\u6cd5\u7684\u7814\u7a76\uff0c\u4e0e\u8f6f\u4ef6\u751f\u4ea7\u7684\u6240\u6709\u65b9\u9762\u76f8\u5173\u7684\u5de5\u7a0b\u5b66\u79d1\u3002\u662f\u5bf9\u8f6f\u4ef6\u7684\u5de5\u7a0b\u5e94\u7528\u3002","title":"1. \u8f6f\u4ef6\u5de5\u7a0b\u7684\u5b9a\u4e49"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework1/#2-software-crisis","text":"\u672c\u8d28\u539f\u56e0: \u786c\u4ef6\u7684\u5feb\u901f\u53d1\u5c55\u5bfc\u81f4\u8ba1\u7b97\u80fd\u529b\u7684\u6781\u5927\u63d0\u9ad8\uff0c\u8d85\u8fc7\u4e86\u5f00\u53d1\u8f6f\u4ef6\u6709\u6548\u5229\u7528\u8fd9\u4e9b\u8ba1\u7b97\u6027\u80fd\u7684\u80fd\u529b\u3002\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u70b9\u4f53\u73b0 \u65e5\u76ca\u589e\u957f\u7684\u9700\u6c42\u4f7f\u5f97\u8f6f\u4ef6\u751f\u4ea7\u529b\u6548\u7387\u8ddf\u4e0d\u4e0a \u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5\u6ca1\u6709\u8ddf\u4e0a\u8d8a\u6765\u8d8a\u590d\u6742\u7684\u8f6f\u4ef6\u5f00\u53d1\u3002\u968f\u7740\u8f6f\u4ef6\u7684\u590d\u6742\u5ea6\u4e0d\u65ad\u589e\u52a0\uff0c\u7531\u4e8e\u73b0\u6709\u65b9\u6cd5\u4e0d\u8db3\uff0c\u5bf9\u5927\u578b\u3001\u590d\u6742\u8f6f\u4ef6\u5b58\u5728\u65e0\u6cd5\u89e3\u51b3\u95ee\u9898\u7684\u60c5\u51b5\u3002 \u8868\u73b0 \u9879\u76ee\u8fd0\u884c\u8d85\u8fc7\u9884\u7b97 \u9879\u76ee\u8fd0\u884c\u8d85\u65f6 \u8f6f\u4ef6\u7684\u4f7f\u7528\u6548\u7387\u8f83\u4f4e \u8f6f\u4ef6\u8d28\u91cf\u8fc7\u5dee \u8f6f\u4ef6\u4e0d\u80fd\u6ee1\u8db3\u7528\u6237\u9700\u6c42 \u9879\u76ee\u65e0\u6cd5\u7ba1\u7406\uff0c\u4ee3\u7801\u96be\u4ee5\u7ef4\u62a4 \u8f6f\u4ef6\u65e0\u6cd5\u4ea4\u4ed8 \u514b\u670d\u8f6f\u4ef6\u5371\u673a\u7684\u65b9\u6cd5 \u6b63\u786e\u8ba4\u8bc6\u8ba1\u7b97\u673a\u8f6f\u4ef6\u7684\u5185\u6db5 \u91c7\u7528\u5de5\u7a0b\u9879\u76ee\u7ba1\u7406\u65b9\u6cd5\u5b9e\u65bd\u8f6f\u4ef6\u5f00\u53d1\u7684\u7ec4\u7ec7\u7ba1\u7406, \u4f7f\u5176\u6210\u4e3a\u4e00\u79cd\u7ec4\u7ec7\u826f\u597d\u3001\u7ba1\u7406\u4e25\u5bc6\u3001\u534f\u540c\u914d\u5408\u7684\u6d3b\u52a8\u3002 \u91c7\u7528\u6210\u719f\u7684\u8f6f\u4ef6\u5f00\u53d1\u6280\u672f\u548c\u65b9\u6cd5, \u5f00\u53d1\u548c\u4f7f\u7528\u9002\u5f53\u7684\u8f6f\u4ef6\u5de5\u5177","title":"2. \u89e3\u91ca\u5bfc\u81f4 software crisis \u672c\u8d28\u539f\u56e0\u3001\u8868\u73b0\uff0c\u8ff0\u8bf4\u514b\u670d\u8f6f\u4ef6\u5371\u673a\u7684\u65b9\u6cd5"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework1/#3","text":"\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u662f\u8f6f\u4ef6\u7684\u4ea7\u751f\u76f4\u5230\u62a5\u5e9f\u6216\u505c\u6b62\u4f7f\u7528\u7684\u751f\u547d\u5468\u671f\uff0c\u5468\u671f\u5185\u6709\u9700\u6c42\u5b9a\u4e49\u3001\u53ef\u884c\u6027\u5206\u6790\u3001\u603b\u4f53\u63cf\u8ff0\u3001\u7cfb\u7edf\u8bbe\u8ba1\u3001\u7f16\u7801\u3001\u8c03\u8bd5\u548c\u6d4b\u8bd5\u3001\u9a8c\u6536\u4e0e\u8fd0\u884c\u3001\u7ef4\u62a4\u5347\u7ea7\u5230\u5e9f\u5f03\u7b49\u9636\u6bb5\u3002","title":"3. \u8f6f\u4ef6\u751f\u547d\u5468\u671f"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework1/#4-swebok-15-an-overview-of-the-swebok-guide","text":"Software Requirements \u8f6f\u4ef6\u9700\u6c42 \u7528\u6765\u63cf\u8ff0\u89e3\u51b3\u73b0\u5b9e\u4e16\u754c\u67d0\u4e2a\u95ee\u9898\u7684\u8f6f\u4ef6\u4ea7\u54c1\u53ca\u5bf9\u8f6f\u4ef6\u4ea7\u54c1\u7684\u7ea6\u675f\uff0c\u8bbe\u8ba1\u9700\u6c42\u83b7\u53d6\u3001\u9700\u6c42\u5206\u6790\u3001\u5efa\u7acb\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u548c\u786e\u8ba4\uff0c\u9886\u57df\u95ee\u9898\u5efa\u6a21\uff0c\u8f6f\u4ef6\u5f00\u53d1\u6280\u672f\u3001\u7ecf\u6d4e\u548c\u65f6\u95f4\u53ef\u884c\u6027\u5206\u6790\u3002 \u8f6f\u4ef6\u9700\u6c42\u7684\u597d\u574f\u76f4\u63a5\u5f71\u54cd\u8f6f\u4ef6\u5f00\u53d1\u5168\u8fc7\u7a0b\u3002 Software Design \u8f6f\u4ef6\u8bbe\u8ba1 \u8f6f\u4ef6\u5de5\u7a0b\u6700\u6838\u5fc3\u7684\u5185\u5bb9\u3002\u8f6f\u4ef6\u8bbe\u8ba1\u7531\u8f6f\u4ef6\u4f53\u7cfb\u7ed3\u6784\u8bbe\u8ba1\u3001\u8f6f\u4ef6\u8be6\u7ec6\u8bbe\u8ba1\u4e24\u79cd\u6d3b\u52a8\u7ec4\u6210\u3002\u5b83\u6d89\u53ca\u8f6f\u4ef6\u4f53\u7cfb\u7ed3\u6784\u3001\u6784\u4ef6\u3001\u63a5\u53e3\uff0c\u8fd8\u8bbe\u8ba1\u8f6f\u4ef6\u8bbe\u8ba1\u8d28\u91cf\u5206\u6790\u548c\u8bc4\u4f30\u3001\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u8868\u793a\u3001\u8f6f\u4ef6\u8bbe\u8ba1\u7b56\u7565\u548c\u65b9\u6cd5\u7b49\u3002 Software Construction \u8f6f\u4ef6\u6784\u9020 \u8f6f\u4ef6\u6784\u9020\u6307\u901a\u8fc7\u7f16\u7801\u3001\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u3001\u8c03\u8bd5\u3001\u786e\u8ba4\u7b49\u6d3b\u52a8\uff0c\u751f\u6210\u53ef\u7528\u7684\u3001\u6709\u610f\u4e49\u7684\u8f6f\u4ef6\u3002\u8f6f\u4ef6\u6784\u9020\u9664\u8981\u6c42\u7c89\u76d2\u8bbe\u8ba1\u529f\u80fd\u5916\uff0c\u8fd8\u8981\u6c42\u63a7\u5236\u548c\u964d\u4f4e\u7a0b\u5e8f\u590d\u6742\u6027\u3001\u9884\u8ba1\u53d8\u66f4\u3001\u8fdb\u884c\u7a0b\u5e8f\u9a8c\u8bc1\u548c\u5236\u5b9a\u8f6f\u4ef6\u6784\u9020\u6807\u51c6\u3002\u8f6f\u4ef6\u6784\u9020\u4e0e\u8f6f\u4ef6\u914d\u7f6e\u7ba1\u7406\u3001\u5de5\u5177\u548c\u65b9\u6cd5\u3002 Software Testing \u8f6f\u4ef6\u6d4b\u8bd5 \u8f6f\u4ef6\u6d4b\u8bd5\u662f\u8f6f\u4ef6\u751f\u5b58\u5468\u671f\u7684\u91cd\u8981\u90e8\u5206\uff0c\u6d89\u53ca\u6d4b\u8bd5\u6807\u51c6\u3001\u6280\u672f\u3001\u5ea6\u91cf\u548c\u6d4b\u8bd5\u8fc7\u7a0b\u3002 \u8f6f\u4ef6\u6d4b\u8bd5\u7684\u76ee\u7684\u662f\u6807\u8bc6\u7f3a\u9677\u548c\u95ee\u9898\uff0c\u6539\u5584\u4ea7\u54c1\u8d28\u91cf\u3002\u8f6f\u4ef6\u6d4b\u8bd5\u8986\u76d6\u6574\u4e2a\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u3002\u6b63\u786e\u7684\u8f6f\u4ef6\u5de5\u7a0b\u8d28\u91cf\u89c2\u662f\u9884\u9632\u3001\u907f\u514d\u7f3a\u9677\u548c\u95ee\u9898\u3002\u6d4b\u8bd5\u7684\u7ec8\u70b9\u662f\u5efa\u7acb\u4e00\u4e2a\u6709\u9650\u7684\u6d4b\u8bd5\u7528\u4f8b\u96c6\uff0c\u52a8\u6001\u5730\u9a8c\u8bc1\u7a0b\u5e8f\u662f\u5426\u8fbe\u5230\u9884\u671f\u884c\u4e3a\u3002 Software Maintenance \u8f6f\u4ef6\u7ef4\u62a4 \u8f6f\u4ef6\u7ef4\u62a4\u662f\u8f6f\u4ef6\u751f\u5b58\u5468\u671f\u7684\u7ec4\u6210\u90e8\u5206\u3002\u8f6f\u4ef6\u7ef4\u62a4\u8981\u652f\u6301\u7cfb\u7edf\u5feb\u901f\u5730\u3001\u4fbf\u6377\u5730\u6ee1\u8db3\u65b0\u7684\u9700\u6c42\u3002\u57fa\u4e8e\u670d\u52a1\u7684\u8f6f\u4ef6\u7ef4\u62a4\u8d8a\u6765\u8d8a\u53d7\u5230\u91cd\u89c6\u3002\u8f6f\u4ef6\u7ec4\u7ec7\u529b\u56fe\u4f7f\u8f6f\u4ef6\u8fd0\u8425\u65f6\u95f4\u66f4\u957f\uff0c\u8f6f\u4ef6\u7ef4\u62a4\u6210\u4e3a\u4ee4\u4eba\u5173\u6ce8\u7684\u7126\u70b9\u3002 Software Configuration Management \u8f6f\u4ef6\u914d\u7f6e\u7ba1\u7406 \u8f6f\u4ef6\u914d\u7f6e\u7ba1\u7406\u662f\u4e00\u79cd\u6807\u8bc6\u3001\u7ec4\u7ec7\u548c\u63a7\u5236\u4fee\u6539\u7684\u6280\u672f\uff0c\u7ef4\u62a4\u6574\u4e2a\u7cfb\u7edf\u751f\u547d\u5468\u671f\u4e2d\u8f6f\u4ef6\u914d\u7f6e\u7684\u4e00\u81f4\u6027\u548c\u53ef\u8ffd\u8e2a\u6027\u3002\u5185\u5bb9\u5305\u62ec\u914d\u7f6e\u7ba1\u7406\u8fc7\u7a0b\u7684\u7ba1\u7406\u3001\u8f6f\u4ef6\u914d\u7f6e\u9274\u522b\u3001\u914d\u7f6e\u7ba1\u7406\u63a7\u5236\u7ba1\u7406\u3001\u914d\u7f6e\u7ba1\u7406\u72b6\u6001\u8bb0\u5f55\u3001\u914d\u7f6e\u7ba1\u7406\u5ba1\u8ba1\u3001\u8f6f\u4ef6\u53d1\u5e03\u548c\u4ea4\u4ed8\u7ba1\u7406\u3002 Software Engineering Management \u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406 \u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406\u6d89\u53ca\u89c4\u5212\uff0c\u534f\u8c03\uff0c\u6d4b\u91cf\uff0c\u62a5\u544a\u548c\u9879\u76ee/\u7a0b\u5e8f\u63a7\u5236\uff0c\u4ee5\u786e\u4fdd\u5f00\u53d1\u548c\u7ef4\u62a4\u8f6f\u4ef6\u662f\u7cfb\u7edf\u7684\uff0c\u89c4\u8303\u5316\u7684\u4e14\u91cf\u5316\u7684\u3002 \u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406\u77e5\u8bc6\u9886\u57df\u6db5\u76d6\u542f\u52a8\u548c\u8303\u56f4\u5b9a\u4e49\uff0c\u8f6f\u4ef6\u9879\u76ee\u89c4\u5212\uff0c\u8f6f\u4ef6\u9879\u76ee\u5236\u5b9a\uff0c\u4ea7\u54c1\u9a8c\u6536\uff0c\u9879\u76ee\u7ee9\u6548\u5ba1\u67e5\u548c\u5206\u6790\uff0c\u9879\u76ee\u7ed3\u675f\u548c\u8f6f\u4ef6\u7ba1\u7406\u5de5\u5177\u3002 Software Engineering Process \u8f6f\u4ef6\u5de5\u7a0b\u8fc7\u7a0b \u8f6f\u4ef6\u5de5\u7a0b\u77e5\u8bc6\u9886\u57df\u5173\u6ce8\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u8fc7\u7a0b\u7684\u5b9a\u4e49\uff0c\u5b9e\u73b0\uff0c\u8bc4\u4f30\uff0c\u6d4b\u91cf\uff0c\u7ba1\u7406\u548c\u6539\u8fdb\u3002\u4e3b\u9898\u5305\u62ec\u8fc7\u7a0b\u5b9e\u73b0\u548c\u6539\u53d8\uff0c\u8fc7\u7a0b\u5b9a\u4e49\uff0c\u8fc7\u7a0b\u8bc4\u4f30\u6a21\u578b\u548c\u65b9\u6cd5\uff0c\u6d4b\u91cf\u548c\u8f6f\u4ef6\u8fc7\u7a0b\u5de5\u5177\u3002 Software Engineering Models and Methods \u8f6f\u4ef6\u5de5\u7a0b\u6a21\u578b\u4e0e\u65b9\u6cd5 \u8f6f\u4ef6\u5de5\u7a0b\u6a21\u578b\u548c\u65b9\u6cd5\u89e3\u51b3\u4e86\u6db5\u76d6\u591a\u4e2a\u751f\u547d\u5468\u671f\u9636\u6bb5\u7684\u65b9\u6cd5;\u5176\u4ed6\u6db5\u76d6\u7279\u5b9a\u751f\u547d\u5468\u671f\u9636\u6bb5\u7684\u7279\u5b9a\u65b9\u6cd5\u3002 Software Quality \u8f6f\u4ef6\u8d28\u91cf \u8f6f\u4ef6\u8d28\u91cf\u662f\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u666e\u904d\u5173\u6ce8\u7684\u3002 \u6b64\u5916\uff0c\u8f6f\u4ef6\u8d28\u91cf\u77e5\u8bc6\u9886\u57df\u5305\u62ec\u8f6f\u4ef6\u8d28\u91cf\u57fa\u7840\uff0c\u8f6f\u4ef6\u8d28\u91cf\u7ba1\u7406\u8fc7\u7a0b\u548c\u5b9e\u9645\u8003\u91cf\u3002 Software Engineering Professional Practice \u8f6f\u4ef6\u5de5\u7a0b\u4e13\u4e1a\u5b9e\u8df5 \u8f6f\u4ef6\u5de5\u7a0b\u4e13\u4e1a\u5b9e\u8df5\u5173\u6ce8\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5fc5\u987b\u5177\u5907\u7684\u77e5\u8bc6\uff0c\u6280\u5de7\u548c\u6001\u5ea6\uff0c\u4ee5\u7528\u4e00\u79cd\u4e13\u4e1a\uff0c\u8d1f\u8d23\u548c\u6b63\u76f4\u7684\u6001\u5ea6\u6765\u65f6\u95f4\u8f6f\u4ef6\u5de5\u7a0b Software Engineering Economics \u8f6f\u4ef6\u5de5\u7a0b\u7ecf\u6d4e\u5b66 \u8f6f\u4ef6\u5de5\u7a0b\u7ecf\u6d4e\u5b66\u77e5\u8bc6\u9886\u57df\u5173\u6ce8\u5728\u5546\u4e1a\u73af\u5883\u4e2d\u505a\u51fa\u51b3\u7b56\uff0c\u4ee5\u4f7f\u6280\u672f\u51b3\u7b56\u548c\u5546\u4e1a\u76ee\u6807\u8fbe\u6210\u4e00\u81f4\u3002 Computing Foundations \u8ba1\u7b97\u57fa\u7840 \u63d0\u4f9b\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u6240\u9700\u7684\u8ba1\u7b97\u80cc\u666f\uff0c\u6db5\u76d6\u4e86\u63d0\u4f9b\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u6240\u9700\u7684\u8ba1\u7b97\u80cc\u666f\u7684\u57fa\u7840\u4e3b\u9898\u3002 Mathematical Foundations \u6570\u5b66\u57fa\u7840 \u63d0\u4f9b\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u6240\u9700\u7684\u6570\u5b66\u80cc\u666f\uff0c\u6db5\u76d6\u4e86\u63d0\u4f9b\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u6240\u5fc5\u9700\u7684\u6570\u5b66\u80cc\u666f\u7684\u57fa\u7840\u4e3b\u9898 Engineering Foundations \u5de5\u7a0b\u57fa\u7840 \u63d0\u4f9b\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u6240\u9700\u7684\u5de5\u7a0b\u80cc\u666f\uff0c\u6db5\u76d6\u4e86\u63d0\u4f9b\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\u6240\u5fc5\u9700\u7684\u5de5\u7a0b\u80cc\u666f\u7684\u57fa\u7840\u4e3b\u9898\u3002","title":"4. SWEBoK \u7684 15 \u4e2a\u77e5\u8bc6\u57df\uff08An Overview of the SWEBOK Guide \u8bf7\u4e2d\u6587\u7ffb\u8bd1\u5176\u540d\u79f0\u4e0e\u7b80\u77ed\u8bf4\u660e\uff09"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework1/#5-cmmi-level-1-initial","text":"Level 1 - Initial\uff08\u521d\u59cb\u7ea7\uff09\uff1a \u8f6f\u4ef6\u8fc7\u7a0b\u662f\u65e0\u5e8f\u7684\uff0c\u6709\u65f6\u751a\u81f3\u662f\u6df7\u4e71\u7684\uff0c\u5bf9\u8fc7\u7a0b\u51e0\u4e4e\u6ca1\u6709\u5b9a\u4e49\uff0c\u6210\u529f\u53d6\u51b3\u4e8e\u4e2a\u4eba\u52aa\u529b\u3002\u7ba1\u7406\u662f\u53cd\u5e94\u5f0f\u7684\u3002 Level 2 - Managed\uff08\u53ef\u7ba1\u7406\u7ea7\uff09\uff1a \u5efa\u7acb\u4e86\u57fa\u672c\u7684\u9879\u76ee\u7ba1\u7406\u8fc7\u7a0b\u6765\u8ddf\u8e2a\u8d39\u7528\u3001\u8fdb\u5ea6\u548c\u529f\u80fd\u7279\u6027\u3002\u5236\u5b9a\u4e86\u5fc5\u8981\u7684\u8fc7\u7a0b\u7eaa\u5f8b\uff0c\u80fd\u91cd\u590d\u65e9\u5148\u7c7b\u4f3c\u5e94\u7528\u9879\u76ee\u53d6\u5f97\u7684\u6210\u529f\u7ecf\u9a8c\u3002 Level 3 - Defined\uff08\u5df2\u5b9a\u4e49\u7ea7\uff09\uff1a \u5df2\u5c06\u8f6f\u4ef6\u7ba1\u7406\u548c\u5de5\u7a0b\u4e24\u65b9\u9762\u7684\u8fc7\u7a0b\u6587\u6863\u5316\u3001\u6807\u51c6\u5316\uff0c\u5e76\u7efc\u5408\u6210\u8be5\u7ec4\u7ec7\u7684\u6807\u51c6\u8f6f\u4ef6\u8fc7\u7a0b\u3002\u6240\u6709\u9879\u76ee\u5747\u4f7f\u7528\u7ecf\u6279\u51c6\u3001\u526a\u88c1\u7684\u6807\u51c6\u8f6f\u4ef6\u8fc7\u7a0b\u6765\u5f00\u53d1\u548c\u7ef4\u62a4\u8f6f\u4ef6\uff0c\u8f6f\u4ef6\u4ea7\u54c1\u7684\u751f\u4ea7\u5728\u6574\u4e2a\u8f6f\u4ef6\u8fc7\u7a0b\u662f\u53ef\u89c1\u7684\u3002 Level 4 - Quantitatively Managed\uff08\u91cf\u5316\u7ba1\u7406\u7ea7\uff09\uff1a \u5206\u6790\u5bf9\u8f6f\u4ef6\u8fc7\u7a0b\u548c\u4ea7\u54c1\u8d28\u91cf\u7684\u8be6\u7ec6\u5ea6\u91cf\u6570\u636e\uff0c\u5bf9\u8f6f\u4ef6\u8fc7\u7a0b\u548c\u4ea7\u54c1\u90fd\u6709\u5b9a\u91cf\u7684\u7406\u89e3\u4e0e\u63a7\u5236\u3002\u7ba1\u7406\u6709\u4e00\u4e2a\u4f5c\u51fa\u7ed3\u8bba\u7684\u5ba2\u89c2\u4f9d\u636e\uff0c\u7ba1\u7406\u80fd\u591f\u5728\u5b9a\u91cf\u7684\u8303\u56f4\u5185\u9884\u6d4b\u6027\u80fd\u3002 Level 5 - Optimizing\uff08\u4f18\u5316\u7ea7\uff09\uff1a \u8fc7\u7a0b\u7684\u91cf\u5316\u53cd\u9988\u548c\u5148\u8fdb\u7684\u65b0\u601d\u60f3\u3001\u65b0\u6280\u672f\u4fc3\u4f7f\u8fc7\u7a0b\u6301\u7eed\u4e0d\u65ad\u6539\u8fdb\u3002","title":"5. \u7b80\u5355\u89e3\u91ca CMMI \u7684\u4e94\u4e2a\u7ea7\u522b\u3002\u4f8b\u5982\uff1aLevel 1 - Initial\uff1a\u65e0\u5e8f\uff0c\u81ea\u53d1\u751f\u4ea7\u6a21\u5f0f\u3002"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework1/#6-swebok-cmmi","text":"SWEBoK \u5176\u5168\u79f0\u4e3a\u8f6f\u4ef6\u5de5\u7a0b\u77e5\u8bc6\u4f53\u7cfb\uff0c\u5176\u76ee\u7684\u662f\u4e3a\u8f6f\u4ef6\u5de5\u7a0b\u5b66\u79d1\u7684\u8303\u56f4\u63d0\u4f9b\u4e00\u81f4\u7684\u8ba4\u8bc6\uff0c\u4e3a\u652f\u6301\u8be5\u5b66\u79d1\u7684\u672c\u4f53\u77e5\u8bc6\u63d0\u4f9b\u6307\u5bfc\uff0c\u4e3a\u8f6f\u4ef6\u5de5\u7a0b\u7684\u7cfb\u7edf\u6027\u89c4\u8303\u6027\u4ee5\u53ca\u53ef\u91cf\u5316\u6027\u3002SWEBoK\u5c06\u8f6f\u4ef6\u5de5\u7a0b\u5b66\u79d1\u7684\u672c\u4f53\u77e5\u8bc6\u5206\u4e3a15\u4e2a\u77e5\u8bc6\u57df\uff0c\u5e76\u5bf9\u6bcf\u4e2a\u77e5\u8bc6\u57df\u4e2d\u7684\u91cd\u8981\u6982\u5ff5\u548c\u533a\u522b\u52a0\u4ee5\u9610\u8ff0\u8bf4\u660e\uff0c\u6307\u5bfc\u4e86\u8f6f\u4ef6\u5de5\u7a0b\u7684\u53d1\u5c55\u3002\u5176\u610f\u4e49\u5728\u4e8e\u5c06\u539f\u672c\u6df7\u6742\u7684\u8f6f\u4ef6\u5de5\u7a0b\u77e5\u8bc6\u4f53\u7cfb\u5316\uff0c\u5c06\u539f\u672c\u5b58\u5728\u7684\u77e5\u8bc6\u5206\u7c7b\u6574\u7406\uff0c\u6700\u540e\u5f62\u6210\u4e00\u4e2a\u5177\u6709\u5171\u8bc6\u6027\u548c\u65b9\u5411\u6027\u7684\u6307\u5357\u3002 CMMI \u5176\u5168\u79f0\u4e3a\u80fd\u529b\u6210\u719f\u5ea6\u6a21\u578b\u96c6\u6210\uff0c\u662f\u4e00\u4e2a\u8fc7\u7a0b\u7ea7\u522b\u7684\u6539\u8fdb\u6a21\u578b\uff0c\u96c6\u6210\u4e86\u5404\u79cd\u73b0\u5b58\u5b9e\u65bd\u7684\u4e0e\u5c06\u88ab\u53d1\u5c55\u51fa\u6765\u7684\u80fd\u529b\u6210\u719f\u5ea6\u6a21\u578b\uff0c\u672c\u8d28\u662f\u8f6f\u4ef6\u7ba1\u7406\u5de5\u7a0b\u7684\u4e00\u90e8\u5206\u3002\u5176\u76ee\u7684\u662f\u5e2e\u52a9\u8f6f\u4ef6\u4f01\u4e1a\u5bf9\u8f6f\u4ef6\u5de5\u7a0b\u8fc7\u7a0b\u8fdb\u884c\u7ba1\u7406\u548c\u6539\u8fdb\uff0c\u589e\u5f3a\u5f00\u53d1\u4e0e\u6539\u8fdb\u80fd\u529b\uff0c\u4ece\u800c\u80fd\u6309\u65f6\u5730\u3001\u4e0d\u8d85\u9884\u7b97\u5730\u5f00\u53d1\u51fa\u9ad8\u8d28\u91cf\u7684\u8f6f\u4ef6\u3002CMMI\u63d0\u4f9b\u4e00\u4e2a\u5355\u4e00\u7684\u96c6\u6210\u5316\u6846\u67b6\uff0c\u4ece\u800c\u6d88\u9664\u4e86\u5404\u4e2a\u6a21\u578b\u7684\u4e0d\u4e00\u81f4\u6027\uff0c\u51cf\u5c11\u4e86\u6a21\u578b\u95f4\u7684\u91cd\u590d\uff0c\u589e\u52a0\u900f\u660e\u5ea6\u548c\u7406\u89e3\uff0c\u4ece\u603b\u4f53\u4e0a\u6539\u8fdb\u7ec4\u7ec7\u7684\u8d28\u91cf\u548c\u6548\u7387\u3002CMMI\u4e3b\u8981\u5173\u6ce8\u70b9\u5c31\u662f\u6210\u672c\u6548\u76ca\u3001\u660e\u786e\u91cd\u70b9\u3001\u8fc7\u7a0b\u96c6\u4e2d\u548c\u7075\u6d3b\u6027\u56db\u4e2a\u65b9\u9762\u3002","title":"6. SWEBok &amp; CMMI"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework2/","text":"\u7cfb\u7edf\u5206\u6790\u4f5c\u4e1a2 \u7b80\u7b54\u9898 \u7528\u7b80\u77ed\u7684\u8bed\u8a00\u7ed9\u51fa\u5bf9\u5206\u6790\u3001\u8bbe\u8ba1\u7684\u7406\u89e3 \u5206\u6790: \u5206\u6790\u6307\u7684\u662f\u5bf9\u4e8e\u5b9e\u9645\u95ee\u9898\u53ca\u9700\u6c42\u7684\u7814\u7a76\u548c\u8c03\u67e5\uff0c\u662f\u786e\u8ba4\u6709\u6548\u7684\u529f\u80fd\u53ca\u5176\u9700\u6c42\u7684\u4e00\u4e2a\u8fc7\u7a0b\u800c\u4e0d\u662f\u53d1\u73b0\u66f4\u591a\u529f\u80fd\u548c\u9700\u6c42 \u8bbe\u8ba1: \u8bbe\u8ba1\u6307\u7684\u662f\u5728\u8f6f\u4ef6\u65b9\u9762\u548c\u786c\u4ef6\u65b9\u9762\u6ee1\u8db3\u8981\u6c42\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6307\u7684\u662f\u8f6f\u4ef6\u6846\u67b6\u3001\u8f6f\u4ef6\u5bf9\u8c61\u7684\u63cf\u8ff0\u4ee5\u53ca\u6570\u636e\u5e93\u65b9\u6848\u7b49\u7684\u5185\u5bb9 \u7528\u4e00\u53e5\u8bdd\u63cf\u8ff0\u9762\u5411\u5bf9\u8c61\u7684\u5206\u6790\u4e0e\u8bbe\u8ba1\u7684\u4f18\u52bf\u3002 \u9762\u5411\u5bf9\u8c61\u7684\u5206\u6790\u4e0e\u8bbe\u8ba1\u5c06\u4e00\u4e9b\u529f\u80fd\u548c\u9700\u6c42\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u964d\u4f4e\u4e86\u8f6f\u4ef6\u5404\u4e2a\u6a21\u5757\u7684\u8026\u5408\u6027\uff0c\u65b9\u4fbf\u4e86\u5404\u4e2a\u6a21\u5757\u7684\u590d\u7528\u4ee5\u53ca\u8f6f\u4ef6\u7684\u8fed\u4ee3\uff0c\u4e14\u65b9\u4fbf\u4ed6\u4eba\u5bf9\u4e8e\u8f6f\u4ef6\u6574\u4e2a\u4f53\u7cfb\u8bbe\u8ba1\u7684\u7406\u89e3\u3002 \u7b80\u8ff0 UML\uff08\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff09\u7684\u4f5c\u7528\u3002\u8003\u8bd5\u8003\u54ea\u4e9b\u56fe\uff1f UML\u662f\u4e00\u79cd\u6807\u51c6\u7684\u56fe\u6807\u8bed\u8a00\uff0c\u662f\u4e00\u79cd\u53ef\u4ee5\u7528\u4e8e\u8bf4\u660e\u3001\u53ef\u89c6\u5316\u3001\u6784\u5efa\u548c\u7f16\u5199\u4e00\u4e2a\u6b63\u5728\u5f00\u53d1\u7684\u3001\u9762\u5411\u5bf9\u8c61\u7684\u3001\u8f6f\u4ef6\u5bc6\u96c6\u7cfb\u7edf\u7684\u5236\u54c1\u7684\u5f00\u653e\u65b9\u6cd5\u3002 \u56fe\u5f62\u5316\u7684\u8868\u793a\u673a\u5236\uff0c\u5341\u591a\u79cd\u89c6\u56fe\uff0c\u52064\u7c7b: \u8003\u8bd5\u8003\u7684\u56fe\u6709\u4ee5\u4e0b\u51e0\u4e2a \u7528\u4f8b\u56fe: \u7528\u6237\u89d2\u5ea6\uff1a\u529f\u80fd\u3001\u6267\u884c\u8005 \u9759\u6001\u56fe: \u7cfb\u7edf\u9759\u6001\u7ed3\u6784 \u7c7b\u56fe: \u6982\u5ff5\u53ca\u5173\u7cfb \u5bf9\u8c61\u56fe: \u67d0\u79cd\u72b6\u6001\u6216\u65f6\u95f4\u6bb5\u5185\uff0c\u7cfb\u7edf\u4e2d\u6d3b\u8dc3\u7684\u5bf9\u8c61\u53ca\u5176\u5173\u7cfb \u5305\u56fe: \u63cf\u8ff0\u7cfb\u7edf\u7684\u5206\u89e3\u7ed3\u6784 \u884c\u4e3a\u56fe \u4ea4\u4e92\u56fe: \u63cf\u8ff0\u5bf9\u8c61\u95f4\u7684\u6d88\u606f\u4f20\u9012 \u987a\u5e8f\u56fe\uff1a\u5f3a\u8c03\u5bf9\u8c61\u95f4\u6d88\u606f\u53d1\u9001\u7684\u65f6\u5e8f \u5408\u4f5c\u56fe\uff1a\u5f3a\u8c03\u5bf9\u8c61\u95f4\u7684\u52a8\u6001\u534f\u4f5c\u5173\u7cfb \u72b6\u6001\u56fe: \u5bf9\u8c61\u7684\u52a8\u6001\u884c\u4e3a\u3002\u72b6\u6001-\u4e8b\u4ef6-\u72b6\u6001\u8fc1\u79fb-\u54cd\u5e94\u52a8\u4f5c \u6d3b\u52a8\u56fe: \u63cf\u8ff0\u7cfb\u7edf\u4e3a\u5b8c\u6210\u67d0\u529f\u80fd\u800c\u6267\u884c\u7684\u64cd\u4f5c\u5e8f\u5217 \u5b9e\u73b0\u56fe: \u63cf\u8ff0\u7cfb\u7edf\u7684\u7ec4\u6210\u548c\u5206\u5e03\u72b6\u51b5 \u6784\u4ef6\u56fe\uff1a\u7ec4\u6210\u90e8\u4ef6\u53ca\u5176\u5173\u7cfb \u90e8\u7f72\u56fe\uff1a\u7269\u7406\u4f53\u7cfb\u7ed3\u6784\u53ca\u4e0e\u8f6f\u4ef6\u5355\u5143\u7684\u5bf9\u5e94\u5173\u7cfb \u4ece\u8f6f\u4ef6\u672c\u8d28\u7684\u89d2\u5ea6\uff0c\u89e3\u91ca\u8f6f\u4ef6\u8303\u56f4\uff08\u9700\u6c42\uff09\u63a7\u5236\u7684\u53ef\u884c\u6027 \u5b9e\u73b0\u8f6f\u4ef6\u8303\u56f4\u63a7\u5236\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u8f6f\u4ef6\u9700\u6c42\u5206\u6790\uff0c\u628a\u8f6f\u4ef6\u8ba1\u5212\u671f\u95f4\u5efa\u7acb\u7684\u8f6f\u4ef6\u53ef\u884c\u6027\u5206\u6790\u6c42\u7cbe\u548c\u7ec6\u5316\uff0c\u5206\u6790\u5404\u79cd\u53ef\u80fd\u7684\u89e3\u6cd5\uff0c\u5e76\u4e14\u5206\u914d\u7ed9\u5404\u4e2a\u8f6f\u4ef6\u5143\u7d20\u3002\u7531\u4e8e\u8f6f\u4ef6\u7684\u672c\u8d28\u662f\u590d\u6742\u6027\u3001\u4e0d\u53ef\u89c1\u6027\u3001\u4e0d\u4e00\u81f4\u6027\u3001\u53ef\u53d8\u6027\uff0c\u6240\u4ee5\u8f6f\u4ef6\u8303\u56f4\u591a\u6570\u60c5\u51b5\u4e0b\u5bf9\u4e8e\u5ba2\u6237\u548c\u5f00\u53d1\u8005\u90fd\u662f\u6a21\u7cca\u7684\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u9700\u6c42\u5206\u6790\u4ece\u800c\u5b9e\u73b0\u5bf9\u8f6f\u4ef6\u9700\u6c42\u7684\u63a7\u5236\uff0c\u786e\u5b9a\u7cfb\u7edf\u5fc5\u987b\u5b8c\u6210\u54ea\u4e9b\u5de5\u4f5c\uff0c\u5bf9\u76ee\u6807\u7cfb\u7edf\u63d0\u51fa\u5b8c\u6574\u3001\u51c6\u786e\u3001\u6e05\u6670\u3001\u5177\u4f53\u7684\u8981\u6c42\u3002 \u9879\u76ee\u7ba1\u7406\u5b9e\u8df5 \u770b\u677f\u4f7f\u7528\u7ec3\u4e60\uff08\u63d0\u4ea4\u770b\u677f\u6267\u884c\u7ed3\u679c\u8d34\u56fe\uff0c\u5efa\u8bae\u4f7f\u7528 Git project) UML\u7ed8\u56fe\u5de5\u5177\u7ec3\u4e60 \u539f\u56fe(UML\u548c\u6a21\u5f0f\u5e94\u7528\uff08\u539f\u4e66\u7b2c3\u7248) p6\u56fe1-3) \u5b9e\u73b0","title":"\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework2"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework2/#2","text":"","title":"\u7cfb\u7edf\u5206\u6790\u4f5c\u4e1a2"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework2/#_1","text":"","title":"\u7b80\u7b54\u9898"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework2/#_2","text":"\u5206\u6790: \u5206\u6790\u6307\u7684\u662f\u5bf9\u4e8e\u5b9e\u9645\u95ee\u9898\u53ca\u9700\u6c42\u7684\u7814\u7a76\u548c\u8c03\u67e5\uff0c\u662f\u786e\u8ba4\u6709\u6548\u7684\u529f\u80fd\u53ca\u5176\u9700\u6c42\u7684\u4e00\u4e2a\u8fc7\u7a0b\u800c\u4e0d\u662f\u53d1\u73b0\u66f4\u591a\u529f\u80fd\u548c\u9700\u6c42 \u8bbe\u8ba1: \u8bbe\u8ba1\u6307\u7684\u662f\u5728\u8f6f\u4ef6\u65b9\u9762\u548c\u786c\u4ef6\u65b9\u9762\u6ee1\u8db3\u8981\u6c42\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6307\u7684\u662f\u8f6f\u4ef6\u6846\u67b6\u3001\u8f6f\u4ef6\u5bf9\u8c61\u7684\u63cf\u8ff0\u4ee5\u53ca\u6570\u636e\u5e93\u65b9\u6848\u7b49\u7684\u5185\u5bb9","title":"\u7528\u7b80\u77ed\u7684\u8bed\u8a00\u7ed9\u51fa\u5bf9\u5206\u6790\u3001\u8bbe\u8ba1\u7684\u7406\u89e3"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework2/#_3","text":"\u9762\u5411\u5bf9\u8c61\u7684\u5206\u6790\u4e0e\u8bbe\u8ba1\u5c06\u4e00\u4e9b\u529f\u80fd\u548c\u9700\u6c42\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u964d\u4f4e\u4e86\u8f6f\u4ef6\u5404\u4e2a\u6a21\u5757\u7684\u8026\u5408\u6027\uff0c\u65b9\u4fbf\u4e86\u5404\u4e2a\u6a21\u5757\u7684\u590d\u7528\u4ee5\u53ca\u8f6f\u4ef6\u7684\u8fed\u4ee3\uff0c\u4e14\u65b9\u4fbf\u4ed6\u4eba\u5bf9\u4e8e\u8f6f\u4ef6\u6574\u4e2a\u4f53\u7cfb\u8bbe\u8ba1\u7684\u7406\u89e3\u3002","title":"\u7528\u4e00\u53e5\u8bdd\u63cf\u8ff0\u9762\u5411\u5bf9\u8c61\u7684\u5206\u6790\u4e0e\u8bbe\u8ba1\u7684\u4f18\u52bf\u3002"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework2/#uml","text":"UML\u662f\u4e00\u79cd\u6807\u51c6\u7684\u56fe\u6807\u8bed\u8a00\uff0c\u662f\u4e00\u79cd\u53ef\u4ee5\u7528\u4e8e\u8bf4\u660e\u3001\u53ef\u89c6\u5316\u3001\u6784\u5efa\u548c\u7f16\u5199\u4e00\u4e2a\u6b63\u5728\u5f00\u53d1\u7684\u3001\u9762\u5411\u5bf9\u8c61\u7684\u3001\u8f6f\u4ef6\u5bc6\u96c6\u7cfb\u7edf\u7684\u5236\u54c1\u7684\u5f00\u653e\u65b9\u6cd5\u3002 \u56fe\u5f62\u5316\u7684\u8868\u793a\u673a\u5236\uff0c\u5341\u591a\u79cd\u89c6\u56fe\uff0c\u52064\u7c7b: \u8003\u8bd5\u8003\u7684\u56fe\u6709\u4ee5\u4e0b\u51e0\u4e2a \u7528\u4f8b\u56fe: \u7528\u6237\u89d2\u5ea6\uff1a\u529f\u80fd\u3001\u6267\u884c\u8005 \u9759\u6001\u56fe: \u7cfb\u7edf\u9759\u6001\u7ed3\u6784 \u7c7b\u56fe: \u6982\u5ff5\u53ca\u5173\u7cfb \u5bf9\u8c61\u56fe: \u67d0\u79cd\u72b6\u6001\u6216\u65f6\u95f4\u6bb5\u5185\uff0c\u7cfb\u7edf\u4e2d\u6d3b\u8dc3\u7684\u5bf9\u8c61\u53ca\u5176\u5173\u7cfb \u5305\u56fe: \u63cf\u8ff0\u7cfb\u7edf\u7684\u5206\u89e3\u7ed3\u6784 \u884c\u4e3a\u56fe \u4ea4\u4e92\u56fe: \u63cf\u8ff0\u5bf9\u8c61\u95f4\u7684\u6d88\u606f\u4f20\u9012 \u987a\u5e8f\u56fe\uff1a\u5f3a\u8c03\u5bf9\u8c61\u95f4\u6d88\u606f\u53d1\u9001\u7684\u65f6\u5e8f \u5408\u4f5c\u56fe\uff1a\u5f3a\u8c03\u5bf9\u8c61\u95f4\u7684\u52a8\u6001\u534f\u4f5c\u5173\u7cfb \u72b6\u6001\u56fe: \u5bf9\u8c61\u7684\u52a8\u6001\u884c\u4e3a\u3002\u72b6\u6001-\u4e8b\u4ef6-\u72b6\u6001\u8fc1\u79fb-\u54cd\u5e94\u52a8\u4f5c \u6d3b\u52a8\u56fe: \u63cf\u8ff0\u7cfb\u7edf\u4e3a\u5b8c\u6210\u67d0\u529f\u80fd\u800c\u6267\u884c\u7684\u64cd\u4f5c\u5e8f\u5217 \u5b9e\u73b0\u56fe: \u63cf\u8ff0\u7cfb\u7edf\u7684\u7ec4\u6210\u548c\u5206\u5e03\u72b6\u51b5 \u6784\u4ef6\u56fe\uff1a\u7ec4\u6210\u90e8\u4ef6\u53ca\u5176\u5173\u7cfb \u90e8\u7f72\u56fe\uff1a\u7269\u7406\u4f53\u7cfb\u7ed3\u6784\u53ca\u4e0e\u8f6f\u4ef6\u5355\u5143\u7684\u5bf9\u5e94\u5173\u7cfb","title":"\u7b80\u8ff0 UML\uff08\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff09\u7684\u4f5c\u7528\u3002\u8003\u8bd5\u8003\u54ea\u4e9b\u56fe\uff1f"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework2/#_4","text":"\u5b9e\u73b0\u8f6f\u4ef6\u8303\u56f4\u63a7\u5236\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u8f6f\u4ef6\u9700\u6c42\u5206\u6790\uff0c\u628a\u8f6f\u4ef6\u8ba1\u5212\u671f\u95f4\u5efa\u7acb\u7684\u8f6f\u4ef6\u53ef\u884c\u6027\u5206\u6790\u6c42\u7cbe\u548c\u7ec6\u5316\uff0c\u5206\u6790\u5404\u79cd\u53ef\u80fd\u7684\u89e3\u6cd5\uff0c\u5e76\u4e14\u5206\u914d\u7ed9\u5404\u4e2a\u8f6f\u4ef6\u5143\u7d20\u3002\u7531\u4e8e\u8f6f\u4ef6\u7684\u672c\u8d28\u662f\u590d\u6742\u6027\u3001\u4e0d\u53ef\u89c1\u6027\u3001\u4e0d\u4e00\u81f4\u6027\u3001\u53ef\u53d8\u6027\uff0c\u6240\u4ee5\u8f6f\u4ef6\u8303\u56f4\u591a\u6570\u60c5\u51b5\u4e0b\u5bf9\u4e8e\u5ba2\u6237\u548c\u5f00\u53d1\u8005\u90fd\u662f\u6a21\u7cca\u7684\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u9700\u6c42\u5206\u6790\u4ece\u800c\u5b9e\u73b0\u5bf9\u8f6f\u4ef6\u9700\u6c42\u7684\u63a7\u5236\uff0c\u786e\u5b9a\u7cfb\u7edf\u5fc5\u987b\u5b8c\u6210\u54ea\u4e9b\u5de5\u4f5c\uff0c\u5bf9\u76ee\u6807\u7cfb\u7edf\u63d0\u51fa\u5b8c\u6574\u3001\u51c6\u786e\u3001\u6e05\u6670\u3001\u5177\u4f53\u7684\u8981\u6c42\u3002","title":"\u4ece\u8f6f\u4ef6\u672c\u8d28\u7684\u89d2\u5ea6\uff0c\u89e3\u91ca\u8f6f\u4ef6\u8303\u56f4\uff08\u9700\u6c42\uff09\u63a7\u5236\u7684\u53ef\u884c\u6027"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework2/#_5","text":"\u770b\u677f\u4f7f\u7528\u7ec3\u4e60\uff08\u63d0\u4ea4\u770b\u677f\u6267\u884c\u7ed3\u679c\u8d34\u56fe\uff0c\u5efa\u8bae\u4f7f\u7528 Git project)","title":"\u9879\u76ee\u7ba1\u7406\u5b9e\u8df5"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework2/#uml_1","text":"\u539f\u56fe(UML\u548c\u6a21\u5f0f\u5e94\u7528\uff08\u539f\u4e66\u7b2c3\u7248) p6\u56fe1-3) \u5b9e\u73b0","title":"UML\u7ed8\u56fe\u5de5\u5177\u7ec3\u4e60"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/","text":"\u7cfb\u7edf\u5206\u6790\u4f5c\u4e1a3 \u7b80\u7b54\u9898 \u7b80\u8ff0\u7011\u5e03\u6a21\u578b\u3001\u589e\u91cf\u6a21\u578b\u3001\u87ba\u65cb\u6a21\u578b\uff08\u542b\u539f\u578b\u65b9\u6cd5\uff09\uff0c\u5e76\u5206\u6790\u4f18\u7f3a\u70b9 \u4ece\u9879\u76ee\u7279\u70b9\u3001\u98ce\u9669\u7279\u5f81\u3001\u4eba\u529b\u8d44\u6e90\u5229\u7528\u89d2\u5ea6\u601d\u8003 \u7011\u5e03\u6a21\u578b \u4f18\u70b9 \u5b9a\u4e49\u4e86\u8f6f\u4ef6\u5f00\u53d1\u57fa\u672c\u6d41\u7a0b\u4e0e\u6d3b\u52a8\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6a21\u677f\uff0c\u8fd9\u4e2a\u6a21\u677f\u4f7f\u5f97\u5206\u6790\u3001\u8bbe\u8ba1\u3001\u7f16\u7801\u3001\u6d4b\u8bd5\u548c\u652f\u6301\u7684\u65b9\u6cd5\u53ef\u4ee5\u5728\u8be5\u6a21\u677f\u4e0b\u6709\u4e00\u4e2a\u5171\u540c\u7684\u6307\u5bfc\u3002 \u6709\u5229\u4e8e\u5bf9\u4e8e\u5927\u578b\u8f6f\u4ef6\u5f00\u53d1\u7684\u7ba1\u7406\uff0c\u66f4\u597d\u5206\u914d\u4eba\u529b\u8d44\u6e90 \u5f53\u524d\u4e00\u9636\u6bb5\u5b8c\u6210\u540e\uff0c\u60a8\u53ea\u9700\u8981\u53bb\u5173\u6ce8\u540e\u7eed\u9636\u6bb5\u3002 \u4e3a\u9879\u76ee\u63d0\u4f9b\u4e86\u6309\u9636\u6bb5\u5212\u5206\u7684\u68c0\u67e5\u70b9\u3002 \u7f3a\u70b9 \u5404\u4e2a\u9636\u6bb5\u7684\u5212\u5206\u5b8c\u5168\u56fa\u5b9a\uff0c\u9636\u6bb5\u4e4b\u95f4\u4ea7\u751f\u5927\u91cf\u7684\u6587\u6863\uff0c\u6781\u5927\u5730\u589e\u52a0\u4e86\u5de5\u4f5c\u91cf\uff0c\u6d6a\u8d39\u4e86\u4e00\u5b9a\u7a0b\u5ea6\u7684\u4eba\u529b\u8d44\u6e90\u3002 \u7531\u4e8e\u5f00\u53d1\u6a21\u578b\u662f\u7ebf\u6027\u7684\uff0c\u7528\u6237\u53ea\u6709\u7b49\u5230\u6574\u4e2a\u8fc7\u7a0b\u7684\u672b\u671f\u624d\u80fd\u89c1\u5230\u5f00\u53d1\u6210\u679c\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u5f00\u53d1\u98ce\u9669\uff0c\u98ce\u9669\u63a7\u5236\u80fd\u529b\u5dee\u3002 \u5bf9\u4e8e\u7528\u6237\u9700\u6c42\u7684\u6539\u53d8\u4e0d\u80fd\u505a\u5230\u8f83\u597d\u7684\u9002\u5e94\uff0c\u98ce\u9669\u63a7\u5236\u80fd\u529b\u5dee\u3002 \u589e\u91cf\u6a21\u578b \u4f18\u70b9 \u5c06\u5f85\u5f00\u53d1\u7684\u8f6f\u4ef6\u7cfb\u7edf\u6a21\u5757\u5316\uff0c\u53ef\u4ee5\u5206\u6279\u6b21\u5730\u63d0\u4ea4\u8f6f\u4ef6\u4ea7\u54c1\uff0c\u4f7f\u7528\u6237\u53ef\u4ee5\u53ca\u65f6\u4e86\u89e3\u8f6f\u4ef6\u9879\u76ee\u7684\u8fdb\u5c55\u3002\u8fd9\u662f\u4e0a\u9762\u7684\u7011\u5e03\u6a21\u578b\u6240\u65e0\u6cd5\u505a\u5230\u7684\u3002 \u901a\u8fc7\u4ee5\u7ec4\u4ef6\u4e3a\u5355\u4f4d\u8fdb\u884c\u5f00\u53d1\u53ef\u4ee5\u6709\u6548\u964d\u4f4e\u4e86\u8f6f\u4ef6\u5f00\u53d1\u7684\u98ce\u9669\u3002\u4e00\u4e2a\u5f00\u53d1\u5468\u671f\u5185\u7684\u9519\u8bef\u4e0d\u4f1a\u5f71\u54cd\u5230\u6574\u4e2a\u8f6f\u4ef6\u7cfb\u7edf\uff0c\u98ce\u9669\u63a7\u5236\u80fd\u529b\u8f83\u5f3a\u3002 \u5f00\u53d1\u987a\u5e8f\u7075\u6d3b\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5bf9\u7ec4\u4ef6\u7684\u5b9e\u73b0\u987a\u5e8f\u8fdb\u884c\u4f18\u5148\u7ea7\u6392\u5e8f\uff0c\u5148\u5b8c\u6210\u9700\u6c42\u7a33\u5b9a\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002\u5f53\u7ec4\u4ef6\u7684\u4f18\u5148\u7ea7\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u8fd8\u80fd\u53ca\u65f6\u5730\u5bf9\u5b9e\u73b0\u987a\u5e8f\u8fdb\u884c\u8c03\u6574\uff0c\u98ce\u9669\u63a7\u5236\u80fd\u529b\u8f83\u5f3a\u3002 \u7f3a\u70b9 \u8be5\u6a21\u578b\u7684\u57fa\u7840\u662f\u5f85\u5f00\u53d1\u7684\u8f6f\u4ef6\u7cfb\u7edf\u53ef\u4ee5\u88ab\u6a21\u5757\u5316\uff0c\u5982\u679c\u5f85\u5f00\u53d1\u7684\u8f6f\u4ef6\u7cfb\u7edf\u5f88\u96be\u88ab\u6a21\u5757\u5316\uff0c\u5c06\u4e0d\u5229\u4e8e\u6211\u4eec\u4f7f\u7528\u589e\u91cf\u6a21\u578b\u8fdb\u884c\u5f00\u53d1\u3002 \u5bf9\u4e8e\u9879\u76ee\u7ba1\u7406\u4eba\u5458\u628a\u63e1\u5168\u5c40\u7684\u6c34\u5e73\u63d0\u51fa\u4e86\u4e00\u5b9a\u7684\u8981\u6c42\u3002 \u87ba\u65cb\u6a21\u578b \u4f18\u70b9 \u589e\u52a0\u4e86\u8bbe\u8ba1\u4e0a\u7684\u7075\u6d3b\u6027, \u6211\u4eec\u53ef\u4ee5\u5728\u9879\u76ee\u7684\u5404\u4e2a\u9636\u6bb5\u8fdb\u884c\u53d8\u66f4\u3002 \u901a\u8fc7\u4ee5\u5c0f\u7684\u5206\u6bb5\u6765\u6784\u5efa\u5927\u578b\u7cfb\u7edf,\u4f7f\u6210\u672c\u8ba1\u7b97\u53d8\u5f97\u7b80\u5355\u5bb9\u6613\u3002 \u4ece\u56fe\u4e0a\u53ef\u4ee5\u770b\u5230\uff0c\u5ba2\u6237\u59cb\u7ec8\u53c2\u4e0e\u6bcf\u4e2a\u9636\u6bb5\u7684\u5f00\u53d1\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u9879\u76ee\u4e0d\u504f\u79bb\u6b63\u786e\u65b9\u5411\u4ee5\u53ca\u9879\u76ee\u7684\u53ef\u63a7\u6027\u3002 \u7f3a\u70b9 \u7ba1\u7406\u4e0d\u5f97\u5f53\u7684\u8bdd\uff0c\u8fc7\u591a\u7684\u8fed\u4ee3\u6b21\u6570\u4f1a\u589e\u52a0\u5f00\u53d1\u6210\u672c\uff0c\u5ef6\u8fdf\u63d0\u4ea4\u65f6\u95f4\uff0c\u8fdb\u800c\u53ef\u80fd\u51fa\u73b0\u8f6f\u4ef6\u5f00\u53d1\u5b8c\u6bd5\u540e\uff0c\u548c\u5f53\u524d\u7684\u6280\u672f\u6c34\u5e73\u6709\u4e86\u8f83\u5927\u7684\u5dee\u8ddd\uff0c\u65e0\u6cd5\u6ee1\u8db3\u5f53\u524d\u7528\u6237\u9700\u6c42\u7684\u60c5\u51b5\u3002 \u98ce\u9669\u5206\u6790\u9700\u8981\u989d\u5916\u7684\u4eba\u624d\u8d44\u6e90\u548c\u6210\u672c\uff0c\u800c\u4e14\u5728\u98ce\u9669\u8f83\u5927\u7684\u9879\u76ee\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u672a\u80fd\u591f\u53ca\u65f6\u6807\u8bc6\u98ce\u9669\uff0c\u52bf\u5fc5\u9020\u6210\u91cd\u5927\u635f\u5931\uff1b \u7b80\u8ff0\u7edf\u4e00\u8fc7\u7a0b\u4e09\u5927\u7279\u70b9\uff0c\u4e0e\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f \u4e09\u5927\u7279\u70b9\u5206\u522b\u4e3a: \u7528\u6237\u4e3a\u4e2d\u5fc3 \u7528\u4f8b\u5206\u6790\u4f5c\u4e3a\u4e00\u9879\u8f6f\u4ef6\u6280\u672f\uff0c\u8fdc\u8fdc\u6bd4\u529f\u80fd\u5206\u89e3\u590d\u6742\u3002\u5927\u90e8\u5206\u9700\u6c42\u4eba\u5458\u4e0d\u5177\u5907\u7f16\u5199\u7528\u4f8b\u7684\u80fd\u529b\uff0c\u7528\u6237\u591a\u6570\u770b\u4e0d\u61c2\u7528\u4f8b\u3002\u56e0\u6b64\uff0c\u5728\u4ea4\u4e92\u8fc7\u7a0b\u4e2d\uff0c\u4f20\u7edf\u4ee5\u529f\u80fd\u5217\u8868\u63cf\u8ff0\u4e3a\u4e3b\u7684\u300a\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u300b\u5e94\u7528\u66f4\u52a0\u5e7f\u6cdb\u3002 \u67b6\u6784\u4e3a\u91cd\u5fc3 \u5bf9\u4e8e\u4e1a\u52a1\u903b\u8f91\u975e\u5e38\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u6253\u9020\u4e00\u4e2a\u5f3a\u5065\u7684\u67b6\u6784\u662f\u5fc5\u987b\u7684\u3002\u4f46\u5bf9\u4e8e\u4e00\u4e9b\u4e1a\u52a1\u903b\u8f91\u76f8\u5bf9\u7b80\u5355\uff0c\u800c\u7528\u6237\u4ea4\u4e92\u903b\u8f91\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u8fc7\u4e8e\u5f3a\u8c03\u67b6\u6784\u4f3c\u4e4e\u6ca1\u6709\u5fc5\u8981\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6709\u7740\u5f88\u591a\u6a21\u5757\u7684\u7f51\u7ad9\uff0c\u5404\u4e2a\u6a21\u5757\u76f8\u5bf9\u72ec\u7acb\uff0c\u8bbf\u95ee\u5404\u81ea\u7684\u8868\uff0c\u7ef4\u62a4\u4e00\u5957\u7528\u4f8b\u56fe\u3001\u7c7b\u56fe\u3001\u65f6\u5e8f\u56fe\u5c31\u6210\u4e3a\u7d2f\u8d58\u3002 \u98ce\u9669\u9a71\u52a8 UP\u7684\u53e6\u4e00\u4e2a\u9a71\u52a8\u5c31\u662f\u98ce\u9669\uff0c\u56e0\u4e3a\u5982\u679c\u4f60\u4e0d\u4e3b\u52a8\u9884\u6d4b\u548c\u9632\u8303\u98ce\u9669\uff0c\u98ce\u9669\u5c31\u4f1a\u4e3b\u52a8\u653b\u51fb\u4f60\u3002UP\u9700\u8981\u5bf9\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u98ce\u9669\u8fdb\u884c\u5206\u6790\u3001\u9884\u6d4b\u5e76\u5173\u6ce8\u8f6f\u4ef6\u7684\u6784\u9020\u3002 \u7edf\u4e00\u8fc7\u7a0b\u5c31\u662f\u662f\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7684\u8f6f\u4ef6\u5f00\u53d1\u6280\u672f\uff0c\u7ed9\u51fa\u4e86\u6709\u5173\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u7ec4\u7ec7\u53ca\u5b9e\u65bd\u7684\u6307\u5bfc\u3002 \u7b80\u8ff0\u7edf\u4e00\u8fc7\u7a0b\u56db\u4e2a\u9636\u6bb5\u7684\u5212\u5206\u51c6\u5219\u662f\u4ec0\u4e48\uff1f\u6bcf\u4e2a\u9636\u6bb5\u5173\u952e\u7684\u91cc\u7a0b\u7891\u662f\u4ec0\u4e48\uff1f \u5212\u5206\u51c6\u5219 \u7edf\u4e00\u8fc7\u7a0b\u6309\u7167\u5176\u5de5\u4f5c\u548c\u8fed\u4ee3\u5728\u65f6\u95f4\u4e0a\u88ab\u5206\u4e3a\u56db\u4e2a\u987a\u5e8f\u7684\u9636\u6bb5\u3002 \u6bcf\u4e2a\u9636\u6bb5\u5173\u952e\u7684\u91cc\u7a0b\u7891 \u521d\u59cb\u9636\u6bb5: \u751f\u547d\u5468\u671f\u76ee\u6807\u91cc\u7a0b\u7891\uff0c\u4e3b\u8981\u76ee\u7684\u5c31\u662f\u5efa\u7acb\u76ee\u7684\u7684\u8303\u56f4\u548c\u7248\u672c\uff0c\u786e\u5b9a\u9879\u76ee\u76ee\u6807\u7684\u53ef\u884c\u6027\u548c\u7a33\u5b9a\u6027\uff0c\u63d0\u4ea4\u7ed3\u679c\u5305\u62ec\u9700\u6c42\u548c\u7528\u4f8b \u7ec6\u5316\u9636\u6bb5: \u751f\u547d\u5468\u671f\u7ed3\u6784\u91cc\u7a0b\u7891\uff0c\u8be5\u9636\u6bb5\u7684\u76ee\u7684\u5c31\u662f\u5bf9\u95ee\u9898\u57df\u8fdb\u884c\u5206\u6790\uff0c\u5efa\u7acb\u7cfb\u7edf\u9700\u6c42\u548c\u67b6\u6784\uff0c\u786e\u5b9a\u5b9e\u73b0\u7684\u53ef\u884c\u6027\u548c\u7a33\u5b9a\u6027\uff0c\u63d0\u4ea4\u7ed3\u679c\u5305\u62ec\u7cfb\u7edf\u67b6\u6784\u3001\u95ee\u9898\u9886\u57df\u3001\u4fee\u6539\u540e\u7684\u9700\u6c42\u53ca\u9879\u76ee\u5f00\u53d1\u8ba1\u5212\u7b49\u76f8\u5173\u6587\u6863 \u6784\u5efa\u9636\u6bb5: \u521d\u59cb\u529f\u80fd\u91cc\u7a0b\u7891\uff0c\u8be5\u9636\u6bb5\u589e\u91cf\u5f0f\u5f00\u53d1\u53ef\u4ee5\u4ea4\u4ed8\u7ed9\u7528\u6237\u7684\u8f6f\u4ef6\u4ea7\u54c1 \u4ea4\u4ed8\u9636\u6bb5: \u4ea7\u54c1\u53d1\u5e03\u91cc\u7a0b\u7891\uff0c\u76ee\u7684\u5c31\u662f\u5c06\u8f6f\u4ef6\u4ea7\u54c1\u4ea4\u4ed8\u7ed9\u7528\u6237 \u8f6f\u4ef6\u4f01\u4e1a\u4e3a\u4ec0\u4e48\u80fd\u6309\u56fa\u5b9a\u8282\u594f\u751f\u4ea7\u3001\u56fa\u5b9a\u5468\u671f\u53d1\u5e03\u8f6f\u4ef6\u4ea7\u54c1\uff1f\u5b83\u7ed9\u4f01\u4e1a\u9879\u76ee\u7ba1\u7406\u5e26\u6765\u54ea\u4e9b\u597d\u5904\uff1f \u539f\u56e0 \u56e0\u4e3a\u8f6f\u4ef6\u4f01\u4e1a\u91c7\u7528\u4e86\u7edf\u4e00\u8fc7\u7a0b\u7684\u5f00\u53d1\uff0c\u800c\u7edf\u4e00\u8fc7\u7a0b\u4f5c\u4e3a\u4e00\u4e2a\u8fed\u4ee3\u589e\u91cf\u7684\u8fc7\u7a0b\uff0c\u5b83\u6709\u521d\u59cb\u9636\u6bb5\u3001\u7ec6\u5316\u9636\u6bb5\u3001\u6784\u5efa\u9636\u6bb5\u3001\u4ea4\u4ed8\u9636\u6bb5\u56db\u4e2a\u9636\u6bb5\uff0c\u5e76\u4e14\u4ed6\u5305\u542b\u4e86\u6bcf\u4e2a\u9636\u6bb5\u7ed3\u675f\u65f6\u90fd\u9700\u8981\u8fdb\u884c\u76f8\u5e94\u7684\u76ee\u6807\u8bc4\u4f30\uff0c\u6765\u5224\u65ad\u662f\u5426\u80fd\u591f\u8fdb\u5165\u4e0b\u4e00\u4e2a\u9636\u6bb5\u3002\u660e\u786e\u4e86\u4e0d\u540c\u9636\u6bb5\u8fed\u4ee3\u7684\u91cc\u7a0b\u7891\u4e0e\u76ee\u6807\uff0c\u652f\u6301 CI/CD \u7684\u7248\u672c\u4ea4\u4ed8\uff0c\u4e3a\u56fa\u5b9a\u9879\u76ee\u5468\u671f\u63d0\u4f9b\u4e86\u53ef\u80fd\u3002\u5728\u6b64\u57fa\u7840\u4e4b\u4e0a\uff0c\u8f6f\u4ef6\u516c\u53f8\u53ef\u4ee5\u5229\u7528\u8f6f\u4ef6\u4ea7\u54c1\u8303\u56f4\u7684\u5f39\u6027\uff0c\u5408\u7406\u89c4\u5212\u8303\u56f4\uff0820%\u4e1a\u52a1\u51b3\u5b9a80%\u6ee1\u610f\u5ea6\uff09\uff0c\u4f7f\u5f97\u8f6f\u4ef6\u751f\u4ea7\u80fd\u591f\u6309\u56fa\u5b9a\u8282\u594f\u8fd0\u884c\uff0c\u56fa\u5b9a\u8fed\u4ee3\u5468\u671f\u3001\u56fa\u5b9a\u5f00\u53d1\u5468\u671f\u3001\u56fa\u5b9a\u5347\u7ea7\u5468\u671f\u3002 \u597d\u5904 \u65b9\u4fbf\u4e86\u9700\u6c42\u7684\u4e0d\u65ad\u66f4\u6539 \u63d0\u9ad8\u4e86\u8f6f\u4ef6\u56e2\u961f\u7684\u751f\u4ea7\u80fd\u529b\uff0c\u4ee5\u53ca\u8f6f\u4ef6\u751f\u4ea7\u6548\u7387 \u5efa\u7acb\u4e86\u975e\u5e38\u660e\u786e\u7684\u8fc7\u7a0b\u7ed3\u6784\uff0c\u800c\u4e14\u6bcf\u4e2a\u9636\u6bb5\u90fd\u6709\u660e\u786e\u7684\u91cc\u7a0b\u7891\u548c\u5224\u5b9a\u6807\u51c6\uff0c\u786e\u4fdd\u4e86\u8f6f\u4ef6\u7684\u8d28\u91cf \u7a33\u5b9a\u7684\u56fa\u5b9a\u7684\u5f00\u53d1\u8282\u594f\u6709\u5229\u4e8e\u9879\u76ee\u7684\u53ca\u65f6\u4ea4\u4ed8\uff0c\u964d\u4f4e\u4e86\u5ef6\u671f\u7684\u98ce\u9669\uff0c\u4fdd\u8bc1\u9879\u76ee\u7684\u987a\u5229\u5b8c\u6210\uff0c\u5e76\u901a\u8fc7\u7a33\u5b9a\u7684\u5f00\u53d1\u5438\u5f15\u66f4\u591a\u7528\u6237","title":"\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#3","text":"","title":"\u7cfb\u7edf\u5206\u6790\u4f5c\u4e1a3"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_1","text":"","title":"\u7b80\u7b54\u9898"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_2","text":"\u4ece\u9879\u76ee\u7279\u70b9\u3001\u98ce\u9669\u7279\u5f81\u3001\u4eba\u529b\u8d44\u6e90\u5229\u7528\u89d2\u5ea6\u601d\u8003","title":"\u7b80\u8ff0\u7011\u5e03\u6a21\u578b\u3001\u589e\u91cf\u6a21\u578b\u3001\u87ba\u65cb\u6a21\u578b\uff08\u542b\u539f\u578b\u65b9\u6cd5\uff09\uff0c\u5e76\u5206\u6790\u4f18\u7f3a\u70b9"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_3","text":"","title":"\u7011\u5e03\u6a21\u578b"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_4","text":"\u5b9a\u4e49\u4e86\u8f6f\u4ef6\u5f00\u53d1\u57fa\u672c\u6d41\u7a0b\u4e0e\u6d3b\u52a8\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6a21\u677f\uff0c\u8fd9\u4e2a\u6a21\u677f\u4f7f\u5f97\u5206\u6790\u3001\u8bbe\u8ba1\u3001\u7f16\u7801\u3001\u6d4b\u8bd5\u548c\u652f\u6301\u7684\u65b9\u6cd5\u53ef\u4ee5\u5728\u8be5\u6a21\u677f\u4e0b\u6709\u4e00\u4e2a\u5171\u540c\u7684\u6307\u5bfc\u3002 \u6709\u5229\u4e8e\u5bf9\u4e8e\u5927\u578b\u8f6f\u4ef6\u5f00\u53d1\u7684\u7ba1\u7406\uff0c\u66f4\u597d\u5206\u914d\u4eba\u529b\u8d44\u6e90 \u5f53\u524d\u4e00\u9636\u6bb5\u5b8c\u6210\u540e\uff0c\u60a8\u53ea\u9700\u8981\u53bb\u5173\u6ce8\u540e\u7eed\u9636\u6bb5\u3002 \u4e3a\u9879\u76ee\u63d0\u4f9b\u4e86\u6309\u9636\u6bb5\u5212\u5206\u7684\u68c0\u67e5\u70b9\u3002","title":"\u4f18\u70b9"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_5","text":"\u5404\u4e2a\u9636\u6bb5\u7684\u5212\u5206\u5b8c\u5168\u56fa\u5b9a\uff0c\u9636\u6bb5\u4e4b\u95f4\u4ea7\u751f\u5927\u91cf\u7684\u6587\u6863\uff0c\u6781\u5927\u5730\u589e\u52a0\u4e86\u5de5\u4f5c\u91cf\uff0c\u6d6a\u8d39\u4e86\u4e00\u5b9a\u7a0b\u5ea6\u7684\u4eba\u529b\u8d44\u6e90\u3002 \u7531\u4e8e\u5f00\u53d1\u6a21\u578b\u662f\u7ebf\u6027\u7684\uff0c\u7528\u6237\u53ea\u6709\u7b49\u5230\u6574\u4e2a\u8fc7\u7a0b\u7684\u672b\u671f\u624d\u80fd\u89c1\u5230\u5f00\u53d1\u6210\u679c\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u5f00\u53d1\u98ce\u9669\uff0c\u98ce\u9669\u63a7\u5236\u80fd\u529b\u5dee\u3002 \u5bf9\u4e8e\u7528\u6237\u9700\u6c42\u7684\u6539\u53d8\u4e0d\u80fd\u505a\u5230\u8f83\u597d\u7684\u9002\u5e94\uff0c\u98ce\u9669\u63a7\u5236\u80fd\u529b\u5dee\u3002","title":"\u7f3a\u70b9"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_6","text":"","title":"\u589e\u91cf\u6a21\u578b"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_7","text":"\u5c06\u5f85\u5f00\u53d1\u7684\u8f6f\u4ef6\u7cfb\u7edf\u6a21\u5757\u5316\uff0c\u53ef\u4ee5\u5206\u6279\u6b21\u5730\u63d0\u4ea4\u8f6f\u4ef6\u4ea7\u54c1\uff0c\u4f7f\u7528\u6237\u53ef\u4ee5\u53ca\u65f6\u4e86\u89e3\u8f6f\u4ef6\u9879\u76ee\u7684\u8fdb\u5c55\u3002\u8fd9\u662f\u4e0a\u9762\u7684\u7011\u5e03\u6a21\u578b\u6240\u65e0\u6cd5\u505a\u5230\u7684\u3002 \u901a\u8fc7\u4ee5\u7ec4\u4ef6\u4e3a\u5355\u4f4d\u8fdb\u884c\u5f00\u53d1\u53ef\u4ee5\u6709\u6548\u964d\u4f4e\u4e86\u8f6f\u4ef6\u5f00\u53d1\u7684\u98ce\u9669\u3002\u4e00\u4e2a\u5f00\u53d1\u5468\u671f\u5185\u7684\u9519\u8bef\u4e0d\u4f1a\u5f71\u54cd\u5230\u6574\u4e2a\u8f6f\u4ef6\u7cfb\u7edf\uff0c\u98ce\u9669\u63a7\u5236\u80fd\u529b\u8f83\u5f3a\u3002 \u5f00\u53d1\u987a\u5e8f\u7075\u6d3b\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5bf9\u7ec4\u4ef6\u7684\u5b9e\u73b0\u987a\u5e8f\u8fdb\u884c\u4f18\u5148\u7ea7\u6392\u5e8f\uff0c\u5148\u5b8c\u6210\u9700\u6c42\u7a33\u5b9a\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002\u5f53\u7ec4\u4ef6\u7684\u4f18\u5148\u7ea7\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u8fd8\u80fd\u53ca\u65f6\u5730\u5bf9\u5b9e\u73b0\u987a\u5e8f\u8fdb\u884c\u8c03\u6574\uff0c\u98ce\u9669\u63a7\u5236\u80fd\u529b\u8f83\u5f3a\u3002","title":"\u4f18\u70b9"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_8","text":"\u8be5\u6a21\u578b\u7684\u57fa\u7840\u662f\u5f85\u5f00\u53d1\u7684\u8f6f\u4ef6\u7cfb\u7edf\u53ef\u4ee5\u88ab\u6a21\u5757\u5316\uff0c\u5982\u679c\u5f85\u5f00\u53d1\u7684\u8f6f\u4ef6\u7cfb\u7edf\u5f88\u96be\u88ab\u6a21\u5757\u5316\uff0c\u5c06\u4e0d\u5229\u4e8e\u6211\u4eec\u4f7f\u7528\u589e\u91cf\u6a21\u578b\u8fdb\u884c\u5f00\u53d1\u3002 \u5bf9\u4e8e\u9879\u76ee\u7ba1\u7406\u4eba\u5458\u628a\u63e1\u5168\u5c40\u7684\u6c34\u5e73\u63d0\u51fa\u4e86\u4e00\u5b9a\u7684\u8981\u6c42\u3002","title":"\u7f3a\u70b9"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_9","text":"","title":"\u87ba\u65cb\u6a21\u578b"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_10","text":"\u589e\u52a0\u4e86\u8bbe\u8ba1\u4e0a\u7684\u7075\u6d3b\u6027, \u6211\u4eec\u53ef\u4ee5\u5728\u9879\u76ee\u7684\u5404\u4e2a\u9636\u6bb5\u8fdb\u884c\u53d8\u66f4\u3002 \u901a\u8fc7\u4ee5\u5c0f\u7684\u5206\u6bb5\u6765\u6784\u5efa\u5927\u578b\u7cfb\u7edf,\u4f7f\u6210\u672c\u8ba1\u7b97\u53d8\u5f97\u7b80\u5355\u5bb9\u6613\u3002 \u4ece\u56fe\u4e0a\u53ef\u4ee5\u770b\u5230\uff0c\u5ba2\u6237\u59cb\u7ec8\u53c2\u4e0e\u6bcf\u4e2a\u9636\u6bb5\u7684\u5f00\u53d1\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u9879\u76ee\u4e0d\u504f\u79bb\u6b63\u786e\u65b9\u5411\u4ee5\u53ca\u9879\u76ee\u7684\u53ef\u63a7\u6027\u3002","title":"\u4f18\u70b9"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_11","text":"\u7ba1\u7406\u4e0d\u5f97\u5f53\u7684\u8bdd\uff0c\u8fc7\u591a\u7684\u8fed\u4ee3\u6b21\u6570\u4f1a\u589e\u52a0\u5f00\u53d1\u6210\u672c\uff0c\u5ef6\u8fdf\u63d0\u4ea4\u65f6\u95f4\uff0c\u8fdb\u800c\u53ef\u80fd\u51fa\u73b0\u8f6f\u4ef6\u5f00\u53d1\u5b8c\u6bd5\u540e\uff0c\u548c\u5f53\u524d\u7684\u6280\u672f\u6c34\u5e73\u6709\u4e86\u8f83\u5927\u7684\u5dee\u8ddd\uff0c\u65e0\u6cd5\u6ee1\u8db3\u5f53\u524d\u7528\u6237\u9700\u6c42\u7684\u60c5\u51b5\u3002 \u98ce\u9669\u5206\u6790\u9700\u8981\u989d\u5916\u7684\u4eba\u624d\u8d44\u6e90\u548c\u6210\u672c\uff0c\u800c\u4e14\u5728\u98ce\u9669\u8f83\u5927\u7684\u9879\u76ee\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u672a\u80fd\u591f\u53ca\u65f6\u6807\u8bc6\u98ce\u9669\uff0c\u52bf\u5fc5\u9020\u6210\u91cd\u5927\u635f\u5931\uff1b","title":"\u7f3a\u70b9"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_12","text":"\u4e09\u5927\u7279\u70b9\u5206\u522b\u4e3a: \u7528\u6237\u4e3a\u4e2d\u5fc3 \u7528\u4f8b\u5206\u6790\u4f5c\u4e3a\u4e00\u9879\u8f6f\u4ef6\u6280\u672f\uff0c\u8fdc\u8fdc\u6bd4\u529f\u80fd\u5206\u89e3\u590d\u6742\u3002\u5927\u90e8\u5206\u9700\u6c42\u4eba\u5458\u4e0d\u5177\u5907\u7f16\u5199\u7528\u4f8b\u7684\u80fd\u529b\uff0c\u7528\u6237\u591a\u6570\u770b\u4e0d\u61c2\u7528\u4f8b\u3002\u56e0\u6b64\uff0c\u5728\u4ea4\u4e92\u8fc7\u7a0b\u4e2d\uff0c\u4f20\u7edf\u4ee5\u529f\u80fd\u5217\u8868\u63cf\u8ff0\u4e3a\u4e3b\u7684\u300a\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u300b\u5e94\u7528\u66f4\u52a0\u5e7f\u6cdb\u3002 \u67b6\u6784\u4e3a\u91cd\u5fc3 \u5bf9\u4e8e\u4e1a\u52a1\u903b\u8f91\u975e\u5e38\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u6253\u9020\u4e00\u4e2a\u5f3a\u5065\u7684\u67b6\u6784\u662f\u5fc5\u987b\u7684\u3002\u4f46\u5bf9\u4e8e\u4e00\u4e9b\u4e1a\u52a1\u903b\u8f91\u76f8\u5bf9\u7b80\u5355\uff0c\u800c\u7528\u6237\u4ea4\u4e92\u903b\u8f91\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u8fc7\u4e8e\u5f3a\u8c03\u67b6\u6784\u4f3c\u4e4e\u6ca1\u6709\u5fc5\u8981\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6709\u7740\u5f88\u591a\u6a21\u5757\u7684\u7f51\u7ad9\uff0c\u5404\u4e2a\u6a21\u5757\u76f8\u5bf9\u72ec\u7acb\uff0c\u8bbf\u95ee\u5404\u81ea\u7684\u8868\uff0c\u7ef4\u62a4\u4e00\u5957\u7528\u4f8b\u56fe\u3001\u7c7b\u56fe\u3001\u65f6\u5e8f\u56fe\u5c31\u6210\u4e3a\u7d2f\u8d58\u3002 \u98ce\u9669\u9a71\u52a8 UP\u7684\u53e6\u4e00\u4e2a\u9a71\u52a8\u5c31\u662f\u98ce\u9669\uff0c\u56e0\u4e3a\u5982\u679c\u4f60\u4e0d\u4e3b\u52a8\u9884\u6d4b\u548c\u9632\u8303\u98ce\u9669\uff0c\u98ce\u9669\u5c31\u4f1a\u4e3b\u52a8\u653b\u51fb\u4f60\u3002UP\u9700\u8981\u5bf9\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u98ce\u9669\u8fdb\u884c\u5206\u6790\u3001\u9884\u6d4b\u5e76\u5173\u6ce8\u8f6f\u4ef6\u7684\u6784\u9020\u3002 \u7edf\u4e00\u8fc7\u7a0b\u5c31\u662f\u662f\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7684\u8f6f\u4ef6\u5f00\u53d1\u6280\u672f\uff0c\u7ed9\u51fa\u4e86\u6709\u5173\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u7ec4\u7ec7\u53ca\u5b9e\u65bd\u7684\u6307\u5bfc\u3002","title":"\u7b80\u8ff0\u7edf\u4e00\u8fc7\u7a0b\u4e09\u5927\u7279\u70b9\uff0c\u4e0e\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_13","text":"","title":"\u7b80\u8ff0\u7edf\u4e00\u8fc7\u7a0b\u56db\u4e2a\u9636\u6bb5\u7684\u5212\u5206\u51c6\u5219\u662f\u4ec0\u4e48\uff1f\u6bcf\u4e2a\u9636\u6bb5\u5173\u952e\u7684\u91cc\u7a0b\u7891\u662f\u4ec0\u4e48\uff1f"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_14","text":"\u7edf\u4e00\u8fc7\u7a0b\u6309\u7167\u5176\u5de5\u4f5c\u548c\u8fed\u4ee3\u5728\u65f6\u95f4\u4e0a\u88ab\u5206\u4e3a\u56db\u4e2a\u987a\u5e8f\u7684\u9636\u6bb5\u3002","title":"\u5212\u5206\u51c6\u5219"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_15","text":"\u521d\u59cb\u9636\u6bb5: \u751f\u547d\u5468\u671f\u76ee\u6807\u91cc\u7a0b\u7891\uff0c\u4e3b\u8981\u76ee\u7684\u5c31\u662f\u5efa\u7acb\u76ee\u7684\u7684\u8303\u56f4\u548c\u7248\u672c\uff0c\u786e\u5b9a\u9879\u76ee\u76ee\u6807\u7684\u53ef\u884c\u6027\u548c\u7a33\u5b9a\u6027\uff0c\u63d0\u4ea4\u7ed3\u679c\u5305\u62ec\u9700\u6c42\u548c\u7528\u4f8b \u7ec6\u5316\u9636\u6bb5: \u751f\u547d\u5468\u671f\u7ed3\u6784\u91cc\u7a0b\u7891\uff0c\u8be5\u9636\u6bb5\u7684\u76ee\u7684\u5c31\u662f\u5bf9\u95ee\u9898\u57df\u8fdb\u884c\u5206\u6790\uff0c\u5efa\u7acb\u7cfb\u7edf\u9700\u6c42\u548c\u67b6\u6784\uff0c\u786e\u5b9a\u5b9e\u73b0\u7684\u53ef\u884c\u6027\u548c\u7a33\u5b9a\u6027\uff0c\u63d0\u4ea4\u7ed3\u679c\u5305\u62ec\u7cfb\u7edf\u67b6\u6784\u3001\u95ee\u9898\u9886\u57df\u3001\u4fee\u6539\u540e\u7684\u9700\u6c42\u53ca\u9879\u76ee\u5f00\u53d1\u8ba1\u5212\u7b49\u76f8\u5173\u6587\u6863 \u6784\u5efa\u9636\u6bb5: \u521d\u59cb\u529f\u80fd\u91cc\u7a0b\u7891\uff0c\u8be5\u9636\u6bb5\u589e\u91cf\u5f0f\u5f00\u53d1\u53ef\u4ee5\u4ea4\u4ed8\u7ed9\u7528\u6237\u7684\u8f6f\u4ef6\u4ea7\u54c1 \u4ea4\u4ed8\u9636\u6bb5: \u4ea7\u54c1\u53d1\u5e03\u91cc\u7a0b\u7891\uff0c\u76ee\u7684\u5c31\u662f\u5c06\u8f6f\u4ef6\u4ea7\u54c1\u4ea4\u4ed8\u7ed9\u7528\u6237","title":"\u6bcf\u4e2a\u9636\u6bb5\u5173\u952e\u7684\u91cc\u7a0b\u7891"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_16","text":"","title":"\u8f6f\u4ef6\u4f01\u4e1a\u4e3a\u4ec0\u4e48\u80fd\u6309\u56fa\u5b9a\u8282\u594f\u751f\u4ea7\u3001\u56fa\u5b9a\u5468\u671f\u53d1\u5e03\u8f6f\u4ef6\u4ea7\u54c1\uff1f\u5b83\u7ed9\u4f01\u4e1a\u9879\u76ee\u7ba1\u7406\u5e26\u6765\u54ea\u4e9b\u597d\u5904\uff1f"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_17","text":"\u56e0\u4e3a\u8f6f\u4ef6\u4f01\u4e1a\u91c7\u7528\u4e86\u7edf\u4e00\u8fc7\u7a0b\u7684\u5f00\u53d1\uff0c\u800c\u7edf\u4e00\u8fc7\u7a0b\u4f5c\u4e3a\u4e00\u4e2a\u8fed\u4ee3\u589e\u91cf\u7684\u8fc7\u7a0b\uff0c\u5b83\u6709\u521d\u59cb\u9636\u6bb5\u3001\u7ec6\u5316\u9636\u6bb5\u3001\u6784\u5efa\u9636\u6bb5\u3001\u4ea4\u4ed8\u9636\u6bb5\u56db\u4e2a\u9636\u6bb5\uff0c\u5e76\u4e14\u4ed6\u5305\u542b\u4e86\u6bcf\u4e2a\u9636\u6bb5\u7ed3\u675f\u65f6\u90fd\u9700\u8981\u8fdb\u884c\u76f8\u5e94\u7684\u76ee\u6807\u8bc4\u4f30\uff0c\u6765\u5224\u65ad\u662f\u5426\u80fd\u591f\u8fdb\u5165\u4e0b\u4e00\u4e2a\u9636\u6bb5\u3002\u660e\u786e\u4e86\u4e0d\u540c\u9636\u6bb5\u8fed\u4ee3\u7684\u91cc\u7a0b\u7891\u4e0e\u76ee\u6807\uff0c\u652f\u6301 CI/CD \u7684\u7248\u672c\u4ea4\u4ed8\uff0c\u4e3a\u56fa\u5b9a\u9879\u76ee\u5468\u671f\u63d0\u4f9b\u4e86\u53ef\u80fd\u3002\u5728\u6b64\u57fa\u7840\u4e4b\u4e0a\uff0c\u8f6f\u4ef6\u516c\u53f8\u53ef\u4ee5\u5229\u7528\u8f6f\u4ef6\u4ea7\u54c1\u8303\u56f4\u7684\u5f39\u6027\uff0c\u5408\u7406\u89c4\u5212\u8303\u56f4\uff0820%\u4e1a\u52a1\u51b3\u5b9a80%\u6ee1\u610f\u5ea6\uff09\uff0c\u4f7f\u5f97\u8f6f\u4ef6\u751f\u4ea7\u80fd\u591f\u6309\u56fa\u5b9a\u8282\u594f\u8fd0\u884c\uff0c\u56fa\u5b9a\u8fed\u4ee3\u5468\u671f\u3001\u56fa\u5b9a\u5f00\u53d1\u5468\u671f\u3001\u56fa\u5b9a\u5347\u7ea7\u5468\u671f\u3002","title":"\u539f\u56e0"},{"location":"SystemAnalysis/\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5206\u6790 Homework3/#_18","text":"\u65b9\u4fbf\u4e86\u9700\u6c42\u7684\u4e0d\u65ad\u66f4\u6539 \u63d0\u9ad8\u4e86\u8f6f\u4ef6\u56e2\u961f\u7684\u751f\u4ea7\u80fd\u529b\uff0c\u4ee5\u53ca\u8f6f\u4ef6\u751f\u4ea7\u6548\u7387 \u5efa\u7acb\u4e86\u975e\u5e38\u660e\u786e\u7684\u8fc7\u7a0b\u7ed3\u6784\uff0c\u800c\u4e14\u6bcf\u4e2a\u9636\u6bb5\u90fd\u6709\u660e\u786e\u7684\u91cc\u7a0b\u7891\u548c\u5224\u5b9a\u6807\u51c6\uff0c\u786e\u4fdd\u4e86\u8f6f\u4ef6\u7684\u8d28\u91cf \u7a33\u5b9a\u7684\u56fa\u5b9a\u7684\u5f00\u53d1\u8282\u594f\u6709\u5229\u4e8e\u9879\u76ee\u7684\u53ca\u65f6\u4ea4\u4ed8\uff0c\u964d\u4f4e\u4e86\u5ef6\u671f\u7684\u98ce\u9669\uff0c\u4fdd\u8bc1\u9879\u76ee\u7684\u987a\u5229\u5b8c\u6210\uff0c\u5e76\u901a\u8fc7\u7a33\u5b9a\u7684\u5f00\u53d1\u5438\u5f15\u66f4\u591a\u7528\u6237","title":"\u597d\u5904"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb01-GUI\u4e95\u5b57\u68cb/","text":"\u5b66\u4e60\u7b14\u8bb01-GUI\u4e95\u5b57\u68cb 1. \u7b80\u7b54\u9898 \u89e3\u91ca \u6e38\u620f\u5bf9\u8c61\uff08GameObjects\uff09 \u548c \u8d44\u6e90\uff08Assets\uff09\u7684\u533a\u522b\u4e0e\u8054\u7cfb\u3002 \u8d44\u6e90(Assets)\u662f\u5305\u542b\u5728\u6e38\u620f\u6587\u4ef6\u4e2d\uff0c\u4e3a\u6e38\u620f\u5bf9\u8c61\u6240\u4f7f\u7528\u7684\uff0c\u4e00\u4e2a\u8d44\u6e90\u53ef\u4ee5\u88ab\u4e00\u4e2a\u6216\u591a\u4e2a\u5bf9\u8c61\u4f7f\u7528\u3002\u800c\u5bf9\u8c61\u51fa\u73b0\u5728\u6e38\u620f\u573a\u666f(Scene)\u4e2d\uff0c\u662fComponents\u3001\u8d44\u6e90\u6574\u5408\u5728\u4e00\u8d77\u7684\u7ed3\u679c\u3002 \u4e0b\u8f7d\u51e0\u4e2a\u6e38\u620f\u6848\u4f8b\uff0c\u5206\u522b\u603b\u7ed3\u8d44\u6e90\u3001\u5bf9\u8c61\u7ec4\u7ec7\u7684\u7ed3\u6784 \u5206\u6790\u4e0b\u8f7d\u7684\u6e38\u620f\u6848\u4f8b 1.\u8d44\u6e90\u6587\u4ef6\u5939\u901a\u5e38\u6709\u5bf9\u8c61\u3001\u6750\u8d28\u3001\u573a\u666f\u3001\u58f0\u97f3\u3001\u9884\u8bbe\u3001\u8d34\u56fe\u3001\u811a\u672c\u3001\u52a8\u4f5c\uff0c\u5728\u8fd9\u4e9b\u6587\u4ef6\u5939\u4e0b\u53ef\u4ee5\u7ee7\u7eed\u5212\u5206\u3002 2.\u5bf9\u8c61\u4e2d\u4e00\u822c\u6709\u73a9\u5bb6\u3001\u654c\u4eba\u3001\u73af\u5883\u3001\u6444\u50cf\u673a\u548c\u97f3\u4e50\u7b49\u865a\u62df\u7236\u7c7b\uff0c\u8fd9\u4e9b\u7236\u7c7b\u672c\u8eab\u6ca1\u6709\u5b9e\u4f53\uff0c\u4f46\u4ed6\u4eec\u7684\u5b50\u7c7b\u5305\u542b\u4e86\u6e38\u620f\u4e2d\u4f1a\u51fa\u73b0\u7684\u5bf9\u8c61\u3002 \u7f16\u5199\u4e00\u4e2a\u4ee3\u7801\uff0c\u4f7f\u7528 debug \u8bed\u53e5\u6765\u9a8c\u8bc1 MonoBehaviour \u57fa\u672c\u884c\u4e3a\u6216\u4e8b\u4ef6\u89e6\u53d1\u7684\u6761\u4ef6 \u57fa\u672c\u884c\u4e3a\u5305\u62ec Awake() Start() Update() FixedUpdate() LateUpdate() \u5e38\u7528\u4e8b\u4ef6\u5305\u62ec OnGUI() OnDisable() OnEnable() public class testBasicBehaviour : MonoBehaviour { void Awake () { Debug . Log ( \"onAwake\" ); } void Start () { Debug . Log ( \"onStart\" ); } void Update () { Debug . Log ( \"onUpdate\" ); } void FixedUpdate () { Debug . Log ( \"onFixedUpdate\" ); } void LateUpdate () { Debug . Log ( \"onLateUpdate\" ); } void OnGUI () { Debug . Log ( \"onGUI\" ); } void Reset () { Debug . Log ( \"onReset\" ); } void OnDisable () { Debug . Log ( \"onDisable\" ); } void OnDestroy () { Debug . Log ( \"onDestroy\" ); } } \u67e5\u627e\u811a\u672c\u624b\u518c\uff0c\u4e86\u89e3 GameObject\uff0cTransform\uff0cComponent \u5bf9\u8c61 \u5206\u522b\u7ffb\u8bd1\u5b98\u65b9\u5bf9\u4e09\u4e2a\u5bf9\u8c61\u7684\u63cf\u8ff0\uff08Description\uff09 \u6e38\u620f\u5bf9\u8c61\u5728Unity\u4e2d\u662f\u4ee3\u8868\u7740\u6e38\u620f\u7269\u4ef6\u3001\u9053\u5177\u4ee5\u53ca\u6e38\u620f\u573a\u666f\u7684\u57fa\u672c\u5bf9\u8c61\u3002\u5b83\u4eec\u672c\u8eab\u6ca1\u6709\u5b8c\u6210\u592a\u591a\u5185\u5bb9\uff0c\u4f46\u5b83\u4eec\u5145\u5f53\u7740\u7ec4\u4ef6\u7684\u5bb9\u5668\uff0c\u8ba9\u5f00\u53d1\u8005\u5b9e\u73b0\u771f\u6b63\u7684\u529f\u80fd\u3002 Transform\u5c5e\u6027\u5b9a\u4e49\u4e86\u7ec4\u4ef6\u7684\u4f4d\u7f6e\uff0c\u65cb\u8f6c\u89d2\u5ea6\uff0c\u5404\u4e2a\u65b9\u5411\u7684\u5927\u5c0f\u6bd4\u4f8b\uff08\u7f29\u653e\uff09\u3002\u6bcf\u4e00\u4e2a\u6e38\u620f\u5bf9\u8c61(GameObject)\u90fd\u6709\u7740\u4e00\u4e2aTransform\u3002 \u7ec4\u4ef6\u662f\u6e38\u620f\u4e2d\u7269\u4f53\u548c\u884c\u4e3a\u7684\u87ba\u6bcd\u548c\u87ba\u6813, \u5b83\u4eec\u662f\u6bcf\u4e2a\u6e38\u620f\u5bf9\u8c61\u7684\u529f\u80fd\u5757\u3002\u4e00\u4e2a\u6e38\u620f\u5bf9\u8c61\u662f\u8bb8\u591a\u4e0d\u540c\u7684\u7ec4\u4ef6\u7684\u5bb9\u5668\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u7684\u6e38\u620f\u5bf9\u8c61\u81ea\u52a8\u62e5\u6709Transform\u7ec4\u4ef6\u3002\u8fd9\u662f\u56e0\u4e3aTransform\u7ec4\u4ef6\u51b3\u5b9a\u4e86\u6e38\u620f\u5bf9\u8c61\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u65cb\u8f6c\u548c\u7f29\u653e\u3002\u6ca1\u6709Transform\u7ec4\u4ef6\u7684\u6e38\u620f\u5bf9\u8c61\uff0c\u4e0d\u4f1a\u5728World\u4e2d\u5b58\u5728\u3002 \u63cf\u8ff0\u4e0b\u56fe\u4e2d table \u5bf9\u8c61\uff08\u5b9e\u4f53\uff09\u7684\u5c5e\u6027\u3001table \u7684 Transform \u7684\u5c5e\u6027\u3001 table \u7684 \u90e8\u4ef6 \u8be5table\u5bf9\u8c61\u7684\u5c5e\u6027\uff08component\uff09\u6709\u5982\u4e0b: > 1. Transform\u63cf\u8ff0\u4e86table\u5bf9\u8c61\u7684\u4f4d\u7f6e\uff0c\u65cb\u8f6c\u89d2\u5ea6\uff0c\u7f29\u653e, \u56fe\u4e2d\u7684\u5c5e\u6027\u4e3a,\u4f4d\u7f6e(0,0,0), \u65cb\u8f6c(0,0,0),\u6bd4\u4f8b\u4e3a(100%, 100%, 100%); Mesh Filter\u7f51\u683c\u8fc7\u6ee4\u5668\u63cf\u8ff0\u4e86\u51e0\u4f55\u4f53\u7684\u5f62\u72b6,\u56fe\u4e2dtable\u4e3aCube\uff08\u7acb\u65b9\u4f53\uff09 Box Colider\u5219\u63cf\u8ff0\u4e86\u7269\u4f53\u7684\u78b0\u649e\u8303\u56f4\uff0c\u56fe\u4e2d\u7684\u78b0\u649e\u8303\u56f4\u4e3a\u4ee5(0,0,0),(1,0,0),(0,1,0),(1,1,0),(0,0,1),(1,0,1),(0,1,1),(1,1,1)\u4e3a\u9876\u70b9\u7684\u4e00\u4e2a\u6b63\u65b9\u4f53 Mesh Renderer\u7f51\u683c\u6e32\u67d3\u5668\u5219\u4ece\u7f51\u683c\u8fc7\u6ee4\u5668\u4e2d\u83b7\u5f97\u51e0\u4f55\u4f53\u7684\u5f62\u72b6\u7136\u540e\u6839\u636e\u8981\u6c42\u8fdb\u884c\u6e32\u67d3\u3002\u56fe\u4e2d\u7684\u5c5e\u6027\u4e3a Cast Shadows(\u6295\u5c04\u9634\u5f71\u65b9\u5f0f)\u5f00\u542f,\u63a5\u53d7\u9634\u5f71 Motion Vectors\uff08\u8fd0\u52a8\u5411\u91cf\u751f\u6210\u65b9\u5f0f\uff09\u4e3aPerObject Motion\uff08\u4f1a\u6e32\u67d3\u51fa\u4e00\u4e2a\u201c\u6bcf\u4e2a\u5bf9\u8c61\u201d\u8fd0\u52a8\u5411\u91cf\u901a\u9053\uff09\uff0c\u6750\u8d28\u4e3a\u9ed8\u8ba4\u6750\u8d28\uff0cLight Probes\uff08\u5149\u63a2\u5934\u63d2\u503c\u65b9\u5f0f\uff09\u4ee5\u53caReflection Probes\uff08\u53cd\u5c04\u63a2\u5934\u90fd\u4e3a\u6df7\u5408\uff09\uff0cAnchor Override\u4e3a\u5f53\u4f7f\u7528\u5149\u63a2\u5934\u6216\u53cd\u5c04\u63a2\u5934\u7cfb\u7edf\u65f6\uff0c\u7528\u6765\u51b3\u5b9a\u63d2\u503c\u4f4d\u7f6e\u7684Transform\uff0c\u56fe\u4e2d\u672a\u5b9a\u4e49\u8be5Transform\u3002 \u7528 UML \u56fe\u63cf\u8ff0 \u4e09\u8005\u7684\u5173\u7cfb\uff08\u8bf7\u4f7f\u7528 UMLet 14.1.1 stand-alone\u7248\u672c\u51fa\u56fe\uff09 \u6574\u7406\u76f8\u5173\u5b66\u4e60\u8d44\u6599\uff0c\u7f16\u5199\u7b80\u5355\u4ee3\u7801\u9a8c\u8bc1\u4ee5\u4e0b\u6280\u672f\u7684\u5b9e\u73b0\uff1a(\u67e5\u627e\u5bf9\u8c61\u3001\u6dfb\u52a0\u5b50\u5bf9\u8c61\u3001\u904d\u5386\u5bf9\u8c61\u6811\u3001\u6e05\u9664\u6240\u6709\u5b50\u5bf9\u8c61) //\u67e5\u627e\u5bf9\u8c61 public static GameObject Find ( string name ) //\u901a\u8fc7\u540d\u5b57\u67e5\u627e public static GameObject FindWithTag ( string tag ) //\u901a\u8fc7\u6807\u7b7e\u67e5\u627e\u5355\u4e2a\u5bf9\u8c61 public static GameObject [] FindGameObjectsWithTag ( string tag ) //\u901a\u8fc7\u6807\u7b7e\u67e5\u627e\u591a\u4e2a\u5bf9\u8c61 //\u6dfb\u52a0\u5b50\u5bf9\u8c61 public static GameObect CreatePrimitive ( PrimitiveTypetype ) //\u904d\u5386\u5bf9\u8c61\u6811 foreach ( Transform child in transform ) { Debug . Log ( child . gameObject . name ); } //\u6e05\u9664\u6240\u6709\u5b50\u5bf9\u8c61 foreach ( Transform child in transform ) { Destroy ( child . gameObject ); } \u9884\u8bbe\uff08Prefabs\uff09\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u4e0e\u5bf9\u8c61\u514b\u9686 (clone or copy or Instantiate of Unity Object) \u5173\u7cfb\uff1f Unity\u901a\u8fc7\u9884\u8bbe\uff08Prefabs\uff09\u5b8c\u6574\u5730\u50a8\u5b58\u4e86\u5bf9\u8c61\u7684\u7ec4\u4ef6\u3001\u5c5e\u6027\u7b49\u5185\u5bb9\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u521b\u5efa\u5177\u6709\u76f8\u540c\u5c5e\u6027\u7684\u5bf9\u8c61,\u65b9\u4fbf\u4e86\u5bf9\u8c61\u7684\u590d\u7528\u3002\u5bf9\u8c61\u514b\u9686\u4e0e\u9884\u8bbe\u4e0d\u540c\u7684\u5730\u65b9\u5c31\u5728\u4e8e\uff0c\u9884\u8bbe\u4e0e\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u662f\u4e00\u81f4\u7684\uff0c\u9884\u8bbe\u53d1\u751f\u53d8\u5316\uff0c\u6240\u6709\u901a\u8fc7\u5176\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u90fd\u4f1a\u4ea7\u751f\u53d8\u5316\uff0c\u800c\u5bf9\u8c61\u514b\u9686\u672c\u4f53\u548c\u514b\u9686\u51fa\u7684\u5bf9\u8c61\u4e0d\u540c\uff0c\u5176\u4e0d\u53d7\u672c\u4f53\u6539\u53d8\u5f71\u54cd\u3002 \u5c1d\u8bd5\u89e3\u91ca\u7ec4\u5408\u6a21\u5f0f\uff08Composite Pattern / \u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff09\u3002\u4f7f\u7528 BroadcastMessage() \u65b9\u6cd5 \u5411\u5b50\u5bf9\u8c61\u53d1\u9001\u6d88\u606f \u7ec4\u5408\u6a21\u5f0f\u5141\u8bb8\u7528\u6237\u5c06\u5bf9\u8c61\u7ec4\u5408\u6210\u6811\u5f62\u7ed3\u6784\u6765\u8868\u73b0\u201d\u90e8\u5206-\u6574\u4f53\u201c\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u4f7f\u5f97\u5ba2\u6237\u4ee5\u4e00\u81f4\u7684\u65b9\u5f0f\u5904\u7406\u5355\u4e2a\u5bf9\u8c61\u4ee5\u53ca\u5bf9\u8c61\u7684\u7ec4\u5408\u3002\u7ec4\u5408\u6a21\u5f0f\u5b9e\u73b0\u7684\u6700\u5173\u952e\u7684\u5730\u65b9\u662f\u2014\u2014\u7b80\u5355\u5bf9\u8c61\u548c\u590d\u5408\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u76f8\u540c\u7684\u63a5\u53e3\u3002\u8fd9\u5c31\u662f\u7ec4\u5408\u6a21\u5f0f\u80fd\u591f\u5c06\u7ec4\u5408\u5bf9\u8c61\u548c\u7b80\u5355\u5bf9\u8c61\u8fdb\u884c\u4e00\u81f4\u5904\u7406\u7684\u539f\u56e0\u3002 //\u7236\u5bf9\u8c61 public class child : MonoBehaviour { void Start () { this . BroadcastMessage ( \"getMessage\" , \"test\" ); } void getMessage ( string msg ) { Debug . Log ( \"Get msg: \" + msg ); } } //\u5b50\u5bf9\u8c61 public class child : MonoBehaviour { void getMessage ( string msg ) { Debug . Log ( \"Get msg: \" + msg ); } } 2.\u7f16\u7a0b\u5b9e\u8df5\uff0c\u5c0f\u6e38\u620f \u5b9e\u8df5\u90e8\u5206\u9009\u62e9\u7684\u6e38\u620f\u5185\u5bb9\u4e3a: \u4e95\u5b57\u68cb \u9996\u5148\uff0c\u6839\u636e\u8001\u5e08\u7684\u53ea\u80fd\u4f7f\u7528IMGUI\u6784\u5efaUI\u7684\u8981\u6c42\uff0c\u5b66\u4e60\u4e86OnGUI\u7684\u7528\u6cd5\uff0c\u5f97\u77e5OnGUI\u5c31\u662f\u4e00\u4e2aUnity\u63d0\u4f9b\u7684\u7528\u4e8e\u7ed8\u5236\u6bcf\u4e00\u5e27\u754c\u9762\u7684\u51fd\u6570\uff0c\u548cUpdate\u4e00\u6837\u5728\u6bcf\u4e00\u5e27\u90fd\u4f1a\u88ab\u8c03\u7528\u3002\u7406\u89e3\u539f\u7406\u4e4b\u540e\u5c31\u5341\u5206\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u597d\u68cb\u76d8\u7684\u72b6\u6001\uff0c\u8bb0\u5f55\u597d\u68cb\u76d8\u7684\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7GUI\u51fd\u6570\u628a\u5f53\u524d\u7684\u68cb\u76d8\u6e32\u67d3\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\uff0c\u7f16\u7a0b\u96be\u5ea6\u5e76\u4e0d\u5927\uff0c\u6240\u4ee5\u9996\u5148\u5728\u7c7b\u4e2d\u5b9a\u4e49\u597d\u9700\u8981\u7528\u5230\u7684\u6570\u636e\uff0c\u5e76\u5b8c\u6210\u521d\u59cb\u5316\u7684\u51fd\u6570 private int [,] gameBoxStatus = new int [ 3 , 3 ]; //\u7528\u4e8e\u4fdd\u5b58\u68cb\u76d8\u6570\u636e private int gameStatus = 0 ; //\u8bb0\u5f55\u6e38\u620f\u72b6\u6001 private int term = 1 ; //\u8bb0\u5f55\u5f53\u524d\u8f6e\u5230\u54ea\u4e2a\u73a9\u5bb6 void initialGameInfo () { gameStatus = 0 ; term = 1 ; for ( int i = 0 ; i < 3 ; i ++) for ( int j = 0 ; j < 3 ; j ++) gameBoxStatus [ i , j ] = 0 ; } \u5199\u597d\u8fd9\u4e2a\u4e4b\u540e\u5c31\u662fOnGUI\u90e8\u5206\u7684\u5f00\u53d1\u4e86,\u5176\u5b9e\u5173\u952e\u7684\u5c31\u662f\u6839\u636e\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u7528\u4e00\u4e2a\u4e24\u91cd\u5faa\u73af\u6e32\u67d3\u51fa\u68cb\u76d8\uff0cOnGUI\u4ee3\u7801\u5982\u4e0b void OnGUI () { GUIStyle headerStyle = new GUIStyle (); headerStyle . normal . textColor = new Color ( 255 , 255 , 255 ); headerStyle . fontSize = 40 ; GUIStyle gameInfoStyle = new GUIStyle (); gameInfoStyle . normal . textColor = new Color ( 255 , 255 , 255 ); gameInfoStyle . fontSize = 25 ; GUI . Label ( new Rect ( 300 , 60 , 200 , 100 ), \"Simple Chess Game\" , headerStyle ); /** * gameStatus == 0, \u4ee3\u8868\u6e38\u620f\u72b6\u6001\u4e3a\u9009\u62e9\u8c01\u5148\u4e0b\u7684\u72b6\u6001\uff0c\u672a\u5f00\u59cb\u6e38\u620f; * gameStatus == 1, \u4ee3\u8868\u6e38\u620f\u5df2\u5f00\u59cb\uff0c\u6e32\u67d3\u51fa\u68cb\u76d8 * gameStatus == 3, \u4ee3\u8868\u6e38\u620f\u5df2\u7ecf\u7ed3\u675f\uff0c\u6e32\u67d3\u51fa\u6e38\u620f\u7ed3\u679c */ if ( gameStatus == 0 ) { GUI . Label ( new Rect ( xpos , ypos , 100 , 50 ), \"Who first?\" , gameInfoStyle ); if ( GUI . Button ( new Rect ( xpos , ypos + 60 , 100 , 50 ), \"O\" )) { term = 1 ; gameStatus = 1 ; } if ( GUI . Button ( new Rect ( xpos , ypos + 120 , 100 , 50 ), \"X\" )) { term = 2 ; gameStatus = 1 ; } } else if ( gameStatus == 1 ) { if ( GUI . Button ( new Rect ( xpos + 25 , ypos + 180 , 100 , 50 ), \"Reset\" )) initialGameInfo (); int result = checkWin (); //\u68c0\u67e5\u662f\u5426\u4ea7\u751f\u6e38\u620f\u7ed3\u679c if ( result == 1 ) { Winner = 1 ; gameStatus = 2 ; } else if ( result == 2 ) { Winner = 2 ; gameStatus = 2 ; } else if ( result == 3 ) { Winner = 0 ; gameStatus = 2 ; } for ( int i = 0 ; i < 3 ; i ++) for ( int j = 0 ; j < 3 ; j ++) { if ( gameBoxStatus [ i , j ] == 1 ) GUI . Button ( new Rect ( xpos + i * 50 , ypos + j * 50 , 50 , 50 ), \"O\" ); if ( gameBoxStatus [ i , j ] == 2 ) GUI . Button ( new Rect ( xpos + i * 50 , ypos + j * 50 , 50 , 50 ), \"X\" ); if ( GUI . Button ( new Rect ( xpos + i * 50 , ypos + j * 50 , 50 , 50 ), \"\" )) { if ( result == 0 ) { gameBoxStatus [ i , j ] = term ; term = ( term == 2 ) ? 1 : 2 ; } } } } else { if ( Winner == 0 ) { GUI . Label ( new Rect ( xpos + 10 , ypos , 100 , 50 ), \"No one wins!\" , gameInfoStyle ); } else if ( Winner == 1 ) { GUI . Label ( new Rect ( xpos + 10 , ypos , 100 , 50 ), \"O wins!\" , gameInfoStyle ); } else { GUI . Label ( new Rect ( xpos + 10 , ypos , 100 , 50 ), \"X wins!\" , gameInfoStyle ); } if ( GUI . Button ( new Rect ( xpos , ypos + 70 , 100 , 50 ), \"Reset\" )) initialGameInfo (); } } \u5728\u5b8c\u6210\u4e86OnGUI\u4ee5\u53ca\u521d\u59cb\u5316\u51fd\u6570\u540e\uff0c\u5c31\u5269\u4e0bCheckWin\u51fd\u6570\u4e86\uff0c\u5176\u5b9e\u4e5f\u6bd4\u8f83\u7b80\u5355\u5177\u4f53\u4ee3\u7801\u5982\u4e0b,\u5c31\u662f\u5faa\u73af\u5404\u4e2a\u7ed3\u679c\u770b\u6709\u6ca1\u6ee1\u8db3\u80dc\u5229\u6761\u4ef6\uff0c\u4ee5\u53ca\u5224\u65ad\u5f53\u524d\u662f\u5426\u5e73\u5c40\uff0c\u8fd4\u56de\u6e38\u620f\u7ed3\u679c(0:\u6e38\u620f\u672a\u7ed3\u675f\uff0c1:\u80dc\u8005\u4e3a1(O), 2: \u80dc\u8005\u4e3a2(X)) int checkWin () { for ( int i = 0 ; i < 3 ; i ++) { if ( gameBoxStatus [ 0 , i ] != 0 && gameBoxStatus [ 0 , i ] == gameBoxStatus [ 1 , i ] && gameBoxStatus [ 1 , i ] == gameBoxStatus [ 2 , i ]) return gameBoxStatus [ 0 , i ]; if ( gameBoxStatus [ i , 0 ] != 0 && gameBoxStatus [ i , 0 ] == gameBoxStatus [ i , 1 ] && gameBoxStatus [ i , 1 ] == gameBoxStatus [ i , 2 ]) return gameBoxStatus [ i , 0 ]; } if (( gameBoxStatus [ 1 , 1 ] != 0 && gameBoxStatus [ 0 , 0 ] == gameBoxStatus [ 1 , 1 ] && gameBoxStatus [ 1 , 1 ] == gameBoxStatus [ 2 , 2 ]) || ( gameBoxStatus [ 0 , 2 ] == gameBoxStatus [ 1 , 1 ] && gameBoxStatus [ 1 , 1 ] == gameBoxStatus [ 2 , 0 ])) return gameBoxStatus [ 1 , 1 ]; bool flag = true ; for ( int i = 0 ; i < 3 ; i ++) for ( int j = 0 ; j < 3 ; j ++) { if ( gameBoxStatus [ i , j ] == 0 ) { flag = false ; } } return ( flag ) ? 3 : 0 ; } V2\u7248\u672c\u4e2d\u65b0\u52a0\u5165\u4e86\u8ba1\u5206\u7684\u529f\u80fd\uff0c\u5b9e\u73b0\u90e8\u5206\u4e5f\u5341\u5206\u7b80\u6613\uff0c\u5728\u672c\u7c7b\u4e2d\u6dfb\u52a0Oscore, Xscore\u53d8\u91cf\uff0c\u7136\u540e\u901a\u8fc7\u5bf9\u8fd9\u4e24\u4e2a\u53d8\u91cf\u7684\u7ef4\u62a4\u5373\u53ef\u5b8c\u6210\u8be5\u529f\u80fd\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cOnGUI\u662f\u6bcf\u4e00\u5e27\u5237\u65b0\u7684\uff0c\u6240\u4ee5\u51b3\u51fa\u80dc\u8005\u4e4b\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u4fdd\u8bc1\u589e\u52a0score\u7684\u4ee3\u7801\u53ea\u88ab\u6267\u884c\u4e00\u6b21\u3002\u4ee3\u7801\u5c31\u4e0d\u518d\u5728\u8fd9\u91cc\u8d58\u8ff0\u4e86\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u901a\u8fc7\u6211\u7684github\u67e5\u770b\u5b8c\u6574\u7684\u4ee3\u7801\uff0c\u4f20\u9001\u95e8\u5c31\u5728\u9875\u5c3e\ud83d\ude43 \u5230\u8fd9\u91cc\u6574\u4e2a\u6e38\u620f\u5c31\u5b8c\u6210\u4e86\uff0c\u6e38\u620f\u7684\u6574\u4e2a\u4ee3\u7801\u6211\u5c31\u4e0d\u5728\u8fd9\u91cc\u8d34\u51fa\u6765\u4e86\uff0c\u8bbf\u95ee\u6211\u7684Github\u5c31\u53ef\u4ee5\u770b\u5230\u4ee3\u7801\u4ee5\u53ca\u6f14\u793a\u89c6\u9891\u4e86,\u4e0b\u9762\u662f\u94fe\u63a5: github@zhongwq/Unity3D-Learning/week1","title":"\u5b66\u4e60\u7b14\u8bb01-GUI\u4e95\u5b57\u68cb"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb01-GUI\u4e95\u5b57\u68cb/#1-gui","text":"","title":"\u5b66\u4e60\u7b14\u8bb01-GUI\u4e95\u5b57\u68cb"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb01-GUI\u4e95\u5b57\u68cb/#1","text":"\u89e3\u91ca \u6e38\u620f\u5bf9\u8c61\uff08GameObjects\uff09 \u548c \u8d44\u6e90\uff08Assets\uff09\u7684\u533a\u522b\u4e0e\u8054\u7cfb\u3002 \u8d44\u6e90(Assets)\u662f\u5305\u542b\u5728\u6e38\u620f\u6587\u4ef6\u4e2d\uff0c\u4e3a\u6e38\u620f\u5bf9\u8c61\u6240\u4f7f\u7528\u7684\uff0c\u4e00\u4e2a\u8d44\u6e90\u53ef\u4ee5\u88ab\u4e00\u4e2a\u6216\u591a\u4e2a\u5bf9\u8c61\u4f7f\u7528\u3002\u800c\u5bf9\u8c61\u51fa\u73b0\u5728\u6e38\u620f\u573a\u666f(Scene)\u4e2d\uff0c\u662fComponents\u3001\u8d44\u6e90\u6574\u5408\u5728\u4e00\u8d77\u7684\u7ed3\u679c\u3002 \u4e0b\u8f7d\u51e0\u4e2a\u6e38\u620f\u6848\u4f8b\uff0c\u5206\u522b\u603b\u7ed3\u8d44\u6e90\u3001\u5bf9\u8c61\u7ec4\u7ec7\u7684\u7ed3\u6784 \u5206\u6790\u4e0b\u8f7d\u7684\u6e38\u620f\u6848\u4f8b 1.\u8d44\u6e90\u6587\u4ef6\u5939\u901a\u5e38\u6709\u5bf9\u8c61\u3001\u6750\u8d28\u3001\u573a\u666f\u3001\u58f0\u97f3\u3001\u9884\u8bbe\u3001\u8d34\u56fe\u3001\u811a\u672c\u3001\u52a8\u4f5c\uff0c\u5728\u8fd9\u4e9b\u6587\u4ef6\u5939\u4e0b\u53ef\u4ee5\u7ee7\u7eed\u5212\u5206\u3002 2.\u5bf9\u8c61\u4e2d\u4e00\u822c\u6709\u73a9\u5bb6\u3001\u654c\u4eba\u3001\u73af\u5883\u3001\u6444\u50cf\u673a\u548c\u97f3\u4e50\u7b49\u865a\u62df\u7236\u7c7b\uff0c\u8fd9\u4e9b\u7236\u7c7b\u672c\u8eab\u6ca1\u6709\u5b9e\u4f53\uff0c\u4f46\u4ed6\u4eec\u7684\u5b50\u7c7b\u5305\u542b\u4e86\u6e38\u620f\u4e2d\u4f1a\u51fa\u73b0\u7684\u5bf9\u8c61\u3002 \u7f16\u5199\u4e00\u4e2a\u4ee3\u7801\uff0c\u4f7f\u7528 debug \u8bed\u53e5\u6765\u9a8c\u8bc1 MonoBehaviour \u57fa\u672c\u884c\u4e3a\u6216\u4e8b\u4ef6\u89e6\u53d1\u7684\u6761\u4ef6 \u57fa\u672c\u884c\u4e3a\u5305\u62ec Awake() Start() Update() FixedUpdate() LateUpdate() \u5e38\u7528\u4e8b\u4ef6\u5305\u62ec OnGUI() OnDisable() OnEnable() public class testBasicBehaviour : MonoBehaviour { void Awake () { Debug . Log ( \"onAwake\" ); } void Start () { Debug . Log ( \"onStart\" ); } void Update () { Debug . Log ( \"onUpdate\" ); } void FixedUpdate () { Debug . Log ( \"onFixedUpdate\" ); } void LateUpdate () { Debug . Log ( \"onLateUpdate\" ); } void OnGUI () { Debug . Log ( \"onGUI\" ); } void Reset () { Debug . Log ( \"onReset\" ); } void OnDisable () { Debug . Log ( \"onDisable\" ); } void OnDestroy () { Debug . Log ( \"onDestroy\" ); } } \u67e5\u627e\u811a\u672c\u624b\u518c\uff0c\u4e86\u89e3 GameObject\uff0cTransform\uff0cComponent \u5bf9\u8c61 \u5206\u522b\u7ffb\u8bd1\u5b98\u65b9\u5bf9\u4e09\u4e2a\u5bf9\u8c61\u7684\u63cf\u8ff0\uff08Description\uff09 \u6e38\u620f\u5bf9\u8c61\u5728Unity\u4e2d\u662f\u4ee3\u8868\u7740\u6e38\u620f\u7269\u4ef6\u3001\u9053\u5177\u4ee5\u53ca\u6e38\u620f\u573a\u666f\u7684\u57fa\u672c\u5bf9\u8c61\u3002\u5b83\u4eec\u672c\u8eab\u6ca1\u6709\u5b8c\u6210\u592a\u591a\u5185\u5bb9\uff0c\u4f46\u5b83\u4eec\u5145\u5f53\u7740\u7ec4\u4ef6\u7684\u5bb9\u5668\uff0c\u8ba9\u5f00\u53d1\u8005\u5b9e\u73b0\u771f\u6b63\u7684\u529f\u80fd\u3002 Transform\u5c5e\u6027\u5b9a\u4e49\u4e86\u7ec4\u4ef6\u7684\u4f4d\u7f6e\uff0c\u65cb\u8f6c\u89d2\u5ea6\uff0c\u5404\u4e2a\u65b9\u5411\u7684\u5927\u5c0f\u6bd4\u4f8b\uff08\u7f29\u653e\uff09\u3002\u6bcf\u4e00\u4e2a\u6e38\u620f\u5bf9\u8c61(GameObject)\u90fd\u6709\u7740\u4e00\u4e2aTransform\u3002 \u7ec4\u4ef6\u662f\u6e38\u620f\u4e2d\u7269\u4f53\u548c\u884c\u4e3a\u7684\u87ba\u6bcd\u548c\u87ba\u6813, \u5b83\u4eec\u662f\u6bcf\u4e2a\u6e38\u620f\u5bf9\u8c61\u7684\u529f\u80fd\u5757\u3002\u4e00\u4e2a\u6e38\u620f\u5bf9\u8c61\u662f\u8bb8\u591a\u4e0d\u540c\u7684\u7ec4\u4ef6\u7684\u5bb9\u5668\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u7684\u6e38\u620f\u5bf9\u8c61\u81ea\u52a8\u62e5\u6709Transform\u7ec4\u4ef6\u3002\u8fd9\u662f\u56e0\u4e3aTransform\u7ec4\u4ef6\u51b3\u5b9a\u4e86\u6e38\u620f\u5bf9\u8c61\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u65cb\u8f6c\u548c\u7f29\u653e\u3002\u6ca1\u6709Transform\u7ec4\u4ef6\u7684\u6e38\u620f\u5bf9\u8c61\uff0c\u4e0d\u4f1a\u5728World\u4e2d\u5b58\u5728\u3002 \u63cf\u8ff0\u4e0b\u56fe\u4e2d table \u5bf9\u8c61\uff08\u5b9e\u4f53\uff09\u7684\u5c5e\u6027\u3001table \u7684 Transform \u7684\u5c5e\u6027\u3001 table \u7684 \u90e8\u4ef6 \u8be5table\u5bf9\u8c61\u7684\u5c5e\u6027\uff08component\uff09\u6709\u5982\u4e0b: > 1. Transform\u63cf\u8ff0\u4e86table\u5bf9\u8c61\u7684\u4f4d\u7f6e\uff0c\u65cb\u8f6c\u89d2\u5ea6\uff0c\u7f29\u653e, \u56fe\u4e2d\u7684\u5c5e\u6027\u4e3a,\u4f4d\u7f6e(0,0,0), \u65cb\u8f6c(0,0,0),\u6bd4\u4f8b\u4e3a(100%, 100%, 100%); Mesh Filter\u7f51\u683c\u8fc7\u6ee4\u5668\u63cf\u8ff0\u4e86\u51e0\u4f55\u4f53\u7684\u5f62\u72b6,\u56fe\u4e2dtable\u4e3aCube\uff08\u7acb\u65b9\u4f53\uff09 Box Colider\u5219\u63cf\u8ff0\u4e86\u7269\u4f53\u7684\u78b0\u649e\u8303\u56f4\uff0c\u56fe\u4e2d\u7684\u78b0\u649e\u8303\u56f4\u4e3a\u4ee5(0,0,0),(1,0,0),(0,1,0),(1,1,0),(0,0,1),(1,0,1),(0,1,1),(1,1,1)\u4e3a\u9876\u70b9\u7684\u4e00\u4e2a\u6b63\u65b9\u4f53 Mesh Renderer\u7f51\u683c\u6e32\u67d3\u5668\u5219\u4ece\u7f51\u683c\u8fc7\u6ee4\u5668\u4e2d\u83b7\u5f97\u51e0\u4f55\u4f53\u7684\u5f62\u72b6\u7136\u540e\u6839\u636e\u8981\u6c42\u8fdb\u884c\u6e32\u67d3\u3002\u56fe\u4e2d\u7684\u5c5e\u6027\u4e3a Cast Shadows(\u6295\u5c04\u9634\u5f71\u65b9\u5f0f)\u5f00\u542f,\u63a5\u53d7\u9634\u5f71 Motion Vectors\uff08\u8fd0\u52a8\u5411\u91cf\u751f\u6210\u65b9\u5f0f\uff09\u4e3aPerObject Motion\uff08\u4f1a\u6e32\u67d3\u51fa\u4e00\u4e2a\u201c\u6bcf\u4e2a\u5bf9\u8c61\u201d\u8fd0\u52a8\u5411\u91cf\u901a\u9053\uff09\uff0c\u6750\u8d28\u4e3a\u9ed8\u8ba4\u6750\u8d28\uff0cLight Probes\uff08\u5149\u63a2\u5934\u63d2\u503c\u65b9\u5f0f\uff09\u4ee5\u53caReflection Probes\uff08\u53cd\u5c04\u63a2\u5934\u90fd\u4e3a\u6df7\u5408\uff09\uff0cAnchor Override\u4e3a\u5f53\u4f7f\u7528\u5149\u63a2\u5934\u6216\u53cd\u5c04\u63a2\u5934\u7cfb\u7edf\u65f6\uff0c\u7528\u6765\u51b3\u5b9a\u63d2\u503c\u4f4d\u7f6e\u7684Transform\uff0c\u56fe\u4e2d\u672a\u5b9a\u4e49\u8be5Transform\u3002 \u7528 UML \u56fe\u63cf\u8ff0 \u4e09\u8005\u7684\u5173\u7cfb\uff08\u8bf7\u4f7f\u7528 UMLet 14.1.1 stand-alone\u7248\u672c\u51fa\u56fe\uff09 \u6574\u7406\u76f8\u5173\u5b66\u4e60\u8d44\u6599\uff0c\u7f16\u5199\u7b80\u5355\u4ee3\u7801\u9a8c\u8bc1\u4ee5\u4e0b\u6280\u672f\u7684\u5b9e\u73b0\uff1a(\u67e5\u627e\u5bf9\u8c61\u3001\u6dfb\u52a0\u5b50\u5bf9\u8c61\u3001\u904d\u5386\u5bf9\u8c61\u6811\u3001\u6e05\u9664\u6240\u6709\u5b50\u5bf9\u8c61) //\u67e5\u627e\u5bf9\u8c61 public static GameObject Find ( string name ) //\u901a\u8fc7\u540d\u5b57\u67e5\u627e public static GameObject FindWithTag ( string tag ) //\u901a\u8fc7\u6807\u7b7e\u67e5\u627e\u5355\u4e2a\u5bf9\u8c61 public static GameObject [] FindGameObjectsWithTag ( string tag ) //\u901a\u8fc7\u6807\u7b7e\u67e5\u627e\u591a\u4e2a\u5bf9\u8c61 //\u6dfb\u52a0\u5b50\u5bf9\u8c61 public static GameObect CreatePrimitive ( PrimitiveTypetype ) //\u904d\u5386\u5bf9\u8c61\u6811 foreach ( Transform child in transform ) { Debug . Log ( child . gameObject . name ); } //\u6e05\u9664\u6240\u6709\u5b50\u5bf9\u8c61 foreach ( Transform child in transform ) { Destroy ( child . gameObject ); } \u9884\u8bbe\uff08Prefabs\uff09\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u4e0e\u5bf9\u8c61\u514b\u9686 (clone or copy or Instantiate of Unity Object) \u5173\u7cfb\uff1f Unity\u901a\u8fc7\u9884\u8bbe\uff08Prefabs\uff09\u5b8c\u6574\u5730\u50a8\u5b58\u4e86\u5bf9\u8c61\u7684\u7ec4\u4ef6\u3001\u5c5e\u6027\u7b49\u5185\u5bb9\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u521b\u5efa\u5177\u6709\u76f8\u540c\u5c5e\u6027\u7684\u5bf9\u8c61,\u65b9\u4fbf\u4e86\u5bf9\u8c61\u7684\u590d\u7528\u3002\u5bf9\u8c61\u514b\u9686\u4e0e\u9884\u8bbe\u4e0d\u540c\u7684\u5730\u65b9\u5c31\u5728\u4e8e\uff0c\u9884\u8bbe\u4e0e\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u662f\u4e00\u81f4\u7684\uff0c\u9884\u8bbe\u53d1\u751f\u53d8\u5316\uff0c\u6240\u6709\u901a\u8fc7\u5176\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u90fd\u4f1a\u4ea7\u751f\u53d8\u5316\uff0c\u800c\u5bf9\u8c61\u514b\u9686\u672c\u4f53\u548c\u514b\u9686\u51fa\u7684\u5bf9\u8c61\u4e0d\u540c\uff0c\u5176\u4e0d\u53d7\u672c\u4f53\u6539\u53d8\u5f71\u54cd\u3002 \u5c1d\u8bd5\u89e3\u91ca\u7ec4\u5408\u6a21\u5f0f\uff08Composite Pattern / \u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff09\u3002\u4f7f\u7528 BroadcastMessage() \u65b9\u6cd5 \u5411\u5b50\u5bf9\u8c61\u53d1\u9001\u6d88\u606f \u7ec4\u5408\u6a21\u5f0f\u5141\u8bb8\u7528\u6237\u5c06\u5bf9\u8c61\u7ec4\u5408\u6210\u6811\u5f62\u7ed3\u6784\u6765\u8868\u73b0\u201d\u90e8\u5206-\u6574\u4f53\u201c\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u4f7f\u5f97\u5ba2\u6237\u4ee5\u4e00\u81f4\u7684\u65b9\u5f0f\u5904\u7406\u5355\u4e2a\u5bf9\u8c61\u4ee5\u53ca\u5bf9\u8c61\u7684\u7ec4\u5408\u3002\u7ec4\u5408\u6a21\u5f0f\u5b9e\u73b0\u7684\u6700\u5173\u952e\u7684\u5730\u65b9\u662f\u2014\u2014\u7b80\u5355\u5bf9\u8c61\u548c\u590d\u5408\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u76f8\u540c\u7684\u63a5\u53e3\u3002\u8fd9\u5c31\u662f\u7ec4\u5408\u6a21\u5f0f\u80fd\u591f\u5c06\u7ec4\u5408\u5bf9\u8c61\u548c\u7b80\u5355\u5bf9\u8c61\u8fdb\u884c\u4e00\u81f4\u5904\u7406\u7684\u539f\u56e0\u3002 //\u7236\u5bf9\u8c61 public class child : MonoBehaviour { void Start () { this . BroadcastMessage ( \"getMessage\" , \"test\" ); } void getMessage ( string msg ) { Debug . Log ( \"Get msg: \" + msg ); } } //\u5b50\u5bf9\u8c61 public class child : MonoBehaviour { void getMessage ( string msg ) { Debug . Log ( \"Get msg: \" + msg ); } }","title":"1. \u7b80\u7b54\u9898"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb01-GUI\u4e95\u5b57\u68cb/#2","text":"\u5b9e\u8df5\u90e8\u5206\u9009\u62e9\u7684\u6e38\u620f\u5185\u5bb9\u4e3a: \u4e95\u5b57\u68cb \u9996\u5148\uff0c\u6839\u636e\u8001\u5e08\u7684\u53ea\u80fd\u4f7f\u7528IMGUI\u6784\u5efaUI\u7684\u8981\u6c42\uff0c\u5b66\u4e60\u4e86OnGUI\u7684\u7528\u6cd5\uff0c\u5f97\u77e5OnGUI\u5c31\u662f\u4e00\u4e2aUnity\u63d0\u4f9b\u7684\u7528\u4e8e\u7ed8\u5236\u6bcf\u4e00\u5e27\u754c\u9762\u7684\u51fd\u6570\uff0c\u548cUpdate\u4e00\u6837\u5728\u6bcf\u4e00\u5e27\u90fd\u4f1a\u88ab\u8c03\u7528\u3002\u7406\u89e3\u539f\u7406\u4e4b\u540e\u5c31\u5341\u5206\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u597d\u68cb\u76d8\u7684\u72b6\u6001\uff0c\u8bb0\u5f55\u597d\u68cb\u76d8\u7684\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7GUI\u51fd\u6570\u628a\u5f53\u524d\u7684\u68cb\u76d8\u6e32\u67d3\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\uff0c\u7f16\u7a0b\u96be\u5ea6\u5e76\u4e0d\u5927\uff0c\u6240\u4ee5\u9996\u5148\u5728\u7c7b\u4e2d\u5b9a\u4e49\u597d\u9700\u8981\u7528\u5230\u7684\u6570\u636e\uff0c\u5e76\u5b8c\u6210\u521d\u59cb\u5316\u7684\u51fd\u6570 private int [,] gameBoxStatus = new int [ 3 , 3 ]; //\u7528\u4e8e\u4fdd\u5b58\u68cb\u76d8\u6570\u636e private int gameStatus = 0 ; //\u8bb0\u5f55\u6e38\u620f\u72b6\u6001 private int term = 1 ; //\u8bb0\u5f55\u5f53\u524d\u8f6e\u5230\u54ea\u4e2a\u73a9\u5bb6 void initialGameInfo () { gameStatus = 0 ; term = 1 ; for ( int i = 0 ; i < 3 ; i ++) for ( int j = 0 ; j < 3 ; j ++) gameBoxStatus [ i , j ] = 0 ; } \u5199\u597d\u8fd9\u4e2a\u4e4b\u540e\u5c31\u662fOnGUI\u90e8\u5206\u7684\u5f00\u53d1\u4e86,\u5176\u5b9e\u5173\u952e\u7684\u5c31\u662f\u6839\u636e\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u7528\u4e00\u4e2a\u4e24\u91cd\u5faa\u73af\u6e32\u67d3\u51fa\u68cb\u76d8\uff0cOnGUI\u4ee3\u7801\u5982\u4e0b void OnGUI () { GUIStyle headerStyle = new GUIStyle (); headerStyle . normal . textColor = new Color ( 255 , 255 , 255 ); headerStyle . fontSize = 40 ; GUIStyle gameInfoStyle = new GUIStyle (); gameInfoStyle . normal . textColor = new Color ( 255 , 255 , 255 ); gameInfoStyle . fontSize = 25 ; GUI . Label ( new Rect ( 300 , 60 , 200 , 100 ), \"Simple Chess Game\" , headerStyle ); /** * gameStatus == 0, \u4ee3\u8868\u6e38\u620f\u72b6\u6001\u4e3a\u9009\u62e9\u8c01\u5148\u4e0b\u7684\u72b6\u6001\uff0c\u672a\u5f00\u59cb\u6e38\u620f; * gameStatus == 1, \u4ee3\u8868\u6e38\u620f\u5df2\u5f00\u59cb\uff0c\u6e32\u67d3\u51fa\u68cb\u76d8 * gameStatus == 3, \u4ee3\u8868\u6e38\u620f\u5df2\u7ecf\u7ed3\u675f\uff0c\u6e32\u67d3\u51fa\u6e38\u620f\u7ed3\u679c */ if ( gameStatus == 0 ) { GUI . Label ( new Rect ( xpos , ypos , 100 , 50 ), \"Who first?\" , gameInfoStyle ); if ( GUI . Button ( new Rect ( xpos , ypos + 60 , 100 , 50 ), \"O\" )) { term = 1 ; gameStatus = 1 ; } if ( GUI . Button ( new Rect ( xpos , ypos + 120 , 100 , 50 ), \"X\" )) { term = 2 ; gameStatus = 1 ; } } else if ( gameStatus == 1 ) { if ( GUI . Button ( new Rect ( xpos + 25 , ypos + 180 , 100 , 50 ), \"Reset\" )) initialGameInfo (); int result = checkWin (); //\u68c0\u67e5\u662f\u5426\u4ea7\u751f\u6e38\u620f\u7ed3\u679c if ( result == 1 ) { Winner = 1 ; gameStatus = 2 ; } else if ( result == 2 ) { Winner = 2 ; gameStatus = 2 ; } else if ( result == 3 ) { Winner = 0 ; gameStatus = 2 ; } for ( int i = 0 ; i < 3 ; i ++) for ( int j = 0 ; j < 3 ; j ++) { if ( gameBoxStatus [ i , j ] == 1 ) GUI . Button ( new Rect ( xpos + i * 50 , ypos + j * 50 , 50 , 50 ), \"O\" ); if ( gameBoxStatus [ i , j ] == 2 ) GUI . Button ( new Rect ( xpos + i * 50 , ypos + j * 50 , 50 , 50 ), \"X\" ); if ( GUI . Button ( new Rect ( xpos + i * 50 , ypos + j * 50 , 50 , 50 ), \"\" )) { if ( result == 0 ) { gameBoxStatus [ i , j ] = term ; term = ( term == 2 ) ? 1 : 2 ; } } } } else { if ( Winner == 0 ) { GUI . Label ( new Rect ( xpos + 10 , ypos , 100 , 50 ), \"No one wins!\" , gameInfoStyle ); } else if ( Winner == 1 ) { GUI . Label ( new Rect ( xpos + 10 , ypos , 100 , 50 ), \"O wins!\" , gameInfoStyle ); } else { GUI . Label ( new Rect ( xpos + 10 , ypos , 100 , 50 ), \"X wins!\" , gameInfoStyle ); } if ( GUI . Button ( new Rect ( xpos , ypos + 70 , 100 , 50 ), \"Reset\" )) initialGameInfo (); } } \u5728\u5b8c\u6210\u4e86OnGUI\u4ee5\u53ca\u521d\u59cb\u5316\u51fd\u6570\u540e\uff0c\u5c31\u5269\u4e0bCheckWin\u51fd\u6570\u4e86\uff0c\u5176\u5b9e\u4e5f\u6bd4\u8f83\u7b80\u5355\u5177\u4f53\u4ee3\u7801\u5982\u4e0b,\u5c31\u662f\u5faa\u73af\u5404\u4e2a\u7ed3\u679c\u770b\u6709\u6ca1\u6ee1\u8db3\u80dc\u5229\u6761\u4ef6\uff0c\u4ee5\u53ca\u5224\u65ad\u5f53\u524d\u662f\u5426\u5e73\u5c40\uff0c\u8fd4\u56de\u6e38\u620f\u7ed3\u679c(0:\u6e38\u620f\u672a\u7ed3\u675f\uff0c1:\u80dc\u8005\u4e3a1(O), 2: \u80dc\u8005\u4e3a2(X)) int checkWin () { for ( int i = 0 ; i < 3 ; i ++) { if ( gameBoxStatus [ 0 , i ] != 0 && gameBoxStatus [ 0 , i ] == gameBoxStatus [ 1 , i ] && gameBoxStatus [ 1 , i ] == gameBoxStatus [ 2 , i ]) return gameBoxStatus [ 0 , i ]; if ( gameBoxStatus [ i , 0 ] != 0 && gameBoxStatus [ i , 0 ] == gameBoxStatus [ i , 1 ] && gameBoxStatus [ i , 1 ] == gameBoxStatus [ i , 2 ]) return gameBoxStatus [ i , 0 ]; } if (( gameBoxStatus [ 1 , 1 ] != 0 && gameBoxStatus [ 0 , 0 ] == gameBoxStatus [ 1 , 1 ] && gameBoxStatus [ 1 , 1 ] == gameBoxStatus [ 2 , 2 ]) || ( gameBoxStatus [ 0 , 2 ] == gameBoxStatus [ 1 , 1 ] && gameBoxStatus [ 1 , 1 ] == gameBoxStatus [ 2 , 0 ])) return gameBoxStatus [ 1 , 1 ]; bool flag = true ; for ( int i = 0 ; i < 3 ; i ++) for ( int j = 0 ; j < 3 ; j ++) { if ( gameBoxStatus [ i , j ] == 0 ) { flag = false ; } } return ( flag ) ? 3 : 0 ; } V2\u7248\u672c\u4e2d\u65b0\u52a0\u5165\u4e86\u8ba1\u5206\u7684\u529f\u80fd\uff0c\u5b9e\u73b0\u90e8\u5206\u4e5f\u5341\u5206\u7b80\u6613\uff0c\u5728\u672c\u7c7b\u4e2d\u6dfb\u52a0Oscore, Xscore\u53d8\u91cf\uff0c\u7136\u540e\u901a\u8fc7\u5bf9\u8fd9\u4e24\u4e2a\u53d8\u91cf\u7684\u7ef4\u62a4\u5373\u53ef\u5b8c\u6210\u8be5\u529f\u80fd\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cOnGUI\u662f\u6bcf\u4e00\u5e27\u5237\u65b0\u7684\uff0c\u6240\u4ee5\u51b3\u51fa\u80dc\u8005\u4e4b\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u4fdd\u8bc1\u589e\u52a0score\u7684\u4ee3\u7801\u53ea\u88ab\u6267\u884c\u4e00\u6b21\u3002\u4ee3\u7801\u5c31\u4e0d\u518d\u5728\u8fd9\u91cc\u8d58\u8ff0\u4e86\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u901a\u8fc7\u6211\u7684github\u67e5\u770b\u5b8c\u6574\u7684\u4ee3\u7801\uff0c\u4f20\u9001\u95e8\u5c31\u5728\u9875\u5c3e\ud83d\ude43 \u5230\u8fd9\u91cc\u6574\u4e2a\u6e38\u620f\u5c31\u5b8c\u6210\u4e86\uff0c\u6e38\u620f\u7684\u6574\u4e2a\u4ee3\u7801\u6211\u5c31\u4e0d\u5728\u8fd9\u91cc\u8d34\u51fa\u6765\u4e86\uff0c\u8bbf\u95ee\u6211\u7684Github\u5c31\u53ef\u4ee5\u770b\u5230\u4ee3\u7801\u4ee5\u53ca\u6f14\u793a\u89c6\u9891\u4e86,\u4e0b\u9762\u662f\u94fe\u63a5: github@zhongwq/Unity3D-Learning/week1","title":"2.\u7f16\u7a0b\u5b9e\u8df5\uff0c\u5c0f\u6e38\u620f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/","text":"\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f \u6e38\u620f\u8981\u6c42 \u6e38\u620f\u89c4\u5219 \u521b\u5efa\u4e00\u4e2a\u5730\u56fe\u548c\u82e5\u5e72\u5de1\u903b\u5175(\u4f7f\u7528\u52a8\u753b)\uff1b \u6bcf\u4e2a\u5de1\u903b\u5175\u8d70\u4e00\u4e2a3~5\u4e2a\u8fb9\u7684\u51f8\u591a\u8fb9\u578b\uff0c\u4f4d\u7f6e\u6570\u636e\u662f\u76f8\u5bf9\u5730\u5740\u3002\u5373\u6bcf\u6b21\u786e\u5b9a\u4e0b\u4e00\u4e2a\u76ee\u6807\u4f4d\u7f6e\uff0c\u7528\u81ea\u5df1\u5f53\u524d\u4f4d\u7f6e\u4e3a\u539f\u70b9\u8ba1\u7b97\uff1b \u5de1\u903b\u5175\u78b0\u649e\u5230\u969c\u788d\u7269\uff0c\u5219\u4f1a\u81ea\u52a8\u9009\u4e0b\u4e00\u4e2a\u70b9\u4e3a\u76ee\u6807\uff1b \u5de1\u903b\u5175\u5728\u8bbe\u5b9a\u8303\u56f4\u5185\u611f\u77e5\u5230\u73a9\u5bb6\uff0c\u4f1a\u81ea\u52a8\u8ffd\u51fb\u73a9\u5bb6;\u5931\u53bb\u73a9\u5bb6\u76ee\u6807\u540e\uff0c\u7ee7\u7eed\u5de1\u903b\uff1b \u8ba1\u5206\uff1a\u73a9\u5bb6\u6bcf\u6b21\u7529\u6389\u4e00\u4e2a\u5de1\u903b\u5175\u8ba1\u4e00\u5206\uff0c\u4e0e\u5de1\u903b\u5175\u78b0\u649e\u6e38\u620f\u7ed3\u675f\uff1b \u6e38\u620f\u8bbe\u8ba1\u8981\u6c42 \u5fc5\u987b\u4f7f\u7528\u8ba2\u9605\u4e0e\u53d1\u5e03\u6a21\u5f0f\u4f20\u6d88\u606f \u5de5\u5382\u6a21\u5f0f\u751f\u4ea7\u5de1\u903b\u5175 \u6e38\u620f\u6539\u8fdb\u3001\u6548\u679c\u3001\u6f14\u793a\u89c6\u9891 \u6539\u8fdb\u90e8\u5206\u5b9e\u73b0\u4e86\u7528\u6237\u89c6\u89d2\u7684\u53ef\u5207\u6362(\u6309\"space\"\u5207\u6362)\uff0c\u4e14\u4ea4\u4e92\u65b9\u5f0f\u968f\u89c6\u89d2\u53d8\u5316\uff0c\u589e\u5f3a\u4e86\u6e38\u620f\u7684\u4ea4\u4e92\u6027\u3002 \u6f14\u793a\u89c6\u9891 \u5b8c\u6574\u4ee3\u7801 github@zhongwq/Unity3D-Learning/Homework6 \u6e38\u620fUML\u56fe \u6e38\u620f\u5b9e\u73b0 PlayerController PlayerController\u4e3b\u8981\u5b9e\u73b0\u7684\u662f\u7528\u6237\u63a7\u5236\u73a9\u5bb6\uff0c\u4ee5\u53ca\u8c03\u7528\u53d1\u5e03\u8005\u5728\u4e8b\u4ef6\u89e6\u53d1\u65f6\u53d1\u5e03\u6d88\u606f public class PlayerController : MonoBehaviour { public Camera subCamera ; private Animator animator ; private AnimatorStateInfo stateInfo ; private Vector3 velocity ; private int angle ; private float rotateSpeed = 15f ; private float rotateSpeed_Sub = 60f ; private float runSpeed = 3f ; // Use this for initialization void Start () { animator = GetComponent < Animator > (); angle = 1 ; } void OnTriggerEnter ( Collider other ) { // \u8fdb\u5165\u88ab\u76d1\u63a7\u7684Area\u5219\u53d1\u5e03\u4fe1\u606f if ( other . gameObject . CompareTag ( \"Area\" )) { Publisher publish = Publisher . getInstance (); int areaIndex = other . gameObject . name [ other . gameObject . name . Length - 1 ]- '0' ; publish . notify ( ActionType . ENTER , areaIndex , this . gameObject ); } } void OnCollisionEnter ( Collision collision ) { // \u4e0ePatrol\u78b0\u649e\u540e\u53d1\u5e03\u4fe1\u606f if ( collision . gameObject . CompareTag ( \"Patrol\" ) && animator . GetBool ( \"live\" )) { animator . SetBool ( \"live\" , false ); Publisher publish = Publisher . getInstance (); publish . notify ( ActionType . DEAD , 0 , null ); } } // Update is called once per frame void FixedUpdate () { // \u5f53\u7528\u6237\u6309\u4e0b\u7a7a\u683c\uff0c\u6539\u53d8\u6e38\u620f\u89c6\u89d2\uff0c\u901a\u8fc7\u6539\u53d8\u5b50\u6444\u50cf\u5934\u7684\u6df1\u5ea6\u5b9e\u73b0 if ( Input . GetKeyDown ( \"space\" )) { if ( angle == 1 ) { subCamera . depth = - 1 ; angle = 3 ; } else { angle = 1 ; subCamera . depth = - 2 ; } } if (! animator . GetBool ( \"live\" )) return ; float x = Input . GetAxis ( \"Horizontal\" ); float z = Input . GetAxis ( \"Vertical\" ); if ( x == 0 && z == 0 ) { animator . SetBool ( \"Run\" , false ); return ; } else { if ( angle == 1 ) { // \u4fef\u89c6\u89c6\u89d2\u7684\u4ea4\u4e92\u65b9\u5f0f\uff08WSAD\u5206\u522b\u4e3a\u4e0a\u4e0b\u5de6\u53f3\uff09 animator . SetBool ( \"Run\" , true ); velocity = new Vector3 ( x , 0 , z ); if ( x != 0 || z != 0 ) { Quaternion rotation = Quaternion . LookRotation ( velocity ); if ( transform . rotation != rotation ) transform . rotation = Quaternion . Slerp ( transform . rotation , rotation , Time . fixedDeltaTime * rotateSpeed ); } this . transform . position += velocity * Time . fixedDeltaTime * runSpeed ; } else { // \u7b2c\u4e09\u4eba\u79f0\u89c6\u89d2\u7684\u4ea4\u4e92\u65b9\u5f0f(WS\u524d\u8fdb\u3001\u540e\u9000, AD\u5de6\u53f3\u65cb\u8f6c\u65b9\u5411) if ( z != 0 ) animator . SetBool ( \"Run\" , true ); transform . Translate ( 0 , 0 , z * runSpeed * Time . fixedDeltaTime ); transform . Rotate ( 0 , x * rotateSpeed_Sub * Time . fixedDeltaTime , 0 ); } } // \u907f\u514d\u78b0\u649e\u5e26\u6765\u7684\u5f71\u54cd if ( transform . localEulerAngles . x != 0 || transform . localEulerAngles . z != 0 ) { transform . localEulerAngles = new Vector3 ( 0 , transform . localEulerAngles . y , 0 ); } if ( transform . position . y != 0 ) { transform . position = new Vector3 ( transform . position . x , 0 , transform . position . z ); } } } Patrol\u90e8\u5206 PatrolActionManager \u8fd9\u91cc\u4e3b\u8981\u5c31\u662f\u63d0\u4f9b\u7ed9PatrolCrtl\u7684\u52a8\u4f5c\u7ba1\u7406\u5668\uff0c\u65b9\u4fbf\u4e86PatrolCrtl\u5bf9\u4e8ePatrol\u52a8\u4f5c\u7684\u6dfb\u52a0\u3001\u5220\u9664\uff0c\u800c\u6bcf\u6b21\u521b\u5efa\u52a8\u4f5c\u90fd\u4f1a\u8fd4\u56de\u521b\u5efa\u7684\u52a8\u4f5c\u4f5c\u4e3aPatrolCrtl\u7684currentAction\u65b9\u4fbf\u5176\u5bf9\u5176\u8fdb\u884c\u9500\u6bc1,\u65e0\u9700\u518d\u4ea4\u7ed9\u52a8\u4f5c\u7ba1\u7406\u5668\u9500\u6bc1\uff0c\u90a3\u6837\u8fd8\u589e\u52a0\u4e86\u904d\u5386\u7684\u5f00\u9500\u3002 \u5404Action\u7684\u5b9e\u73b0\u5341\u5206\u7b80\u5355\uff0c\u8fd9\u91cc\u4e0d\u591a\u8d58\u8ff0\uff0c\u5b8c\u6574\u4ee3\u7801\u53ef\u89c1Github public class PatrolActionManager : SSActionManager { public IdleAction toIdle ( GameObject obj , Animator animator , ActionCallback callback ) { IdleAction tmp = IdleAction . GetIdleAction ( Random . Range ( 1 , 2 ), animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toLeft ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . left * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toRight ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . right * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toForward ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . forward * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toBack ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . back * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public RunAction getTarget ( GameObject player , GameObject obj , Animator animator , ActionCallback callback ) { RunAction tmp = RunAction . GetRunAction ( player . transform , 2.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public IdleAction Stop ( GameObject obj , Animator animator , ActionCallback callback ) { IdleAction tmp = IdleAction . GetIdleAction (- 1f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } } PatrolCtrl \u8fd9\u4e2a\u7c7b\u4e3b\u8981\u4f5c\u7528\u5c31\u662f\u7ed1\u5728Patrol\u4e0a\uff0c\u63a7\u5236Patrol\u7684\u52a8\u4f5c\uff0c\u5e76\u4f5c\u4e3a\u4e00\u4e2aObserver\u76d1\u542c\u4e8b\u4ef6\uff0c\u6267\u884c\u76f8\u5e94\u52a8\u4f5c\u3002 public class PatrolCtrl : MonoBehaviour , ActionCallback , Observer { public enum ActionStatus : int { IDLE , TOLEFT , TOFORWARD , TORIGHT , TOBACK } private Animator animator ; private SSAction currentAction ; private ActionStatus status ; private PatrolActionManager patrolActionManager ; // Use this for initialization void Start () { animator = this . gameObject . GetComponent < Animator > (); patrolActionManager = Singleton < PatrolActionManager >. Instance ; Publisher publisher = Publisher . getInstance (); publisher . add ( this ); status = ActionStatus . IDLE ; currentAction = patrolActionManager . toIdle ( gameObject , animator , this ); } void FixedUpdate () { if ( transform . localEulerAngles . x != 0 || transform . localEulerAngles . z != 0 ) { transform . localEulerAngles = new Vector3 ( 0 , transform . localEulerAngles . y , 0 ); } if ( transform . position . y != 0 ) { transform . position = new Vector3 ( transform . position . x , 0 , transform . position . z ); } gameObject . GetComponent < Rigidbody >(). velocity = new Vector3 ( 0 , 0 , 0 ); } public void initial () { status = ActionStatus . IDLE ; currentAction = patrolActionManager . toIdle ( gameObject , animator , this ); } public void removeAction () { if ( currentAction ) currentAction . destroy = true ; } // When action done do next action public void actionDone ( SSAction source ) { status = status == ActionStatus . TOBACK ? ActionStatus . TOLEFT : ( ActionStatus )(( int ) status + 1 ); switch ( status ) { case ActionStatus . TOLEFT : currentAction = patrolActionManager . toLeft ( gameObject , animator , this ); break ; case ActionStatus . TORIGHT : currentAction = patrolActionManager . toRight ( gameObject , animator , this ); break ; case ActionStatus . TOFORWARD : currentAction = patrolActionManager . toForward ( gameObject , animator , this ); break ; case ActionStatus . TOBACK : currentAction = patrolActionManager . toBack ( gameObject , animator , this ); break ; } } private void turn () { currentAction . destroy = true ; switch ( status ) { case ActionStatus . TOLEFT : status = ActionStatus . TORIGHT ; currentAction = patrolActionManager . toRight ( gameObject , animator , this ); break ; case ActionStatus . TORIGHT : status = ActionStatus . TOLEFT ; currentAction = patrolActionManager . toLeft ( gameObject , animator , this );; break ; case ActionStatus . TOFORWARD : status = ActionStatus . TOBACK ; currentAction = patrolActionManager . toBack ( gameObject , animator , this ); break ; case ActionStatus . TOBACK : status = ActionStatus . TOFORWARD ; currentAction = patrolActionManager . toForward ( gameObject , animator , this ); break ; } } private void OnCollisionEnter ( Collision collision ) { if ( collision . gameObject . CompareTag ( \"Wall\" )) turn (); } private void OnTriggerEnter ( Collider other ) { if ( other . gameObject . CompareTag ( \"Door\" )) turn (); } public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { if ( position == this . gameObject . name [ this . gameObject . name . Length - 1 ] - '0' ) { currentAction . destroy = true ; currentAction = patrolActionManager . getTarget ( actor , gameObject , animator , this ); } } else { currentAction = patrolActionManager . Stop ( gameObject , animator , this ); } } } \u8ba2\u9605\u4e0e\u53d1\u5e03\u8005\u90e8\u5206 \u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u7684\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b\uff0c\u4f5c\u4e3a\u8ba2\u9605\u8005\u7684\u7c7b\u53ea\u9700\u8981\u7ee7\u627fObserver\u5e76\u5b9e\u73b0\u5176\u4e2d\u7684\u63a5\u53e3\u5373\u53ef\u4f5c\u4e3a\u8ba2\u9605\u8005\u53d1\u6325\u4f5c\u7528\u3002 \u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u8fd9\u79cd\u6a21\u5f0f\u7684\u4e3b\u8981\u4f5c\u7528\u6211\u4e2a\u4eba\u89c9\u5f97\u662f\u65b9\u4fbf\u5b9e\u73b0\u7ec4\u4ef6\u7684\u5206\u79bb\uff0c\u5e76\u5b9e\u73b0\u5206\u79bb\u540e\u7ec4\u4ef6\u7684\u8026\u5408\uff0c\u907f\u514d\u4e86\u591a\u4e2a\u529f\u80fd\u5199\u5728\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u6291\u6216\u662f\u9700\u8981\u624b\u52a8\u7ed1\u5b9a\u591a\u4e2a\u7c7b\u7684\u60c5\u51b5\uff0c\u4f7f\u5f97\u6211\u4eec\u7a0b\u5e8f\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\uff0c\u7a0b\u5e8f\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\u6613\u4e8e\u7406\u89e3 Observer public interface Observer { void notified ( ActionType type , int position , GameObject actor ); } Publisher public enum ActionType { ENTER , EXIT , DEAD } public class Publisher { private delegate void ActionUpdate ( ActionType type , int position , GameObject actor ); private ActionUpdate updateList ; private static Publisher _instance ; public static Publisher getInstance () { if ( _instance == null ) _instance = new Publisher (); return _instance ; } public void notify ( ActionType type , int position , GameObject actor ) { if ( updateList != null ) updateList ( type , position , actor ); } public void add ( Observer observer ) { updateList += observer . notified ; } public void delete ( Observer observer ) { updateList -= observer . notified ; } } \u4f7f\u7528\u53d1\u5e03\u8005\u529f\u80fd\u7684\u4ee3\u7801 void OnTriggerEnter ( Collider other ) { // \u8fdb\u5165\u88ab\u76d1\u63a7\u7684Area\u5219\u53d1\u5e03\u4fe1\u606f if ( other . gameObject . CompareTag ( \"Area\" )) { Publisher publish = Publisher . getInstance (); int areaIndex = other . gameObject . name [ other . gameObject . name . Length - 1 ]- '0' ; publish . notify ( ActionType . ENTER , areaIndex , this . gameObject ); } } void OnTriggerExit ( Collider other ) { // \u9003\u79bb\u65f6\u53d1\u5e03\u4fe1\u606f if ( other . gameObject . CompareTag ( \"Area\" )) { Publisher publish = Publisher . getInstance (); publish . notify ( ActionType . EXIT , - 1 , this . gameObject ); } } void OnCollisionEnter ( Collision collision ) { // \u4e0ePatrol\u78b0\u649e\u540e\u53d1\u5e03\u4fe1\u606f if ( collision . gameObject . CompareTag ( \"Patrol\" ) && animator . GetBool ( \"live\" )) { animator . SetBool ( \"live\" , false ); Publisher publish = Publisher . getInstance (); publish . notify ( ActionType . DEAD , 0 , null ); } } \u4f7f\u7528\u8ba2\u9605\u8005\u529f\u80fd\u7684\u4ee3\u7801 // PatrolCtrl.cs public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { if ( position == this . gameObject . name [ this . gameObject . name . Length - 1 ] - '0' ) { currentAction . destroy = true ; currentAction = patrolActionManager . getTarget ( actor , gameObject , animator , this ); } } else if ( type == ActionType . DEAD ) { currentAction = patrolActionManager . Stop ( gameObject , animator , this ); } } // FirstController.cs public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { scoreRecorder . addScore (); } else if ( type == ActionType . DEAD ) { gameStatus = 1 ; factory . freeAllObj (); } } // ScoreRecorder public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . EXIT ) { addScore (); } } ScoreRecorder \u8fd9\u6b21\u7684\u8ba1\u5206\u5458\u65e0\u987b\u518d\u5728FirstController\u4e2d\u63a7\u5236\uff0c\u5176\u4f5c\u4e3a\u4e00\u4e2a\u89c2\u5bdf\u8005\u53ef\u4ee5\u76d1\u542c\u5f97\u5206\u4e8b\u4ef6\uff0c\u4ece\u800c\u81ea\u5df1\u6539\u53d8\u5f97\u5206 public class ScoreRecorder : Observer { public int score = 0 ; private int status = 0 ; // \u4f7f\u8fdb\u51fa\u914d\u5bf9\uff0c\u907f\u514dReset\u65f6\u52a0\u591a\u4e00\u5206 Text gameInfo ; private static ScoreRecorder instance ; public static ScoreRecorder getInstance () { if ( instance == null ) { instance = new ScoreRecorder (); } return instance ; } private ScoreRecorder () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/ScoreInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text > (); gameInfo . text = \"\" + score ; status = 0 ; Publisher publish = Publisher . getInstance (); publish . add ( this ); } public void addScore () { score += 1 ; gameInfo . text = \"\" + score ; } public int getScore () { return score ; } public void reset () { score = 0 ; status = 0 ; gameInfo . text = \"\" + score ; } public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { status = 1 ; } else if ( type == ActionType . EXIT && status == 1 ) { addScore (); } } } \u5230\u8fd9\u91cc\uff0c\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u57fa\u672c\u5b8c\u6210\u4e86 \u603b\u7ed3 \u901a\u8fc7\u8fd9\u6b21\u4f5c\u4e1a\uff0c\u6211\u4e86\u89e3\u5230\u4e86\u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u6a21\u5f0f\u7684\u4f7f\u7528\uff0c\u5b66\u4f1a\u4e86\u5229\u7528\u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u6a21\u5f0f\u5bf9\u6e38\u620f\u7684\u5404\u4e2a\u90e8\u5206\u8fdb\u884c\"\u89e3\u8026\"\u3002","title":"\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#10-","text":"","title":"\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_1","text":"\u6e38\u620f\u89c4\u5219 \u521b\u5efa\u4e00\u4e2a\u5730\u56fe\u548c\u82e5\u5e72\u5de1\u903b\u5175(\u4f7f\u7528\u52a8\u753b)\uff1b \u6bcf\u4e2a\u5de1\u903b\u5175\u8d70\u4e00\u4e2a3~5\u4e2a\u8fb9\u7684\u51f8\u591a\u8fb9\u578b\uff0c\u4f4d\u7f6e\u6570\u636e\u662f\u76f8\u5bf9\u5730\u5740\u3002\u5373\u6bcf\u6b21\u786e\u5b9a\u4e0b\u4e00\u4e2a\u76ee\u6807\u4f4d\u7f6e\uff0c\u7528\u81ea\u5df1\u5f53\u524d\u4f4d\u7f6e\u4e3a\u539f\u70b9\u8ba1\u7b97\uff1b \u5de1\u903b\u5175\u78b0\u649e\u5230\u969c\u788d\u7269\uff0c\u5219\u4f1a\u81ea\u52a8\u9009\u4e0b\u4e00\u4e2a\u70b9\u4e3a\u76ee\u6807\uff1b \u5de1\u903b\u5175\u5728\u8bbe\u5b9a\u8303\u56f4\u5185\u611f\u77e5\u5230\u73a9\u5bb6\uff0c\u4f1a\u81ea\u52a8\u8ffd\u51fb\u73a9\u5bb6;\u5931\u53bb\u73a9\u5bb6\u76ee\u6807\u540e\uff0c\u7ee7\u7eed\u5de1\u903b\uff1b \u8ba1\u5206\uff1a\u73a9\u5bb6\u6bcf\u6b21\u7529\u6389\u4e00\u4e2a\u5de1\u903b\u5175\u8ba1\u4e00\u5206\uff0c\u4e0e\u5de1\u903b\u5175\u78b0\u649e\u6e38\u620f\u7ed3\u675f\uff1b \u6e38\u620f\u8bbe\u8ba1\u8981\u6c42 \u5fc5\u987b\u4f7f\u7528\u8ba2\u9605\u4e0e\u53d1\u5e03\u6a21\u5f0f\u4f20\u6d88\u606f \u5de5\u5382\u6a21\u5f0f\u751f\u4ea7\u5de1\u903b\u5175","title":"\u6e38\u620f\u8981\u6c42"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_2","text":"\u6539\u8fdb\u90e8\u5206\u5b9e\u73b0\u4e86\u7528\u6237\u89c6\u89d2\u7684\u53ef\u5207\u6362(\u6309\"space\"\u5207\u6362)\uff0c\u4e14\u4ea4\u4e92\u65b9\u5f0f\u968f\u89c6\u89d2\u53d8\u5316\uff0c\u589e\u5f3a\u4e86\u6e38\u620f\u7684\u4ea4\u4e92\u6027\u3002 \u6f14\u793a\u89c6\u9891","title":"\u6e38\u620f\u6539\u8fdb\u3001\u6548\u679c\u3001\u6f14\u793a\u89c6\u9891"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_3","text":"github@zhongwq/Unity3D-Learning/Homework6","title":"\u5b8c\u6574\u4ee3\u7801"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#uml","text":"","title":"\u6e38\u620fUML\u56fe"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_4","text":"","title":"\u6e38\u620f\u5b9e\u73b0"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#playercontroller","text":"PlayerController\u4e3b\u8981\u5b9e\u73b0\u7684\u662f\u7528\u6237\u63a7\u5236\u73a9\u5bb6\uff0c\u4ee5\u53ca\u8c03\u7528\u53d1\u5e03\u8005\u5728\u4e8b\u4ef6\u89e6\u53d1\u65f6\u53d1\u5e03\u6d88\u606f public class PlayerController : MonoBehaviour { public Camera subCamera ; private Animator animator ; private AnimatorStateInfo stateInfo ; private Vector3 velocity ; private int angle ; private float rotateSpeed = 15f ; private float rotateSpeed_Sub = 60f ; private float runSpeed = 3f ; // Use this for initialization void Start () { animator = GetComponent < Animator > (); angle = 1 ; } void OnTriggerEnter ( Collider other ) { // \u8fdb\u5165\u88ab\u76d1\u63a7\u7684Area\u5219\u53d1\u5e03\u4fe1\u606f if ( other . gameObject . CompareTag ( \"Area\" )) { Publisher publish = Publisher . getInstance (); int areaIndex = other . gameObject . name [ other . gameObject . name . Length - 1 ]- '0' ; publish . notify ( ActionType . ENTER , areaIndex , this . gameObject ); } } void OnCollisionEnter ( Collision collision ) { // \u4e0ePatrol\u78b0\u649e\u540e\u53d1\u5e03\u4fe1\u606f if ( collision . gameObject . CompareTag ( \"Patrol\" ) && animator . GetBool ( \"live\" )) { animator . SetBool ( \"live\" , false ); Publisher publish = Publisher . getInstance (); publish . notify ( ActionType . DEAD , 0 , null ); } } // Update is called once per frame void FixedUpdate () { // \u5f53\u7528\u6237\u6309\u4e0b\u7a7a\u683c\uff0c\u6539\u53d8\u6e38\u620f\u89c6\u89d2\uff0c\u901a\u8fc7\u6539\u53d8\u5b50\u6444\u50cf\u5934\u7684\u6df1\u5ea6\u5b9e\u73b0 if ( Input . GetKeyDown ( \"space\" )) { if ( angle == 1 ) { subCamera . depth = - 1 ; angle = 3 ; } else { angle = 1 ; subCamera . depth = - 2 ; } } if (! animator . GetBool ( \"live\" )) return ; float x = Input . GetAxis ( \"Horizontal\" ); float z = Input . GetAxis ( \"Vertical\" ); if ( x == 0 && z == 0 ) { animator . SetBool ( \"Run\" , false ); return ; } else { if ( angle == 1 ) { // \u4fef\u89c6\u89c6\u89d2\u7684\u4ea4\u4e92\u65b9\u5f0f\uff08WSAD\u5206\u522b\u4e3a\u4e0a\u4e0b\u5de6\u53f3\uff09 animator . SetBool ( \"Run\" , true ); velocity = new Vector3 ( x , 0 , z ); if ( x != 0 || z != 0 ) { Quaternion rotation = Quaternion . LookRotation ( velocity ); if ( transform . rotation != rotation ) transform . rotation = Quaternion . Slerp ( transform . rotation , rotation , Time . fixedDeltaTime * rotateSpeed ); } this . transform . position += velocity * Time . fixedDeltaTime * runSpeed ; } else { // \u7b2c\u4e09\u4eba\u79f0\u89c6\u89d2\u7684\u4ea4\u4e92\u65b9\u5f0f(WS\u524d\u8fdb\u3001\u540e\u9000, AD\u5de6\u53f3\u65cb\u8f6c\u65b9\u5411) if ( z != 0 ) animator . SetBool ( \"Run\" , true ); transform . Translate ( 0 , 0 , z * runSpeed * Time . fixedDeltaTime ); transform . Rotate ( 0 , x * rotateSpeed_Sub * Time . fixedDeltaTime , 0 ); } } // \u907f\u514d\u78b0\u649e\u5e26\u6765\u7684\u5f71\u54cd if ( transform . localEulerAngles . x != 0 || transform . localEulerAngles . z != 0 ) { transform . localEulerAngles = new Vector3 ( 0 , transform . localEulerAngles . y , 0 ); } if ( transform . position . y != 0 ) { transform . position = new Vector3 ( transform . position . x , 0 , transform . position . z ); } } }","title":"PlayerController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#patrol","text":"","title":"Patrol\u90e8\u5206"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#patrolactionmanager","text":"\u8fd9\u91cc\u4e3b\u8981\u5c31\u662f\u63d0\u4f9b\u7ed9PatrolCrtl\u7684\u52a8\u4f5c\u7ba1\u7406\u5668\uff0c\u65b9\u4fbf\u4e86PatrolCrtl\u5bf9\u4e8ePatrol\u52a8\u4f5c\u7684\u6dfb\u52a0\u3001\u5220\u9664\uff0c\u800c\u6bcf\u6b21\u521b\u5efa\u52a8\u4f5c\u90fd\u4f1a\u8fd4\u56de\u521b\u5efa\u7684\u52a8\u4f5c\u4f5c\u4e3aPatrolCrtl\u7684currentAction\u65b9\u4fbf\u5176\u5bf9\u5176\u8fdb\u884c\u9500\u6bc1,\u65e0\u9700\u518d\u4ea4\u7ed9\u52a8\u4f5c\u7ba1\u7406\u5668\u9500\u6bc1\uff0c\u90a3\u6837\u8fd8\u589e\u52a0\u4e86\u904d\u5386\u7684\u5f00\u9500\u3002 \u5404Action\u7684\u5b9e\u73b0\u5341\u5206\u7b80\u5355\uff0c\u8fd9\u91cc\u4e0d\u591a\u8d58\u8ff0\uff0c\u5b8c\u6574\u4ee3\u7801\u53ef\u89c1Github public class PatrolActionManager : SSActionManager { public IdleAction toIdle ( GameObject obj , Animator animator , ActionCallback callback ) { IdleAction tmp = IdleAction . GetIdleAction ( Random . Range ( 1 , 2 ), animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toLeft ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . left * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toRight ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . right * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toForward ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . forward * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public WalkAction toBack ( GameObject obj , Animator animator , ActionCallback callback ) { Vector3 target = Vector3 . back * Random . Range ( 2 , 4 ) + obj . transform . position ; WalkAction tmp = WalkAction . GetWalkAction ( target , 1.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public RunAction getTarget ( GameObject player , GameObject obj , Animator animator , ActionCallback callback ) { RunAction tmp = RunAction . GetRunAction ( player . transform , 2.0f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } public IdleAction Stop ( GameObject obj , Animator animator , ActionCallback callback ) { IdleAction tmp = IdleAction . GetIdleAction (- 1f , animator ); this . addAction ( obj , tmp , callback ); return tmp ; } }","title":"PatrolActionManager"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#patrolctrl","text":"\u8fd9\u4e2a\u7c7b\u4e3b\u8981\u4f5c\u7528\u5c31\u662f\u7ed1\u5728Patrol\u4e0a\uff0c\u63a7\u5236Patrol\u7684\u52a8\u4f5c\uff0c\u5e76\u4f5c\u4e3a\u4e00\u4e2aObserver\u76d1\u542c\u4e8b\u4ef6\uff0c\u6267\u884c\u76f8\u5e94\u52a8\u4f5c\u3002 public class PatrolCtrl : MonoBehaviour , ActionCallback , Observer { public enum ActionStatus : int { IDLE , TOLEFT , TOFORWARD , TORIGHT , TOBACK } private Animator animator ; private SSAction currentAction ; private ActionStatus status ; private PatrolActionManager patrolActionManager ; // Use this for initialization void Start () { animator = this . gameObject . GetComponent < Animator > (); patrolActionManager = Singleton < PatrolActionManager >. Instance ; Publisher publisher = Publisher . getInstance (); publisher . add ( this ); status = ActionStatus . IDLE ; currentAction = patrolActionManager . toIdle ( gameObject , animator , this ); } void FixedUpdate () { if ( transform . localEulerAngles . x != 0 || transform . localEulerAngles . z != 0 ) { transform . localEulerAngles = new Vector3 ( 0 , transform . localEulerAngles . y , 0 ); } if ( transform . position . y != 0 ) { transform . position = new Vector3 ( transform . position . x , 0 , transform . position . z ); } gameObject . GetComponent < Rigidbody >(). velocity = new Vector3 ( 0 , 0 , 0 ); } public void initial () { status = ActionStatus . IDLE ; currentAction = patrolActionManager . toIdle ( gameObject , animator , this ); } public void removeAction () { if ( currentAction ) currentAction . destroy = true ; } // When action done do next action public void actionDone ( SSAction source ) { status = status == ActionStatus . TOBACK ? ActionStatus . TOLEFT : ( ActionStatus )(( int ) status + 1 ); switch ( status ) { case ActionStatus . TOLEFT : currentAction = patrolActionManager . toLeft ( gameObject , animator , this ); break ; case ActionStatus . TORIGHT : currentAction = patrolActionManager . toRight ( gameObject , animator , this ); break ; case ActionStatus . TOFORWARD : currentAction = patrolActionManager . toForward ( gameObject , animator , this ); break ; case ActionStatus . TOBACK : currentAction = patrolActionManager . toBack ( gameObject , animator , this ); break ; } } private void turn () { currentAction . destroy = true ; switch ( status ) { case ActionStatus . TOLEFT : status = ActionStatus . TORIGHT ; currentAction = patrolActionManager . toRight ( gameObject , animator , this ); break ; case ActionStatus . TORIGHT : status = ActionStatus . TOLEFT ; currentAction = patrolActionManager . toLeft ( gameObject , animator , this );; break ; case ActionStatus . TOFORWARD : status = ActionStatus . TOBACK ; currentAction = patrolActionManager . toBack ( gameObject , animator , this ); break ; case ActionStatus . TOBACK : status = ActionStatus . TOFORWARD ; currentAction = patrolActionManager . toForward ( gameObject , animator , this ); break ; } } private void OnCollisionEnter ( Collision collision ) { if ( collision . gameObject . CompareTag ( \"Wall\" )) turn (); } private void OnTriggerEnter ( Collider other ) { if ( other . gameObject . CompareTag ( \"Door\" )) turn (); } public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { if ( position == this . gameObject . name [ this . gameObject . name . Length - 1 ] - '0' ) { currentAction . destroy = true ; currentAction = patrolActionManager . getTarget ( actor , gameObject , animator , this ); } } else { currentAction = patrolActionManager . Stop ( gameObject , animator , this ); } } }","title":"PatrolCtrl"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_5","text":"\u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u7684\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b\uff0c\u4f5c\u4e3a\u8ba2\u9605\u8005\u7684\u7c7b\u53ea\u9700\u8981\u7ee7\u627fObserver\u5e76\u5b9e\u73b0\u5176\u4e2d\u7684\u63a5\u53e3\u5373\u53ef\u4f5c\u4e3a\u8ba2\u9605\u8005\u53d1\u6325\u4f5c\u7528\u3002 \u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u8fd9\u79cd\u6a21\u5f0f\u7684\u4e3b\u8981\u4f5c\u7528\u6211\u4e2a\u4eba\u89c9\u5f97\u662f\u65b9\u4fbf\u5b9e\u73b0\u7ec4\u4ef6\u7684\u5206\u79bb\uff0c\u5e76\u5b9e\u73b0\u5206\u79bb\u540e\u7ec4\u4ef6\u7684\u8026\u5408\uff0c\u907f\u514d\u4e86\u591a\u4e2a\u529f\u80fd\u5199\u5728\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u6291\u6216\u662f\u9700\u8981\u624b\u52a8\u7ed1\u5b9a\u591a\u4e2a\u7c7b\u7684\u60c5\u51b5\uff0c\u4f7f\u5f97\u6211\u4eec\u7a0b\u5e8f\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\uff0c\u7a0b\u5e8f\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\u6613\u4e8e\u7406\u89e3","title":"\u8ba2\u9605\u4e0e\u53d1\u5e03\u8005\u90e8\u5206"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#observer","text":"public interface Observer { void notified ( ActionType type , int position , GameObject actor ); }","title":"Observer"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#publisher","text":"public enum ActionType { ENTER , EXIT , DEAD } public class Publisher { private delegate void ActionUpdate ( ActionType type , int position , GameObject actor ); private ActionUpdate updateList ; private static Publisher _instance ; public static Publisher getInstance () { if ( _instance == null ) _instance = new Publisher (); return _instance ; } public void notify ( ActionType type , int position , GameObject actor ) { if ( updateList != null ) updateList ( type , position , actor ); } public void add ( Observer observer ) { updateList += observer . notified ; } public void delete ( Observer observer ) { updateList -= observer . notified ; } }","title":"Publisher"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_6","text":"void OnTriggerEnter ( Collider other ) { // \u8fdb\u5165\u88ab\u76d1\u63a7\u7684Area\u5219\u53d1\u5e03\u4fe1\u606f if ( other . gameObject . CompareTag ( \"Area\" )) { Publisher publish = Publisher . getInstance (); int areaIndex = other . gameObject . name [ other . gameObject . name . Length - 1 ]- '0' ; publish . notify ( ActionType . ENTER , areaIndex , this . gameObject ); } } void OnTriggerExit ( Collider other ) { // \u9003\u79bb\u65f6\u53d1\u5e03\u4fe1\u606f if ( other . gameObject . CompareTag ( \"Area\" )) { Publisher publish = Publisher . getInstance (); publish . notify ( ActionType . EXIT , - 1 , this . gameObject ); } } void OnCollisionEnter ( Collision collision ) { // \u4e0ePatrol\u78b0\u649e\u540e\u53d1\u5e03\u4fe1\u606f if ( collision . gameObject . CompareTag ( \"Patrol\" ) && animator . GetBool ( \"live\" )) { animator . SetBool ( \"live\" , false ); Publisher publish = Publisher . getInstance (); publish . notify ( ActionType . DEAD , 0 , null ); } }","title":"\u4f7f\u7528\u53d1\u5e03\u8005\u529f\u80fd\u7684\u4ee3\u7801"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_7","text":"// PatrolCtrl.cs public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { if ( position == this . gameObject . name [ this . gameObject . name . Length - 1 ] - '0' ) { currentAction . destroy = true ; currentAction = patrolActionManager . getTarget ( actor , gameObject , animator , this ); } } else if ( type == ActionType . DEAD ) { currentAction = patrolActionManager . Stop ( gameObject , animator , this ); } } // FirstController.cs public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { scoreRecorder . addScore (); } else if ( type == ActionType . DEAD ) { gameStatus = 1 ; factory . freeAllObj (); } } // ScoreRecorder public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . EXIT ) { addScore (); } }","title":"\u4f7f\u7528\u8ba2\u9605\u8005\u529f\u80fd\u7684\u4ee3\u7801"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#scorerecorder","text":"\u8fd9\u6b21\u7684\u8ba1\u5206\u5458\u65e0\u987b\u518d\u5728FirstController\u4e2d\u63a7\u5236\uff0c\u5176\u4f5c\u4e3a\u4e00\u4e2a\u89c2\u5bdf\u8005\u53ef\u4ee5\u76d1\u542c\u5f97\u5206\u4e8b\u4ef6\uff0c\u4ece\u800c\u81ea\u5df1\u6539\u53d8\u5f97\u5206 public class ScoreRecorder : Observer { public int score = 0 ; private int status = 0 ; // \u4f7f\u8fdb\u51fa\u914d\u5bf9\uff0c\u907f\u514dReset\u65f6\u52a0\u591a\u4e00\u5206 Text gameInfo ; private static ScoreRecorder instance ; public static ScoreRecorder getInstance () { if ( instance == null ) { instance = new ScoreRecorder (); } return instance ; } private ScoreRecorder () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/ScoreInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text > (); gameInfo . text = \"\" + score ; status = 0 ; Publisher publish = Publisher . getInstance (); publish . add ( this ); } public void addScore () { score += 1 ; gameInfo . text = \"\" + score ; } public int getScore () { return score ; } public void reset () { score = 0 ; status = 0 ; gameInfo . text = \"\" + score ; } public void notified ( ActionType type , int position , GameObject actor ) { if ( type == ActionType . ENTER ) { status = 1 ; } else if ( type == ActionType . EXIT && status == 1 ) { addScore (); } } } \u5230\u8fd9\u91cc\uff0c\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u57fa\u672c\u5b8c\u6210\u4e86","title":"ScoreRecorder"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb010-\u7b80\u5355\u5de1\u903b\u5175\u5c0f\u6e38\u620f/#_8","text":"\u901a\u8fc7\u8fd9\u6b21\u4f5c\u4e1a\uff0c\u6211\u4e86\u89e3\u5230\u4e86\u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u6a21\u5f0f\u7684\u4f7f\u7528\uff0c\u5b66\u4f1a\u4e86\u5229\u7528\u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u6a21\u5f0f\u5bf9\u6e38\u620f\u7684\u5404\u4e2a\u90e8\u5206\u8fdb\u884c\"\u89e3\u8026\"\u3002","title":"\u603b\u7ed3"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/","text":"\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c \u8981\u6c42 \u53c2\u8003 http://i-remember.fr/en \u8fd9\u7c7b\u7f51\u7ad9\uff0c\u4f7f\u7528\u7c92\u5b50\u6d41\u7f16\u7a0b\u63a7\u5236\u5236\u4f5c\u4e00\u4e9b\u6548\u679c\uff0c \u5982\u201c\u7c92\u5b50\u5149\u73af\u201d \u5b9e\u73b0\u6548\u679c \u6f14\u793a\u89c6\u9891 \u5b9e\u73b0\u8fc7\u7a0b \u8bbe\u8ba1\u601d\u8def \u4ed4\u7ec6\u89c2\u5bdfI Remember\u7684\u7c92\u5b50\u5149\u73af\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5176\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5206\u6210\u8f83\u5bc6\u96c6\u7684\u4e00\u90e8\u5206\u4ee5\u53ca\u8f83\u4e3a\u7a00\u758f\u7684\u4e00\u90e8\u5206\uff0c\u800c\u5bc6\u96c6\u7684\u7a84\u73af\u662f\u6709\u4e00\u4e2a\u5bf9\u79f0\u7684\u7f3a\u53e3\u7684\u3002\u800c\u5176\u5149\u73af\u4f1a\u6839\u636e\u4e0d\u540c\u60c5\u51b5\u6536\u7f29\u3002 \u6240\u4ee5\u6211\u4eec\u5728\u5904\u7406\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c06\u6211\u4eec\u7684Particle\u6570\u7ec4\u5206\u6210\u524d\u548c\u540e\u4e24\u90e8\u5206\u6765\u8fdb\u884c\u5904\u7406\u3002 if ( i < particleNum * 1 / 2 ) { //\u5c06\u524d\u534a\u90e8\u5206\u7528\u4e8e\u8f83\u5bbd\u7684\u90a3\u4e2a\u73af ... } else { //\u540e\u534a\u90e8\u5206\u7528\u4e8e\u7a84\u73af ... } \u6211\u4eec\u53ea\u9700\u63a7\u5236\u4e24\u90e8\u5206\u5206\u5e03\u7684\u534a\u5f84\u65e2\u53ef\u4ee5\u5b9e\u73b0\u5176\u5206\u5e03\u7a00\u758f\u4ee5\u53ca\u5bc6\u96c6\u3002 \u90a3\u4e48\uff0c\u7a84\u73af\u7684\u8f83\u7a00\u758f\u7684\u7f3a\u53e3\u600e\u4e48\u505a\u5462\uff0c\u5176\u5b9e\u4e5f\u4e0d\u96be\uff0c\u53ea\u7528\u505a\u597dangle\u7684\u5206\u5e03\u5c31\u53ef\u4ee5\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\u3002 if ( i < particleNum * 1 / 2 ) { //\u5c06\u524d\u534a\u90e8\u5206\u7528\u4e8e\u8f83\u5bbd\u7684\u90a3\u4e2a\u73af maxR = outMaxR ; minR = outMinR ; randomAngle = Random . Range ( 0.0f , 360.0f ); } else { //\u540e\u534a\u90e8\u5206\u7528\u4e8e\u7a84\u73af,\u6839\u636eI Remember,\u7a84\u73af\u5e26\u7f3a\u53e3\uff0c\u56e0\u6b64\u6211\u4eec\u8bbe\u7f6e\u4e00\u534a\u54110\u5ea6\u96c6\u4e2d\u3001\u4e00\u534a\u5411180\u5ea6\u96c6\u4e2d\uff0c\u4f7f\u5f9790\u5ea6\u548c-90\u5ea6\u5f62\u6210\u4e24\u4e2a\u5bf9\u79f0\u7f3a\u53e3 maxR = inMaxR ; minR = inMinR ; float minAngle = Random . Range (- 90f , 0.0f ); float maxAngle = Random . Range ( 0.0f , 90f ); float angle = Random . Range ( minAngle , maxAngle ); randomAngle = i % 2 == 0 ? angle : angle - 180 ; //\u5229\u7528\u5bf9\u79f0\u6765\u8bbe\u7f6e\u53e6\u4e00\u534a\u7c92\u5b50 } \u4ee5\u4e0a\u65f6\u4e00\u4e9b\u57fa\u672c\u7684\u601d\u8def\u4e0b\u9762\u6211\u4eec\u8bf4\u8bf4\u53e6\u5916\u4e00\u4e9b\u5173\u952e\u7684\u90e8\u5206 \u8bbe\u7f6e\u7c92\u5b50\u7684\u5404\u5c5e\u6027 \u7c92\u5b50\u8f6c\u52a8 \u8fd9\u90e8\u5206\u5c31\u662f\u901a\u8fc7\u7a84\u73af\uff0c\u5bbd\u73af\u8c03\u8282\u8f6c\u52a8(angle)\u53d8\u5316\u7684\u5e45\u5ea6 // \u7a84\u73af\u8f6c\u52a8\u901f\u5ea6\u66f4\u5feb if ( i > particleNum * 1 / 2 ) speed = 0.1f ; else speed = 0.05f ; posArray [ i ]. angle -= speed ; posArray [ i ]. angle = posArray [ i ]. angle % 360 ; ... particleArray [ i ]. position = new Vector3 ( posArray [ i ]. cur_r * Mathf . Cos ( rad ), posArray [ i ]. cur_r * Mathf . Sin ( rad ), 0f ); \u7c92\u5b50\u7684\u7f29\u653e \u5f53\u7528\u6237\u70b9\u51fbChange\u6309\u94ae\u540e\uff0c\u6211\u4eec\u6839\u636eflag\u6765\u8bbe\u7f6e\u7c92\u5b50\u7684\u534a\u5f84\u6765\u63a7\u5236\u7c92\u5b50\u7684\"\u6536\u7f29\"\u3002 if ( flag == 0 ) { //\u7c92\u5b50\u5411\u4e2d\u95f4\u6536\u7f29 if ( posArray [ i ]. cur_r > posArray [ i ]. combine_r + 0.05f ) { //\u4e24\u5c42\u73af\u7684\u6536\u7f29\u901f\u5ea6\u4e0d\u540c if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } else if ( posArray [ i ]. cur_r < posArray [ i ]. combine_r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } } else if ( flag == 1 ) { //\u7c92\u5b50\u8303\u56f4\u6269\u5927 if ( posArray [ i ]. cur_r < posArray [ i ]. r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } else if ( posArray [ i ]. cur_r > posArray [ i ]. r + 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } } \u5b8c\u6574\u4ee3\u7801 public class RingOfParticle : MonoBehaviour { public class particlePos { public float r = 0.0f ; //\u521d\u59cb\u5316\u534a\u5f84 public float combine_r = 0.0f ; //\u96c6\u5408\u540e\u7684\u534a\u5f84 public float cur_r = 0.0f ; //\u8bb0\u5f55\u7c92\u5b50\u5f53\u524d\u65f6\u523b\u534a\u5f84 public float angle = 0.0f ; public particlePos ( float radiu , float angle , float combine ) { r = radiu ; this . angle = angle ; combine_r = combine ; cur_r = radiu ; } } public ParticleSystem particleSystem ; public int particleNum = 10000 ; public float outMinR = 5.0f ; public float outMaxR = 10.0f ; public float inMinR = 6.0f ; public float inMaxR = 9.0f ; public float speed = 0.1f ; public int flag ; private ParticleSystem . Particle [] particleArray ; private particlePos [] posArray ; void OnGUI () { if ( GUI . Button ( new Rect ( 0 , 15 , 100 , 30 ), \"Change\" )) { flag = ( flag == - 1 )? 0 : 1 - flag ; } } // Use this for initialization void Start () { flag = - 1 ; posArray = new particlePos [ particleNum ]; particleArray = new ParticleSystem . Particle [ particleNum ]; particleSystem . maxParticles = particleNum ; particleSystem . Emit ( particleNum ); particleSystem . GetParticles ( particleArray ); for ( int i = 0 ; i < particleNum ; i ++) { float randomAngle ; // \u8bbe\u7f6e\u7c92\u5b50\u7684\u968f\u673a\u89d2\u5ea6 float maxR , minR ; // \u6700\u5927\u6700\u5c0f\u534a\u5f84\u4f9b\u968f\u673a if ( i < particleNum * 1 / 2 ) { //\u5c06\u524d\u534a\u90e8\u5206\u7528\u4e8e\u8f83\u5bbd\u7684\u90a3\u4e2a\u73af maxR = outMaxR ; minR = outMinR ; randomAngle = Random . Range ( 0.0f , 360.0f ); } else { //\u540e\u534a\u90e8\u5206\u7528\u4e8e\u7a84\u73af,\u6839\u636eI Remember,\u7a84\u73af\u5e26\u7f3a\u53e3\uff0c\u56e0\u6b64\u6211\u4eec\u8bbe\u7f6e\u4e00\u534a\u54110\u5ea6\u96c6\u4e2d\u3001\u4e00\u534a\u5411180\u5ea6\u96c6\u4e2d\uff0c\u4f7f\u5f9790\u5ea6\u548c-90\u5ea6\u5f62\u6210\u4e24\u4e2a\u5bf9\u79f0\u7f3a\u53e3 maxR = inMaxR ; minR = inMinR ; float minAngle = Random . Range (- 90f , 0.0f ); float maxAngle = Random . Range ( 0.0f , 90f ); float angle = Random . Range ( minAngle , maxAngle ); randomAngle = i % 2 == 0 ? angle : angle - 180 ; //\u5229\u7528\u5bf9\u79f0\u6765\u8bbe\u7f6e\u53e6\u4e00\u534a\u7c92\u5b50 } float midRadius = ( maxR + minR ) / 2 ; float min = Random . Range ( minR , midRadius ); float max = Random . Range ( midRadius , maxR ); float randomRadius = Random . Range ( min , max ); float combineRadius ; // \u5e73\u5747\u534a\u5f84\u4ee5\u5916\u7684\u7c92\u5b50\u96c6\u5408\u534a\u5f84\u8c03\u5c0f\uff0c\u4f7f\u7f29\u5c0f\u65f6\u79fb\u52a8\u7684\u8ddd\u79bb\u5c11\u4e00\u4e9b if ( randomRadius > midRadius ) combineRadius = randomRadius - ( randomRadius - midRadius ) / 2 ; else combineRadius = randomRadius - ( randomRadius - midRadius ) * 3 / 4 ; // \u8bbe\u7f6e\u7c92\u5b50\u7684\u5c5e\u6027 posArray [ i ] = new particlePos ( randomRadius , randomAngle , combineRadius ); particleArray [ i ]. position = new Vector3 ( randomRadius * Mathf . Cos ( randomAngle ), randomRadius * Mathf . Sin ( randomAngle ), 0.0f ); } particleSystem . SetParticles ( particleArray , particleNum ); } // Update is called once per frame void Update () { for ( int i = 0 ; i < particleNum ; i ++) { // \u5c0f\u5708\u8f6c\u52a8\u901f\u5ea6\u66f4\u5feb if ( i > particleNum * 1 / 2 ) speed = 0.1f ; else speed = 0.05f ; posArray [ i ]. angle -= speed ; posArray [ i ]. angle = posArray [ i ]. angle % 360 ; float rad = posArray [ i ]. angle / 180 * Mathf . PI ; // \u6839\u636eflag, \u5224\u65ad\u7c92\u5b50\u7684\u52a8\u6001\uff0c\u6539\u53d8\u7c92\u5b50\u7684\u73b0\u5728\u7684\u534a\u5f84 if ( flag == 0 ) { //\u7c92\u5b50\u5411\u4e2d\u95f4\u6536\u7f29 if ( posArray [ i ]. cur_r > posArray [ i ]. combine_r + 0.05f ) { //\u4e24\u5c42\u73af\u7684\u6536\u7f29\u901f\u5ea6\u4e0d\u540c if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } else if ( posArray [ i ]. cur_r < posArray [ i ]. combine_r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } } else if ( flag == 1 ) { //\u7c92\u5b50\u8303\u56f4\u6269\u5927 if ( posArray [ i ]. cur_r < posArray [ i ]. r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } else if ( posArray [ i ]. cur_r > posArray [ i ]. r + 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } } // \u901a\u8fc7curR\u548c\u65b0\u7684\u89d2\u5ea6\u8bbe\u7f6e\u7c92\u5b50\u7684\u4f4d\u7f6e particleArray [ i ]. position = new Vector3 ( posArray [ i ]. cur_r * Mathf . Cos ( rad ), posArray [ i ]. cur_r * Mathf . Sin ( rad ), 0f ); } particleSystem . SetParticles ( particleArray , particleNum ); } }","title":"\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#11-","text":"","title":"\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_1","text":"\u53c2\u8003 http://i-remember.fr/en \u8fd9\u7c7b\u7f51\u7ad9\uff0c\u4f7f\u7528\u7c92\u5b50\u6d41\u7f16\u7a0b\u63a7\u5236\u5236\u4f5c\u4e00\u4e9b\u6548\u679c\uff0c \u5982\u201c\u7c92\u5b50\u5149\u73af\u201d","title":"\u8981\u6c42"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_2","text":"\u6f14\u793a\u89c6\u9891","title":"\u5b9e\u73b0\u6548\u679c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_3","text":"","title":"\u5b9e\u73b0\u8fc7\u7a0b"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_4","text":"\u4ed4\u7ec6\u89c2\u5bdfI Remember\u7684\u7c92\u5b50\u5149\u73af\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5176\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5206\u6210\u8f83\u5bc6\u96c6\u7684\u4e00\u90e8\u5206\u4ee5\u53ca\u8f83\u4e3a\u7a00\u758f\u7684\u4e00\u90e8\u5206\uff0c\u800c\u5bc6\u96c6\u7684\u7a84\u73af\u662f\u6709\u4e00\u4e2a\u5bf9\u79f0\u7684\u7f3a\u53e3\u7684\u3002\u800c\u5176\u5149\u73af\u4f1a\u6839\u636e\u4e0d\u540c\u60c5\u51b5\u6536\u7f29\u3002 \u6240\u4ee5\u6211\u4eec\u5728\u5904\u7406\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c06\u6211\u4eec\u7684Particle\u6570\u7ec4\u5206\u6210\u524d\u548c\u540e\u4e24\u90e8\u5206\u6765\u8fdb\u884c\u5904\u7406\u3002 if ( i < particleNum * 1 / 2 ) { //\u5c06\u524d\u534a\u90e8\u5206\u7528\u4e8e\u8f83\u5bbd\u7684\u90a3\u4e2a\u73af ... } else { //\u540e\u534a\u90e8\u5206\u7528\u4e8e\u7a84\u73af ... } \u6211\u4eec\u53ea\u9700\u63a7\u5236\u4e24\u90e8\u5206\u5206\u5e03\u7684\u534a\u5f84\u65e2\u53ef\u4ee5\u5b9e\u73b0\u5176\u5206\u5e03\u7a00\u758f\u4ee5\u53ca\u5bc6\u96c6\u3002 \u90a3\u4e48\uff0c\u7a84\u73af\u7684\u8f83\u7a00\u758f\u7684\u7f3a\u53e3\u600e\u4e48\u505a\u5462\uff0c\u5176\u5b9e\u4e5f\u4e0d\u96be\uff0c\u53ea\u7528\u505a\u597dangle\u7684\u5206\u5e03\u5c31\u53ef\u4ee5\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\u3002 if ( i < particleNum * 1 / 2 ) { //\u5c06\u524d\u534a\u90e8\u5206\u7528\u4e8e\u8f83\u5bbd\u7684\u90a3\u4e2a\u73af maxR = outMaxR ; minR = outMinR ; randomAngle = Random . Range ( 0.0f , 360.0f ); } else { //\u540e\u534a\u90e8\u5206\u7528\u4e8e\u7a84\u73af,\u6839\u636eI Remember,\u7a84\u73af\u5e26\u7f3a\u53e3\uff0c\u56e0\u6b64\u6211\u4eec\u8bbe\u7f6e\u4e00\u534a\u54110\u5ea6\u96c6\u4e2d\u3001\u4e00\u534a\u5411180\u5ea6\u96c6\u4e2d\uff0c\u4f7f\u5f9790\u5ea6\u548c-90\u5ea6\u5f62\u6210\u4e24\u4e2a\u5bf9\u79f0\u7f3a\u53e3 maxR = inMaxR ; minR = inMinR ; float minAngle = Random . Range (- 90f , 0.0f ); float maxAngle = Random . Range ( 0.0f , 90f ); float angle = Random . Range ( minAngle , maxAngle ); randomAngle = i % 2 == 0 ? angle : angle - 180 ; //\u5229\u7528\u5bf9\u79f0\u6765\u8bbe\u7f6e\u53e6\u4e00\u534a\u7c92\u5b50 } \u4ee5\u4e0a\u65f6\u4e00\u4e9b\u57fa\u672c\u7684\u601d\u8def\u4e0b\u9762\u6211\u4eec\u8bf4\u8bf4\u53e6\u5916\u4e00\u4e9b\u5173\u952e\u7684\u90e8\u5206","title":"\u8bbe\u8ba1\u601d\u8def"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_5","text":"","title":"\u8bbe\u7f6e\u7c92\u5b50\u7684\u5404\u5c5e\u6027"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_6","text":"\u8fd9\u90e8\u5206\u5c31\u662f\u901a\u8fc7\u7a84\u73af\uff0c\u5bbd\u73af\u8c03\u8282\u8f6c\u52a8(angle)\u53d8\u5316\u7684\u5e45\u5ea6 // \u7a84\u73af\u8f6c\u52a8\u901f\u5ea6\u66f4\u5feb if ( i > particleNum * 1 / 2 ) speed = 0.1f ; else speed = 0.05f ; posArray [ i ]. angle -= speed ; posArray [ i ]. angle = posArray [ i ]. angle % 360 ; ... particleArray [ i ]. position = new Vector3 ( posArray [ i ]. cur_r * Mathf . Cos ( rad ), posArray [ i ]. cur_r * Mathf . Sin ( rad ), 0f );","title":"\u7c92\u5b50\u8f6c\u52a8"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_7","text":"\u5f53\u7528\u6237\u70b9\u51fbChange\u6309\u94ae\u540e\uff0c\u6211\u4eec\u6839\u636eflag\u6765\u8bbe\u7f6e\u7c92\u5b50\u7684\u534a\u5f84\u6765\u63a7\u5236\u7c92\u5b50\u7684\"\u6536\u7f29\"\u3002 if ( flag == 0 ) { //\u7c92\u5b50\u5411\u4e2d\u95f4\u6536\u7f29 if ( posArray [ i ]. cur_r > posArray [ i ]. combine_r + 0.05f ) { //\u4e24\u5c42\u73af\u7684\u6536\u7f29\u901f\u5ea6\u4e0d\u540c if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } else if ( posArray [ i ]. cur_r < posArray [ i ]. combine_r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } } else if ( flag == 1 ) { //\u7c92\u5b50\u8303\u56f4\u6269\u5927 if ( posArray [ i ]. cur_r < posArray [ i ]. r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } else if ( posArray [ i ]. cur_r > posArray [ i ]. r + 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } }","title":"\u7c92\u5b50\u7684\u7f29\u653e"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb011-\u7c92\u5b50\u5149\u73af\u5236\u4f5c/#_8","text":"public class RingOfParticle : MonoBehaviour { public class particlePos { public float r = 0.0f ; //\u521d\u59cb\u5316\u534a\u5f84 public float combine_r = 0.0f ; //\u96c6\u5408\u540e\u7684\u534a\u5f84 public float cur_r = 0.0f ; //\u8bb0\u5f55\u7c92\u5b50\u5f53\u524d\u65f6\u523b\u534a\u5f84 public float angle = 0.0f ; public particlePos ( float radiu , float angle , float combine ) { r = radiu ; this . angle = angle ; combine_r = combine ; cur_r = radiu ; } } public ParticleSystem particleSystem ; public int particleNum = 10000 ; public float outMinR = 5.0f ; public float outMaxR = 10.0f ; public float inMinR = 6.0f ; public float inMaxR = 9.0f ; public float speed = 0.1f ; public int flag ; private ParticleSystem . Particle [] particleArray ; private particlePos [] posArray ; void OnGUI () { if ( GUI . Button ( new Rect ( 0 , 15 , 100 , 30 ), \"Change\" )) { flag = ( flag == - 1 )? 0 : 1 - flag ; } } // Use this for initialization void Start () { flag = - 1 ; posArray = new particlePos [ particleNum ]; particleArray = new ParticleSystem . Particle [ particleNum ]; particleSystem . maxParticles = particleNum ; particleSystem . Emit ( particleNum ); particleSystem . GetParticles ( particleArray ); for ( int i = 0 ; i < particleNum ; i ++) { float randomAngle ; // \u8bbe\u7f6e\u7c92\u5b50\u7684\u968f\u673a\u89d2\u5ea6 float maxR , minR ; // \u6700\u5927\u6700\u5c0f\u534a\u5f84\u4f9b\u968f\u673a if ( i < particleNum * 1 / 2 ) { //\u5c06\u524d\u534a\u90e8\u5206\u7528\u4e8e\u8f83\u5bbd\u7684\u90a3\u4e2a\u73af maxR = outMaxR ; minR = outMinR ; randomAngle = Random . Range ( 0.0f , 360.0f ); } else { //\u540e\u534a\u90e8\u5206\u7528\u4e8e\u7a84\u73af,\u6839\u636eI Remember,\u7a84\u73af\u5e26\u7f3a\u53e3\uff0c\u56e0\u6b64\u6211\u4eec\u8bbe\u7f6e\u4e00\u534a\u54110\u5ea6\u96c6\u4e2d\u3001\u4e00\u534a\u5411180\u5ea6\u96c6\u4e2d\uff0c\u4f7f\u5f9790\u5ea6\u548c-90\u5ea6\u5f62\u6210\u4e24\u4e2a\u5bf9\u79f0\u7f3a\u53e3 maxR = inMaxR ; minR = inMinR ; float minAngle = Random . Range (- 90f , 0.0f ); float maxAngle = Random . Range ( 0.0f , 90f ); float angle = Random . Range ( minAngle , maxAngle ); randomAngle = i % 2 == 0 ? angle : angle - 180 ; //\u5229\u7528\u5bf9\u79f0\u6765\u8bbe\u7f6e\u53e6\u4e00\u534a\u7c92\u5b50 } float midRadius = ( maxR + minR ) / 2 ; float min = Random . Range ( minR , midRadius ); float max = Random . Range ( midRadius , maxR ); float randomRadius = Random . Range ( min , max ); float combineRadius ; // \u5e73\u5747\u534a\u5f84\u4ee5\u5916\u7684\u7c92\u5b50\u96c6\u5408\u534a\u5f84\u8c03\u5c0f\uff0c\u4f7f\u7f29\u5c0f\u65f6\u79fb\u52a8\u7684\u8ddd\u79bb\u5c11\u4e00\u4e9b if ( randomRadius > midRadius ) combineRadius = randomRadius - ( randomRadius - midRadius ) / 2 ; else combineRadius = randomRadius - ( randomRadius - midRadius ) * 3 / 4 ; // \u8bbe\u7f6e\u7c92\u5b50\u7684\u5c5e\u6027 posArray [ i ] = new particlePos ( randomRadius , randomAngle , combineRadius ); particleArray [ i ]. position = new Vector3 ( randomRadius * Mathf . Cos ( randomAngle ), randomRadius * Mathf . Sin ( randomAngle ), 0.0f ); } particleSystem . SetParticles ( particleArray , particleNum ); } // Update is called once per frame void Update () { for ( int i = 0 ; i < particleNum ; i ++) { // \u5c0f\u5708\u8f6c\u52a8\u901f\u5ea6\u66f4\u5feb if ( i > particleNum * 1 / 2 ) speed = 0.1f ; else speed = 0.05f ; posArray [ i ]. angle -= speed ; posArray [ i ]. angle = posArray [ i ]. angle % 360 ; float rad = posArray [ i ]. angle / 180 * Mathf . PI ; // \u6839\u636eflag, \u5224\u65ad\u7c92\u5b50\u7684\u52a8\u6001\uff0c\u6539\u53d8\u7c92\u5b50\u7684\u73b0\u5728\u7684\u534a\u5f84 if ( flag == 0 ) { //\u7c92\u5b50\u5411\u4e2d\u95f4\u6536\u7f29 if ( posArray [ i ]. cur_r > posArray [ i ]. combine_r + 0.05f ) { //\u4e24\u5c42\u73af\u7684\u6536\u7f29\u901f\u5ea6\u4e0d\u540c if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } else if ( posArray [ i ]. cur_r < posArray [ i ]. combine_r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } } else if ( flag == 1 ) { //\u7c92\u5b50\u8303\u56f4\u6269\u5927 if ( posArray [ i ]. cur_r < posArray [ i ]. r - 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r += 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r += Time . deltaTime ; } else if ( posArray [ i ]. cur_r > posArray [ i ]. r + 0.05f ) { if ( i < particleNum * 1 / 2 ) posArray [ i ]. cur_r -= 2.0f * Time . deltaTime ; else posArray [ i ]. cur_r -= Time . deltaTime ; } } // \u901a\u8fc7curR\u548c\u65b0\u7684\u89d2\u5ea6\u8bbe\u7f6e\u7c92\u5b50\u7684\u4f4d\u7f6e particleArray [ i ]. position = new Vector3 ( posArray [ i ]. cur_r * Mathf . Cos ( rad ), posArray [ i ]. cur_r * Mathf . Sin ( rad ), 0f ); } particleSystem . SetParticles ( particleArray , particleNum ); } }","title":"\u5b8c\u6574\u4ee3\u7801"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248/","text":"\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248 \u4f5c\u4e1a\u7d20\u6750 \u516c\u544a\u7248 SampleUI \u4e2d\u7684\u90e8\u5206\u8d34\u56fe \u5b8c\u6210\u6548\u679c \u5b9e\u73b0\u8fc7\u7a0b \u5728\u8fd9\u6b21\u7684\u4f5c\u4e1a\u4e2d\uff0c\u6211\u7528\u5230\u4e86\u8bfe\u4e0a\u63d0\u4f9b\u7684SampleUI\u7684\u8d44\u6e90\u5305\u91cc\u7684\u90e8\u5206\u8d34\u56fe \u9996\u5148\uff0c\u6211\u4eec\u8fdb\u884c\u6211\u4eec\u57fa\u672c\u7684UI\u6784\u5efa,\u6211\u4eec\u5148\u521b\u5efa\u4e00\u4e2aScrollView, \u7ed9Canvas\u52a0\u5165\u6211\u4eec\u7684Background(Image)\uff0c\u800c\u56fe\u4e2d\u6548\u679c\u7684\u5b9e\u73b0\u6211\u8fd8\u7528\u4e86\u4e00\u4e2aMenuImage(Image),\u76f4\u63a5\u628aSF Window\u4f5c\u4e3aScrollView\u7684Image\u662f\u8fbe\u4e0d\u5230\u4e0a\u9762\u7684\u6548\u679c\u7684\uff0c\u6240\u4ee5\u6211\u901a\u8fc7\u589e\u52a0\u4e00\u4e2aImage,\u628aScrollView\u5305\u5728\u91cc\u9762\u4ee5\u5b9e\u73b0\u4ee5\u4e0a\u6548\u679c\uff0c\u5b8c\u6210\u4e86\u8fd9\u4e2a\u4ee5\u540e\uff0c\u6211\u4eec\u4e5f\u7ed9\u6211\u4eec\u7684Scrollbar\u52a0\u4e0a\u76f8\u5e94\u7684\u8d34\u56fe\uff0c\u8fd9\u65f6\u5019\u6574\u4e2a\u6548\u679c\u5982\u4e0b \u5230\u8fd9\u4e00\u6b65\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9ScrollView\u7684Content\u52a0\u4e0a\u76f8\u5e94\u7684\u5185\u5bb9\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ed9Content\u52a0\u4e00\u4e2aVerticalLayoutGroup\u5b9e\u73b0\u6211\u4eecContent\u7684\u81ea\u52a8\u5e03\u5c40\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u628aGameObject\u6dfb\u52a0\u5230Content\u91cc\uff0c\u5b83\u5c31\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u5b8c\u6210\u5e03\u5c40\uff0c\u65e0\u9700\u518d\u81ea\u5df1\u53bb\u8c03\u8282 \u6211\u4eec\u52a0\u5165\u6211\u4eec\u7684Button\u548cText, \u7ed3\u679c\u5982\u4e0b \u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5b9e\u73b0\u6211\u4eecText\u7684\u5c55\u5f00\u5462\uff0c\u5728\u8fd9\u91cc\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86VerticalLayoutGroup,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u8282Text\u7684Size(Height)\u5b8c\u6210Text\u7684\u6536\u7f29\uff0c\u7406\u89e3\u4e86\u8fd9\u4e00\u70b9\u5c31\u597d\u529e\u4e86\uff0c\u6211\u8fd9\u91cc\u7528\u7684\u662f\u6211\u4eec\u4e4b\u524d\u5b66\u8fc7\u7684\u52a8\u753b\u3002\u901a\u8fc7\u52a8\u753b\u8c03\u8282Text\u7684Size\uff0c\u6211\u4eec\u5373\u53ef\u5b8c\u6210\u6536\u7f29\u5c55\u5f00\u7684\u52a8\u753b\uff0c\u8fd9\u91cc\u52a8\u753b\u7684\u5236\u4f5c\u5341\u5206\u7b80\u5355\uff0c\u4e0d\u591a\u8d58\u8ff0 \u90a3\u4e48\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u52a8\u753b\u5462\uff0c\u5176\u5b9e\u4e5f\u5341\u5206\u7b80\u5355\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u521b\u5efaAnimator\u7136\u540e\u7ed9\u6211\u4eec\u7684Button\u52a0\u5165\u76f8\u5e94\u7684\u4e8b\u4ef6\u5904\u7406\u89e3\u51b3\uff0c\u5177\u4f53\u5982\u4e0b: \u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2aAnimator\u5982\u4e0b: \u6e38\u620f\u4e00\u5f00\u59cb\u8fd0\u884c\u65f6\uff0cText\u5904\u4e8eIdle\u72b6\u6001(\u8be5\u72b6\u6001\u65e0\u52a8\u4f5c), State\u4e3afalse(\u5373Text\u5904\u4e8e\u6536\u7f29\u72b6\u6001) \u90a3\u4e48\u5f53\u6211\u4eec\u7b2c\u4e00\u6b21\u6309Button\u4f7f\u5176\u5c55\u5f00\u65f6\uff0c\u6211\u4eecSetTrigger(\"ToggleIn\"),Text\u8fdb\u5165ToggleOut\u72b6\u6001\uff0c\u90a3\u4e48\u4e4b\u540e\u6211\u4eec\u53ea\u9700\u7ef4\u62a4State\u7684\u503c\uff0c\u7136\u540e\u7ecf\u8fc7\u5224\u65ad\u89e6\u53d1ToggleIn\u548cToggleOut\u4f7fText\u5b8c\u6210\u76f8\u5173\u64cd\u4f5c Toggle.cs\u7684\u4ee3\u7801\u5982\u4e0b\u8f83\u7b80\u5355 public class Toggle : MonoBehaviour { private Button yourButton ; public Text text ; private Animator animator ; // Use this for initialization void Start () { Button btn = this . gameObject . GetComponent < Button >(); animator = text . GetComponent < Animator > (); btn . onClick . AddListener ( ClickBtn ); } void ClickBtn () { if ( animator . GetBool ( \"State\" )) { animator . SetTrigger ( \"ToggleIn\" ); animator . SetBool ( \"State\" , false ); } else { animator . SetTrigger ( \"ToggleOut\" ); animator . SetBool ( \"State\" , true ); } } } \u901a\u8fc7\u7ed9Button\u6302\u8f7d\u4ee5\u4e0a\u4ee3\u7801\uff0c\u62d6\u5165Text, \u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u6211\u4eec\u7684\u53ef\u5c55\u5f00\u516c\u544a\u7248\uff0c\u4e2a\u4eba\u89c9\u5f97\u7528\u8fd9\u79cd\u7ed9UI\u52a0\u4e0a\u52a8\u753b\u7684\u65b9\u6cd5\u8fd8\u662f\u5341\u5206\u7b80\u5355\u7684\u3002","title":"\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248/#12-","text":"","title":"\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248/#_1","text":"\u516c\u544a\u7248 SampleUI \u4e2d\u7684\u90e8\u5206\u8d34\u56fe","title":"\u4f5c\u4e1a\u7d20\u6750"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248/#_2","text":"","title":"\u5b8c\u6210\u6548\u679c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb012-\u53ef\u5c55\u5f00\u516c\u544a\u7248/#_3","text":"\u5728\u8fd9\u6b21\u7684\u4f5c\u4e1a\u4e2d\uff0c\u6211\u7528\u5230\u4e86\u8bfe\u4e0a\u63d0\u4f9b\u7684SampleUI\u7684\u8d44\u6e90\u5305\u91cc\u7684\u90e8\u5206\u8d34\u56fe \u9996\u5148\uff0c\u6211\u4eec\u8fdb\u884c\u6211\u4eec\u57fa\u672c\u7684UI\u6784\u5efa,\u6211\u4eec\u5148\u521b\u5efa\u4e00\u4e2aScrollView, \u7ed9Canvas\u52a0\u5165\u6211\u4eec\u7684Background(Image)\uff0c\u800c\u56fe\u4e2d\u6548\u679c\u7684\u5b9e\u73b0\u6211\u8fd8\u7528\u4e86\u4e00\u4e2aMenuImage(Image),\u76f4\u63a5\u628aSF Window\u4f5c\u4e3aScrollView\u7684Image\u662f\u8fbe\u4e0d\u5230\u4e0a\u9762\u7684\u6548\u679c\u7684\uff0c\u6240\u4ee5\u6211\u901a\u8fc7\u589e\u52a0\u4e00\u4e2aImage,\u628aScrollView\u5305\u5728\u91cc\u9762\u4ee5\u5b9e\u73b0\u4ee5\u4e0a\u6548\u679c\uff0c\u5b8c\u6210\u4e86\u8fd9\u4e2a\u4ee5\u540e\uff0c\u6211\u4eec\u4e5f\u7ed9\u6211\u4eec\u7684Scrollbar\u52a0\u4e0a\u76f8\u5e94\u7684\u8d34\u56fe\uff0c\u8fd9\u65f6\u5019\u6574\u4e2a\u6548\u679c\u5982\u4e0b \u5230\u8fd9\u4e00\u6b65\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9ScrollView\u7684Content\u52a0\u4e0a\u76f8\u5e94\u7684\u5185\u5bb9\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ed9Content\u52a0\u4e00\u4e2aVerticalLayoutGroup\u5b9e\u73b0\u6211\u4eecContent\u7684\u81ea\u52a8\u5e03\u5c40\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u628aGameObject\u6dfb\u52a0\u5230Content\u91cc\uff0c\u5b83\u5c31\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u5b8c\u6210\u5e03\u5c40\uff0c\u65e0\u9700\u518d\u81ea\u5df1\u53bb\u8c03\u8282 \u6211\u4eec\u52a0\u5165\u6211\u4eec\u7684Button\u548cText, \u7ed3\u679c\u5982\u4e0b \u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5b9e\u73b0\u6211\u4eecText\u7684\u5c55\u5f00\u5462\uff0c\u5728\u8fd9\u91cc\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86VerticalLayoutGroup,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u8282Text\u7684Size(Height)\u5b8c\u6210Text\u7684\u6536\u7f29\uff0c\u7406\u89e3\u4e86\u8fd9\u4e00\u70b9\u5c31\u597d\u529e\u4e86\uff0c\u6211\u8fd9\u91cc\u7528\u7684\u662f\u6211\u4eec\u4e4b\u524d\u5b66\u8fc7\u7684\u52a8\u753b\u3002\u901a\u8fc7\u52a8\u753b\u8c03\u8282Text\u7684Size\uff0c\u6211\u4eec\u5373\u53ef\u5b8c\u6210\u6536\u7f29\u5c55\u5f00\u7684\u52a8\u753b\uff0c\u8fd9\u91cc\u52a8\u753b\u7684\u5236\u4f5c\u5341\u5206\u7b80\u5355\uff0c\u4e0d\u591a\u8d58\u8ff0 \u90a3\u4e48\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u52a8\u753b\u5462\uff0c\u5176\u5b9e\u4e5f\u5341\u5206\u7b80\u5355\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u521b\u5efaAnimator\u7136\u540e\u7ed9\u6211\u4eec\u7684Button\u52a0\u5165\u76f8\u5e94\u7684\u4e8b\u4ef6\u5904\u7406\u89e3\u51b3\uff0c\u5177\u4f53\u5982\u4e0b: \u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2aAnimator\u5982\u4e0b: \u6e38\u620f\u4e00\u5f00\u59cb\u8fd0\u884c\u65f6\uff0cText\u5904\u4e8eIdle\u72b6\u6001(\u8be5\u72b6\u6001\u65e0\u52a8\u4f5c), State\u4e3afalse(\u5373Text\u5904\u4e8e\u6536\u7f29\u72b6\u6001) \u90a3\u4e48\u5f53\u6211\u4eec\u7b2c\u4e00\u6b21\u6309Button\u4f7f\u5176\u5c55\u5f00\u65f6\uff0c\u6211\u4eecSetTrigger(\"ToggleIn\"),Text\u8fdb\u5165ToggleOut\u72b6\u6001\uff0c\u90a3\u4e48\u4e4b\u540e\u6211\u4eec\u53ea\u9700\u7ef4\u62a4State\u7684\u503c\uff0c\u7136\u540e\u7ecf\u8fc7\u5224\u65ad\u89e6\u53d1ToggleIn\u548cToggleOut\u4f7fText\u5b8c\u6210\u76f8\u5173\u64cd\u4f5c Toggle.cs\u7684\u4ee3\u7801\u5982\u4e0b\u8f83\u7b80\u5355 public class Toggle : MonoBehaviour { private Button yourButton ; public Text text ; private Animator animator ; // Use this for initialization void Start () { Button btn = this . gameObject . GetComponent < Button >(); animator = text . GetComponent < Animator > (); btn . onClick . AddListener ( ClickBtn ); } void ClickBtn () { if ( animator . GetBool ( \"State\" )) { animator . SetTrigger ( \"ToggleIn\" ); animator . SetBool ( \"State\" , false ); } else { animator . SetTrigger ( \"ToggleOut\" ); animator . SetBool ( \"State\" , true ); } } } \u901a\u8fc7\u7ed9Button\u6302\u8f7d\u4ee5\u4e0a\u4ee3\u7801\uff0c\u62d6\u5165Text, \u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u6211\u4eec\u7684\u53ef\u5c55\u5f00\u516c\u544a\u7248\uff0c\u4e2a\u4eba\u89c9\u5f97\u7528\u8fd9\u79cd\u7ed9UI\u52a0\u4e0a\u52a8\u753b\u7684\u65b9\u6cd5\u8fd8\u662f\u5341\u5206\u7b80\u5355\u7684\u3002","title":"\u5b9e\u73b0\u8fc7\u7a0b"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/","text":"\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218 \u4f5c\u4e1a\u7d20\u6750 \u5b98\u65b9Tank Tutourial\u7684\u7d20\u6750 \u5b9e\u73b0\u6548\u679c \u4ee3\u7801\u4ed3\u5e93 Github Gif \u6f14\u793a\u89c6\u9891 Youku \u5b9e\u73b0\u8fc7\u7a0b \u73af\u5883\u914d\u7f6e \u9996\u5148\uff0c\u6211\u4eec\u5bfc\u5165Vuforia\u7684\u5305\uff0c\u6839\u636e\u8bfe\u4e0a\u5b66\u5230\u7684\u5185\u5bb9\uff0c\u914d\u7f6e\u597dAR\u7684\u73af\u5883\u5176\u6b21\u56e0\u4e3a\u7535\u8111\u4e0a\u7684\u6444\u50cf\u5934\u914d\u5408AR\u592a\u4e0d\u65b9\u4fbf\u4e86\uff0c\u6240\u4ee5\u6211\u6253\u7b97\u914d\u7f6e\u597d\u5b9e\u9a8c\u73af\u5883\uff0c\u90e8\u5206\u65f6\u5019\u4f7f\u7528\u624b\u673a\u6765\u6d4b\u8bd5\u3002 \u6253\u5f00File > Build Settings\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230Unity\u53ef\u4ee5\u7f16\u8bd1\u51fa\u591a\u5e73\u53f0\u4e0b\u7684\u6e38\u620f\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u662fANDROID\uff0c\u70b9\u5f00\uff0c\u82e5\u6ca1\u6709\u5b89\u88c5\uff0c\u5176\u4f1a\u6307\u5bfc\u6211\u4eec\u6253\u5f00\u4e0b\u8f7d\u9875\u9762\u4e0b\u8f7d\u5bf9\u5e94\u5b89\u88c5\u5305\uff0c\u5b89\u88c5\u597d\u540e\u754c\u9762\u5982\u4e0b\uff0c\u5230\u8fd9\u91cc\u57fa\u672c\u7684\u73af\u5883 \u6447\u6746\u5236\u4f5c \u624b\u673a\u4e0a\u5c31\u4e0d\u50cf\u6211\u4eec\u7684\u7535\u8111\u53ef\u4ee5\u4f7f\u7528\u952e\u76d8\uff0c\u5982\u4f55\u8fdb\u884c\u4ea4\u4e92\u5c31\u662f\u503c\u5f97\u601d\u8003\u7684\u70b9\uff0c\u6700\u7ec8\u6211\u6253\u7b97\u4f7f\u7528\u8f83\u591a\u624b\u673a\u6e38\u620f\u4e2d\u4f7f\u7528\u7684\u6447\u6746\uff0c\u9996\u5148\u521b\u5efa\u4e00\u4e2aUI > Button\uff0c\u628a\u91cc\u9762\u7684Text\u6362\u6210Image\uff0c\u6211\u4eec\u901a\u8fc7\u7f16\u5199\u5173\u4e8e\u62d6\u52a8\u7684\u811a\u672c\uff0c\u6839\u636eImage\u7684\u504f\u79fb\u91cf\u6765\u8ba1\u7b97\u79fb\u52a8\uff0c\u6548\u679c\u5982\u4e0b \u811a\u672c\u5462\u4e5f\u8f83\u4e3a\u7b80\u5355\uff0c\u4e3b\u8981\u4f7f\u7528\u5230\u4e86OnDrag\u6765\u5b8c\u6210 public class MoveCtrl : MonoBehaviour , IDragHandler , IEndDragHandler { //\u56fe\u6807\u79fb\u52a8\u6700\u5927\u534a\u5f84 public float maxRadius = 200 ; //\u521d\u59cb\u5316\u80cc\u666f\u56fe\u6807\u4f4d\u7f6e private Vector2 moveBackPos ; private float horizontal = 0 ; private float vertical = 0 ; public float Horizontal { get { return horizontal ; } } public float Vertical { get { return vertical ; } } // Use this for initialization void Start () { //\u521d\u59cb\u5316\u4f4d\u7f6e moveBackPos = transform . parent . transform . position ; } // Update is called once per frame void Update () { horizontal = transform . localPosition . x ; vertical = transform . localPosition . y ; } /// <summary> /// \u5f53\u9f20\u6807\u5f00\u59cb\u62d6\u62fd\u65f6 /// </summary> /// <param name=\"eventData\"></param> public void OnDrag ( PointerEventData eventData ) { //\u83b7\u53d6\u9f20\u6807\u4f4d\u7f6e\u4e0e\u521d\u59cb\u4f4d\u7f6e\u4e4b\u95f4\u7684\u5411\u91cf Vector2 oppsitionVec = eventData . position - moveBackPos ; //\u83b7\u53d6\u5411\u91cf\u7684\u957f\u5ea6 float distance = Vector3 . Magnitude ( oppsitionVec ); //\u6700\u5c0f\u503c\u4e0e\u6700\u5927\u503c\u4e4b\u95f4\u53d6\u534a\u5f84 float radius = Mathf . Clamp ( distance , 0 , maxRadius ); //\u9650\u5236\u534a\u5f84\u957f\u5ea6 transform . position = moveBackPos + oppsitionVec . normalized * radius ; } /// <summary> /// \u5f53\u9f20\u6807\u505c\u6b62\u62d6\u62fd\u65f6 /// </summary> /// <param name=\"eventData\"></param> public void OnEndDrag ( PointerEventData eventData ) { transform . position = moveBackPos ; transform . localPosition = Vector3 . zero ; } } \u8fd9\u6837\u6211\u4eec\u53ea\u9700\u5728\u573a\u666f\u63a7\u5236\u5668\u4e2d\u7684Update\u52a0\u4e0a\u5bf9\u5e94\u6839\u636eVertical\u548cHorizontal\u6765\u79fb\u52a8\u7684\u4ee3\u7801\u5373\u53ef\u5b9e\u73b0\u6447\u6746\u63a7\u5236\u73a9\u5bb6\u3002 \u573a\u666f\u5236\u4f5c \u6211\u7684\u6e38\u620f\u573a\u666f\u6253\u7b97\u4f7f\u7528ImageTarget\uff0c\u5f53\u8bc6\u522b\u5230\u76f8\u5e94\u56fe\u50cf\uff0c\u6e38\u620f\u573a\u666f\u5c31\u4f1a\u663e\u793a\u3002\u4e3a\u4e86\u4f7f\u7528Nav Mesh, \u5148\u628aImage Target\u7684Mesh Filter\u7684Mesh\u6539\u6210Plane\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528Unity\u7684\u5bfc\u822a\u4e0e\u5bfb\u8def\u4e86\u3002 \u521b\u5efa\u597d\u6e38\u620f\u5bf9\u8c61\u4e4b\u540e\uff0c\u6211\u4eec\u628a\u7269\u4f53\u4e0d\u80fd\u5728\u4e0a\u79fb\u52a8\u7684\u5bf9\u8c61\u5728Navigation\u7684Object\u4e2d\u8c03\u6210\u4ee5\u4e0b\u5c5e\u6027 Bake\u7ed3\u679c\u5982\u4e0b \u4ee3\u7801\u5b8c\u6210 \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u6211\u4eec\u7684\u4ee3\u7801\u4e86\uff0c\u8fd9\u4e00\u6b21\u7684\u4f5c\u4e1a\u6211\u4f7f\u7528\u4e86\u5bfc\u6f14\u53ca\u5de5\u5382\u6a21\u5f0f\uff0c\u90e8\u5206\u501f\u9274\u4e86 \u5e08\u5144\u7684\u4f18\u79c0\u535a\u5ba2 ,\u8fd9\u91cc\u8bf4\u8bf4\u90e8\u5206\u7c7b\u7684\u4ee3\u7801 Tank using System.Collections ; using System.Collections.Generic ; using UnityEngine ; using UnityEngine.AI ; public class Tank : MonoBehaviour { private float hp ; public float getHp () { return hp ; } public void setHp ( float hp ) { this . hp = hp ; } } Player \u5f53\u751f\u547d\u503c\u5c0f\u4e8e0\u65f6\uff0cGameOver,\u5766\u514b\u7206\u70b8 using System.Collections ; using System.Collections.Generic ; using UnityEngine ; using UnityEngine.AI ; public class Player : Tank { public void init () { this . gameObject . SetActive ( true ); setHp ( 300f ); } void Start () { setHp ( 300f ); } void Update () { if ( getHp () <= 0 && gameObject . activeSelf ) { this . gameObject . SetActive ( false ); ParticleSystem explosion = Singleton < AllFactory >. Instance . getTankPs (); //\u83b7\u53d6\u7206\u70b8\u7684\u7c92\u5b50\u7cfb\u7edf explosion . transform . position = transform . position ; //\u8bbe\u7f6e\u7c92\u5b50\u7cfb\u7edf\u4f4d\u7f6e explosion . Play (); (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). gameOver = true ; } } } Enemy public class Enemy : Tank { private Vector3 target ; private bool gameover ; //\u6839\u636eFirstSceneController\u4e2d\u7684gameOver\uff0c\u5224\u65ad\u6e38\u620f\u662f\u5426\u7ed3\u675f private AllFactory allFactory ; public void init () { setHp ( 100f ); //\u8bbe\u7f6e\u521d\u59cb\u751f\u547d\u503c StopAllCoroutines (); //\u505c\u6b62\u6240\u6709\u534f\u7a0b StartCoroutine ( shoot ()); //\u5f00\u59cb\u5c04\u51fb\u7684\u534f\u7a0b } void Start () { setHp ( 100f ); //\u8bbe\u7f6e\u521d\u59cb\u751f\u547d\u503c allFactory = Singleton < AllFactory >. Instance ; StartCoroutine ( shoot ()); //\u5f00\u59cb\u5c04\u51fb\u7684\u534f\u7a0b } void Update () { gameover = (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). gameOver ; if (! gameover ) { target = (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). getPlayerPos (); // \u611f\u77e5 if ( getHp () <= 0 && gameObject . activeSelf ) { //\u601d\u8003 allFactory . recycleTank ( this . gameObject ); (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). GetScore (); StopCoroutine ( shoot ()); } else { NavMeshAgent agent = GetComponent < NavMeshAgent >(); agent . SetDestination ( target ); } } else { NavMeshAgent agent = GetComponent < NavMeshAgent >(); agent . velocity = Vector3 . zero ; agent . ResetPath (); } } IEnumerator shoot () { // \u884c\u4e3a while (! gameover && getHp () > 0 ) { for ( float i = 2 ; i > 0 ; i -= Time . deltaTime ) { yield return 0 ; } if ( Vector3 . Distance ( transform . position , target ) < 15 ) { //\u8ddd\u79bb\u5224\u65ad\u662f\u5426\u653b\u51fb GameObject bullet = allFactory . getBullet ( tankType . Enemy ); bullet . transform . position = new Vector3 ( transform . position . x , 1.5f , transform . position . z ) + transform . forward * 1.5f ; bullet . transform . forward = transform . forward ; Rigidbody rb = bullet . GetComponent < Rigidbody >(); rb . AddForce ( bullet . transform . forward * 20 , ForceMode . Impulse ); } } } } AllFactory AllFactory\u628a\u6240\u6709\u5766\u514b\u3001\u5b50\u5f39\u548c\u4e24\u4e2a\u7206\u70b8\u96c6\u4e2d\u5230\u4e00\u8d77\u7ba1\u7406 using System.Collections ; using System.Collections.Generic ; using UnityEngine ; public enum tankType : int { Player , Enemy } public class AllFactory : MonoBehaviour { public GameObject player ; //\u73a9\u5bb6\u5766\u514b public GameObject bullet ; //\u5b50\u5f39 public Transform imageTarget ; private Dictionary < int , GameObject > usingTanks ; private Dictionary < int , GameObject > freeTanks ; private Dictionary < int , GameObject > usingBullets ; private Dictionary < int , GameObject > freeBullets ; private List < ParticleSystem > psContainer ; private List < ParticleSystem > tankPsContainer ; void Awake () { usingTanks = new Dictionary < int , GameObject >(); freeTanks = new Dictionary < int , GameObject >(); usingBullets = new Dictionary < int , GameObject >(); freeBullets = new Dictionary < int , GameObject >(); psContainer = new List < ParticleSystem >(); tankPsContainer = new List < ParticleSystem > (); } void Start () { } public GameObject getPlayer () { //\u83b7\u53d6\u73a9\u5bb6\u5766\u514b return player ; } public GameObject getTank () { if ( freeTanks . Count == 0 ) { GameObject newTank = Instantiate ( Resources . Load ( \"Prefabs/Enemy\" )) as GameObject ; usingTanks . Add ( newTank . GetInstanceID (), newTank ); newTank . transform . parent = imageTarget ; newTank . transform . localScale = new Vector3 ( 0.02f , 0.02f , 0.02f ); newTank . transform . localPosition = new Vector3 ((( float ) Random . Range (- 4 , 4 ))/ 10 , 0 , (( float ) Random . Range (- 4 , 4 ))/ 10 ); return newTank ; } foreach ( KeyValuePair < int , GameObject > pair in freeTanks ) { pair . Value . SetActive ( true ); freeTanks . Remove ( pair . Key ); usingTanks . Add ( pair . Key , pair . Value ); pair . Value . transform . parent = imageTarget ; pair . Value . transform . localPosition = new Vector3 ((( float ) Random . Range (- 4 , 4 ))/ 10 , 0 , (( float ) Random . Range (- 4 , 4 ))/ 10 ); pair . Value . GetComponent < Enemy > (). init (); return pair . Value ; } return null ; } public GameObject getBullet ( tankType type ) { if ( freeBullets . Count == 0 ) { GameObject newBullet = Instantiate ( Resources . Load ( \"Prefabs/Bullet\" )) as GameObject ; newBullet . GetComponent < Bullet >(). setTankType ( type ); usingBullets . Add ( newBullet . GetInstanceID (), newBullet ); newBullet . transform . parent = imageTarget ; return newBullet ; } foreach ( KeyValuePair < int , GameObject > pair in freeBullets ) { pair . Value . SetActive ( true ); pair . Value . GetComponent < Bullet >(). setTankType ( type ); freeBullets . Remove ( pair . Key ); usingBullets . Add ( pair . Key , pair . Value ); pair . Value . GetComponent < Rigidbody > (). velocity = Vector3 . zero ; return pair . Value ; } return null ; } public ParticleSystem getPs () { for ( int i = 0 ; i < psContainer . Count ; i ++) { if (! psContainer [ i ]. isPlaying ) { return psContainer [ i ]; } } GameObject explore = Instantiate ( Resources . Load ( \"Prefabs/ShellExplosion\" )) as GameObject ; explore . transform . parent = imageTarget ; ParticleSystem newPs = explore . GetComponent < ParticleSystem > (); psContainer . Add ( newPs ); return newPs ; } public ParticleSystem getTankPs () { for ( int i = 0 ; i < tankPsContainer . Count ; i ++) { if (! tankPsContainer [ i ]. isPlaying ) { return tankPsContainer [ i ]; } } GameObject explore = Instantiate ( Resources . Load ( \"Prefabs/TankExplosion\" )) as GameObject ; explore . transform . parent = imageTarget ; ParticleSystem newPs = explore . GetComponent < ParticleSystem > (); tankPsContainer . Add ( newPs ); return newPs ; } public void recycleTank ( GameObject tank ) { tank . SetActive ( false ); usingTanks . Remove ( tank . GetInstanceID ()); freeTanks . Add ( tank . GetInstanceID (), tank ); ParticleSystem explosion = getTankPs (); //\u83b7\u53d6\u7206\u70b8\u7684\u7c92\u5b50\u7cfb\u7edf explosion . transform . position = tank . transform . position ; //\u8bbe\u7f6e\u7c92\u5b50\u7cfb\u7edf\u4f4d\u7f6e explosion . Play (); } public void recycleBullet ( GameObject bullet ) { usingBullets . Remove ( bullet . GetInstanceID ()); freeBullets . Add ( bullet . GetInstanceID (), bullet ); bullet . GetComponent < Rigidbody >(). velocity = Vector3 . zero ; bullet . SetActive ( false ); } public void recycleAllTanks () { List < int > keyList = new List < int >( usingTanks . Keys ); foreach ( int key in keyList ) { if ( usingTanks . ContainsKey ( key )) { usingTanks [ key ]. SetActive ( false ); freeTanks . Add ( key , usingTanks [ key ]); usingTanks . Remove ( key ); } } } public void recycleAllBullets () { List < int > keyList = new List < int >( usingBullets . Keys ); foreach ( int key in keyList ) { if ( usingBullets . ContainsKey ( key )) { usingBullets [ key ]. SetActive ( false ); freeBullets . Add ( key , usingBullets [ key ]); usingBullets . Remove ( key ); } } } public void reset () { recycleAllTanks (); recycleAllBullets (); player . GetComponent < Player > (). init (); } } FirstSceneController using System.Collections ; using System.Collections.Generic ; using UnityEngine ; using UnityEngine.UI ; public class FirstSceneController : MonoBehaviour , ISceneController { public MoveCtrl move ; public GameObject tank ; public Button btn ; public bool gameOver = false ; private AllFactory allFactory ; GUIStyle headerStyle ; private int Count = 0 ; private int Score = 0 ; // Use this for initialization void Awake () { GameDirector director = GameDirector . getInstance (); director . currentSceneController = this ; allFactory = Singleton < AllFactory >. Instance ; tank = allFactory . getPlayer (); btn . GetComponent < Button >(). onClick . AddListener ( delegate () { this . attackHandler (); }); } void Start () { Count = 0 ; headerStyle = new GUIStyle (); headerStyle . fontSize = 100 ; headerStyle . alignment = TextAnchor . MiddleCenter ; } public void loadResources () { } public void GetScore () { ++ Score ; } void GameOver () { this . gameOver = true ; } public Vector3 getPlayerPos () { return tank . transform . position ; } // Update is called once per frame void Update () { if ( gameOver ) return ; if ( Count ++ % 120 == 0 ) { allFactory . getTank (); } float ver = - move . Horizontal ; float hor = move . Vertical ; Vector3 direction = new Vector3 ( hor , 0 , ver ); if ( direction != Vector3 . zero ) { //\u63a7\u5236\u8f6c\u5411 tank . transform . rotation = Quaternion . Lerp ( tank . transform . rotation , Quaternion . LookRotation ( direction ), Time . deltaTime * 20 ); //\u5411\u524d\u79fb\u52a8 tank . transform . Translate ( Vector3 . forward * Time . deltaTime * 5 ); } } void OnGUI () { GUI . Label ( new Rect ( Screen . width - 500 , 80 , 400 , 110 ), \"Score: \" + Score , headerStyle ); if ( gameOver ) { GUI . Label ( new Rect ( Screen . width / 2 - 200 , Screen . height / 2 - 100 , 400 , 110 ), \"Game Over!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 150 , Screen . height / 2 + 30 , 300 , 120 ), \"Replay\" )) { allFactory . reset (); Score = 0 ; Count = 0 ; gameOver = false ; } } } void attackHandler () { if ( gameOver ) return ; GameObject bullet = allFactory . getBullet ( tankType . Player ); //\u83b7\u53d6\u5b50\u5f39\uff0c\u8bbe\u7f6e\u5176\u53d1\u51fa\u5766\u514b\u7684\u7c7b\u578b bullet . transform . position = new Vector3 ( tank . transform . position . x , 1.5f , tank . transform . position . z ) + tank . transform . forward * 1.5f ; bullet . transform . forward = tank . transform . forward ; Rigidbody rb = bullet . GetComponent < Rigidbody >(); rb . AddForce ( bullet . transform . forward * 20 , ForceMode . Impulse ); //\u7ed9\u5b50\u5f39\u4e00\u4e2a\u5411\u524d\u7684\u529b\uff0c\u5b9e\u73b0\u5b50\u5f39\u5411\u524d\u79fb\u52a8 } } \u5230\u8fd9\u91cc\uff0c\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u57fa\u672c\u5b8c\u6210\u4e86\uff0c\u6e38\u620f\u7684\u573a\u666f\u56fe\u50cf\u5982\u4e0b\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u4ece \u6211\u7684Github \u4e0b\u8f7d\u73a9\u4e00\u4e0b","title":"\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#13-ar","text":"","title":"\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#_1","text":"\u5b98\u65b9Tank Tutourial\u7684\u7d20\u6750","title":"\u4f5c\u4e1a\u7d20\u6750"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#_2","text":"\u4ee3\u7801\u4ed3\u5e93 Github Gif \u6f14\u793a\u89c6\u9891 Youku","title":"\u5b9e\u73b0\u6548\u679c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#_3","text":"","title":"\u5b9e\u73b0\u8fc7\u7a0b"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#_4","text":"\u9996\u5148\uff0c\u6211\u4eec\u5bfc\u5165Vuforia\u7684\u5305\uff0c\u6839\u636e\u8bfe\u4e0a\u5b66\u5230\u7684\u5185\u5bb9\uff0c\u914d\u7f6e\u597dAR\u7684\u73af\u5883\u5176\u6b21\u56e0\u4e3a\u7535\u8111\u4e0a\u7684\u6444\u50cf\u5934\u914d\u5408AR\u592a\u4e0d\u65b9\u4fbf\u4e86\uff0c\u6240\u4ee5\u6211\u6253\u7b97\u914d\u7f6e\u597d\u5b9e\u9a8c\u73af\u5883\uff0c\u90e8\u5206\u65f6\u5019\u4f7f\u7528\u624b\u673a\u6765\u6d4b\u8bd5\u3002 \u6253\u5f00File > Build Settings\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230Unity\u53ef\u4ee5\u7f16\u8bd1\u51fa\u591a\u5e73\u53f0\u4e0b\u7684\u6e38\u620f\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u662fANDROID\uff0c\u70b9\u5f00\uff0c\u82e5\u6ca1\u6709\u5b89\u88c5\uff0c\u5176\u4f1a\u6307\u5bfc\u6211\u4eec\u6253\u5f00\u4e0b\u8f7d\u9875\u9762\u4e0b\u8f7d\u5bf9\u5e94\u5b89\u88c5\u5305\uff0c\u5b89\u88c5\u597d\u540e\u754c\u9762\u5982\u4e0b\uff0c\u5230\u8fd9\u91cc\u57fa\u672c\u7684\u73af\u5883","title":"\u73af\u5883\u914d\u7f6e"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#_5","text":"\u624b\u673a\u4e0a\u5c31\u4e0d\u50cf\u6211\u4eec\u7684\u7535\u8111\u53ef\u4ee5\u4f7f\u7528\u952e\u76d8\uff0c\u5982\u4f55\u8fdb\u884c\u4ea4\u4e92\u5c31\u662f\u503c\u5f97\u601d\u8003\u7684\u70b9\uff0c\u6700\u7ec8\u6211\u6253\u7b97\u4f7f\u7528\u8f83\u591a\u624b\u673a\u6e38\u620f\u4e2d\u4f7f\u7528\u7684\u6447\u6746\uff0c\u9996\u5148\u521b\u5efa\u4e00\u4e2aUI > Button\uff0c\u628a\u91cc\u9762\u7684Text\u6362\u6210Image\uff0c\u6211\u4eec\u901a\u8fc7\u7f16\u5199\u5173\u4e8e\u62d6\u52a8\u7684\u811a\u672c\uff0c\u6839\u636eImage\u7684\u504f\u79fb\u91cf\u6765\u8ba1\u7b97\u79fb\u52a8\uff0c\u6548\u679c\u5982\u4e0b \u811a\u672c\u5462\u4e5f\u8f83\u4e3a\u7b80\u5355\uff0c\u4e3b\u8981\u4f7f\u7528\u5230\u4e86OnDrag\u6765\u5b8c\u6210 public class MoveCtrl : MonoBehaviour , IDragHandler , IEndDragHandler { //\u56fe\u6807\u79fb\u52a8\u6700\u5927\u534a\u5f84 public float maxRadius = 200 ; //\u521d\u59cb\u5316\u80cc\u666f\u56fe\u6807\u4f4d\u7f6e private Vector2 moveBackPos ; private float horizontal = 0 ; private float vertical = 0 ; public float Horizontal { get { return horizontal ; } } public float Vertical { get { return vertical ; } } // Use this for initialization void Start () { //\u521d\u59cb\u5316\u4f4d\u7f6e moveBackPos = transform . parent . transform . position ; } // Update is called once per frame void Update () { horizontal = transform . localPosition . x ; vertical = transform . localPosition . y ; } /// <summary> /// \u5f53\u9f20\u6807\u5f00\u59cb\u62d6\u62fd\u65f6 /// </summary> /// <param name=\"eventData\"></param> public void OnDrag ( PointerEventData eventData ) { //\u83b7\u53d6\u9f20\u6807\u4f4d\u7f6e\u4e0e\u521d\u59cb\u4f4d\u7f6e\u4e4b\u95f4\u7684\u5411\u91cf Vector2 oppsitionVec = eventData . position - moveBackPos ; //\u83b7\u53d6\u5411\u91cf\u7684\u957f\u5ea6 float distance = Vector3 . Magnitude ( oppsitionVec ); //\u6700\u5c0f\u503c\u4e0e\u6700\u5927\u503c\u4e4b\u95f4\u53d6\u534a\u5f84 float radius = Mathf . Clamp ( distance , 0 , maxRadius ); //\u9650\u5236\u534a\u5f84\u957f\u5ea6 transform . position = moveBackPos + oppsitionVec . normalized * radius ; } /// <summary> /// \u5f53\u9f20\u6807\u505c\u6b62\u62d6\u62fd\u65f6 /// </summary> /// <param name=\"eventData\"></param> public void OnEndDrag ( PointerEventData eventData ) { transform . position = moveBackPos ; transform . localPosition = Vector3 . zero ; } } \u8fd9\u6837\u6211\u4eec\u53ea\u9700\u5728\u573a\u666f\u63a7\u5236\u5668\u4e2d\u7684Update\u52a0\u4e0a\u5bf9\u5e94\u6839\u636eVertical\u548cHorizontal\u6765\u79fb\u52a8\u7684\u4ee3\u7801\u5373\u53ef\u5b9e\u73b0\u6447\u6746\u63a7\u5236\u73a9\u5bb6\u3002","title":"\u6447\u6746\u5236\u4f5c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#_6","text":"\u6211\u7684\u6e38\u620f\u573a\u666f\u6253\u7b97\u4f7f\u7528ImageTarget\uff0c\u5f53\u8bc6\u522b\u5230\u76f8\u5e94\u56fe\u50cf\uff0c\u6e38\u620f\u573a\u666f\u5c31\u4f1a\u663e\u793a\u3002\u4e3a\u4e86\u4f7f\u7528Nav Mesh, \u5148\u628aImage Target\u7684Mesh Filter\u7684Mesh\u6539\u6210Plane\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528Unity\u7684\u5bfc\u822a\u4e0e\u5bfb\u8def\u4e86\u3002 \u521b\u5efa\u597d\u6e38\u620f\u5bf9\u8c61\u4e4b\u540e\uff0c\u6211\u4eec\u628a\u7269\u4f53\u4e0d\u80fd\u5728\u4e0a\u79fb\u52a8\u7684\u5bf9\u8c61\u5728Navigation\u7684Object\u4e2d\u8c03\u6210\u4ee5\u4e0b\u5c5e\u6027 Bake\u7ed3\u679c\u5982\u4e0b","title":"\u573a\u666f\u5236\u4f5c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#_7","text":"\u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u6211\u4eec\u7684\u4ee3\u7801\u4e86\uff0c\u8fd9\u4e00\u6b21\u7684\u4f5c\u4e1a\u6211\u4f7f\u7528\u4e86\u5bfc\u6f14\u53ca\u5de5\u5382\u6a21\u5f0f\uff0c\u90e8\u5206\u501f\u9274\u4e86 \u5e08\u5144\u7684\u4f18\u79c0\u535a\u5ba2 ,\u8fd9\u91cc\u8bf4\u8bf4\u90e8\u5206\u7c7b\u7684\u4ee3\u7801","title":"\u4ee3\u7801\u5b8c\u6210"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#tank","text":"using System.Collections ; using System.Collections.Generic ; using UnityEngine ; using UnityEngine.AI ; public class Tank : MonoBehaviour { private float hp ; public float getHp () { return hp ; } public void setHp ( float hp ) { this . hp = hp ; } }","title":"Tank"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#player","text":"\u5f53\u751f\u547d\u503c\u5c0f\u4e8e0\u65f6\uff0cGameOver,\u5766\u514b\u7206\u70b8 using System.Collections ; using System.Collections.Generic ; using UnityEngine ; using UnityEngine.AI ; public class Player : Tank { public void init () { this . gameObject . SetActive ( true ); setHp ( 300f ); } void Start () { setHp ( 300f ); } void Update () { if ( getHp () <= 0 && gameObject . activeSelf ) { this . gameObject . SetActive ( false ); ParticleSystem explosion = Singleton < AllFactory >. Instance . getTankPs (); //\u83b7\u53d6\u7206\u70b8\u7684\u7c92\u5b50\u7cfb\u7edf explosion . transform . position = transform . position ; //\u8bbe\u7f6e\u7c92\u5b50\u7cfb\u7edf\u4f4d\u7f6e explosion . Play (); (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). gameOver = true ; } } }","title":"Player"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#enemy","text":"public class Enemy : Tank { private Vector3 target ; private bool gameover ; //\u6839\u636eFirstSceneController\u4e2d\u7684gameOver\uff0c\u5224\u65ad\u6e38\u620f\u662f\u5426\u7ed3\u675f private AllFactory allFactory ; public void init () { setHp ( 100f ); //\u8bbe\u7f6e\u521d\u59cb\u751f\u547d\u503c StopAllCoroutines (); //\u505c\u6b62\u6240\u6709\u534f\u7a0b StartCoroutine ( shoot ()); //\u5f00\u59cb\u5c04\u51fb\u7684\u534f\u7a0b } void Start () { setHp ( 100f ); //\u8bbe\u7f6e\u521d\u59cb\u751f\u547d\u503c allFactory = Singleton < AllFactory >. Instance ; StartCoroutine ( shoot ()); //\u5f00\u59cb\u5c04\u51fb\u7684\u534f\u7a0b } void Update () { gameover = (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). gameOver ; if (! gameover ) { target = (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). getPlayerPos (); // \u611f\u77e5 if ( getHp () <= 0 && gameObject . activeSelf ) { //\u601d\u8003 allFactory . recycleTank ( this . gameObject ); (( FirstSceneController ) GameDirector . getInstance (). currentSceneController ). GetScore (); StopCoroutine ( shoot ()); } else { NavMeshAgent agent = GetComponent < NavMeshAgent >(); agent . SetDestination ( target ); } } else { NavMeshAgent agent = GetComponent < NavMeshAgent >(); agent . velocity = Vector3 . zero ; agent . ResetPath (); } } IEnumerator shoot () { // \u884c\u4e3a while (! gameover && getHp () > 0 ) { for ( float i = 2 ; i > 0 ; i -= Time . deltaTime ) { yield return 0 ; } if ( Vector3 . Distance ( transform . position , target ) < 15 ) { //\u8ddd\u79bb\u5224\u65ad\u662f\u5426\u653b\u51fb GameObject bullet = allFactory . getBullet ( tankType . Enemy ); bullet . transform . position = new Vector3 ( transform . position . x , 1.5f , transform . position . z ) + transform . forward * 1.5f ; bullet . transform . forward = transform . forward ; Rigidbody rb = bullet . GetComponent < Rigidbody >(); rb . AddForce ( bullet . transform . forward * 20 , ForceMode . Impulse ); } } } }","title":"Enemy"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#allfactory","text":"AllFactory\u628a\u6240\u6709\u5766\u514b\u3001\u5b50\u5f39\u548c\u4e24\u4e2a\u7206\u70b8\u96c6\u4e2d\u5230\u4e00\u8d77\u7ba1\u7406 using System.Collections ; using System.Collections.Generic ; using UnityEngine ; public enum tankType : int { Player , Enemy } public class AllFactory : MonoBehaviour { public GameObject player ; //\u73a9\u5bb6\u5766\u514b public GameObject bullet ; //\u5b50\u5f39 public Transform imageTarget ; private Dictionary < int , GameObject > usingTanks ; private Dictionary < int , GameObject > freeTanks ; private Dictionary < int , GameObject > usingBullets ; private Dictionary < int , GameObject > freeBullets ; private List < ParticleSystem > psContainer ; private List < ParticleSystem > tankPsContainer ; void Awake () { usingTanks = new Dictionary < int , GameObject >(); freeTanks = new Dictionary < int , GameObject >(); usingBullets = new Dictionary < int , GameObject >(); freeBullets = new Dictionary < int , GameObject >(); psContainer = new List < ParticleSystem >(); tankPsContainer = new List < ParticleSystem > (); } void Start () { } public GameObject getPlayer () { //\u83b7\u53d6\u73a9\u5bb6\u5766\u514b return player ; } public GameObject getTank () { if ( freeTanks . Count == 0 ) { GameObject newTank = Instantiate ( Resources . Load ( \"Prefabs/Enemy\" )) as GameObject ; usingTanks . Add ( newTank . GetInstanceID (), newTank ); newTank . transform . parent = imageTarget ; newTank . transform . localScale = new Vector3 ( 0.02f , 0.02f , 0.02f ); newTank . transform . localPosition = new Vector3 ((( float ) Random . Range (- 4 , 4 ))/ 10 , 0 , (( float ) Random . Range (- 4 , 4 ))/ 10 ); return newTank ; } foreach ( KeyValuePair < int , GameObject > pair in freeTanks ) { pair . Value . SetActive ( true ); freeTanks . Remove ( pair . Key ); usingTanks . Add ( pair . Key , pair . Value ); pair . Value . transform . parent = imageTarget ; pair . Value . transform . localPosition = new Vector3 ((( float ) Random . Range (- 4 , 4 ))/ 10 , 0 , (( float ) Random . Range (- 4 , 4 ))/ 10 ); pair . Value . GetComponent < Enemy > (). init (); return pair . Value ; } return null ; } public GameObject getBullet ( tankType type ) { if ( freeBullets . Count == 0 ) { GameObject newBullet = Instantiate ( Resources . Load ( \"Prefabs/Bullet\" )) as GameObject ; newBullet . GetComponent < Bullet >(). setTankType ( type ); usingBullets . Add ( newBullet . GetInstanceID (), newBullet ); newBullet . transform . parent = imageTarget ; return newBullet ; } foreach ( KeyValuePair < int , GameObject > pair in freeBullets ) { pair . Value . SetActive ( true ); pair . Value . GetComponent < Bullet >(). setTankType ( type ); freeBullets . Remove ( pair . Key ); usingBullets . Add ( pair . Key , pair . Value ); pair . Value . GetComponent < Rigidbody > (). velocity = Vector3 . zero ; return pair . Value ; } return null ; } public ParticleSystem getPs () { for ( int i = 0 ; i < psContainer . Count ; i ++) { if (! psContainer [ i ]. isPlaying ) { return psContainer [ i ]; } } GameObject explore = Instantiate ( Resources . Load ( \"Prefabs/ShellExplosion\" )) as GameObject ; explore . transform . parent = imageTarget ; ParticleSystem newPs = explore . GetComponent < ParticleSystem > (); psContainer . Add ( newPs ); return newPs ; } public ParticleSystem getTankPs () { for ( int i = 0 ; i < tankPsContainer . Count ; i ++) { if (! tankPsContainer [ i ]. isPlaying ) { return tankPsContainer [ i ]; } } GameObject explore = Instantiate ( Resources . Load ( \"Prefabs/TankExplosion\" )) as GameObject ; explore . transform . parent = imageTarget ; ParticleSystem newPs = explore . GetComponent < ParticleSystem > (); tankPsContainer . Add ( newPs ); return newPs ; } public void recycleTank ( GameObject tank ) { tank . SetActive ( false ); usingTanks . Remove ( tank . GetInstanceID ()); freeTanks . Add ( tank . GetInstanceID (), tank ); ParticleSystem explosion = getTankPs (); //\u83b7\u53d6\u7206\u70b8\u7684\u7c92\u5b50\u7cfb\u7edf explosion . transform . position = tank . transform . position ; //\u8bbe\u7f6e\u7c92\u5b50\u7cfb\u7edf\u4f4d\u7f6e explosion . Play (); } public void recycleBullet ( GameObject bullet ) { usingBullets . Remove ( bullet . GetInstanceID ()); freeBullets . Add ( bullet . GetInstanceID (), bullet ); bullet . GetComponent < Rigidbody >(). velocity = Vector3 . zero ; bullet . SetActive ( false ); } public void recycleAllTanks () { List < int > keyList = new List < int >( usingTanks . Keys ); foreach ( int key in keyList ) { if ( usingTanks . ContainsKey ( key )) { usingTanks [ key ]. SetActive ( false ); freeTanks . Add ( key , usingTanks [ key ]); usingTanks . Remove ( key ); } } } public void recycleAllBullets () { List < int > keyList = new List < int >( usingBullets . Keys ); foreach ( int key in keyList ) { if ( usingBullets . ContainsKey ( key )) { usingBullets [ key ]. SetActive ( false ); freeBullets . Add ( key , usingBullets [ key ]); usingBullets . Remove ( key ); } } } public void reset () { recycleAllTanks (); recycleAllBullets (); player . GetComponent < Player > (). init (); } }","title":"AllFactory"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb013-AR\u7248\u7684\u5766\u514b\u5bf9\u6218/#firstscenecontroller","text":"using System.Collections ; using System.Collections.Generic ; using UnityEngine ; using UnityEngine.UI ; public class FirstSceneController : MonoBehaviour , ISceneController { public MoveCtrl move ; public GameObject tank ; public Button btn ; public bool gameOver = false ; private AllFactory allFactory ; GUIStyle headerStyle ; private int Count = 0 ; private int Score = 0 ; // Use this for initialization void Awake () { GameDirector director = GameDirector . getInstance (); director . currentSceneController = this ; allFactory = Singleton < AllFactory >. Instance ; tank = allFactory . getPlayer (); btn . GetComponent < Button >(). onClick . AddListener ( delegate () { this . attackHandler (); }); } void Start () { Count = 0 ; headerStyle = new GUIStyle (); headerStyle . fontSize = 100 ; headerStyle . alignment = TextAnchor . MiddleCenter ; } public void loadResources () { } public void GetScore () { ++ Score ; } void GameOver () { this . gameOver = true ; } public Vector3 getPlayerPos () { return tank . transform . position ; } // Update is called once per frame void Update () { if ( gameOver ) return ; if ( Count ++ % 120 == 0 ) { allFactory . getTank (); } float ver = - move . Horizontal ; float hor = move . Vertical ; Vector3 direction = new Vector3 ( hor , 0 , ver ); if ( direction != Vector3 . zero ) { //\u63a7\u5236\u8f6c\u5411 tank . transform . rotation = Quaternion . Lerp ( tank . transform . rotation , Quaternion . LookRotation ( direction ), Time . deltaTime * 20 ); //\u5411\u524d\u79fb\u52a8 tank . transform . Translate ( Vector3 . forward * Time . deltaTime * 5 ); } } void OnGUI () { GUI . Label ( new Rect ( Screen . width - 500 , 80 , 400 , 110 ), \"Score: \" + Score , headerStyle ); if ( gameOver ) { GUI . Label ( new Rect ( Screen . width / 2 - 200 , Screen . height / 2 - 100 , 400 , 110 ), \"Game Over!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 150 , Screen . height / 2 + 30 , 300 , 120 ), \"Replay\" )) { allFactory . reset (); Score = 0 ; Count = 0 ; gameOver = false ; } } } void attackHandler () { if ( gameOver ) return ; GameObject bullet = allFactory . getBullet ( tankType . Player ); //\u83b7\u53d6\u5b50\u5f39\uff0c\u8bbe\u7f6e\u5176\u53d1\u51fa\u5766\u514b\u7684\u7c7b\u578b bullet . transform . position = new Vector3 ( tank . transform . position . x , 1.5f , tank . transform . position . z ) + tank . transform . forward * 1.5f ; bullet . transform . forward = tank . transform . forward ; Rigidbody rb = bullet . GetComponent < Rigidbody >(); rb . AddForce ( bullet . transform . forward * 20 , ForceMode . Impulse ); //\u7ed9\u5b50\u5f39\u4e00\u4e2a\u5411\u524d\u7684\u529b\uff0c\u5b9e\u73b0\u5b50\u5f39\u5411\u524d\u79fb\u52a8 } } \u5230\u8fd9\u91cc\uff0c\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u57fa\u672c\u5b8c\u6210\u4e86\uff0c\u6e38\u620f\u7684\u573a\u666f\u56fe\u50cf\u5982\u4e0b\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u4ece \u6211\u7684Github \u4e0b\u8f7d\u73a9\u4e00\u4e0b","title":"FirstSceneController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218/","text":"\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218 \u4f5c\u4e1a\u7d20\u6750 \u5b98\u65b9Tank Tutourial\u7684\u7d20\u6750 \u5b9e\u73b0\u6548\u679c \u4ee3\u7801\u4ed3\u5e93 Github Gif \u6f14\u793a\u89c6\u9891 \u6f14\u793a\u89c6\u9891 \u5b9e\u73b0\u4e2d\u9047\u5230\u7684\u95ee\u9898 \u672c\u5468\u6211\u7684\u9879\u76ee\u4e2d\u6709\u8f83\u591a\u5bf9\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u6210\u679c\u7684\u590d\u7528\uff0c\u800c\u4e14\u5766\u514b\u5927\u6218\u672c\u8d28\u4e0a\u6211\u4eec\u8bfe\u4e0a\u7684\u6253\u5b50\u5f39\u7684Demo\u7684\u4ee3\u7801\u903b\u8f91\u5176\u5b9e\u4e5f\u5341\u5206\u76f8\u50cf\uff0c\u90fd\u662f\u542b\u6709\u73a9\u5bb6\u72b6\u6001\u540c\u6b65\u3001\u8054\u7f51\u7684\u5b50\u5f39\u53d1\u5c04\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u6211\u8fd9\u6b21\u4f5c\u4e1a\u7684\u5206\u4eab\u4e0d\u6253\u7b97\u600e\u4e48\u53bb\u8bb2\u8ff0\u6211\u7684\u4ee3\u7801,\u5b8c\u6574\u7684\u9879\u76ee\u4e5f\u53ef\u4ee5\u5728 \u6211\u7684Github\u4ed3\u5e93 \u770b\u5230\u3002\u4ece\u5206\u4eab\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u4e2a\u4eba\u611f\u89c9\u628a\u6211\u5f00\u53d1\u65f6\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u4ee5\u53ca\u6211\u81ea\u5df1\u5f97\u5230\u6211\u5bf9\u4e8e\u5176\u89e3\u51b3\u65b9\u6848\u7684\u8fc7\u7a0b\u5206\u4eab\u51fa\u6765\u66f4\u52a0\u5177\u6709\u610f\u4e49\u3002 \u5728\u6839\u636e\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u7684UNet\u4f7f\u7528\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u7ed9\u6211\u7684\u5766\u514b\u5927\u6218\u52a0\u4e0a\u7f51\u7edc\u5bf9\u6218\u7684\u529f\u80fd\u540e\uff0c\u9996\u5148\u6211\u60f3\u5230\u8981\u89e3\u51b3\u7684\u5c31\u662f\u5728\u8bfe\u5802\u5b9e\u73b0\u4e2d\u5c31\u53d1\u73b0\u7684\u4e00\u4e2a\u5b50\u5f39\u4f1a\u6253\u5230\u81ea\u5df1\u7684\u95ee\u9898 \u9996\u5148\uff0c\u6211\u60f3\u5230\u4e86\u4ee5\u4e0b\u51e0\u79cd\u89e3\u51b3\u7684\u65b9\u6cd5 \u589e\u52a0\u5b50\u5f39\u53d1\u51fa\u65f6\u8ddd\u79bb\u73a9\u5bb6\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u51cf\u5c11\u5b50\u5f39\u5224\u65ad\u7684\u8303\u56f4\uff0c\u4f7f\u5f97\u73a9\u5bb6\u78b0\u4e0d\u5230\u81ea\u5df1\u7684\u5b50\u5f39 \u4f7f\u7528Tag\u6765\u5224\u65ad\uff1f \u7ed9\u5b50\u5f39\u589e\u6dfb\u4e00\u4e2a\u53d1\u51fa\u8005\u7684\u53d8\u91cf\u7528\u4e8e\u5224\u65ad\u78b0\u649e\u3002 \u4e0b\u9762\u6211\u4eec\u5206\u522b\u8bf4\u8bf4\u4ee5\u4e0a\u7684\u89e3\u51b3\u529e\u6cd5: \u589e\u52a0\u5b50\u5f39\u53d1\u51fa\u65f6\u8ddd\u79bb\u73a9\u5bb6\u7684\u8ddd\u79bb\uff0c\u4f7f\u5f97\u73a9\u5bb6\u78b0\u4e0d\u5230\u81ea\u5df1\u7684\u5b50\u5f39 \u8fd9\u4e2a\u89e3\u51b3\u65b9\u6cd5\u662f\u6709\u6548\u679c\u7684\uff0c\u4f46\u662f\u5728\u7f51\u7edc\u72b6\u51b5\u4e0d\u597d\u65f6\uff0cClient\u7aef\u7ecf\u5e38\u8fd8\u662f\u4f1a\u51fa\u73b0\u81ea\u5df1\u4e0e\u5b50\u5f39\u78b0\u649e\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6cbb\u6807\u4e0d\u6cbb\u672c\uff0c\u4e0d\u662f\u4e00\u79cd\u597d\u7684\u65b9\u6cd5\u3002 \u4f7f\u7528Tag\u6765\u5224\u65ad\uff1f \u4e00\u5f00\u59cb\u50bb\u50bb\u7684\u60f3\u7740\u80fd\u4e0d\u80fd\u901a\u8fc7OnStartLocalPlayer\u4fee\u6539\u81ea\u5df1\u7684Tag\u7136\u540e\u5728\u5224\u65ad\u65f6\u5224\u65adtag\u5462\u3002\u4f46\u662f\u540e\u6765\u4e00\u60f3OnStartLocalPlayer\u53ea\u5728\u672c\u5730\u8d77\u4f5c\u7528\u554a\uff0c\u8fd9\u6837\u80af\u5b9a\u4e0d\u5bf9\u7684\u3002\u3002\u800c\u4e14\u60f3\u4e86\u4e00\u60f3\u89c9\u5f97\u4f7f\u7528tag\u4e0d\u592a\u73b0\u5b9e\uff0c\u6240\u4ee5\u8fd9\u65b9\u6cd5\u5c31\u88ab\u6211\u5426\u51b3\u4e86\u3002 \u7ed9\u5b50\u5f39\u589e\u6dfb\u4e00\u4e2a\u53d1\u51fa\u8005\u7684\u53d8\u91cf\u7528\u4e8e\u5224\u65ad\u78b0\u649e\u3002 \u8fd9\u79cd\u65b9\u6cd5\u662f\u51e0\u79cd\u65b9\u6cd5\u91cc\u9762\u6700\u73b0\u5b9e\u7684\uff0c\u80af\u5b9a\u53ef\u4ee5\u5b9e\u73b0\uff0c\u800c\u4e14\u662f\u4e00\u79cd\u6cbb\u672c\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u5728\u4e0a\u9762\u51e0\u79cd\u65b9\u6cd5\u4e2d\uff0c\u6211\u4f7f\u7528\u7684\u662f\u7b2c\u4e09\u79cd\u65b9\u6cd5\u3002 \u9996\u5148\uff0c\u6211\u7ed9\u5b50\u5f39\u52a0\u4e86\u4e00\u4e2afromID\u7528\u4e8e\u8bb0\u5f55\u628a\u5b83\u5c04\u51fa\u7684Player\u7684instanceID\uff0c\u5728\u521b\u5efa\u5b50\u5f39\u65f6\u7ed9\u5b50\u5f39\u7684Bullet Component\u9644\u4e0a\u5bf9\u5e94\u7684\u503c\uff0c\u4f46\u662f\u540e\u9762\u53d1\u73b0\u6ca1\u6709\u8fbe\u5230\u671f\u671b\u7684\u6548\u679c\uff0c\u7ed3\u679c\u53d1\u73b0\uff0c\u5ba2\u6237\u7aef\u7684\u5b50\u5f39\u7684fromID\u5e76\u6ca1\u6709\u6539\u53d8\uff0c\u5176\u9700\u8981\u53d8\u6210SyncVar\u624d\u4f1a\u5728\u5ba2\u6237\u7aef\u540c\u6b65\uff0c\u8fd0\u884c\uff0c\u53d1\u73b0\u7ed3\u679cOK\uff0c\u5b50\u5f39\u4e0d\u4f1a\u88ab\u81ea\u5df1\u78b0\u5230\u800c\u7206\u70b8\uff0c\u55ef\uff0c\u5f88\u597d\u3002\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u5b50\u5f39\u4f1a\u6253\u5230\u81ea\u5df1\u7684\u95ee\u9898\u7684\u6d88\u9664\u4e86\uff0c\u8fd9\u662f\u6211\u5bf9\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u65b9\u6848\u7684\u601d\u8003\uff0c\u4e0d\u8fc7\u611f\u89c9\u8fd9\u6837\u5199\u8fd8\u662f\u6709\u70b9\u4e0d\u4f18\u96c5\uff0c\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u66f4\u52a0\u4f18\u96c5\u3001\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6709\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7github\u4ed3\u5e93\u7684ISSUE\u6211\u4eec\u63a2\u8ba8\u4e00\u4e0b\ud83d\ude43\u3002 \u7206\u70b8\u53ea\u4ea7\u751f\u5728Server \u89e3\u51b3\u4e86\u4e0a\u9762\u5b50\u5f39\u7684\u95ee\u9898\u540e\uff0c\u7f8e\u6ecb\u6ecb\u3002\u3002\uff01\uff01\uff01\ud83c\udf1a\u600e\u4e48\u5ba2\u6237\u7aef\u7684\u7206\u70b8\u6ca1\u4e86\u3002\u3002Debug\u4e86\u4e00\u4e0b\u53d1\u73b0\u5b50\u5f39\u5728\u670d\u52a1\u7aef\u5148\u78b0\u649e\u5148Destroy\uff0c\u6240\u4ee5\u5ba2\u6237\u7aef\u7684\u5b50\u5f39\u88abDestroy\uff0c\u65e0\u78b0\u649e\u4ea7\u751f\uff0c\u7ecf\u8fc7\u601d\u8003\u6211\u628a\u7206\u70b8\u6548\u679c\u4ee5\u53ca\u5b50\u5f39Destroy\u5f04\u6210\u4e86\u4e00\u4e2aClientRpc\u51fd\u6570\uff0c\u6070\u597d\u8fd9\u6837\u4e5f\u53ef\u4ee5\u4e0e\u672c\u5730\u7684\u7c92\u5b50\u5de5\u5382\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u6d4b\u8bd5\u53d1\u73b0\u6548\u679c\u548c\u9884\u671f\u76f8\u7b26\u3002 ClientRpc\u7684\u4f5c\u7528\u6070\u5de7\u4e0eCommand\u76f8\u53cd\uff0c\u5176\u662f\u670d\u52a1\u5668\u6267\u884c\u7684\u4ee3\u7801\uff0c\u8c03\u7528\u6240\u6709\u5ba2\u6237\u7aef\u6267\u884c\u51fd\u6570\uff0c\u800cCommand\u5219\u662f\u672c\u5730\u73a9\u5bb6\u5bf9\u8c61\u6267\u884c\u7684\u4ee3\u7801\uff0c\u8c03\u7528\u670d\u52a1\u5668\u6267\u884c\u7684\u51fd\u6570 if ( flag == true && this . gameObject . activeSelf ) { if ( isServer ) RpcBulletExplosion (); } ... [ClientRpc] void RpcBulletExplosion () { ParticleSystem explosion = Singleton < PSFactory >. Instance . getPs (); explosion . transform . position = transform . position ; //\u8bbe\u7f6e\u7c92\u5b50\u7cfb\u7edf\u4f4d\u7f6e explosion . Play (); Destroy ( this . gameObject ); } 3. \u5b50\u5f39\u79fb\u52a8\u76f8\u5173 \u56e0\u4e3a\u5728\u4e0a\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u7684\u5b50\u5f39\u79fb\u52a8\u662f\u901a\u8fc7\u65bd\u52a0\u4e00\u4e2a\u5411\u524d\u7684\u529b\u6765\u5b9e\u73b0\u7684\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\u5728\u53d1\u51fa\u540e\u8fd8\u4f1a\u6301\u7eed\u6539\u53d8\u7269\u4f53\u7684\u901f\u5ea6\uff0c\u4e0d\u5229\u4e8e\u6211\u4eec\u8054\u7f51\u5c04\u51fb\uff0c\u56e0\u4e3a\u8fd9\u91cc\u6d89\u53ca\u5230\u4e00\u4e2a\u53d1\u9001\u901f\u7387Network Send Rate\u7684\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u5728\u5b50\u5f39\u53d1\u51fa\u540e\u4e0d\u53bb\u6539\u53d8\u5176\u65b9\u5411\u6216\u901f\u5ea6\uff0c\u6211\u4eec\u7684\u53d1\u9001\u901f\u7387\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0\uff0c\u4e0d\u9700\u8981\u53d1\u9001\u79fb\u52a8\u66f4\u65b0\uff0c\u8fd9\u662f\u6bd4\u8f83\u5408\u7406\u7684\uff0c\u6211\u4eec\u5e94\u8be5\u4ee5\u9644\u52a0\u901f\u5ea6\u7684\u65b9\u5f0f\u53bb\u4f7f\u5b50\u5f39\u5b8c\u6210\u79fb\u52a8\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u53d1\u9001\u901f\u7387\u8bbe\u7f6e\u4e3a0\u3002\u5982\u679c\u4f7f\u7528\u6211\u4eec\u4e00\u5f00\u59cb\u7684\u9644\u52a0\u529b\u7684\u65b9\u5f0f\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u8981\u628a\u8be5\u901f\u7387\u8c03\u9ad8\uff0c\u589e\u52a0\u4e86\u65e0\u5fc5\u8981\u7684\u7f51\u7edc\u8d1f\u8f7d\u3002 \u4ee5\u4e0a\u5c31\u662f\u6211\u8fd9\u6b21\u5b9e\u9a8c\u78b0\u5230\u7684\u6bd4\u8f83\u5173\u952e\u7684\u95ee\u9898\u4ee5\u53ca\u601d\u8003\uff0c\u56e0\u4e3a\u5bf9\u4e8eUNet\u7684\u4e86\u89e3\u4e0d\u662f\u5f88\u6df1\u5165\uff0c\u800c\u4e14\u4e34\u8fd1\u671f\u672b\uff0c\u65f6\u95f4\u4e0d\u592a\u5145\u88d5\u65e0\u6cd5\u6df1\u5165\u53bb\u4e86\u89e3\uff0c\u611f\u89c9\u6709\u7684\u5730\u65b9\u8fd8\u662f\u505a\u7684\u4e0d\u662f\u5f88\u5230\u4f4d\uff0c\u6e38\u620f\u7684\u529f\u80fd\u4e5f\u4e0d\u662f\u592a\u591a\uff0c\u7b49\u5230\u8003\u5b8c\u8bd5\u4e86\u6709\u65f6\u95f4\u7684\u8bdd\u4f1a\u66f4\u6df1\u5165\u4e86\u89e3\u4e00\u4e0b\uff0c\u589e\u52a0\u4e00\u4e9b\u529f\u80fd\u3002\u5b8c\u6574\u7684\u4ee3\u7801\u5728\u6700\u4e0a\u9762\u5df2\u7ecf\u7ed9\u51fa\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u770b\u4e0b\u3002","title":"\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218/#14-","text":"","title":"\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218/#_1","text":"\u5b98\u65b9Tank Tutourial\u7684\u7d20\u6750","title":"\u4f5c\u4e1a\u7d20\u6750"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218/#_2","text":"\u4ee3\u7801\u4ed3\u5e93 Github Gif \u6f14\u793a\u89c6\u9891 \u6f14\u793a\u89c6\u9891","title":"\u5b9e\u73b0\u6548\u679c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb014-\u7f51\u7edc\u7248\u5766\u514b\u5927\u6218/#_3","text":"\u672c\u5468\u6211\u7684\u9879\u76ee\u4e2d\u6709\u8f83\u591a\u5bf9\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u6210\u679c\u7684\u590d\u7528\uff0c\u800c\u4e14\u5766\u514b\u5927\u6218\u672c\u8d28\u4e0a\u6211\u4eec\u8bfe\u4e0a\u7684\u6253\u5b50\u5f39\u7684Demo\u7684\u4ee3\u7801\u903b\u8f91\u5176\u5b9e\u4e5f\u5341\u5206\u76f8\u50cf\uff0c\u90fd\u662f\u542b\u6709\u73a9\u5bb6\u72b6\u6001\u540c\u6b65\u3001\u8054\u7f51\u7684\u5b50\u5f39\u53d1\u5c04\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u6211\u8fd9\u6b21\u4f5c\u4e1a\u7684\u5206\u4eab\u4e0d\u6253\u7b97\u600e\u4e48\u53bb\u8bb2\u8ff0\u6211\u7684\u4ee3\u7801,\u5b8c\u6574\u7684\u9879\u76ee\u4e5f\u53ef\u4ee5\u5728 \u6211\u7684Github\u4ed3\u5e93 \u770b\u5230\u3002\u4ece\u5206\u4eab\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u4e2a\u4eba\u611f\u89c9\u628a\u6211\u5f00\u53d1\u65f6\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u4ee5\u53ca\u6211\u81ea\u5df1\u5f97\u5230\u6211\u5bf9\u4e8e\u5176\u89e3\u51b3\u65b9\u6848\u7684\u8fc7\u7a0b\u5206\u4eab\u51fa\u6765\u66f4\u52a0\u5177\u6709\u610f\u4e49\u3002 \u5728\u6839\u636e\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u7684UNet\u4f7f\u7528\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u7ed9\u6211\u7684\u5766\u514b\u5927\u6218\u52a0\u4e0a\u7f51\u7edc\u5bf9\u6218\u7684\u529f\u80fd\u540e\uff0c\u9996\u5148\u6211\u60f3\u5230\u8981\u89e3\u51b3\u7684\u5c31\u662f\u5728\u8bfe\u5802\u5b9e\u73b0\u4e2d\u5c31\u53d1\u73b0\u7684\u4e00\u4e2a\u5b50\u5f39\u4f1a\u6253\u5230\u81ea\u5df1\u7684\u95ee\u9898 \u9996\u5148\uff0c\u6211\u60f3\u5230\u4e86\u4ee5\u4e0b\u51e0\u79cd\u89e3\u51b3\u7684\u65b9\u6cd5 \u589e\u52a0\u5b50\u5f39\u53d1\u51fa\u65f6\u8ddd\u79bb\u73a9\u5bb6\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u51cf\u5c11\u5b50\u5f39\u5224\u65ad\u7684\u8303\u56f4\uff0c\u4f7f\u5f97\u73a9\u5bb6\u78b0\u4e0d\u5230\u81ea\u5df1\u7684\u5b50\u5f39 \u4f7f\u7528Tag\u6765\u5224\u65ad\uff1f \u7ed9\u5b50\u5f39\u589e\u6dfb\u4e00\u4e2a\u53d1\u51fa\u8005\u7684\u53d8\u91cf\u7528\u4e8e\u5224\u65ad\u78b0\u649e\u3002 \u4e0b\u9762\u6211\u4eec\u5206\u522b\u8bf4\u8bf4\u4ee5\u4e0a\u7684\u89e3\u51b3\u529e\u6cd5: \u589e\u52a0\u5b50\u5f39\u53d1\u51fa\u65f6\u8ddd\u79bb\u73a9\u5bb6\u7684\u8ddd\u79bb\uff0c\u4f7f\u5f97\u73a9\u5bb6\u78b0\u4e0d\u5230\u81ea\u5df1\u7684\u5b50\u5f39 \u8fd9\u4e2a\u89e3\u51b3\u65b9\u6cd5\u662f\u6709\u6548\u679c\u7684\uff0c\u4f46\u662f\u5728\u7f51\u7edc\u72b6\u51b5\u4e0d\u597d\u65f6\uff0cClient\u7aef\u7ecf\u5e38\u8fd8\u662f\u4f1a\u51fa\u73b0\u81ea\u5df1\u4e0e\u5b50\u5f39\u78b0\u649e\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6cbb\u6807\u4e0d\u6cbb\u672c\uff0c\u4e0d\u662f\u4e00\u79cd\u597d\u7684\u65b9\u6cd5\u3002 \u4f7f\u7528Tag\u6765\u5224\u65ad\uff1f \u4e00\u5f00\u59cb\u50bb\u50bb\u7684\u60f3\u7740\u80fd\u4e0d\u80fd\u901a\u8fc7OnStartLocalPlayer\u4fee\u6539\u81ea\u5df1\u7684Tag\u7136\u540e\u5728\u5224\u65ad\u65f6\u5224\u65adtag\u5462\u3002\u4f46\u662f\u540e\u6765\u4e00\u60f3OnStartLocalPlayer\u53ea\u5728\u672c\u5730\u8d77\u4f5c\u7528\u554a\uff0c\u8fd9\u6837\u80af\u5b9a\u4e0d\u5bf9\u7684\u3002\u3002\u800c\u4e14\u60f3\u4e86\u4e00\u60f3\u89c9\u5f97\u4f7f\u7528tag\u4e0d\u592a\u73b0\u5b9e\uff0c\u6240\u4ee5\u8fd9\u65b9\u6cd5\u5c31\u88ab\u6211\u5426\u51b3\u4e86\u3002 \u7ed9\u5b50\u5f39\u589e\u6dfb\u4e00\u4e2a\u53d1\u51fa\u8005\u7684\u53d8\u91cf\u7528\u4e8e\u5224\u65ad\u78b0\u649e\u3002 \u8fd9\u79cd\u65b9\u6cd5\u662f\u51e0\u79cd\u65b9\u6cd5\u91cc\u9762\u6700\u73b0\u5b9e\u7684\uff0c\u80af\u5b9a\u53ef\u4ee5\u5b9e\u73b0\uff0c\u800c\u4e14\u662f\u4e00\u79cd\u6cbb\u672c\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u5728\u4e0a\u9762\u51e0\u79cd\u65b9\u6cd5\u4e2d\uff0c\u6211\u4f7f\u7528\u7684\u662f\u7b2c\u4e09\u79cd\u65b9\u6cd5\u3002 \u9996\u5148\uff0c\u6211\u7ed9\u5b50\u5f39\u52a0\u4e86\u4e00\u4e2afromID\u7528\u4e8e\u8bb0\u5f55\u628a\u5b83\u5c04\u51fa\u7684Player\u7684instanceID\uff0c\u5728\u521b\u5efa\u5b50\u5f39\u65f6\u7ed9\u5b50\u5f39\u7684Bullet Component\u9644\u4e0a\u5bf9\u5e94\u7684\u503c\uff0c\u4f46\u662f\u540e\u9762\u53d1\u73b0\u6ca1\u6709\u8fbe\u5230\u671f\u671b\u7684\u6548\u679c\uff0c\u7ed3\u679c\u53d1\u73b0\uff0c\u5ba2\u6237\u7aef\u7684\u5b50\u5f39\u7684fromID\u5e76\u6ca1\u6709\u6539\u53d8\uff0c\u5176\u9700\u8981\u53d8\u6210SyncVar\u624d\u4f1a\u5728\u5ba2\u6237\u7aef\u540c\u6b65\uff0c\u8fd0\u884c\uff0c\u53d1\u73b0\u7ed3\u679cOK\uff0c\u5b50\u5f39\u4e0d\u4f1a\u88ab\u81ea\u5df1\u78b0\u5230\u800c\u7206\u70b8\uff0c\u55ef\uff0c\u5f88\u597d\u3002\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u5b50\u5f39\u4f1a\u6253\u5230\u81ea\u5df1\u7684\u95ee\u9898\u7684\u6d88\u9664\u4e86\uff0c\u8fd9\u662f\u6211\u5bf9\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u65b9\u6848\u7684\u601d\u8003\uff0c\u4e0d\u8fc7\u611f\u89c9\u8fd9\u6837\u5199\u8fd8\u662f\u6709\u70b9\u4e0d\u4f18\u96c5\uff0c\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u66f4\u52a0\u4f18\u96c5\u3001\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6709\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7github\u4ed3\u5e93\u7684ISSUE\u6211\u4eec\u63a2\u8ba8\u4e00\u4e0b\ud83d\ude43\u3002 \u7206\u70b8\u53ea\u4ea7\u751f\u5728Server \u89e3\u51b3\u4e86\u4e0a\u9762\u5b50\u5f39\u7684\u95ee\u9898\u540e\uff0c\u7f8e\u6ecb\u6ecb\u3002\u3002\uff01\uff01\uff01\ud83c\udf1a\u600e\u4e48\u5ba2\u6237\u7aef\u7684\u7206\u70b8\u6ca1\u4e86\u3002\u3002Debug\u4e86\u4e00\u4e0b\u53d1\u73b0\u5b50\u5f39\u5728\u670d\u52a1\u7aef\u5148\u78b0\u649e\u5148Destroy\uff0c\u6240\u4ee5\u5ba2\u6237\u7aef\u7684\u5b50\u5f39\u88abDestroy\uff0c\u65e0\u78b0\u649e\u4ea7\u751f\uff0c\u7ecf\u8fc7\u601d\u8003\u6211\u628a\u7206\u70b8\u6548\u679c\u4ee5\u53ca\u5b50\u5f39Destroy\u5f04\u6210\u4e86\u4e00\u4e2aClientRpc\u51fd\u6570\uff0c\u6070\u597d\u8fd9\u6837\u4e5f\u53ef\u4ee5\u4e0e\u672c\u5730\u7684\u7c92\u5b50\u5de5\u5382\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u6d4b\u8bd5\u53d1\u73b0\u6548\u679c\u548c\u9884\u671f\u76f8\u7b26\u3002 ClientRpc\u7684\u4f5c\u7528\u6070\u5de7\u4e0eCommand\u76f8\u53cd\uff0c\u5176\u662f\u670d\u52a1\u5668\u6267\u884c\u7684\u4ee3\u7801\uff0c\u8c03\u7528\u6240\u6709\u5ba2\u6237\u7aef\u6267\u884c\u51fd\u6570\uff0c\u800cCommand\u5219\u662f\u672c\u5730\u73a9\u5bb6\u5bf9\u8c61\u6267\u884c\u7684\u4ee3\u7801\uff0c\u8c03\u7528\u670d\u52a1\u5668\u6267\u884c\u7684\u51fd\u6570 if ( flag == true && this . gameObject . activeSelf ) { if ( isServer ) RpcBulletExplosion (); } ... [ClientRpc] void RpcBulletExplosion () { ParticleSystem explosion = Singleton < PSFactory >. Instance . getPs (); explosion . transform . position = transform . position ; //\u8bbe\u7f6e\u7c92\u5b50\u7cfb\u7edf\u4f4d\u7f6e explosion . Play (); Destroy ( this . gameObject ); } 3. \u5b50\u5f39\u79fb\u52a8\u76f8\u5173 \u56e0\u4e3a\u5728\u4e0a\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u7684\u5b50\u5f39\u79fb\u52a8\u662f\u901a\u8fc7\u65bd\u52a0\u4e00\u4e2a\u5411\u524d\u7684\u529b\u6765\u5b9e\u73b0\u7684\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\u5728\u53d1\u51fa\u540e\u8fd8\u4f1a\u6301\u7eed\u6539\u53d8\u7269\u4f53\u7684\u901f\u5ea6\uff0c\u4e0d\u5229\u4e8e\u6211\u4eec\u8054\u7f51\u5c04\u51fb\uff0c\u56e0\u4e3a\u8fd9\u91cc\u6d89\u53ca\u5230\u4e00\u4e2a\u53d1\u9001\u901f\u7387Network Send Rate\u7684\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u5728\u5b50\u5f39\u53d1\u51fa\u540e\u4e0d\u53bb\u6539\u53d8\u5176\u65b9\u5411\u6216\u901f\u5ea6\uff0c\u6211\u4eec\u7684\u53d1\u9001\u901f\u7387\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0\uff0c\u4e0d\u9700\u8981\u53d1\u9001\u79fb\u52a8\u66f4\u65b0\uff0c\u8fd9\u662f\u6bd4\u8f83\u5408\u7406\u7684\uff0c\u6211\u4eec\u5e94\u8be5\u4ee5\u9644\u52a0\u901f\u5ea6\u7684\u65b9\u5f0f\u53bb\u4f7f\u5b50\u5f39\u5b8c\u6210\u79fb\u52a8\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u53d1\u9001\u901f\u7387\u8bbe\u7f6e\u4e3a0\u3002\u5982\u679c\u4f7f\u7528\u6211\u4eec\u4e00\u5f00\u59cb\u7684\u9644\u52a0\u529b\u7684\u65b9\u5f0f\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u8981\u628a\u8be5\u901f\u7387\u8c03\u9ad8\uff0c\u589e\u52a0\u4e86\u65e0\u5fc5\u8981\u7684\u7f51\u7edc\u8d1f\u8f7d\u3002 \u4ee5\u4e0a\u5c31\u662f\u6211\u8fd9\u6b21\u5b9e\u9a8c\u78b0\u5230\u7684\u6bd4\u8f83\u5173\u952e\u7684\u95ee\u9898\u4ee5\u53ca\u601d\u8003\uff0c\u56e0\u4e3a\u5bf9\u4e8eUNet\u7684\u4e86\u89e3\u4e0d\u662f\u5f88\u6df1\u5165\uff0c\u800c\u4e14\u4e34\u8fd1\u671f\u672b\uff0c\u65f6\u95f4\u4e0d\u592a\u5145\u88d5\u65e0\u6cd5\u6df1\u5165\u53bb\u4e86\u89e3\uff0c\u611f\u89c9\u6709\u7684\u5730\u65b9\u8fd8\u662f\u505a\u7684\u4e0d\u662f\u5f88\u5230\u4f4d\uff0c\u6e38\u620f\u7684\u529f\u80fd\u4e5f\u4e0d\u662f\u592a\u591a\uff0c\u7b49\u5230\u8003\u5b8c\u8bd5\u4e86\u6709\u65f6\u95f4\u7684\u8bdd\u4f1a\u66f4\u6df1\u5165\u4e86\u89e3\u4e00\u4e0b\uff0c\u589e\u52a0\u4e00\u4e9b\u529f\u80fd\u3002\u5b8c\u6574\u7684\u4ee3\u7801\u5728\u6700\u4e0a\u9762\u5df2\u7ecf\u7ed9\u51fa\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u770b\u4e0b\u3002","title":"\u5b9e\u73b0\u4e2d\u9047\u5230\u7684\u95ee\u9898"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb02-\u7269\u4f53\u7684\u7a7a\u95f4\u4e0e\u8fd0\u52a8/","text":"Homework2 \u7b80\u7b54\u9898 1.\u6e38\u620f\u5bf9\u8c61\u8fd0\u52a8\u7684\u672c\u8d28\u662f\u4ec0\u4e48\uff1f \u6e38\u620f\u5bf9\u8c61\u8fd0\u52a8\u7684\u672c\u8d28\u5c31\u662f\u6e38\u620f\u5bf9\u8c61Transform\u7684\u6539\u53d8 \u8bf7\u7528\u4e09\u79cd\u65b9\u6cd5\u4ee5\u4e0a\u65b9\u6cd5\uff0c\u5b9e\u73b0\u7269\u4f53\u7684\u629b\u7269\u7ebf\u8fd0\u52a8\u3002\uff08\u5982\uff0c\u4fee\u6539Transform\u5c5e\u6027\uff0c\u4f7f\u7528\u5411\u91cfVector3\u7684\u65b9\u6cd5\u2026\uff09 a.\u76f4\u63a5\u6539\u53d8Transform\u7684position public float Vx ; public float Vy ; private float nowVy ; private Transform originTransform ; // Use this for initialization void Start () { nowVy = Vy ; originTransform = this . transform ; } // Update is called once per frame void Update () { if ( nowVy + Vy > 0.00001 ) { this . transform . position += Vector3 . up * Time . deltaTime * nowVy ; this . transform . position += Vector3 . left * Time . deltaTime * Vx ; nowVy -= 10 * Time . deltaTime ; } else { } } b.\u901a\u8fc7\u4f7f\u7528Vector3.MoveTowards // Update is called once per frame void Update () { Debug . Log ( nowVy + Vy ); if ( nowVy + Vy > 0.00001 ) { Vector3 target = this . transform . position + Vector3 . up * Time . deltaTime * nowVy + Vector3 . left * Time . deltaTime * Vx ; this . transform . position = Vector3 . MoveTowards ( this . transform . position , target , Time . deltaTime ); nowVy -= 10 * Time . deltaTime ; } else { } } c.\u901a\u8fc7\u4f7f\u7528transform.Translate public float Vx ; public float Vy ; private float nowVy ; private Vector3 speed ; private Vector3 Gravity ; // Use this for initialization void Start () { Gravity = Vector3 . zero ; speed = new Vector3 ( Vx , Vy , 0 ); } // Update is called once per frame void Update () { if ( 2 * Vy + Gravity . y > 0.00001 ) { Gravity . y -= 10 * Time . fixedDeltaTime ; this . transform . Translate ( speed * Time . fixedDeltaTime ); this . transform . Translate ( Gravity * Time . fixedDeltaTime ); } else { } } \u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u4e00\u4e2a\u5b8c\u6574\u7684\u592a\u9633\u7cfb\uff0c\u5176\u4ed6\u661f\u7403\u56f4\u7ed5\u592a\u9633\u7684\u8f6c\u901f\u5fc5\u987b\u4e0d\u4e00\u6837\uff0c\u4e14\u4e0d\u5728\u4e00\u4e2a\u6cd5\u5e73\u9762\u4e0a\u3002 1.\u9996\u5148\uff0c\u67e5\u9605\u4e86\u592a\u9633\u7cfb\u76f8\u5173\u7684\u8d44\u6599\uff0c\u83b7\u5f97\u592a\u9633\u7cfb\u5927\u81f4\u7ed3\u6784\u5982\u4e0b(\u4e0b\u56fe\u4e0d\u5305\u62ec\u56f4\u7ed5\u5730\u7403\u7684\u6708\u7403) 2.\u6839\u636e\u56fe\u4e2d\u4fe1\u606f\uff0c\u5e76\u6839\u636e\u4ece\u5c5e\u7ed3\u6784\u521b\u5efa\u597d\u6e38\u620f\u5bf9\u8c61,\u628a\u5b83\u4eec\u653e\u7f6e\u5230\u5927\u81f4\u7684\u4f4d\u7f6e\u3002\u6e38\u620f\u5bf9\u8c61\u7ed3\u6784\u5982\u4e0b \u5c06\u8001\u5e08\u6240\u7ed9\u7684 \u8d34\u56fe\u7f51\u7ad9 \u4e0a\u7684\u8d34\u56fe\u4e0b\u8f7d\u4e0b\u6765,\u653e\u5230Resources\u6587\u4ef6\u5939\u4e2d\uff0c\u4e00\u4e00\u62d6\u52a8\u5230\u6e38\u620f\u5bf9\u8c61\u4e0a\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u6548\u679c\u5982\u4e0b 3.\u4e0b\u9762\u5c31\u8f6e\u5230\u5199\u811a\u672c\u4e86 \u56e0\u4e3a\u884c\u661f\u7684\u52a8\u4f5c\u7b49\u5927\u81f4\u76f8\u540c\uff0c\u53ea\u6709\u8f6c\u901f\uff0c\u6cd5\u5e73\u9762\u7b49\u5730\u65b9\u6709\u6240\u533a\u522b\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u628a\u516c\u8f6c\u52a8\u4f5c\u62bd\u8c61\u6210\u4e00\u4e2a\u811a\u672c\uff0c\u7136\u540e\u628a\u4f1a\u53d8\u5316\u7684\u90e8\u5206\u8bbe\u4e3apublic\u4f9b\u7ed9\u5916\u90e8\u4fee\u6539\u3002 \u81f3\u4e8e\u5404\u4e2a\u884c\u661f\u516c\u8f6c\u7684\u6cd5\u5e73\u9762\u561b\uff0c\u8fd9\u65b9\u9762\u4e0d\u592a\u4e86\u89e3\uff0c\u800c\u4e14\u641c\u7d22\u9875\u96be\u4ee5\u641c\u5230\u51c6\u786e\u7684\u503c,\u53c8\u9274\u4e8e\u6bcf\u4e2a\u884c\u661f\u7684\u6cd5\u5e73\u9762\u9700\u8981\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u76f4\u63a5\u4f5b\u7cfb\u4e00\u6ce2\u4f7f\u7528\u968f\u673a\u751f\u6210\u7684\u6cd5\u5e73\u9762\u4f5c\u4e3a\u5404\u4e2a\u884c\u661f\u516c\u8f6c\u7684\u5e73\u9762\ud83c\udf1a,\u5982\u4e0b,\u76f4\u63a5\u901a\u8fc7\u968f\u673a\u751f\u6210\u6cd5\u7ebf\u3002 private Vector3 normalPlane ; // Use this for initialization void Start () { normalPlane . Set ( 0 , Random . Range ( 0 , 10 ), Random . Range ( 0 , 2 )); } \u4e3a\u786e\u4fdd\u884c\u661f\u56f4\u7ed5Sun\u516c\u8f6c\uff0c\u6cd5\u7ebf\u5e94\u8be5\u8bbe\u4e3a(0,x,y)\uff0c\u56e0\u4e3a\u82e5\u884c\u661f\u56f4\u7ed5Sun\u7684\u7403\u5fc3\u516c\u8f6c\uff0c\u7403\u4f53\u4f4d\u7f6e\u4e0eSun\u7403\u5fc3\u884c\u6210\u7684\u5411\u91cf\u5fc5\u987b\u4e0e\u6cd5\u7ebf\u5411\u91cf\u5782\u76f4\uff0c\u800c(x,0,0)*(0,x,y)==0\uff0c\u5373(x,0,0)\u5782\u76f4\u4e8e(0,x,y)\uff0c\u6240\u4ee5\u6cd5\u7ebf\u5e94\u8be5\u8bbe\u7f6e\u4e3a(0,x,y) \u5177\u4f53\u6574\u4e2aMonoBehavior\u5b9e\u73b0\u5982\u4e0b: public class Move : MonoBehaviour { public float speed ; private Vector3 normalPlane ; // Use this for initialization void Start () { normalPlane . Set ( 0 , Random . Range ( 0 , 10 ), Random . Range ( 0 , 10 )); } // Update is called once per frame void Update () { this . transform . RotateAround ( this . transform . parent . position , normalPlane , speed ); } } \u5176\u5b9e\u4ee3\u7801\u5341\u5206\u7b80\u5355\uff0c\u4e3b\u8981\u8981\u77e5\u9053\u5982\u4f55Transform.RotateAround\uff0c\u77e5\u9053\u8fd9\u4e2a\u51fd\u6570\u5c31\u5f88\u597d\u529e\u4e86\uff0c\u5199\u5b8c\u811a\u672c\u540e\u53ea\u9700\u628a\u811a\u672c\u4e00\u4e00\u62d6\u52a8\u5230GameObject\u4e0a\uff0c\u8bbe\u7f6e\u597dspeed\u53d8\u91cf\uff0c\u6574\u4e2a\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u8dd1\u8d77\u6765\u4e86\u3002 \u4e3a\u4e86\u65b9\u4fbf\u770b\u6e05\u695a\u4e0d\u540c\u884c\u661f\u7684\u8fd0\u52a8\uff0c\u9a8c\u8bc1\u7ed3\u679c\uff0c\u6211\u5229\u7528\u4e86Unity3D\u4e2dGameObject\u7684\u8def\u5f84\u6e32\u67d3\uff0c\u76f4\u63a5\u7ed9\u6bcf\u4e2a\u5bf9\u8c61Add Component > Effects > Trail Renderer\u5c31\u53ef\u4ee5\u4e86\uff0c\u5b9e\u73b0\u6548\u679c\u6574\u4f53\u5982\u4e0b: \u9879\u76ee\u7684\u5730\u5740\u5982\u4e0b: github@zhongwq/Unity3D-Learning/Homework2","title":"\u5b66\u4e60\u7b14\u8bb02-\u7269\u4f53\u7684\u7a7a\u95f4\u4e0e\u8fd0\u52a8"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb02-\u7269\u4f53\u7684\u7a7a\u95f4\u4e0e\u8fd0\u52a8/#homework2","text":"","title":"Homework2"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb02-\u7269\u4f53\u7684\u7a7a\u95f4\u4e0e\u8fd0\u52a8/#_1","text":"1.\u6e38\u620f\u5bf9\u8c61\u8fd0\u52a8\u7684\u672c\u8d28\u662f\u4ec0\u4e48\uff1f \u6e38\u620f\u5bf9\u8c61\u8fd0\u52a8\u7684\u672c\u8d28\u5c31\u662f\u6e38\u620f\u5bf9\u8c61Transform\u7684\u6539\u53d8 \u8bf7\u7528\u4e09\u79cd\u65b9\u6cd5\u4ee5\u4e0a\u65b9\u6cd5\uff0c\u5b9e\u73b0\u7269\u4f53\u7684\u629b\u7269\u7ebf\u8fd0\u52a8\u3002\uff08\u5982\uff0c\u4fee\u6539Transform\u5c5e\u6027\uff0c\u4f7f\u7528\u5411\u91cfVector3\u7684\u65b9\u6cd5\u2026\uff09 a.\u76f4\u63a5\u6539\u53d8Transform\u7684position public float Vx ; public float Vy ; private float nowVy ; private Transform originTransform ; // Use this for initialization void Start () { nowVy = Vy ; originTransform = this . transform ; } // Update is called once per frame void Update () { if ( nowVy + Vy > 0.00001 ) { this . transform . position += Vector3 . up * Time . deltaTime * nowVy ; this . transform . position += Vector3 . left * Time . deltaTime * Vx ; nowVy -= 10 * Time . deltaTime ; } else { } } b.\u901a\u8fc7\u4f7f\u7528Vector3.MoveTowards // Update is called once per frame void Update () { Debug . Log ( nowVy + Vy ); if ( nowVy + Vy > 0.00001 ) { Vector3 target = this . transform . position + Vector3 . up * Time . deltaTime * nowVy + Vector3 . left * Time . deltaTime * Vx ; this . transform . position = Vector3 . MoveTowards ( this . transform . position , target , Time . deltaTime ); nowVy -= 10 * Time . deltaTime ; } else { } } c.\u901a\u8fc7\u4f7f\u7528transform.Translate public float Vx ; public float Vy ; private float nowVy ; private Vector3 speed ; private Vector3 Gravity ; // Use this for initialization void Start () { Gravity = Vector3 . zero ; speed = new Vector3 ( Vx , Vy , 0 ); } // Update is called once per frame void Update () { if ( 2 * Vy + Gravity . y > 0.00001 ) { Gravity . y -= 10 * Time . fixedDeltaTime ; this . transform . Translate ( speed * Time . fixedDeltaTime ); this . transform . Translate ( Gravity * Time . fixedDeltaTime ); } else { } } \u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u4e00\u4e2a\u5b8c\u6574\u7684\u592a\u9633\u7cfb\uff0c\u5176\u4ed6\u661f\u7403\u56f4\u7ed5\u592a\u9633\u7684\u8f6c\u901f\u5fc5\u987b\u4e0d\u4e00\u6837\uff0c\u4e14\u4e0d\u5728\u4e00\u4e2a\u6cd5\u5e73\u9762\u4e0a\u3002 1.\u9996\u5148\uff0c\u67e5\u9605\u4e86\u592a\u9633\u7cfb\u76f8\u5173\u7684\u8d44\u6599\uff0c\u83b7\u5f97\u592a\u9633\u7cfb\u5927\u81f4\u7ed3\u6784\u5982\u4e0b(\u4e0b\u56fe\u4e0d\u5305\u62ec\u56f4\u7ed5\u5730\u7403\u7684\u6708\u7403) 2.\u6839\u636e\u56fe\u4e2d\u4fe1\u606f\uff0c\u5e76\u6839\u636e\u4ece\u5c5e\u7ed3\u6784\u521b\u5efa\u597d\u6e38\u620f\u5bf9\u8c61,\u628a\u5b83\u4eec\u653e\u7f6e\u5230\u5927\u81f4\u7684\u4f4d\u7f6e\u3002\u6e38\u620f\u5bf9\u8c61\u7ed3\u6784\u5982\u4e0b \u5c06\u8001\u5e08\u6240\u7ed9\u7684 \u8d34\u56fe\u7f51\u7ad9 \u4e0a\u7684\u8d34\u56fe\u4e0b\u8f7d\u4e0b\u6765,\u653e\u5230Resources\u6587\u4ef6\u5939\u4e2d\uff0c\u4e00\u4e00\u62d6\u52a8\u5230\u6e38\u620f\u5bf9\u8c61\u4e0a\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u6548\u679c\u5982\u4e0b 3.\u4e0b\u9762\u5c31\u8f6e\u5230\u5199\u811a\u672c\u4e86 \u56e0\u4e3a\u884c\u661f\u7684\u52a8\u4f5c\u7b49\u5927\u81f4\u76f8\u540c\uff0c\u53ea\u6709\u8f6c\u901f\uff0c\u6cd5\u5e73\u9762\u7b49\u5730\u65b9\u6709\u6240\u533a\u522b\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u628a\u516c\u8f6c\u52a8\u4f5c\u62bd\u8c61\u6210\u4e00\u4e2a\u811a\u672c\uff0c\u7136\u540e\u628a\u4f1a\u53d8\u5316\u7684\u90e8\u5206\u8bbe\u4e3apublic\u4f9b\u7ed9\u5916\u90e8\u4fee\u6539\u3002 \u81f3\u4e8e\u5404\u4e2a\u884c\u661f\u516c\u8f6c\u7684\u6cd5\u5e73\u9762\u561b\uff0c\u8fd9\u65b9\u9762\u4e0d\u592a\u4e86\u89e3\uff0c\u800c\u4e14\u641c\u7d22\u9875\u96be\u4ee5\u641c\u5230\u51c6\u786e\u7684\u503c,\u53c8\u9274\u4e8e\u6bcf\u4e2a\u884c\u661f\u7684\u6cd5\u5e73\u9762\u9700\u8981\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u76f4\u63a5\u4f5b\u7cfb\u4e00\u6ce2\u4f7f\u7528\u968f\u673a\u751f\u6210\u7684\u6cd5\u5e73\u9762\u4f5c\u4e3a\u5404\u4e2a\u884c\u661f\u516c\u8f6c\u7684\u5e73\u9762\ud83c\udf1a,\u5982\u4e0b,\u76f4\u63a5\u901a\u8fc7\u968f\u673a\u751f\u6210\u6cd5\u7ebf\u3002 private Vector3 normalPlane ; // Use this for initialization void Start () { normalPlane . Set ( 0 , Random . Range ( 0 , 10 ), Random . Range ( 0 , 2 )); } \u4e3a\u786e\u4fdd\u884c\u661f\u56f4\u7ed5Sun\u516c\u8f6c\uff0c\u6cd5\u7ebf\u5e94\u8be5\u8bbe\u4e3a(0,x,y)\uff0c\u56e0\u4e3a\u82e5\u884c\u661f\u56f4\u7ed5Sun\u7684\u7403\u5fc3\u516c\u8f6c\uff0c\u7403\u4f53\u4f4d\u7f6e\u4e0eSun\u7403\u5fc3\u884c\u6210\u7684\u5411\u91cf\u5fc5\u987b\u4e0e\u6cd5\u7ebf\u5411\u91cf\u5782\u76f4\uff0c\u800c(x,0,0)*(0,x,y)==0\uff0c\u5373(x,0,0)\u5782\u76f4\u4e8e(0,x,y)\uff0c\u6240\u4ee5\u6cd5\u7ebf\u5e94\u8be5\u8bbe\u7f6e\u4e3a(0,x,y) \u5177\u4f53\u6574\u4e2aMonoBehavior\u5b9e\u73b0\u5982\u4e0b: public class Move : MonoBehaviour { public float speed ; private Vector3 normalPlane ; // Use this for initialization void Start () { normalPlane . Set ( 0 , Random . Range ( 0 , 10 ), Random . Range ( 0 , 10 )); } // Update is called once per frame void Update () { this . transform . RotateAround ( this . transform . parent . position , normalPlane , speed ); } } \u5176\u5b9e\u4ee3\u7801\u5341\u5206\u7b80\u5355\uff0c\u4e3b\u8981\u8981\u77e5\u9053\u5982\u4f55Transform.RotateAround\uff0c\u77e5\u9053\u8fd9\u4e2a\u51fd\u6570\u5c31\u5f88\u597d\u529e\u4e86\uff0c\u5199\u5b8c\u811a\u672c\u540e\u53ea\u9700\u628a\u811a\u672c\u4e00\u4e00\u62d6\u52a8\u5230GameObject\u4e0a\uff0c\u8bbe\u7f6e\u597dspeed\u53d8\u91cf\uff0c\u6574\u4e2a\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u8dd1\u8d77\u6765\u4e86\u3002 \u4e3a\u4e86\u65b9\u4fbf\u770b\u6e05\u695a\u4e0d\u540c\u884c\u661f\u7684\u8fd0\u52a8\uff0c\u9a8c\u8bc1\u7ed3\u679c\uff0c\u6211\u5229\u7528\u4e86Unity3D\u4e2dGameObject\u7684\u8def\u5f84\u6e32\u67d3\uff0c\u76f4\u63a5\u7ed9\u6bcf\u4e2a\u5bf9\u8c61Add Component > Effects > Trail Renderer\u5c31\u53ef\u4ee5\u4e86\uff0c\u5b9e\u73b0\u6548\u679c\u6574\u4f53\u5982\u4e0b: \u9879\u76ee\u7684\u5730\u5740\u5982\u4e0b: github@zhongwq/Unity3D-Learning/Homework2","title":"\u7b80\u7b54\u9898"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/","text":"Homework2-\u7f16\u7a0b\u5b9e\u8df5 \u9898\u76ee\u8981\u6c42 \u9605\u8bfb\u4ee5\u4e0b\u6e38\u620f\u811a\u672c Priests and Devils Priests and Devils is a puzzle game in which you will help the Priests and Devils to cross the river within the time limit. There are 3 priests and 3 devils at one side of the river. They all want to get to the other side of this river, but there is only one boat and this boat can only carry two persons each time. And there must be one person steering the boat from one side to the other side. In the flash game, you can click on them to move them and click the go button to move the boat to the other direction. If the priests are out numbered by the devils on either side of the river, they get killed and the game is over. You can try it in many > ways. Keep all priests alive! Good luck \uff01 \u7b80\u7b54\u9898\uff1a play the game ( http://www.flash-game.net/game/2535/priests-and-devils.html ) \u5217\u51fa\u6e38\u620f\u4e2d\u63d0\u53ca\u7684\u4e8b\u7269\uff08Objects\uff09 \u6e38\u620f\u4e2d\u63d0\u53ca\u7684\u4e8b\u7269\u6709 \u9b54\u9b3c \u7267\u5e08 \u8239 \u4e24\u8fb9\u7684\u5cb8 \u6cb3 \u7528\u8868\u683c\u5217\u51fa\u73a9\u5bb6\u52a8\u4f5c\u8868\uff08\u89c4\u5219\u8868\uff09\uff0c\u6ce8\u610f\uff0c\u52a8\u4f5c\u8d8a\u5c11\u8d8a\u597d \u884c\u4e3a \u884c\u4e3a\u6761\u4ef6 \u7267\u5e08\uff0f\u6076\u9b54\u4e0a\u8239 \u8239\u4e0a\u6709\u7a7a\u4f4d\u4e14\u8239\u5728\u8be5\u5cb8 \u5f00\u8239 \u8239\u4e0a\u6709\u4eba \u7267\u5e08/\u6076\u9b54\u4e0b\u8239 \u8239\u6709\u4eba\u4e14\u9760\u5728\u5cb8\u8fb9 \u6e38\u620f\u80dc\u5229 6\u4e2a\u4eba\u90fd\u5230\u4e86\u5bf9\u5cb8 \u6e38\u620f\u5931\u8d25 \u6709\u4e00\u8fb9\u5cb8\u4e0a\u4eba\u6570\u4e0d\u5747 \u7a0b\u5e8f\u9650\u5236 \u8bf7\u5c06\u6e38\u620f\u4e2d\u5bf9\u8c61\u505a\u6210\u9884\u5236 \u5728 GenGameObjects \u4e2d\u521b\u5efa \u957f\u65b9\u5f62\u3001\u6b63\u65b9\u5f62\u3001\u7403 \u53ca\u5176\u8272\u5f69\u4ee3\u8868\u6e38\u620f\u4e2d\u7684\u5bf9\u8c61\u3002 \u4f7f\u7528 C# \u96c6\u5408\u7c7b\u578b \u6709\u6548\u7ec4\u7ec7\u5bf9\u8c61 \u6574\u4e2a\u6e38\u620f\u4ec5 \u4e3b\u6444\u50cf\u673a \u548c \u4e00\u4e2a Empty \u5bf9\u8c61\uff0c \u5176\u4ed6\u5bf9\u8c61\u5fc5\u987b\u4ee3\u7801\u52a8\u6001\u751f\u6210\uff01\uff01\uff01\u6574\u4e2a\u6e38\u620f\u4e0d\u8bb8\u51fa\u73b0 Find \u6e38\u620f\u5bf9\u8c61\uff0c SendMessage \u8fd9\u7c7b\u7a81\u7834\u7a0b\u5e8f\u7ed3\u6784\u7684 \u901a\u8baf\u8026\u5408 \u8bed\u53e5\u3002 \u8fdd\u80cc\u672c\u6761\u51c6\u5219\uff0c\u4e0d\u7ed9\u5206 \u8bf7\u4f7f\u7528\u8bfe\u4ef6\u67b6\u6784\u56fe\u7f16\u7a0b\uff0c\u4e0d\u63a5\u53d7\u975e MVC \u7ed3\u6784\u7a0b\u5e8f \u6ce8\u610f\u7ec6\u8282\uff0c\u4f8b\u5982\uff1a\u8239\u672a\u9760\u5cb8\uff0c\u7267\u5e08\u4e0e\u9b54\u9b3c\u4e0a\u4e0b\u8239\u8fd0\u52a8\u4e2d\uff0c\u5747\u4e0d\u80fd\u63a5\u53d7\u7528\u6237\u4e8b\u4ef6\uff01 \u9879\u76ee\u5730\u5740 github@zhongwq/Unity3D-Learning/Homework2 Unity\u4e2d\u7684MVC\u67b6\u6784 \u60f3\u4f7f\u7528\u4e00\u4e2a\u67b6\u6784\u8fdb\u884c\u5f00\u53d1\uff0c\u6211\u4eec\u80af\u5b9a\u9700\u8981\u5148\u4e86\u89e3MVC\u67b6\u6784\u5982\u4f55\u5728\u57fa\u4e8eUnity\u7684\u6e38\u620f\u7684\u5f00\u53d1\u4e2d\u4f7f\u7528\u3002\u4ed4\u7ec6\u5206\u6790Unity\u4e2d\u7684MVC\u7ed3\u6784\uff0c\u7ed3\u5408\u8001\u5e08\u4e0a\u8bfe\u65f6\u6240\u8bb2\u7684\u5185\u5bb9\uff0c\u5b83\u5176\u5b9e\u548c\u5e73\u65f6\u5728WEB\u4e2d\u5e38\u7528MVC\u7ed3\u6784\u5728\u672c\u8d28\u4e0a\u5e76\u6ca1\u6709\u592a\u5927\u7684\u533a\u522b\uff0c\u90fd\u662f\u5173\u6ce8\u70b9\u5206\u79bb(SOC)\u7684\u4f53\u73b0\uff0c\u662f\u4e00\u79cd\u6210\u719f\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u89c4\u8303\u3002\u4f7f\u7528MVC\u67b6\u6784\u53bb\u5f00\u53d1\u6211\u4eec\u7684\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u5f97\u6211\u4eec\u5728\u62d3\u5c55\u8f6f\u4ef6\u529f\u80fd\u3001\u6539\u8fdb\u7528\u6237\u4ea4\u4e92\u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u91cd\u5199\u5927\u91cf\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\uff0c\u51cf\u5c11\u4e86\u6211\u4eec\u7684\u4ee3\u7801\u91cf\uff0c\u65b9\u4fbf\u4e86\u8f6f\u4ef6\u7684\u62d3\u5c55\uff0c\u5c31\u5982\u8001\u5e08\u6240\u8bf4\u7684\uff1a\u201c\u7a33\u56fa\u7684MVC\u6846\u67b6\u7ecf\u5f97\u8d77\u4efb\u610f\u62d3\u5c55\u201d\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u8c08\u8c08Unity\u4e2d\u7684MVC\u67b6\u6784: M(Model): Unity\u4e2d\uff0cModel\u5c31\u662f\u6e38\u620f\u573a\u666f\u4e2dGameObject\u3001\u548c\u5b83\u4eec\u7684\u5173\u7cfb\u4ee5\u53ca\u540e\u53f0\u7684\u6570\u636e\u6a21\u578b(\u6bd4\u5982\u7528\u6237\u4fe1\u606f\u7b49)\uff0c\u5b83\u4eec\u90fd\u53d7\u5230\u76f8\u5e94\u7684Controller\u7684\u63a7\u5236 V(View): View\u8fd9\u90e8\u5206\u5728\u6e38\u620f\u4e2d\u8d77\u5230\u7684\u662f\u4e0e\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\u7684\u529f\u80fd\uff0c\u5b83\u4eec\u8d1f\u8d23\u5411\u7528\u6237\u6218\u672f\u6e38\u620f\u7ed3\u679c\uff0c\u5904\u7406GUI\u4e8b\u4ef6\u5e76\u901a\u8fc7IUserAction\u63a5\u53e3\u6765\u4e0eController\u8fdb\u884c\u4ea4\u4e92\u3002 C(Controller): Controller\u63a7\u5236\u7740\u6e38\u620f\u573a\u666f\u4e2d\u6240\u6709\u7684\u5bf9\u8c61\uff0c\u5176\u8d1f\u8d23\u63a5\u6536\u6765\u81eaView\u7684\u7528\u6237\u7684\u6307\u4ee4\u5e76\u6839\u636e\u7528\u6237\u8f93\u5165\u7684\u6307\u4ee4\uff0c\u66f4\u65b0Models\u4ee5\u53ca\u66f4\u65b0View\u7684\u72b6\u6001\uff0c\u5176\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u8fde\u63a5Model\u4e0eView\u7684\u6865\u6881\u3002 \u9879\u76eeUML\u56fe \u5728\u4e86\u89e3\u4e86Unity\u4e2dMVC\u7684\u57fa\u672c\u67b6\u6784\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u8fdb\u884c\u4e0b\u9762\u7684\u5f00\u53d1\u4e86 \u6309\u7167\u9898\u76ee\u8981\u6c42\u7684MVC\u7ed3\u6784\uff0c\u5206\u6790\u6e38\u620f\u7684\u57fa\u672c\u7ed3\u6784\uff0c\u5f97\u5230\u57fa\u672c\u7684UML\u56fe\u7684\u7ed3\u6784\u5982\u4e0b: \u5bf9\u5404\u6a21\u5757\u5206\u5757\u8fdb\u884c\u5f00\u53d1 GameDirector \u9996\u5148\uff0c\u6211\u4eec\u6765\u5f00\u53d1\u62c5\u8d1f\u7740\u4f17\u591a\u804c\u8d23\u7684GameDirector\uff0c\u5728\u6e38\u620f\u91cc\u9762\uff0c\u5bfc\u6f14(Director)\u7684\u804c\u8d23\u5927\u81f4\u5982\u4e0b: \u83b7\u53d6\u5f53\u524d\u6e38\u620f\u7684\u573a\u666f \u63a7\u5236\u573a\u666f\u8fd0\u884c\u3001\u5207\u6362\u3001\u5165\u6808\u4e0e\u51fa\u6808\uff0c\u6682\u505c\u3001\u6062\u590d\u3001\u9000\u51fa \u7ba1\u7406\u6e38\u620f\u5168\u5c40\u72b6\u6001 \u8bbe\u5b9a\u6e38\u620f\u7684\u914d\u7f6e \u8bbe\u5b9a\u6e38\u620f\u5168\u5c40\u89c6\u56fe \u7531\u4e0a\u6211\u4eec\u53ef\u77e5\uff0cGameDirector\u5bf9\u4e8e\u4e00\u4e2a\u6e38\u620f\u662f\u591a\u4e48\u7684\u91cd\u8981\uff0c\u4f46\u662f\uff0c\u5728\u6211\u4eec\u8fd9\u6b21\u7684\u5c0f\u9879\u76ee\u4e2d\uff0c\u5b83\u7684\u804c\u8d23\u6ca1\u6709\u90a3\u4e48\u591a\uff0c\u5b83\u5728\u8fd9\u6b21\u7684\u9879\u76ee\u4e2d\u4e3b\u8981\u8d1f\u8d23\u7684\u662f\u83b7\u53d6\u5f53\u524d\u6e38\u620f\u573a\u666f\uff0c\u5176\u4ee3\u7801\u5982\u4e0b: public class GameDirector : System . Object { private static GameDirector _instance ; public ISceneController currentSceneController { get ; set ; } public bool running { set ; get ; } public static GameDirector getInstance () { if ( _instance == null ) { _instance = new GameDirector (); return _instance ; } return _instance ; } public int getFPS () { return Application . targetFrameRate ; } public void setFPS ( int fps ) { Application . targetFrameRate = fps ; } } Director\u5728\u8fd0\u884c\u65f6\u53ea\u4f1a\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5728\u8fd0\u884c\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5176\u5e94\u7528\u4e86\u5355\u4f8b\u6a21\u5f0f\u4fdd\u8bc1\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u751f\u6210\uff0c\u65b9\u4fbf\u4e86\u7c7b\u4e4b\u95f4\u7684\u4e8b\u4ef6\u901a\u4fe1\uff0c\u65b9\u4fbf\u4e86MVC\u7684\u5b9e\u73b0\u3002 Director\u4f5c\u4e3a\u6e38\u620f\u6700\u4e3a\u9ad8\u5c42\u7684Controller\uff0c\u5176\u4e0d\u5177\u4f53\u7684\u63a7\u5236\u6e38\u620f\u4e2d\u7684\u4efb\u4e00\u5bf9\u8c61\uff0c\u5176\u901a\u8fc7\u5bf9currentSceneController\u7684\u7ef4\u62a4\uff0c\u628a\u63a7\u5236\u6e38\u620f\u5bf9\u8c61\u7684\u4efb\u52a1\u4ea4\u7ed9\u4e0d\u540c\u7684SceneController\u3002 ISceneController ISceneController\u7684\u4ee3\u7801\u5982\u4e0b //interface of Scene public interface ISceneController { void genGameObjects (); } ISCeneController\u662f\u6e38\u620f\u4e2d\u7684\u573a\u666f\u7ba1\u7406\u5668\uff0c\u4fd7\u79f0\u573a\u8bb0\uff0c\u5176\u4e3b\u8981\u804c\u8d23\u5982\u4e0b: \u7ba1\u7406\u6e38\u620f\u5728\u8be5\u6e38\u620f\u573a\u666f\u4e2d\u7684\u6240\u6709\u7684\u6e38\u620f\u5bf9\u8c61 \u534f\u8c03\u6e38\u620f\u5bf9\u8c61\u3001\u6e38\u620f\u5bf9\u8c61\u7ba1\u7406\u5668(GameObjectControllers)\u4e4b\u95f4\u7684\u901a\u4fe1 \u54cd\u5e94\u5916\u90e8\u8f93\u5165\u4e8b\u4ef6 \u7ba1\u7406\u8be5\u6e38\u620f\u573a\u666f\u7684\u6240\u6709\u7684\u89c4\u5219 \u7ba1\u7406\u4e00\u4e9b\u5176\u4ed6\u7684\u4e1c\u897f \u8be5\u7edf\u4e00\u7684\u63a5\u53e3\u7684\u5b9e\u73b0\u6b63\u662fGameDirector\u5bf9\u5404\u4e2a\u6e38\u620f\u573a\u666f\u7ba1\u7406\u7684\u5173\u952e\uff0c\u4ed6\u662f\u5bfc\u6f14\u63a7\u5236\u573a\u666f\u7684\u6e20\u9053\uff0cGameDirector\u901a\u8fc7\u5bf9\u4e8ecurrentSceneController\u7684\u7ef4\u62a4\uff0c\u53ef\u4ee5\u7b80\u5355\u5b9e\u73b0\u6e38\u620f\u573a\u666f\u7684\u5404\u79cd\u7ba1\u7406 IUserAction IUserAction\u4e2d\u4f53\u73b0\u4e86\u6e38\u620f\u7f16\u7a0b\u7684\u95e8\u9762\u6a21\u5f0f\uff0c\u6e38\u620f\u5916\u90e8\u4e0e\u4e00\u4e2a\u5b50\u7cfb\u7edf\u7684\u901a\u4fe1\u5fc5\u987b\u901a\u8fc7\u4e00\u4e2a\u7edf\u4e00\u7684\u95e8\u9762\u5bf9\u8c61\u8fdb\u884c\uff0c\u800c\u6211\u4eec\u73b0\u5728\u5b9e\u73b0\u7684IUserAction\u5c31\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u5bf9\u8c61,GUI\u7c7b\u901a\u8fc7IUserAction\u6765\u4e0eController\u8fdb\u884c\u901a\u4fe1\uff0c\u6211\u4eec\u901a\u8fc7\u5b9e\u73b0IUserAction\u63a5\u53e3\u6765\u5b9a\u4e49Controller\u4e0eGUI\u7684\u4ea4\u4e92\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u5b9e\u73b0Controller\u7c7b\u65f6\u53ea\u9700\u8981\u5b9e\u73b0IUserAction\u5bf9\u5e94\u7684\u63a5\u53e3\uff0c\u4ed6\u5c31\u53ef\u4ee5\u4e0e\u4efb\u610f\u4f7f\u7528IUserAction\u63a5\u53e3\u7684View\u5373GUI\u7c7b\u8c03\u7528\uff0cGUI\u7c7b\u4e5f\u662f\u53ea\u9700\u8c03\u7528\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u5373\u53ef\u5b9e\u73b0\u4e0eController\u7684\u901a\u4fe1, \u65b9\u4fbf\u4e86\u6211\u4eecMVC\u67b6\u6784\u7684\u5b9e\u73b0\u3002 \u5176\u5b9a\u4e49\u5982\u4e0b: public interface IUserAction { void restart (); void ToggleBoat (); void ClickCharacter ( ICharacterController chracter ); } UserGUI UserGUI\u7684\u4ee3\u7801\u5982\u4e0b: public class UserGUI : MonoBehaviour { public int status = 0 ; private IUserAction action ; GUIStyle headerStyle ; GUIStyle buttonStyle ; // Use this for initialization void Start () { action = GameDirector . getInstance (). currentSceneController as IUserAction ; headerStyle = new GUIStyle (); headerStyle . fontSize = 40 ; headerStyle . alignment = TextAnchor . MiddleCenter ; buttonStyle = new GUIStyle ( \"button\" ); buttonStyle . fontSize = 30 ; } // Update is called once per frame void OnGUI () { GUI . Label ( new Rect ( Screen . width / 2 - 100 , 10 , 200 , 50 ), \"Priests & Demons\" , headerStyle ); if ( status == 1 ) { GUI . Label ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 - 90 , 100 , 50 ), \"Gameover!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 65 , Screen . height / 2 , 140 , 70 ), \"Restart\" , buttonStyle )) { status = 0 ; action . restart (); } } else if ( status == 2 ) { GUI . Label ( new Rect ( Screen . width / 2 - 50 , Screen . height / 2 - 90 , 100 , 50 ), \"Win!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 70 , Screen . height / 2 , 140 , 70 ), \"Restart\" , buttonStyle )) { status = 0 ; action . restart (); } } } } \u7531\u4e0a\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cUserGUI\u53ea\u662f\u7b80\u5355\u5730\u6839\u636e\u6e38\u620f\u72b6\u6001\uff0c\u5bf9\u6e38\u620f\u4fe1\u606f\u7b49\u8fdb\u884c\u5c55\u793a\uff0c\u7136\u540e\u901a\u8fc7IUserAction\u4e0eController\u8fdb\u884c\u4ea4\u4e92\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u5728\u4e0a\u9762\u6240\u63d0\u5230\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728GUI\u4e2d\u8c03\u7528IUserAction\u4e2d\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fc5\u901f\u5b9e\u73b0\u5bf9\u6e38\u620f\u573a\u666f\u7684\u63a7\u5236\uff0c\u4e0b\u9762\u7684ClickGUI\u4e5f\u662f\u4e00\u6837 ClickGUI \u8be5\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: public class ClickGUI : MonoBehaviour { IUserAction action ; ICharacterController character ; public void setController ( ICharacterController characterController ) { character = characterController ; } void Start () { action = GameDirector . getInstance (). currentSceneController as IUserAction ; } void OnMouseDown () { if ( gameObject . name == \"boat\" ) { action . ToggleBoat (); } else { action . ClickCharacter ( character ); } } } \u5728ClickGUI\u4e2d\uff0c\u6211\u4eec\u540c\u6837\u7528\u5230\u4e86IUserAction, ClickGUI\u76d1\u542c\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u7136\u540e\u901a\u8fc7IUserAction\u63d0\u4f9b\u7684\u7c7b\u4f3c\u79fb\u52a8\u8239\uff0c\u6e38\u620f\u89d2\u8272\u4e0a\u4e0b\u8239\u7684\u51fd\u6570\uff0c\u628a\u7528\u6237\u6307\u4ee4\u4f20\u7ed9Controller\u8fdb\u884c\u6267\u884c\u3002\u4ece\u800c\u5b9e\u73b0View\u548cController\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002 FirstController \u5728\u8be5\u6e38\u620f\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u6e38\u620f\u573a\u666f\uff0c\u6240\u4ee5 \u5176\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b: public class FirstController : MonoBehaviour , ISceneController , IUserAction { readonly Vector3 riverPosition = new Vector3 ( 0 , - 0.25f , 0 ); UserGUI userGUI ; public LandController rightLand ; public LandController leftLand ; public BoatController boat ; public ICharacterController [] characters ; void Awake () { GameDirector director = GameDirector . getInstance (); director . currentSceneController = this ; userGUI = gameObject . AddComponent < UserGUI >() as UserGUI ; genGameObjects (); } public void genGameObjects () { characters = new ICharacterController [ 6 ]; GameObject river = Instantiate ( Resources . Load ( \"Prefabs/River\" , typeof ( GameObject )), riverPosition , Quaternion . identity , null ) as GameObject ; river . name = \"river\" ; boat = new BoatController (); leftLand = new LandController (- 1 ); rightLand = new LandController ( 1 ); for ( int i = 0 ; i < 3 ; i ++) { ICharacterController priest = new ICharacterController ( 0 , \"priest\" + i ); priest . setPosition ( rightLand . getEmptyPosition ()); priest . getOnLand ( rightLand ); rightLand . getOnLand ( priest ); characters [ i ] = priest ; } for ( int i = 0 ; i < 3 ; i ++) { ICharacterController demon = new ICharacterController ( 1 , \"demon\" + i ); demon . setPosition ( rightLand . getEmptyPosition ()); demon . getOnLand ( rightLand ); rightLand . getOnLand ( demon ); characters [ i + 3 ] = demon ; } } public void ClickCharacter ( ICharacterController character ) { if ( userGUI . status != 0 || ! boat . available ()) { return ; } if ( character . isOnBoat ()) { LandController land ; if ( boat . getBoatPos () == 0 ) { land = leftLand ; } else { land = rightLand ; } boat . getOffBoat ( character . getName ()); character . MoveTo ( land . getEmptyPosition ()); character . getOnLand ( land ); land . getOnLand ( character ); } else { LandController land = character . getLandController (); if ( boat . getEmptyIndex () == - 1 ) return ; int landPos = land . getType (), boatPos = ( boat . getBoatPos () == 0 ) ? - 1 : 1 ; if ( landPos != boatPos ) return ; land . getOffLand ( character . getName ()); character . MoveTo ( boat . getEmptyPosition ()); character . getOnBoat ( boat , boat . getEmptyIndex ()); boat . getOnBoat ( character ); } userGUI . status = checkResult (); } public void ToggleBoat () { if ( userGUI . status != 0 || boat . isEmptty ()) return ; boat . Move (); userGUI . status = checkResult (); } int checkResult () { int leftPriests = 0 ; int rightPriests = 0 ; int leftDemons = 0 ; int rightDemons = 0 ; int [] leftStatus = leftLand . getStatus (); leftPriests += leftStatus [ 0 ]; leftDemons += leftStatus [ 1 ]; if ( leftPriests + leftDemons == 6 ) return 2 ; int [] rightStatus = rightLand . getStatus (); rightPriests += rightStatus [ 0 ]; rightDemons += rightStatus [ 1 ]; int [] boatStatus = boat . getBoatStatus (); if ( boat . getBoatPos () == 0 ) { leftPriests += boatStatus [ 0 ]; leftDemons += boatStatus [ 1 ]; } else { rightPriests += boatStatus [ 0 ]; rightDemons += boatStatus [ 1 ]; } if ( leftPriests > 0 && leftPriests < leftDemons ) return 1 ; if ( rightPriests > 0 && rightPriests < rightDemons ) return 1 ; return 0 ; } public void restart () { boat . reset (); leftLand . reset (); rightLand . reset (); for ( int i = 0 ; i < characters . Length ; i ++) characters [ i ]. reset (); } } FirstController\u7ee7\u627f\u4e86ISceneController\u548cIUserAction\u8fd9\u4e24\u4e2a\u63a5\u53e3\uff0c\u5e76\u5b9e\u73b0\u4e86\u5176\u91cc\u9762\u7684\u51fd\u6570\uff0c\u5176\u65e2\u53ef\u4ee5\u901a\u8fc7IUserAction\u4e0eView\u8fdb\u884c\u4ea4\u4e92\uff0c\u4e5f\u53ef\u4ee5\u5728LoadResources\u540e\uff0c\u901a\u8fc7GameObject\u7684Controller\u5bf9\u573a\u666f\u4e2d\u7684\u5404\u4e2aGameObject\u8fdb\u884c\u63a7\u5236\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u4ecb\u7ecd\u6e38\u620f\u4e2d\u6e38\u620f\u5bf9\u8c61\u7684Controller\u7684\u4e66\u5199 \u9996\u5148\uff0c\u8d2f\u7a7f\u7740\u6211\u4eec\u8fd9\u6574\u4e00\u4e2a\u6e38\u620f\u7684\u5c31\u662fGameObject\u7684\u79fb\u52a8\u5566\uff01\u6240\u4ee5\u6211\u5148\u8bf4\u4e00\u4e0b\u62bd\u8c61\u51fa\u6765\u7684Move\u7c7b\uff0c\u5176\u4ee3\u7801\u5982\u4e0b\uff1a public class Move : MonoBehaviour { readonly float speed = 20 ; int status ; //0: \u9759\u6b62, 1: \u5904\u4e8e\u524d\u6bb5\u79fb\u52a8, 2: \u5904\u4e8e\u540e\u6bb5\u79fb\u52a8 Vector3 middle ; Vector3 destination ; void Update () { if ( status == 1 ) { this . transform . position = Vector3 . MoveTowards ( this . transform . position , middle , Time . deltaTime * speed ); if ( transform . position == middle ) { status = 2 ; } } else if ( status == 2 ) { this . transform . position = Vector3 . MoveTowards ( this . transform . position , destination , Time . deltaTime * speed ); if ( this . transform . position == destination ) { status = 0 ; } } } public int getStatus () { return status ; } public void moveTo ( Vector3 _destination ) { destination = _destination ; middle = _destination ; if ( _destination . y == this . transform . position . y ) { status = 2 ; return ; } else if ( _destination . y < this . transform . position . y ) { middle . y = transform . position . y ; } else { middle . x = transform . position . x ; } status = 1 ; } public void reset () { status = 0 ; } } \u4e3a\u4e86\u8ba9\u7269\u4f53\u4e0d\u8981\u76f4\u63a5\u7a7f\u8fc7land\u7684\u5899\u4f53\uff0c\u5f53character\u4e0a\u8239\u65f6\uff0c\u5148\u628a\u7269\u4f53\u79fb\u52a8\u5230destination\u7684\u5bf9\u5e94\u7684x\u5750\u6807\uff0c\u7136\u540e\u518d\u628a\u7269\u4f53\u79fb\u52a8\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u5f53charcter\u4e0b\u8239\u65f6\uff0c\u5148\u628a\u7269\u4f53\u79fb\u52a8\u5230destination\u7684\u5bf9\u5e94\u7684y\u5750\u6807\uff0c\u7136\u540e\u518d\u628a\u7269\u4f53\u79fb\u52a8\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e,\u8fd9\u6837\u4fdd\u8bc1\u4e86\u7269\u4f53\u4e0d\u4f1a\u7a7f\u8d8a\u5899\u4f53\u8fdb\u884c\u79fb\u52a8\uff0c\u4e14\u5b9e\u73b0\u65b9\u5f0f\u8f83\u4e3a\u7b80\u5355\u3002 ICharacterController \u56e0\u4e3a\u7267\u5e08\u4e0e\u6076\u9b54\u7684\u52a8\u4f5c\u7b49\u90fd\u662f\u4e00\u6837\u7684\uff0c\u5c31\u53ea\u662f\u5916\u5f62\u3001\u7c7b\u578b\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u628a\u5176\u62bd\u8c61\u4e3a\u4e00\u4e2aController,\u901a\u8fc7type\u533a\u5206\u5b83\u4eec \u5176\u4ee3\u7801\u5982\u4e0b: public class ICharacterController { readonly GameObject character ; readonly Move moveAction ; readonly int type ; //0: Priest, 1: Demon readonly ClickGUI clickGUI ; bool onBoat ; LandController landController ; public ICharacterController ( int chracterType , string name ) { if ( chracterType == 0 ) { this . character = Object . Instantiate ( Resources . Load ( \"Prefabs/Priest\" , typeof ( GameObject )), Vector3 . zero , Quaternion . identity , null ) as GameObject ; this . type = 0 ; } else { this . character = Object . Instantiate ( Resources . Load ( \"Prefabs/Demon\" , typeof ( GameObject )), Vector3 . zero , Quaternion . identity , null ) as GameObject ; this . type = 1 ; } character . name = name ; moveAction = character . AddComponent ( typeof ( Move )) as Move ; clickGUI = character . AddComponent ( typeof ( ClickGUI )) as ClickGUI ; clickGUI . setController ( this ); } public string getName () { return character . name ; } public void setPosition ( Vector3 pos ) { character . transform . position = pos ; } public void MoveTo ( Vector3 destination ) { moveAction . moveTo ( destination ); } public int getType () { return type ; } public void getOnBoat ( BoatController boatController , int pos ) { landController = null ; if ( pos == 0 ) { character . transform . rotation = Quaternion . AngleAxis ( 90 , Vector3 . up ); } else { character . transform . rotation = Quaternion . AngleAxis ( 270 , Vector3 . up ); } character . transform . parent = boatController . getBoat (). transform ; onBoat = true ; } public void getOnLand ( LandController land ) { landController = land ; if ( land . getType () == - 1 ) { character . transform . rotation = Quaternion . AngleAxis ( 90 , Vector3 . up ); } else { character . transform . rotation = Quaternion . AngleAxis ( 270 , Vector3 . up ); } character . transform . parent = null ; onBoat = false ; } public bool isOnBoat () { return onBoat ; } public LandController getLandController () { return landController ; } public void reset () { moveAction . reset (); landController = ( GameDirector . getInstance (). currentSceneController as FirstController ). rightLand ; getOnLand ( landController ); setPosition ( landController . getEmptyPosition ()); landController . getOnLand ( this ); } } CharcterController\u7c7b\u7684\u5b9e\u73b0\u5341\u5206\u7b80\u5355\uff0c\u5c31\u662f\u6839\u636etype\u5bfc\u5165\u9884\u5236\uff0c\u7136\u540e\u518d\u5b9e\u73b0\u4e0a\u8239\uff0c\u4e0a\u5cb8\uff0c\u91cd\u7f6e\u4ee5\u53ca\u4e00\u4e9b\u5176\u4ed6\u7684get, set\u51fd\u6570\u5c31\u5b8c\u6210\u4e86\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4ee5\u4e0a\u4ee3\u7801\u7684\u5b9e\u73b0\u3002 BoatController BoatController\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: public class BoatController { readonly GameObject boat ; readonly Move moveAction ; readonly Vector3 right = new Vector3 ( 3.5f , 0 , 0 ); readonly Vector3 left = new Vector3 (- 3.5f , 0 , 0 ); readonly Vector3 [] right_positions ; readonly Vector3 [] left_positions ; int status ; // 0: left, 1: right ICharacterController [] characterOnBoat = new ICharacterController [ 2 ]; public BoatController () { status = 1 ; right_positions = new Vector3 [] { new Vector3 ( 2.5F , 0.2F , 0 ), new Vector3 ( 4.5F , 0.2F , 0 ) }; left_positions = new Vector3 [] { new Vector3 (- 4.5F , 0.2F , 0 ), new Vector3 (- 2.5F , 0.2F , 0 ) }; boat = Object . Instantiate ( Resources . Load ( \"Prefabs/Boat\" , typeof ( GameObject )), right , Quaternion . identity , null ) as GameObject ; boat . name = \"boat\" ; moveAction = boat . AddComponent ( typeof ( Move )) as Move ; boat . AddComponent ( typeof ( ClickGUI )); } public void Move () { if ( status == 1 ) { moveAction . moveTo ( left ); } else { moveAction . moveTo ( right ); } status = 1 - status ; } public int getEmptyIndex () { for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] == null ) { return i ; } } return - 1 ; } public Vector3 getEmptyPosition () { int index = getEmptyIndex (); if ( status == 0 ) { return left_positions [ index ]; } else { return right_positions [ index ]; } } public bool isEmptty () { for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] != null ) { return false ; } } return true ; } public void getOnBoat ( ICharacterController character ) { characterOnBoat [ getEmptyIndex ()] = character ; } public ICharacterController getOffBoat ( string name ) { for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] != null && characterOnBoat [ i ]. getName () == name ) { ICharacterController character = characterOnBoat [ i ]; characterOnBoat [ i ] = null ; return character ; } } return null ; } public GameObject getBoat () { return boat ; } public int getBoatPos () { return status ; } public int [] getBoatStatus () { int [] boatStatus = { 0 , 0 }; for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] == null ) continue ; boatStatus [ characterOnBoat [ i ]. getType ()]++; } return boatStatus ; } // 0: Priests, 1: Demon public bool available () { return ( moveAction . getStatus () == 0 ); } public void reset () { moveAction . reset (); if ( status == 0 ) { Move (); } characterOnBoat = new ICharacterController [ 2 ]; } } Boat\u7684\u5b9e\u73b0\u4e5f\u5dee\u4e0d\u591a\uff0c\u53ea\u9700\u8981\u5b9e\u73b0\u521d\u59cb\u5316\u3001\u79fb\u52a8(ToggleBoat),character\u4e0a\u8239\u3001\u4e0b\u8239\u76f8\u5173\u7684\u51fd\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\u3002 LandController LandController\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: public class LandController { readonly GameObject land ; readonly Vector3 leftPos = new Vector3 (- 8.5f , 0f , 0f ); readonly Vector3 rightPos = new Vector3 ( 8.5f , 0f , 0f ); readonly Vector3 [] landPositions ; readonly int type ; // 1:right, -1: left ICharacterController [] characterOnLand ; public LandController ( int _type ) { landPositions = new Vector3 [] { new Vector3 ( 6F , 0.5F , 0 ), new Vector3 ( 7F , 0.5F , 0 ), new Vector3 ( 8F , 0.5F , 0 ), new Vector3 ( 9F , 0.5F , 0 ), new Vector3 ( 10F , 0.5F , 0 ), new Vector3 ( 11F , 0.5F , 0 ) }; characterOnLand = new ICharacterController [ 6 ]; type = _type ; if ( type == 1 ) { land = Object . Instantiate ( Resources . Load ( \"Prefabs/Land\" , typeof ( GameObject )), rightPos , Quaternion . identity , null ) as GameObject ; land . name = \"rightLand\" ; } else { land = Object . Instantiate ( Resources . Load ( \"Prefabs/Land\" , typeof ( GameObject )), leftPos , Quaternion . identity , null ) as GameObject ; land . name = \"leftLand\" ; } } public Vector3 getEmptyPosition () { Vector3 pos = landPositions [ getEmptyIndex ()]; pos . x *= type ; return pos ; } public int getEmptyIndex () { for ( int i = 0 ; i < characterOnLand . Length ; i ++) { if ( characterOnLand [ i ] == null ) return i ; } return - 1 ; } public void getOnLand ( ICharacterController chracter ) { characterOnLand [ getEmptyIndex ()] = chracter ; } public ICharacterController getOffLand ( string name ) { for ( int i = 0 ; i < characterOnLand . Length ; i ++) { if ( characterOnLand [ i ] != null && characterOnLand [ i ]. getName () == name ) { ICharacterController tmp = characterOnLand [ i ]; characterOnLand [ i ] = null ; return tmp ; } } return null ; } public int getType () { return type ; } public int [] getStatus () { int [] status = { 0 , 0 }; for ( int i = 0 ; i < characterOnLand . Length ; i ++) { if ( characterOnLand [ i ] == null ) continue ; status [ characterOnLand [ i ]. getType ()]++; } return status ; } // 0: priests, 1: Demon public void reset () { characterOnLand = new ICharacterController [ 6 ]; } } landController\u7684\u5b9e\u73b0\u548c\u4e0a\u9762\u7684Controller\u4e5f\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5b9e\u73b0\u521d\u59cb\u5316\uff0c\u4e0a\u5cb8\uff0c\u4e0b\u5cb8\u7684\u76f8\u5173\u51fd\u6570\u5c31\u5b8c\u6210\u4e86\u3002 \u5b8c\u6574\u6548\u679c \u603b\u7ed3\uff08\u5bf9MVC\u67b6\u6784\u5f00\u53d1\u6e38\u620f\u7684\u4f53\u4f1a\uff09 MVC\u67b6\u6784\u4f5c\u4e3a\u4e00\u79cd\u7ecf\u5178\u7684\u5f00\u53d1\u6a21\u5f0f\uff0c\u662f\u5173\u6ce8\u70b9\u5206\u79bb\u7684\u4e00\u4e2a\u5341\u5206\u7ecf\u5178\u7684\u4f53\u73b0\u3002\u6211\u4eec\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\uff0c\u5728\u5b8c\u6210\u4e00\u4e9b\u56e2\u961f\u9879\u76ee\u65f6\u4e5f\u6709\u4f7f\u7528\u5176\u4f5c\u4e3a\u57fa\u672c\u67b6\u6784\u8fdb\u884c\u5f00\u53d1\u3002 \u9879\u76ee\u4f7f\u7528MVC\u67b6\u6784\u5206\u79bb\u7684\u8bbe\u8ba1\uff0c \u7ed9\u6bcf\u4e00\u4e2a\u90e8\u5206\u8d4b\u4e88\u5355\u4e00\u7684\u804c\u8d23 \uff0c\u4f7f\u5f97\u6211\u4eec\u5728\u5f00\u53d1\u4e00\u4e2a\u6a21\u5757\u65f6\u4e0d\u7528\u592a\u591a\u5730\u5173\u6ce8\u6240\u4f7f\u7528\u5230\u7684\u6a21\u5757\u7684\u5185\u90e8\u5b9e\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53bb\u8c03\u7528\u76f8\u5e94\u7684\u63a5\u53e3\u53bb\u5b9e\u73b0\u81ea\u5df1\u60f3\u5b9e\u73b0\u7684\u4e1c\u897f\uff0c \u4f7f\u5f97\u6211\u4eec\u7684\u6e38\u620f\u6709\u7740\u66f4\u4f4e\u7684\u8026\u5408\u5ea6\uff0c\u66f4\u65b9\u4fbfDebug\uff0c\u66f4\u65b9\u4fbf\u5f00\u53d1\u3001\u8fed\u4ee3 \uff0c\u5c31\u4ee5\u6211\u4eec\u4e0a\u9762\u7684\u7a0b\u5e8f\u4e3a\u4f8b\uff0c\u5728\u5f00\u53d1FirstSceneController\u65f6\uff0c\u6211\u4eec\u4e0d\u7528\u600e\u4e48\u5173\u6ce8GameObject\u7684Controller\u5185\u90e8\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\uff0c\u5b83\u7ed9\u4e86\u6211\u4eec\u4ec0\u4e48\u63a5\u53e3\uff0c\u8fd9\u4e2a\u63a5\u53e3\u6709\u7740\u4ec0\u4e48\u529f\u80fd\uff0c\u77e5\u9053\u4e86\u4e4b\u540e\u6211\u4eec\u5728FirstSceneController\u4e2d\u76f4\u63a5\u8c03\u7528\u63a5\u53e3\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e0d\u4ec5\u8ba9\u4e2a\u4eba\u5f00\u53d1\u66f4\u6709\u6761\u7406\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u591a\u4eba\u534f\u4f5c\u5f00\u53d1\u66f4\u52a0\u4fbf\u5229\uff0c\u96be\u4ee5\u60f3\u8c61\u4e00\u4e2a\u9ad8\u8026\u5408\u5ea6\u7684\u4e2d\u5927\u578b\u8f6f\u4ef6\u662f\u600e\u4e48\u8fdb\u884c\u591a\u4eba\u534f\u4f5c\u5f00\u53d1\u7684\uff0c\u8fd9\u6837\u7684\u8f6f\u4ef6\u4e00\u4e2a\u4eba\u5f00\u53d1\u90fd\u96be\u53d7\uff0c\u4f55\u51b5\u662f\u591a\u4eba\u3002 \u603b\u4e4b\uff0c\u5728\u4e00\u4e9b\u4e2d\u5927\u578b\u9879\u76ee\u4e2d\uff0c\u4f7f\u7528MVC\u67b6\u6784\u8fdb\u884c\u5f00\u53d1 \u8f6f\u4ef6\u8026\u5408\u5ea6\u4f4e \u6a21\u5757\u6613\u590d\u7528 \u751f\u4ea7\u6548\u7387\u9ad8(\u5bf9\u4e8e\u4e2d\u5927\u578b\u8f6f\u4ef6) \u6613\u4e8e\u7ef4\u62a4\u3001\u8fed\u4ee3 \u6709\u5229\u8f6f\u4ef6\u5de5\u7a0b\u5316\u7ba1\u7406 \u4f46\u662f\uff0cMVC\u67b6\u6784\u4e0d\u662f\u666e\u9002\u7684\uff0c\u5728\u4e00\u4e9b\u8f83\u5c0f\u89c4\u6a21\u7684\u6e38\u620f\u4e2d\uff0c\u4e25\u683c\u4f7f\u7528MVC\u67b6\u6784\u5bf9\u4e8e\u5f00\u53d1\u7684\u6548\u7387\u662f\u6709\u4e00\u5b9a\u5f71\u54cd\u7684\uff0c\u5c31\u50cf\u6211\u4eec\u8fd9\u6b21\u7684\u4f5c\u4e1a\ud83c\udf1a(\u9003\u3002\u4e0d\u8fc7\uff0c\u901a\u8fc7\u8fd9\u4e00\u6b21\u4e25\u683c\u4f7f\u7528MVC\u67b6\u6784\u5f00\u53d1\u7684\u4f5c\u4e1a\uff0c\u6211\u4eec\u5bf9\u4e8eMVC\u6709\u4e86\u57fa\u672c\u7684\u4e86\u89e3\uff0c\u65b9\u4fbf\u4e86\u6211\u4eec\u4e4b\u540e\u4f7f\u7528MVC\u67b6\u6784\u5bf9\u5176\u4ed6\u4e00\u4e9b\u66f4\u5927\u7684\u6e38\u620f\u8fdb\u884c\u5f00\u53d1\u3002","title":"\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#homework2-","text":"","title":"Homework2-\u7f16\u7a0b\u5b9e\u8df5"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#_1","text":"\u9605\u8bfb\u4ee5\u4e0b\u6e38\u620f\u811a\u672c Priests and Devils Priests and Devils is a puzzle game in which you will help the Priests and Devils to cross the river within the time limit. There are 3 priests and 3 devils at one side of the river. They all want to get to the other side of this river, but there is only one boat and this boat can only carry two persons each time. And there must be one person steering the boat from one side to the other side. In the flash game, you can click on them to move them and click the go button to move the boat to the other direction. If the priests are out numbered by the devils on either side of the river, they get killed and the game is over. You can try it in many > ways. Keep all priests alive! Good luck \uff01","title":"\u9898\u76ee\u8981\u6c42"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#_2","text":"play the game ( http://www.flash-game.net/game/2535/priests-and-devils.html ) \u5217\u51fa\u6e38\u620f\u4e2d\u63d0\u53ca\u7684\u4e8b\u7269\uff08Objects\uff09 \u6e38\u620f\u4e2d\u63d0\u53ca\u7684\u4e8b\u7269\u6709 \u9b54\u9b3c \u7267\u5e08 \u8239 \u4e24\u8fb9\u7684\u5cb8 \u6cb3 \u7528\u8868\u683c\u5217\u51fa\u73a9\u5bb6\u52a8\u4f5c\u8868\uff08\u89c4\u5219\u8868\uff09\uff0c\u6ce8\u610f\uff0c\u52a8\u4f5c\u8d8a\u5c11\u8d8a\u597d \u884c\u4e3a \u884c\u4e3a\u6761\u4ef6 \u7267\u5e08\uff0f\u6076\u9b54\u4e0a\u8239 \u8239\u4e0a\u6709\u7a7a\u4f4d\u4e14\u8239\u5728\u8be5\u5cb8 \u5f00\u8239 \u8239\u4e0a\u6709\u4eba \u7267\u5e08/\u6076\u9b54\u4e0b\u8239 \u8239\u6709\u4eba\u4e14\u9760\u5728\u5cb8\u8fb9 \u6e38\u620f\u80dc\u5229 6\u4e2a\u4eba\u90fd\u5230\u4e86\u5bf9\u5cb8 \u6e38\u620f\u5931\u8d25 \u6709\u4e00\u8fb9\u5cb8\u4e0a\u4eba\u6570\u4e0d\u5747","title":"\u7b80\u7b54\u9898\uff1a"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#_3","text":"\u8bf7\u5c06\u6e38\u620f\u4e2d\u5bf9\u8c61\u505a\u6210\u9884\u5236 \u5728 GenGameObjects \u4e2d\u521b\u5efa \u957f\u65b9\u5f62\u3001\u6b63\u65b9\u5f62\u3001\u7403 \u53ca\u5176\u8272\u5f69\u4ee3\u8868\u6e38\u620f\u4e2d\u7684\u5bf9\u8c61\u3002 \u4f7f\u7528 C# \u96c6\u5408\u7c7b\u578b \u6709\u6548\u7ec4\u7ec7\u5bf9\u8c61 \u6574\u4e2a\u6e38\u620f\u4ec5 \u4e3b\u6444\u50cf\u673a \u548c \u4e00\u4e2a Empty \u5bf9\u8c61\uff0c \u5176\u4ed6\u5bf9\u8c61\u5fc5\u987b\u4ee3\u7801\u52a8\u6001\u751f\u6210\uff01\uff01\uff01\u6574\u4e2a\u6e38\u620f\u4e0d\u8bb8\u51fa\u73b0 Find \u6e38\u620f\u5bf9\u8c61\uff0c SendMessage \u8fd9\u7c7b\u7a81\u7834\u7a0b\u5e8f\u7ed3\u6784\u7684 \u901a\u8baf\u8026\u5408 \u8bed\u53e5\u3002 \u8fdd\u80cc\u672c\u6761\u51c6\u5219\uff0c\u4e0d\u7ed9\u5206 \u8bf7\u4f7f\u7528\u8bfe\u4ef6\u67b6\u6784\u56fe\u7f16\u7a0b\uff0c\u4e0d\u63a5\u53d7\u975e MVC \u7ed3\u6784\u7a0b\u5e8f \u6ce8\u610f\u7ec6\u8282\uff0c\u4f8b\u5982\uff1a\u8239\u672a\u9760\u5cb8\uff0c\u7267\u5e08\u4e0e\u9b54\u9b3c\u4e0a\u4e0b\u8239\u8fd0\u52a8\u4e2d\uff0c\u5747\u4e0d\u80fd\u63a5\u53d7\u7528\u6237\u4e8b\u4ef6\uff01","title":"\u7a0b\u5e8f\u9650\u5236"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#_4","text":"github@zhongwq/Unity3D-Learning/Homework2","title":"\u9879\u76ee\u5730\u5740"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#unitymvc","text":"\u60f3\u4f7f\u7528\u4e00\u4e2a\u67b6\u6784\u8fdb\u884c\u5f00\u53d1\uff0c\u6211\u4eec\u80af\u5b9a\u9700\u8981\u5148\u4e86\u89e3MVC\u67b6\u6784\u5982\u4f55\u5728\u57fa\u4e8eUnity\u7684\u6e38\u620f\u7684\u5f00\u53d1\u4e2d\u4f7f\u7528\u3002\u4ed4\u7ec6\u5206\u6790Unity\u4e2d\u7684MVC\u7ed3\u6784\uff0c\u7ed3\u5408\u8001\u5e08\u4e0a\u8bfe\u65f6\u6240\u8bb2\u7684\u5185\u5bb9\uff0c\u5b83\u5176\u5b9e\u548c\u5e73\u65f6\u5728WEB\u4e2d\u5e38\u7528MVC\u7ed3\u6784\u5728\u672c\u8d28\u4e0a\u5e76\u6ca1\u6709\u592a\u5927\u7684\u533a\u522b\uff0c\u90fd\u662f\u5173\u6ce8\u70b9\u5206\u79bb(SOC)\u7684\u4f53\u73b0\uff0c\u662f\u4e00\u79cd\u6210\u719f\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u89c4\u8303\u3002\u4f7f\u7528MVC\u67b6\u6784\u53bb\u5f00\u53d1\u6211\u4eec\u7684\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u5f97\u6211\u4eec\u5728\u62d3\u5c55\u8f6f\u4ef6\u529f\u80fd\u3001\u6539\u8fdb\u7528\u6237\u4ea4\u4e92\u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u91cd\u5199\u5927\u91cf\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\uff0c\u51cf\u5c11\u4e86\u6211\u4eec\u7684\u4ee3\u7801\u91cf\uff0c\u65b9\u4fbf\u4e86\u8f6f\u4ef6\u7684\u62d3\u5c55\uff0c\u5c31\u5982\u8001\u5e08\u6240\u8bf4\u7684\uff1a\u201c\u7a33\u56fa\u7684MVC\u6846\u67b6\u7ecf\u5f97\u8d77\u4efb\u610f\u62d3\u5c55\u201d\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u8c08\u8c08Unity\u4e2d\u7684MVC\u67b6\u6784: M(Model): Unity\u4e2d\uff0cModel\u5c31\u662f\u6e38\u620f\u573a\u666f\u4e2dGameObject\u3001\u548c\u5b83\u4eec\u7684\u5173\u7cfb\u4ee5\u53ca\u540e\u53f0\u7684\u6570\u636e\u6a21\u578b(\u6bd4\u5982\u7528\u6237\u4fe1\u606f\u7b49)\uff0c\u5b83\u4eec\u90fd\u53d7\u5230\u76f8\u5e94\u7684Controller\u7684\u63a7\u5236 V(View): View\u8fd9\u90e8\u5206\u5728\u6e38\u620f\u4e2d\u8d77\u5230\u7684\u662f\u4e0e\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\u7684\u529f\u80fd\uff0c\u5b83\u4eec\u8d1f\u8d23\u5411\u7528\u6237\u6218\u672f\u6e38\u620f\u7ed3\u679c\uff0c\u5904\u7406GUI\u4e8b\u4ef6\u5e76\u901a\u8fc7IUserAction\u63a5\u53e3\u6765\u4e0eController\u8fdb\u884c\u4ea4\u4e92\u3002 C(Controller): Controller\u63a7\u5236\u7740\u6e38\u620f\u573a\u666f\u4e2d\u6240\u6709\u7684\u5bf9\u8c61\uff0c\u5176\u8d1f\u8d23\u63a5\u6536\u6765\u81eaView\u7684\u7528\u6237\u7684\u6307\u4ee4\u5e76\u6839\u636e\u7528\u6237\u8f93\u5165\u7684\u6307\u4ee4\uff0c\u66f4\u65b0Models\u4ee5\u53ca\u66f4\u65b0View\u7684\u72b6\u6001\uff0c\u5176\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u8fde\u63a5Model\u4e0eView\u7684\u6865\u6881\u3002","title":"Unity\u4e2d\u7684MVC\u67b6\u6784"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#uml","text":"\u5728\u4e86\u89e3\u4e86Unity\u4e2dMVC\u7684\u57fa\u672c\u67b6\u6784\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u8fdb\u884c\u4e0b\u9762\u7684\u5f00\u53d1\u4e86 \u6309\u7167\u9898\u76ee\u8981\u6c42\u7684MVC\u7ed3\u6784\uff0c\u5206\u6790\u6e38\u620f\u7684\u57fa\u672c\u7ed3\u6784\uff0c\u5f97\u5230\u57fa\u672c\u7684UML\u56fe\u7684\u7ed3\u6784\u5982\u4e0b:","title":"\u9879\u76eeUML\u56fe"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#_5","text":"","title":"\u5bf9\u5404\u6a21\u5757\u5206\u5757\u8fdb\u884c\u5f00\u53d1"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#gamedirector","text":"\u9996\u5148\uff0c\u6211\u4eec\u6765\u5f00\u53d1\u62c5\u8d1f\u7740\u4f17\u591a\u804c\u8d23\u7684GameDirector\uff0c\u5728\u6e38\u620f\u91cc\u9762\uff0c\u5bfc\u6f14(Director)\u7684\u804c\u8d23\u5927\u81f4\u5982\u4e0b: \u83b7\u53d6\u5f53\u524d\u6e38\u620f\u7684\u573a\u666f \u63a7\u5236\u573a\u666f\u8fd0\u884c\u3001\u5207\u6362\u3001\u5165\u6808\u4e0e\u51fa\u6808\uff0c\u6682\u505c\u3001\u6062\u590d\u3001\u9000\u51fa \u7ba1\u7406\u6e38\u620f\u5168\u5c40\u72b6\u6001 \u8bbe\u5b9a\u6e38\u620f\u7684\u914d\u7f6e \u8bbe\u5b9a\u6e38\u620f\u5168\u5c40\u89c6\u56fe \u7531\u4e0a\u6211\u4eec\u53ef\u77e5\uff0cGameDirector\u5bf9\u4e8e\u4e00\u4e2a\u6e38\u620f\u662f\u591a\u4e48\u7684\u91cd\u8981\uff0c\u4f46\u662f\uff0c\u5728\u6211\u4eec\u8fd9\u6b21\u7684\u5c0f\u9879\u76ee\u4e2d\uff0c\u5b83\u7684\u804c\u8d23\u6ca1\u6709\u90a3\u4e48\u591a\uff0c\u5b83\u5728\u8fd9\u6b21\u7684\u9879\u76ee\u4e2d\u4e3b\u8981\u8d1f\u8d23\u7684\u662f\u83b7\u53d6\u5f53\u524d\u6e38\u620f\u573a\u666f\uff0c\u5176\u4ee3\u7801\u5982\u4e0b: public class GameDirector : System . Object { private static GameDirector _instance ; public ISceneController currentSceneController { get ; set ; } public bool running { set ; get ; } public static GameDirector getInstance () { if ( _instance == null ) { _instance = new GameDirector (); return _instance ; } return _instance ; } public int getFPS () { return Application . targetFrameRate ; } public void setFPS ( int fps ) { Application . targetFrameRate = fps ; } } Director\u5728\u8fd0\u884c\u65f6\u53ea\u4f1a\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5728\u8fd0\u884c\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5176\u5e94\u7528\u4e86\u5355\u4f8b\u6a21\u5f0f\u4fdd\u8bc1\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u751f\u6210\uff0c\u65b9\u4fbf\u4e86\u7c7b\u4e4b\u95f4\u7684\u4e8b\u4ef6\u901a\u4fe1\uff0c\u65b9\u4fbf\u4e86MVC\u7684\u5b9e\u73b0\u3002 Director\u4f5c\u4e3a\u6e38\u620f\u6700\u4e3a\u9ad8\u5c42\u7684Controller\uff0c\u5176\u4e0d\u5177\u4f53\u7684\u63a7\u5236\u6e38\u620f\u4e2d\u7684\u4efb\u4e00\u5bf9\u8c61\uff0c\u5176\u901a\u8fc7\u5bf9currentSceneController\u7684\u7ef4\u62a4\uff0c\u628a\u63a7\u5236\u6e38\u620f\u5bf9\u8c61\u7684\u4efb\u52a1\u4ea4\u7ed9\u4e0d\u540c\u7684SceneController\u3002","title":"GameDirector"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#iscenecontroller","text":"ISceneController\u7684\u4ee3\u7801\u5982\u4e0b //interface of Scene public interface ISceneController { void genGameObjects (); } ISCeneController\u662f\u6e38\u620f\u4e2d\u7684\u573a\u666f\u7ba1\u7406\u5668\uff0c\u4fd7\u79f0\u573a\u8bb0\uff0c\u5176\u4e3b\u8981\u804c\u8d23\u5982\u4e0b: \u7ba1\u7406\u6e38\u620f\u5728\u8be5\u6e38\u620f\u573a\u666f\u4e2d\u7684\u6240\u6709\u7684\u6e38\u620f\u5bf9\u8c61 \u534f\u8c03\u6e38\u620f\u5bf9\u8c61\u3001\u6e38\u620f\u5bf9\u8c61\u7ba1\u7406\u5668(GameObjectControllers)\u4e4b\u95f4\u7684\u901a\u4fe1 \u54cd\u5e94\u5916\u90e8\u8f93\u5165\u4e8b\u4ef6 \u7ba1\u7406\u8be5\u6e38\u620f\u573a\u666f\u7684\u6240\u6709\u7684\u89c4\u5219 \u7ba1\u7406\u4e00\u4e9b\u5176\u4ed6\u7684\u4e1c\u897f \u8be5\u7edf\u4e00\u7684\u63a5\u53e3\u7684\u5b9e\u73b0\u6b63\u662fGameDirector\u5bf9\u5404\u4e2a\u6e38\u620f\u573a\u666f\u7ba1\u7406\u7684\u5173\u952e\uff0c\u4ed6\u662f\u5bfc\u6f14\u63a7\u5236\u573a\u666f\u7684\u6e20\u9053\uff0cGameDirector\u901a\u8fc7\u5bf9\u4e8ecurrentSceneController\u7684\u7ef4\u62a4\uff0c\u53ef\u4ee5\u7b80\u5355\u5b9e\u73b0\u6e38\u620f\u573a\u666f\u7684\u5404\u79cd\u7ba1\u7406","title":"ISceneController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#iuseraction","text":"IUserAction\u4e2d\u4f53\u73b0\u4e86\u6e38\u620f\u7f16\u7a0b\u7684\u95e8\u9762\u6a21\u5f0f\uff0c\u6e38\u620f\u5916\u90e8\u4e0e\u4e00\u4e2a\u5b50\u7cfb\u7edf\u7684\u901a\u4fe1\u5fc5\u987b\u901a\u8fc7\u4e00\u4e2a\u7edf\u4e00\u7684\u95e8\u9762\u5bf9\u8c61\u8fdb\u884c\uff0c\u800c\u6211\u4eec\u73b0\u5728\u5b9e\u73b0\u7684IUserAction\u5c31\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u5bf9\u8c61,GUI\u7c7b\u901a\u8fc7IUserAction\u6765\u4e0eController\u8fdb\u884c\u901a\u4fe1\uff0c\u6211\u4eec\u901a\u8fc7\u5b9e\u73b0IUserAction\u63a5\u53e3\u6765\u5b9a\u4e49Controller\u4e0eGUI\u7684\u4ea4\u4e92\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u5b9e\u73b0Controller\u7c7b\u65f6\u53ea\u9700\u8981\u5b9e\u73b0IUserAction\u5bf9\u5e94\u7684\u63a5\u53e3\uff0c\u4ed6\u5c31\u53ef\u4ee5\u4e0e\u4efb\u610f\u4f7f\u7528IUserAction\u63a5\u53e3\u7684View\u5373GUI\u7c7b\u8c03\u7528\uff0cGUI\u7c7b\u4e5f\u662f\u53ea\u9700\u8c03\u7528\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u5373\u53ef\u5b9e\u73b0\u4e0eController\u7684\u901a\u4fe1, \u65b9\u4fbf\u4e86\u6211\u4eecMVC\u67b6\u6784\u7684\u5b9e\u73b0\u3002 \u5176\u5b9a\u4e49\u5982\u4e0b: public interface IUserAction { void restart (); void ToggleBoat (); void ClickCharacter ( ICharacterController chracter ); }","title":"IUserAction"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#usergui","text":"UserGUI\u7684\u4ee3\u7801\u5982\u4e0b: public class UserGUI : MonoBehaviour { public int status = 0 ; private IUserAction action ; GUIStyle headerStyle ; GUIStyle buttonStyle ; // Use this for initialization void Start () { action = GameDirector . getInstance (). currentSceneController as IUserAction ; headerStyle = new GUIStyle (); headerStyle . fontSize = 40 ; headerStyle . alignment = TextAnchor . MiddleCenter ; buttonStyle = new GUIStyle ( \"button\" ); buttonStyle . fontSize = 30 ; } // Update is called once per frame void OnGUI () { GUI . Label ( new Rect ( Screen . width / 2 - 100 , 10 , 200 , 50 ), \"Priests & Demons\" , headerStyle ); if ( status == 1 ) { GUI . Label ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 - 90 , 100 , 50 ), \"Gameover!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 65 , Screen . height / 2 , 140 , 70 ), \"Restart\" , buttonStyle )) { status = 0 ; action . restart (); } } else if ( status == 2 ) { GUI . Label ( new Rect ( Screen . width / 2 - 50 , Screen . height / 2 - 90 , 100 , 50 ), \"Win!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 70 , Screen . height / 2 , 140 , 70 ), \"Restart\" , buttonStyle )) { status = 0 ; action . restart (); } } } } \u7531\u4e0a\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cUserGUI\u53ea\u662f\u7b80\u5355\u5730\u6839\u636e\u6e38\u620f\u72b6\u6001\uff0c\u5bf9\u6e38\u620f\u4fe1\u606f\u7b49\u8fdb\u884c\u5c55\u793a\uff0c\u7136\u540e\u901a\u8fc7IUserAction\u4e0eController\u8fdb\u884c\u4ea4\u4e92\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u5728\u4e0a\u9762\u6240\u63d0\u5230\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728GUI\u4e2d\u8c03\u7528IUserAction\u4e2d\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fc5\u901f\u5b9e\u73b0\u5bf9\u6e38\u620f\u573a\u666f\u7684\u63a7\u5236\uff0c\u4e0b\u9762\u7684ClickGUI\u4e5f\u662f\u4e00\u6837","title":"UserGUI"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#clickgui","text":"\u8be5\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: public class ClickGUI : MonoBehaviour { IUserAction action ; ICharacterController character ; public void setController ( ICharacterController characterController ) { character = characterController ; } void Start () { action = GameDirector . getInstance (). currentSceneController as IUserAction ; } void OnMouseDown () { if ( gameObject . name == \"boat\" ) { action . ToggleBoat (); } else { action . ClickCharacter ( character ); } } } \u5728ClickGUI\u4e2d\uff0c\u6211\u4eec\u540c\u6837\u7528\u5230\u4e86IUserAction, ClickGUI\u76d1\u542c\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u7136\u540e\u901a\u8fc7IUserAction\u63d0\u4f9b\u7684\u7c7b\u4f3c\u79fb\u52a8\u8239\uff0c\u6e38\u620f\u89d2\u8272\u4e0a\u4e0b\u8239\u7684\u51fd\u6570\uff0c\u628a\u7528\u6237\u6307\u4ee4\u4f20\u7ed9Controller\u8fdb\u884c\u6267\u884c\u3002\u4ece\u800c\u5b9e\u73b0View\u548cController\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002","title":"ClickGUI"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#firstcontroller","text":"\u5728\u8be5\u6e38\u620f\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u6e38\u620f\u573a\u666f\uff0c\u6240\u4ee5 \u5176\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b: public class FirstController : MonoBehaviour , ISceneController , IUserAction { readonly Vector3 riverPosition = new Vector3 ( 0 , - 0.25f , 0 ); UserGUI userGUI ; public LandController rightLand ; public LandController leftLand ; public BoatController boat ; public ICharacterController [] characters ; void Awake () { GameDirector director = GameDirector . getInstance (); director . currentSceneController = this ; userGUI = gameObject . AddComponent < UserGUI >() as UserGUI ; genGameObjects (); } public void genGameObjects () { characters = new ICharacterController [ 6 ]; GameObject river = Instantiate ( Resources . Load ( \"Prefabs/River\" , typeof ( GameObject )), riverPosition , Quaternion . identity , null ) as GameObject ; river . name = \"river\" ; boat = new BoatController (); leftLand = new LandController (- 1 ); rightLand = new LandController ( 1 ); for ( int i = 0 ; i < 3 ; i ++) { ICharacterController priest = new ICharacterController ( 0 , \"priest\" + i ); priest . setPosition ( rightLand . getEmptyPosition ()); priest . getOnLand ( rightLand ); rightLand . getOnLand ( priest ); characters [ i ] = priest ; } for ( int i = 0 ; i < 3 ; i ++) { ICharacterController demon = new ICharacterController ( 1 , \"demon\" + i ); demon . setPosition ( rightLand . getEmptyPosition ()); demon . getOnLand ( rightLand ); rightLand . getOnLand ( demon ); characters [ i + 3 ] = demon ; } } public void ClickCharacter ( ICharacterController character ) { if ( userGUI . status != 0 || ! boat . available ()) { return ; } if ( character . isOnBoat ()) { LandController land ; if ( boat . getBoatPos () == 0 ) { land = leftLand ; } else { land = rightLand ; } boat . getOffBoat ( character . getName ()); character . MoveTo ( land . getEmptyPosition ()); character . getOnLand ( land ); land . getOnLand ( character ); } else { LandController land = character . getLandController (); if ( boat . getEmptyIndex () == - 1 ) return ; int landPos = land . getType (), boatPos = ( boat . getBoatPos () == 0 ) ? - 1 : 1 ; if ( landPos != boatPos ) return ; land . getOffLand ( character . getName ()); character . MoveTo ( boat . getEmptyPosition ()); character . getOnBoat ( boat , boat . getEmptyIndex ()); boat . getOnBoat ( character ); } userGUI . status = checkResult (); } public void ToggleBoat () { if ( userGUI . status != 0 || boat . isEmptty ()) return ; boat . Move (); userGUI . status = checkResult (); } int checkResult () { int leftPriests = 0 ; int rightPriests = 0 ; int leftDemons = 0 ; int rightDemons = 0 ; int [] leftStatus = leftLand . getStatus (); leftPriests += leftStatus [ 0 ]; leftDemons += leftStatus [ 1 ]; if ( leftPriests + leftDemons == 6 ) return 2 ; int [] rightStatus = rightLand . getStatus (); rightPriests += rightStatus [ 0 ]; rightDemons += rightStatus [ 1 ]; int [] boatStatus = boat . getBoatStatus (); if ( boat . getBoatPos () == 0 ) { leftPriests += boatStatus [ 0 ]; leftDemons += boatStatus [ 1 ]; } else { rightPriests += boatStatus [ 0 ]; rightDemons += boatStatus [ 1 ]; } if ( leftPriests > 0 && leftPriests < leftDemons ) return 1 ; if ( rightPriests > 0 && rightPriests < rightDemons ) return 1 ; return 0 ; } public void restart () { boat . reset (); leftLand . reset (); rightLand . reset (); for ( int i = 0 ; i < characters . Length ; i ++) characters [ i ]. reset (); } } FirstController\u7ee7\u627f\u4e86ISceneController\u548cIUserAction\u8fd9\u4e24\u4e2a\u63a5\u53e3\uff0c\u5e76\u5b9e\u73b0\u4e86\u5176\u91cc\u9762\u7684\u51fd\u6570\uff0c\u5176\u65e2\u53ef\u4ee5\u901a\u8fc7IUserAction\u4e0eView\u8fdb\u884c\u4ea4\u4e92\uff0c\u4e5f\u53ef\u4ee5\u5728LoadResources\u540e\uff0c\u901a\u8fc7GameObject\u7684Controller\u5bf9\u573a\u666f\u4e2d\u7684\u5404\u4e2aGameObject\u8fdb\u884c\u63a7\u5236\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u4ecb\u7ecd\u6e38\u620f\u4e2d\u6e38\u620f\u5bf9\u8c61\u7684Controller\u7684\u4e66\u5199 \u9996\u5148\uff0c\u8d2f\u7a7f\u7740\u6211\u4eec\u8fd9\u6574\u4e00\u4e2a\u6e38\u620f\u7684\u5c31\u662fGameObject\u7684\u79fb\u52a8\u5566\uff01\u6240\u4ee5\u6211\u5148\u8bf4\u4e00\u4e0b\u62bd\u8c61\u51fa\u6765\u7684Move\u7c7b\uff0c\u5176\u4ee3\u7801\u5982\u4e0b\uff1a public class Move : MonoBehaviour { readonly float speed = 20 ; int status ; //0: \u9759\u6b62, 1: \u5904\u4e8e\u524d\u6bb5\u79fb\u52a8, 2: \u5904\u4e8e\u540e\u6bb5\u79fb\u52a8 Vector3 middle ; Vector3 destination ; void Update () { if ( status == 1 ) { this . transform . position = Vector3 . MoveTowards ( this . transform . position , middle , Time . deltaTime * speed ); if ( transform . position == middle ) { status = 2 ; } } else if ( status == 2 ) { this . transform . position = Vector3 . MoveTowards ( this . transform . position , destination , Time . deltaTime * speed ); if ( this . transform . position == destination ) { status = 0 ; } } } public int getStatus () { return status ; } public void moveTo ( Vector3 _destination ) { destination = _destination ; middle = _destination ; if ( _destination . y == this . transform . position . y ) { status = 2 ; return ; } else if ( _destination . y < this . transform . position . y ) { middle . y = transform . position . y ; } else { middle . x = transform . position . x ; } status = 1 ; } public void reset () { status = 0 ; } } \u4e3a\u4e86\u8ba9\u7269\u4f53\u4e0d\u8981\u76f4\u63a5\u7a7f\u8fc7land\u7684\u5899\u4f53\uff0c\u5f53character\u4e0a\u8239\u65f6\uff0c\u5148\u628a\u7269\u4f53\u79fb\u52a8\u5230destination\u7684\u5bf9\u5e94\u7684x\u5750\u6807\uff0c\u7136\u540e\u518d\u628a\u7269\u4f53\u79fb\u52a8\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u5f53charcter\u4e0b\u8239\u65f6\uff0c\u5148\u628a\u7269\u4f53\u79fb\u52a8\u5230destination\u7684\u5bf9\u5e94\u7684y\u5750\u6807\uff0c\u7136\u540e\u518d\u628a\u7269\u4f53\u79fb\u52a8\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e,\u8fd9\u6837\u4fdd\u8bc1\u4e86\u7269\u4f53\u4e0d\u4f1a\u7a7f\u8d8a\u5899\u4f53\u8fdb\u884c\u79fb\u52a8\uff0c\u4e14\u5b9e\u73b0\u65b9\u5f0f\u8f83\u4e3a\u7b80\u5355\u3002","title":"FirstController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#icharactercontroller","text":"\u56e0\u4e3a\u7267\u5e08\u4e0e\u6076\u9b54\u7684\u52a8\u4f5c\u7b49\u90fd\u662f\u4e00\u6837\u7684\uff0c\u5c31\u53ea\u662f\u5916\u5f62\u3001\u7c7b\u578b\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u628a\u5176\u62bd\u8c61\u4e3a\u4e00\u4e2aController,\u901a\u8fc7type\u533a\u5206\u5b83\u4eec \u5176\u4ee3\u7801\u5982\u4e0b: public class ICharacterController { readonly GameObject character ; readonly Move moveAction ; readonly int type ; //0: Priest, 1: Demon readonly ClickGUI clickGUI ; bool onBoat ; LandController landController ; public ICharacterController ( int chracterType , string name ) { if ( chracterType == 0 ) { this . character = Object . Instantiate ( Resources . Load ( \"Prefabs/Priest\" , typeof ( GameObject )), Vector3 . zero , Quaternion . identity , null ) as GameObject ; this . type = 0 ; } else { this . character = Object . Instantiate ( Resources . Load ( \"Prefabs/Demon\" , typeof ( GameObject )), Vector3 . zero , Quaternion . identity , null ) as GameObject ; this . type = 1 ; } character . name = name ; moveAction = character . AddComponent ( typeof ( Move )) as Move ; clickGUI = character . AddComponent ( typeof ( ClickGUI )) as ClickGUI ; clickGUI . setController ( this ); } public string getName () { return character . name ; } public void setPosition ( Vector3 pos ) { character . transform . position = pos ; } public void MoveTo ( Vector3 destination ) { moveAction . moveTo ( destination ); } public int getType () { return type ; } public void getOnBoat ( BoatController boatController , int pos ) { landController = null ; if ( pos == 0 ) { character . transform . rotation = Quaternion . AngleAxis ( 90 , Vector3 . up ); } else { character . transform . rotation = Quaternion . AngleAxis ( 270 , Vector3 . up ); } character . transform . parent = boatController . getBoat (). transform ; onBoat = true ; } public void getOnLand ( LandController land ) { landController = land ; if ( land . getType () == - 1 ) { character . transform . rotation = Quaternion . AngleAxis ( 90 , Vector3 . up ); } else { character . transform . rotation = Quaternion . AngleAxis ( 270 , Vector3 . up ); } character . transform . parent = null ; onBoat = false ; } public bool isOnBoat () { return onBoat ; } public LandController getLandController () { return landController ; } public void reset () { moveAction . reset (); landController = ( GameDirector . getInstance (). currentSceneController as FirstController ). rightLand ; getOnLand ( landController ); setPosition ( landController . getEmptyPosition ()); landController . getOnLand ( this ); } } CharcterController\u7c7b\u7684\u5b9e\u73b0\u5341\u5206\u7b80\u5355\uff0c\u5c31\u662f\u6839\u636etype\u5bfc\u5165\u9884\u5236\uff0c\u7136\u540e\u518d\u5b9e\u73b0\u4e0a\u8239\uff0c\u4e0a\u5cb8\uff0c\u91cd\u7f6e\u4ee5\u53ca\u4e00\u4e9b\u5176\u4ed6\u7684get, set\u51fd\u6570\u5c31\u5b8c\u6210\u4e86\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4ee5\u4e0a\u4ee3\u7801\u7684\u5b9e\u73b0\u3002","title":"ICharacterController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#boatcontroller","text":"BoatController\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: public class BoatController { readonly GameObject boat ; readonly Move moveAction ; readonly Vector3 right = new Vector3 ( 3.5f , 0 , 0 ); readonly Vector3 left = new Vector3 (- 3.5f , 0 , 0 ); readonly Vector3 [] right_positions ; readonly Vector3 [] left_positions ; int status ; // 0: left, 1: right ICharacterController [] characterOnBoat = new ICharacterController [ 2 ]; public BoatController () { status = 1 ; right_positions = new Vector3 [] { new Vector3 ( 2.5F , 0.2F , 0 ), new Vector3 ( 4.5F , 0.2F , 0 ) }; left_positions = new Vector3 [] { new Vector3 (- 4.5F , 0.2F , 0 ), new Vector3 (- 2.5F , 0.2F , 0 ) }; boat = Object . Instantiate ( Resources . Load ( \"Prefabs/Boat\" , typeof ( GameObject )), right , Quaternion . identity , null ) as GameObject ; boat . name = \"boat\" ; moveAction = boat . AddComponent ( typeof ( Move )) as Move ; boat . AddComponent ( typeof ( ClickGUI )); } public void Move () { if ( status == 1 ) { moveAction . moveTo ( left ); } else { moveAction . moveTo ( right ); } status = 1 - status ; } public int getEmptyIndex () { for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] == null ) { return i ; } } return - 1 ; } public Vector3 getEmptyPosition () { int index = getEmptyIndex (); if ( status == 0 ) { return left_positions [ index ]; } else { return right_positions [ index ]; } } public bool isEmptty () { for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] != null ) { return false ; } } return true ; } public void getOnBoat ( ICharacterController character ) { characterOnBoat [ getEmptyIndex ()] = character ; } public ICharacterController getOffBoat ( string name ) { for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] != null && characterOnBoat [ i ]. getName () == name ) { ICharacterController character = characterOnBoat [ i ]; characterOnBoat [ i ] = null ; return character ; } } return null ; } public GameObject getBoat () { return boat ; } public int getBoatPos () { return status ; } public int [] getBoatStatus () { int [] boatStatus = { 0 , 0 }; for ( int i = 0 ; i < characterOnBoat . Length ; i ++) { if ( characterOnBoat [ i ] == null ) continue ; boatStatus [ characterOnBoat [ i ]. getType ()]++; } return boatStatus ; } // 0: Priests, 1: Demon public bool available () { return ( moveAction . getStatus () == 0 ); } public void reset () { moveAction . reset (); if ( status == 0 ) { Move (); } characterOnBoat = new ICharacterController [ 2 ]; } } Boat\u7684\u5b9e\u73b0\u4e5f\u5dee\u4e0d\u591a\uff0c\u53ea\u9700\u8981\u5b9e\u73b0\u521d\u59cb\u5316\u3001\u79fb\u52a8(ToggleBoat),character\u4e0a\u8239\u3001\u4e0b\u8239\u76f8\u5173\u7684\u51fd\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\u3002","title":"BoatController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#landcontroller","text":"LandController\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: public class LandController { readonly GameObject land ; readonly Vector3 leftPos = new Vector3 (- 8.5f , 0f , 0f ); readonly Vector3 rightPos = new Vector3 ( 8.5f , 0f , 0f ); readonly Vector3 [] landPositions ; readonly int type ; // 1:right, -1: left ICharacterController [] characterOnLand ; public LandController ( int _type ) { landPositions = new Vector3 [] { new Vector3 ( 6F , 0.5F , 0 ), new Vector3 ( 7F , 0.5F , 0 ), new Vector3 ( 8F , 0.5F , 0 ), new Vector3 ( 9F , 0.5F , 0 ), new Vector3 ( 10F , 0.5F , 0 ), new Vector3 ( 11F , 0.5F , 0 ) }; characterOnLand = new ICharacterController [ 6 ]; type = _type ; if ( type == 1 ) { land = Object . Instantiate ( Resources . Load ( \"Prefabs/Land\" , typeof ( GameObject )), rightPos , Quaternion . identity , null ) as GameObject ; land . name = \"rightLand\" ; } else { land = Object . Instantiate ( Resources . Load ( \"Prefabs/Land\" , typeof ( GameObject )), leftPos , Quaternion . identity , null ) as GameObject ; land . name = \"leftLand\" ; } } public Vector3 getEmptyPosition () { Vector3 pos = landPositions [ getEmptyIndex ()]; pos . x *= type ; return pos ; } public int getEmptyIndex () { for ( int i = 0 ; i < characterOnLand . Length ; i ++) { if ( characterOnLand [ i ] == null ) return i ; } return - 1 ; } public void getOnLand ( ICharacterController chracter ) { characterOnLand [ getEmptyIndex ()] = chracter ; } public ICharacterController getOffLand ( string name ) { for ( int i = 0 ; i < characterOnLand . Length ; i ++) { if ( characterOnLand [ i ] != null && characterOnLand [ i ]. getName () == name ) { ICharacterController tmp = characterOnLand [ i ]; characterOnLand [ i ] = null ; return tmp ; } } return null ; } public int getType () { return type ; } public int [] getStatus () { int [] status = { 0 , 0 }; for ( int i = 0 ; i < characterOnLand . Length ; i ++) { if ( characterOnLand [ i ] == null ) continue ; status [ characterOnLand [ i ]. getType ()]++; } return status ; } // 0: priests, 1: Demon public void reset () { characterOnLand = new ICharacterController [ 6 ]; } } landController\u7684\u5b9e\u73b0\u548c\u4e0a\u9762\u7684Controller\u4e5f\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5b9e\u73b0\u521d\u59cb\u5316\uff0c\u4e0a\u5cb8\uff0c\u4e0b\u5cb8\u7684\u76f8\u5173\u51fd\u6570\u5c31\u5b8c\u6210\u4e86\u3002","title":"LandController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#_6","text":"","title":"\u5b8c\u6574\u6548\u679c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb03-Priestss & Devils\u7f16\u7a0b\u5b9e\u8df5/#mvc","text":"MVC\u67b6\u6784\u4f5c\u4e3a\u4e00\u79cd\u7ecf\u5178\u7684\u5f00\u53d1\u6a21\u5f0f\uff0c\u662f\u5173\u6ce8\u70b9\u5206\u79bb\u7684\u4e00\u4e2a\u5341\u5206\u7ecf\u5178\u7684\u4f53\u73b0\u3002\u6211\u4eec\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\uff0c\u5728\u5b8c\u6210\u4e00\u4e9b\u56e2\u961f\u9879\u76ee\u65f6\u4e5f\u6709\u4f7f\u7528\u5176\u4f5c\u4e3a\u57fa\u672c\u67b6\u6784\u8fdb\u884c\u5f00\u53d1\u3002 \u9879\u76ee\u4f7f\u7528MVC\u67b6\u6784\u5206\u79bb\u7684\u8bbe\u8ba1\uff0c \u7ed9\u6bcf\u4e00\u4e2a\u90e8\u5206\u8d4b\u4e88\u5355\u4e00\u7684\u804c\u8d23 \uff0c\u4f7f\u5f97\u6211\u4eec\u5728\u5f00\u53d1\u4e00\u4e2a\u6a21\u5757\u65f6\u4e0d\u7528\u592a\u591a\u5730\u5173\u6ce8\u6240\u4f7f\u7528\u5230\u7684\u6a21\u5757\u7684\u5185\u90e8\u5b9e\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53bb\u8c03\u7528\u76f8\u5e94\u7684\u63a5\u53e3\u53bb\u5b9e\u73b0\u81ea\u5df1\u60f3\u5b9e\u73b0\u7684\u4e1c\u897f\uff0c \u4f7f\u5f97\u6211\u4eec\u7684\u6e38\u620f\u6709\u7740\u66f4\u4f4e\u7684\u8026\u5408\u5ea6\uff0c\u66f4\u65b9\u4fbfDebug\uff0c\u66f4\u65b9\u4fbf\u5f00\u53d1\u3001\u8fed\u4ee3 \uff0c\u5c31\u4ee5\u6211\u4eec\u4e0a\u9762\u7684\u7a0b\u5e8f\u4e3a\u4f8b\uff0c\u5728\u5f00\u53d1FirstSceneController\u65f6\uff0c\u6211\u4eec\u4e0d\u7528\u600e\u4e48\u5173\u6ce8GameObject\u7684Controller\u5185\u90e8\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\uff0c\u5b83\u7ed9\u4e86\u6211\u4eec\u4ec0\u4e48\u63a5\u53e3\uff0c\u8fd9\u4e2a\u63a5\u53e3\u6709\u7740\u4ec0\u4e48\u529f\u80fd\uff0c\u77e5\u9053\u4e86\u4e4b\u540e\u6211\u4eec\u5728FirstSceneController\u4e2d\u76f4\u63a5\u8c03\u7528\u63a5\u53e3\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e0d\u4ec5\u8ba9\u4e2a\u4eba\u5f00\u53d1\u66f4\u6709\u6761\u7406\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u591a\u4eba\u534f\u4f5c\u5f00\u53d1\u66f4\u52a0\u4fbf\u5229\uff0c\u96be\u4ee5\u60f3\u8c61\u4e00\u4e2a\u9ad8\u8026\u5408\u5ea6\u7684\u4e2d\u5927\u578b\u8f6f\u4ef6\u662f\u600e\u4e48\u8fdb\u884c\u591a\u4eba\u534f\u4f5c\u5f00\u53d1\u7684\uff0c\u8fd9\u6837\u7684\u8f6f\u4ef6\u4e00\u4e2a\u4eba\u5f00\u53d1\u90fd\u96be\u53d7\uff0c\u4f55\u51b5\u662f\u591a\u4eba\u3002 \u603b\u4e4b\uff0c\u5728\u4e00\u4e9b\u4e2d\u5927\u578b\u9879\u76ee\u4e2d\uff0c\u4f7f\u7528MVC\u67b6\u6784\u8fdb\u884c\u5f00\u53d1 \u8f6f\u4ef6\u8026\u5408\u5ea6\u4f4e \u6a21\u5757\u6613\u590d\u7528 \u751f\u4ea7\u6548\u7387\u9ad8(\u5bf9\u4e8e\u4e2d\u5927\u578b\u8f6f\u4ef6) \u6613\u4e8e\u7ef4\u62a4\u3001\u8fed\u4ee3 \u6709\u5229\u8f6f\u4ef6\u5de5\u7a0b\u5316\u7ba1\u7406 \u4f46\u662f\uff0cMVC\u67b6\u6784\u4e0d\u662f\u666e\u9002\u7684\uff0c\u5728\u4e00\u4e9b\u8f83\u5c0f\u89c4\u6a21\u7684\u6e38\u620f\u4e2d\uff0c\u4e25\u683c\u4f7f\u7528MVC\u67b6\u6784\u5bf9\u4e8e\u5f00\u53d1\u7684\u6548\u7387\u662f\u6709\u4e00\u5b9a\u5f71\u54cd\u7684\uff0c\u5c31\u50cf\u6211\u4eec\u8fd9\u6b21\u7684\u4f5c\u4e1a\ud83c\udf1a(\u9003\u3002\u4e0d\u8fc7\uff0c\u901a\u8fc7\u8fd9\u4e00\u6b21\u4e25\u683c\u4f7f\u7528MVC\u67b6\u6784\u5f00\u53d1\u7684\u4f5c\u4e1a\uff0c\u6211\u4eec\u5bf9\u4e8eMVC\u6709\u4e86\u57fa\u672c\u7684\u4e86\u89e3\uff0c\u65b9\u4fbf\u4e86\u6211\u4eec\u4e4b\u540e\u4f7f\u7528MVC\u67b6\u6784\u5bf9\u5176\u4ed6\u4e00\u4e9b\u66f4\u5927\u7684\u6e38\u620f\u8fdb\u884c\u5f00\u53d1\u3002","title":"\u603b\u7ed3\uff08\u5bf9MVC\u67b6\u6784\u5f00\u53d1\u6e38\u620f\u7684\u4f53\u4f1a\uff09"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb04-\u6e38\u620f\u5bf9\u8c61\u4e0e\u56fe\u5f62\u57fa\u7840/","text":"Homework3\u64cd\u4f5c\u4e0e\u603b\u7ed3 \u53c2\u8003 Fantasy Skybox FREE \u6784\u5efa\u81ea\u5df1\u7684\u6e38\u620f\u573a\u666f SkyBox\u7684\u5236\u4f5c SkyBox\u7684\u5236\u4f5c\u5176\u5b9e\u5341\u5206\u7b80\u5355\uff0c\u9996\u5148\u6211\u4eec\u8981\u5148\u4f7f\u75286\u5f20\u56fe\u7247\u5236\u4f5c\u4e00\u4e2a6 sided Skybox\u7684Material 1. \u5148\u521b\u5efa\u4e00\u4e2aMaterial 2. \u9009\u62e9Skybox->6 sided\uff0c\u62d6\u5165\u516d\u5f20\u5bf9\u5e94\u7684\u8d34\u56fe\uff0c\u7ed3\u679c\u5982\u4e0b 3. \u7136\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9\u6211\u4eec\u7684\u6444\u50cf\u673a\u6dfb\u52a0\u4e00\u4e2aSkybox\u7136\u540e\u628a\u6211\u4eec\u65b0\u5efa\u7684\u8fd9\u4e2aMaterial\u62d6\u7ed9\u5b83\u5566 \u5230\u8fd9\u91cc\uff0cSkyBox\u7684\u5236\u4f5c\u5c31\u5b8c\u6210\u4e86,Game\u4e2d\u7684\u7ed3\u679c\u5982\u4e0b \u5730\u5f62(Terrain)\u7684\u7b80\u5355\u5236\u4f5c \u9996\u5148\uff0c\u65b0\u5efa\u4e00\u4e2a3D Object->Terrain \u4e00\u5f00\u59cb\u5f97\u5230\u7684\u5c31\u662f\u4e0a\u9762\u7684\u7a7a\u767d\u7684\u4e00\u4e2a\u5730\u5f62\uff0c\u9996\u5148\uff0c\u4e3a\u4e86\u771f\u5b9e\uff0c\u6211\u4eec\u5148\u7ed9\u4ed6\u52a0\u4e0a\u4e00\u4e2aTexture,\u52a0\u4e0aTexture\u4e4b\u540e\uff0c\u5730\u5f62\u7684\u6837\u5b50\u5c31\u53d8\u6210\u4e86\u8fd9\u6837 \u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u5de5\u5177\u7bb1\u7ed9\u5b83\u52a0\u4e0a\u4e00\u7cfb\u5217\u7684\u5730\u5f62\u4e86\uff0c\u5de5\u5177\u7bb1\u7684\u5177\u4f53\u529f\u80fd\u5982\u4e0b \u901a\u8fc7\u8fd9\u4e2a\u5de5\u5177\u7bb1\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u9020\u51fa\u4e00\u7cfb\u5217\u7684\u5730\u5f62\u5566\uff0c\u8fd9\u91cc\u6211\u7b80\u5355\u5730\u521b\u5efa\u4e86\u4e00\u4e2a\u5c71\u5761\u548c\u79cd\u4e86\u51e0\u68f5\u6811\uff0cScene\u4e2d\u7684\u7ed3\u679c\u5982\u4e0b Game\u4e2d\u52a0\u4e0aSkyBox\u7684\u7ed3\u679c\u5982\u4e0b, \u8fd9\u91cc\u7684SkyBox\u7528\u7684\u662fTGU Skybox Pack\u91cc\u7684\u4e00\u4e2aSkyBox \u5199\u4e00\u4e2a\u7b80\u5355\u7684\u603b\u7ed3\uff0c\u603b\u7ed3\u6e38\u620f\u5bf9\u8c61\u7684\u4f7f\u7528 \u6b63\u5982\u6211\u4eec\u7b2c\u4e00\u6b21\u4f5c\u4e1a\u6240\u8bf4\u7684\uff0c\u6e38\u620f\u5bf9\u8c61\u51fa\u73b0\u5728\u6e38\u620f\u573a\u666f(Scene)\u4e2d\uff0c\u662f\u81ea\u8eab\u5c5e\u6027(i.e Tag\u3001Layer)\u3001Components\u3001\u8d44\u6e90\u6574\u5408\u5728\u4e00\u8d77\u7684\u7ed3\u679c\u3002 \u6211\u4eec\u901a\u8fc7 1. \u5bf9\u4e8e\u5bf9\u8c61\u81ea\u8eab\u5c5e\u6027\u7684\u4fee\u6539 2. \u7ed9\u6e38\u620f\u5bf9\u8c61\u6dfb\u52a0\u4e0a\u6240\u9700\u7684Components(i.e Transform, Collider, \u5404\u79cdScripts...)\uff0c\u5e76\u5bf9\u76f8\u5e94\u7684Component\u7684\u5c5e\u6027\u8fdb\u884c\u66f4\u6539\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8c03\u6574\u6e38\u620f\u5bf9\u8c61\u7684\u5f62\u72b6\u3001\u78b0\u649e\u5668\u7b49\u7684\u7279\u6027\u3001\u7ed9\u6e38\u620f\u5bf9\u8c61\u52a0\u4e0a\u5404\u79cd\u5404\u6837\u7684\u529f\u80fd\u3002 \u8bf4\u5230\u6e38\u620f\u5bf9\u8c61\u7684\u4f7f\u7528\uff0c\u80af\u5b9a\u5c31\u5c11\u4e0d\u4e86\u6e38\u620f\u5bf9\u8c61\u7684\u52a0\u8f7d\u5566\u3002\u6211\u4eec\u4e0d\u9700\u8981\u4e00\u5f00\u59cb\u5c31\u628a\u6240\u6709\u7684\u6e38\u620f\u5bf9\u8c61\u52a0\u5728\u6e38\u620f\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6e38\u620f\u8fd0\u884c\u4e2d\u901a\u8fc7Controller\u5bf9\u4e8e\u5b9e\u4f8b\u5316\u65b9\u6cd5Instantiate\u7684\u8c03\u7528\uff0c\u52a8\u6001\u5730\u628a\u6e38\u620f\u5bf9\u8c61\u52a0\u8f7d\u5230\u6e38\u620f\u573a\u666f\u4e2d\u3002","title":"\u5b66\u4e60\u7b14\u8bb04-\u6e38\u620f\u5bf9\u8c61\u4e0e\u56fe\u5f62\u57fa\u7840"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb04-\u6e38\u620f\u5bf9\u8c61\u4e0e\u56fe\u5f62\u57fa\u7840/#homework3","text":"","title":"Homework3\u64cd\u4f5c\u4e0e\u603b\u7ed3"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb04-\u6e38\u620f\u5bf9\u8c61\u4e0e\u56fe\u5f62\u57fa\u7840/#fantasy-skybox-free","text":"SkyBox\u7684\u5236\u4f5c SkyBox\u7684\u5236\u4f5c\u5176\u5b9e\u5341\u5206\u7b80\u5355\uff0c\u9996\u5148\u6211\u4eec\u8981\u5148\u4f7f\u75286\u5f20\u56fe\u7247\u5236\u4f5c\u4e00\u4e2a6 sided Skybox\u7684Material 1. \u5148\u521b\u5efa\u4e00\u4e2aMaterial 2. \u9009\u62e9Skybox->6 sided\uff0c\u62d6\u5165\u516d\u5f20\u5bf9\u5e94\u7684\u8d34\u56fe\uff0c\u7ed3\u679c\u5982\u4e0b 3. \u7136\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ed9\u6211\u4eec\u7684\u6444\u50cf\u673a\u6dfb\u52a0\u4e00\u4e2aSkybox\u7136\u540e\u628a\u6211\u4eec\u65b0\u5efa\u7684\u8fd9\u4e2aMaterial\u62d6\u7ed9\u5b83\u5566 \u5230\u8fd9\u91cc\uff0cSkyBox\u7684\u5236\u4f5c\u5c31\u5b8c\u6210\u4e86,Game\u4e2d\u7684\u7ed3\u679c\u5982\u4e0b \u5730\u5f62(Terrain)\u7684\u7b80\u5355\u5236\u4f5c \u9996\u5148\uff0c\u65b0\u5efa\u4e00\u4e2a3D Object->Terrain \u4e00\u5f00\u59cb\u5f97\u5230\u7684\u5c31\u662f\u4e0a\u9762\u7684\u7a7a\u767d\u7684\u4e00\u4e2a\u5730\u5f62\uff0c\u9996\u5148\uff0c\u4e3a\u4e86\u771f\u5b9e\uff0c\u6211\u4eec\u5148\u7ed9\u4ed6\u52a0\u4e0a\u4e00\u4e2aTexture,\u52a0\u4e0aTexture\u4e4b\u540e\uff0c\u5730\u5f62\u7684\u6837\u5b50\u5c31\u53d8\u6210\u4e86\u8fd9\u6837 \u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u5de5\u5177\u7bb1\u7ed9\u5b83\u52a0\u4e0a\u4e00\u7cfb\u5217\u7684\u5730\u5f62\u4e86\uff0c\u5de5\u5177\u7bb1\u7684\u5177\u4f53\u529f\u80fd\u5982\u4e0b \u901a\u8fc7\u8fd9\u4e2a\u5de5\u5177\u7bb1\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u9020\u51fa\u4e00\u7cfb\u5217\u7684\u5730\u5f62\u5566\uff0c\u8fd9\u91cc\u6211\u7b80\u5355\u5730\u521b\u5efa\u4e86\u4e00\u4e2a\u5c71\u5761\u548c\u79cd\u4e86\u51e0\u68f5\u6811\uff0cScene\u4e2d\u7684\u7ed3\u679c\u5982\u4e0b Game\u4e2d\u52a0\u4e0aSkyBox\u7684\u7ed3\u679c\u5982\u4e0b, \u8fd9\u91cc\u7684SkyBox\u7528\u7684\u662fTGU Skybox Pack\u91cc\u7684\u4e00\u4e2aSkyBox","title":"\u53c2\u8003 Fantasy Skybox FREE \u6784\u5efa\u81ea\u5df1\u7684\u6e38\u620f\u573a\u666f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb04-\u6e38\u620f\u5bf9\u8c61\u4e0e\u56fe\u5f62\u57fa\u7840/#_1","text":"\u6b63\u5982\u6211\u4eec\u7b2c\u4e00\u6b21\u4f5c\u4e1a\u6240\u8bf4\u7684\uff0c\u6e38\u620f\u5bf9\u8c61\u51fa\u73b0\u5728\u6e38\u620f\u573a\u666f(Scene)\u4e2d\uff0c\u662f\u81ea\u8eab\u5c5e\u6027(i.e Tag\u3001Layer)\u3001Components\u3001\u8d44\u6e90\u6574\u5408\u5728\u4e00\u8d77\u7684\u7ed3\u679c\u3002 \u6211\u4eec\u901a\u8fc7 1. \u5bf9\u4e8e\u5bf9\u8c61\u81ea\u8eab\u5c5e\u6027\u7684\u4fee\u6539 2. \u7ed9\u6e38\u620f\u5bf9\u8c61\u6dfb\u52a0\u4e0a\u6240\u9700\u7684Components(i.e Transform, Collider, \u5404\u79cdScripts...)\uff0c\u5e76\u5bf9\u76f8\u5e94\u7684Component\u7684\u5c5e\u6027\u8fdb\u884c\u66f4\u6539\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8c03\u6574\u6e38\u620f\u5bf9\u8c61\u7684\u5f62\u72b6\u3001\u78b0\u649e\u5668\u7b49\u7684\u7279\u6027\u3001\u7ed9\u6e38\u620f\u5bf9\u8c61\u52a0\u4e0a\u5404\u79cd\u5404\u6837\u7684\u529f\u80fd\u3002 \u8bf4\u5230\u6e38\u620f\u5bf9\u8c61\u7684\u4f7f\u7528\uff0c\u80af\u5b9a\u5c31\u5c11\u4e0d\u4e86\u6e38\u620f\u5bf9\u8c61\u7684\u52a0\u8f7d\u5566\u3002\u6211\u4eec\u4e0d\u9700\u8981\u4e00\u5f00\u59cb\u5c31\u628a\u6240\u6709\u7684\u6e38\u620f\u5bf9\u8c61\u52a0\u5728\u6e38\u620f\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6e38\u620f\u8fd0\u884c\u4e2d\u901a\u8fc7Controller\u5bf9\u4e8e\u5b9e\u4f8b\u5316\u65b9\u6cd5Instantiate\u7684\u8c03\u7528\uff0c\u52a8\u6001\u5730\u628a\u6e38\u620f\u5bf9\u8c61\u52a0\u8f7d\u5230\u6e38\u620f\u573a\u666f\u4e2d\u3002","title":"\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u603b\u7ed3\uff0c\u603b\u7ed3\u6e38\u620f\u5bf9\u8c61\u7684\u4f7f\u7528"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/","text":"Homework3\u7f16\u7a0b\u5b9e\u8df5 \u7267\u5e08\u4e0e\u9b54\u9b3c \u52a8\u4f5c\u5206\u79bb\u7248 \u5728\u4e0a\u4e00\u5468\u7684\u7f16\u7a0b\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u4e00\u4e2a\u5177\u6709MVC\u67b6\u6784\u7684\u7267\u5e08\u4e0e\u9b54\u9b3c\u7684\u7248\u672c\uff0c\u800c\u6211\u4eec\u8fd9\u5468\u7684\u4efb\u52a1\u5c31\u662f\u5b9e\u73b0\u4e00\u4e2a\u52a8\u4f5c\u7ba1\u7406\u5668\uff0c\u628a\u6211\u4eec\u4e0a\u5468\u5199\u5728GameObjectController\u548cSceneController\u91cc\u7684\u5bf9\u4e8eGameObject\u52a8\u4f5c\u7684\u5904\u7406\u5199\u51fa\u6765\uff0c\u901a\u8fc7\u4e00\u4e2aSceneActionManager\u7684\u5b9e\u4f8b\u6765\u7ba1\u7406\uff0c\u8ba9\u5176\u4e13\u95e8\u8d1f\u8d23GameObject\u7684\u52a8\u4f5c\u3002\u4e0b\u9762\u6211\u4eec\u6765\u8c08\u8c08\u52a8\u4f5c\u7ba1\u7406\u5668\u3002 \u9664\u4e86\u52a0\u5165\u52a8\u4f5c\u7ba1\u7406\u5668\u5916\u7684\u6539\u8fdb \u6839\u636e\u4e0a\u8bfe\u5b66\u5230\u7684\u5185\u5bb9\uff0c\u7ed9Camera\u52a0\u4e0a\u4e86SkyBox\uff0c\u7f8e\u5316\u4e86\u7a0b\u5e8f\u7684UI \u7ed9\u6e38\u620f\u6dfb\u52a0\u4e86\u5207\u6362\u89c6\u89d2\u7684\u529f\u80fd\uff0c\u73a9\u5bb6\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u559c\u597d\u5728\u5168\u5c40\u89c6\u89d2\u4ee5\u53ca\u8239\u53ea\u8ddf\u968f\u89c6\u89d2\u4e4b\u95f4\u4efb\u610f\u5207\u6362\uff0c\u6e38\u620f\u7684\u4f53\u9a8c\u66f4\u4f73 \u6e38\u620f\u6548\u679c \u5efa\u7acb\u52a8\u4f5c\u7ba1\u7406\u5668 \u5efa\u7acb\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u610f\u4e49 \u5728\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u7b80\u5355\u7684\u7267\u5e08\u4e0e\u6076\u9b54\u7684\u6e38\u620f\u4e2d\uff0c\u6211\u4e3a\u4e86\u907f\u514dFirstSceneController\u4e2d\u5bf9\u4e8e\u7269\u4f53\u79fb\u52a8\u64cd\u4f5c\u7684\u4ee3\u7801\u91cf\u8fc7\u591a\uff0c\u628a\u7269\u4f53\u7684\u52a8\u4f5c\u5c01\u88c5\u5728GameObjectController\u91cc\u9762\uff0c\u901a\u8fc7\u8fd9\u79cd\u505a\u6cd5\uff0cFirstSceneController\u7684\u4ee3\u7801\u91cf\u7684\u786e\u5f97\u5230\u4e86\u4e00\u5b9a\u7684\u51cf\u5c11\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u6211\u6bcf\u5199\u4e00\u4e2aGameObjectController\u6211\u5c31\u8981\u591a\u5199\u4e00\u4e2a\u7269\u4f53\u8fd0\u52a8\u7684\u51fd\u6570\uff0c\u4e00\u65e6\u9700\u8981\u79fb\u52a8\u7684GameObject\u591a\u8d77\u6765\uff0c\u53ef\u80fd\u5197\u4f59\u7684\u4ee3\u7801\u91cf\u5c31\u4f1a\u5927\u91cf\u589e\u591a\u4e86\uff0c\u800c\u4e14\u4e00\u65e6\u6211\u4eec\u9700\u8981\u4fee\u6539Move\uff0c\u6211\u4eec\u53ef\u80fd\u5c31\u6bcf\u4e00\u4e2a\u7c7b\u90fd\u8981\u8fdb\u884c\u4fee\u6539\u4e86\uff0c\u663e\u7136\u8fd9\u5bf9\u4e8e\u5f00\u53d1\u8005\u975e\u5e38\u4e0d\u53cb\u597d\u3002 \u8fd9\u4e2a\u65f6\u5019\uff0c\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u610f\u4e49\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\uff0c\u5c31\u4ee5\u6211\u4eec\u8fd9\u6b21\u7684\u4f5c\u4e1a\u4e3a\u4f8b\u5b50\uff0cMove\u7684\u4e00\u7c7b\u7684\u52a8\u4f5c\u62bd\u8c61\u6210\u4e00\u4e2a\u52a8\u4f5c\u7c7bMoveAction\uff0c\u7136\u540e\u901a\u8fc7ActionManager\u5bf9\u5176\u8fdb\u884c\u7ba1\u7406\u3002\u6211\u4eec\u5728\u9700\u8981\u7269\u4f53\u8fdb\u884c\u79fb\u52a8\u65f6\uff0c\u53ea\u9700\u8981\u65b0\u5efa\u4e00\u4e2aMoveAction\uff0c\u8c03\u7528ActionManaer\u7684addAction\uff0c\u628a\u5177\u4f53\u7684\u53c2\u6570\u4f20\u7ed9\u5b83\uff0cActionManager\u5c31\u4f1a\u6267\u884c\u6211\u4eec\u7684\u52a8\u4f5c\uff0c\u6211\u4eec\u518d\u4e5f\u4e0d\u7528\u5c06Move\u8fd9\u7c7b\u7684\u52a8\u4f5c\u4e00\u4e2a\u4e00\u4e2a\u5199\u5728\u6211\u4eec\u7684GameObjController\u4e2d\uff0c\u5927\u5927\u51cf\u5c11\u4e86\u6211\u4eec\u7684\u4ee3\u7801\u91cf\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u6211\u4eec\u4ee3\u7801\u7684\u590d\u7528\u6027\uff0c\u4e00\u65e6\u52a8\u4f5c\u65b9\u9762\u7684\u9700\u6c42\u4fee\u6539\uff0c\u6211\u4eec\u4e5f\u53ea\u9700\u8981\u4fee\u6539\u8be5Action\u7c7b\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u76f8\u5173\u8c03\u7528\u521b\u5efa\u8be5Action\u7684\u5730\u65b9\uff0c\u66f4\u52a0 \u5229\u4e8e\u6211\u4eec\u7684\u7ef4\u62a4\u4ee5\u53ca\u8ba9\u7a0b\u5e8f\u66f4\u80fd\u9002\u5e94\u9700\u6c42\u53d8\u5316 \u3002 \u5728\u4e86\u89e3\u4e86\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u610f\u4e49\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u6211\u4eec\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u7f16\u5199\u4e86\uff0c\u6211\u4eec\u5148\u753b\u4e00\u4e2a\u52a8\u4f5c\u7ba1\u7406\u5668\u7684UML\u56fe\u7406\u6e05\u4e00\u4e0b\u601d\u8def \u7136\u540e\u4e0e\u4e0a\u4e00\u8282\u8bfe\u7684UML\u56fe\u7ed3\u5408\u8d77\u6765\u53d8\u6210\u6574\u4e2a\u7a0b\u5e8f\u7684UML\u56fe\uff0c\u753b\u51fa\u6765UML\u56fe\u4e4b\u540e\uff0c\u6211\u4eec\u7a0b\u5e8f\u7684\u67b6\u6784\u5c31\u5f88\u6e05\u6670\u4e86\u3002 \u4e0b\u9762\u6211\u4eec\u5206\u7c7b\u8fdb\u884c\u63cf\u8ff0 ActionCallBack \u8fd9\u4e2a\u65b9\u6cd5\u4e3b\u8981\u662f\u63d0\u4f9b\u4e00\u4e2a\u8ba9\u52a8\u4f5c\u5b8c\u6210\u65f6\u8c03\u7528\u7684\u63a5\u53e3\uff0c\u4e00\u65e6\u52a8\u4f5c\u5b8c\u6210\uff0c\u8be5\u63a5\u53e3\u5bf9\u5e94\u5b9e\u73b0\u7684\u65b9\u6cd5\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u52a8\u4f5c\u7ba1\u7406\u5668\u53ef\u4ee5\u5bf9\u52a8\u4f5c\u7684\u5b8c\u6210\u8fdb\u884c\u54cd\u5e94\u3002 public interface ActionCallback { void actionDone ( SSAction source ); } SSAction SSAction\u8fd9\u4e2a\u7c7b\u5c31\u662f\u6240\u6709\u52a8\u4f5c\u5bf9\u8c61\u7c7b\u62bd\u8c61\u51fa\u6765\u7684\u4e00\u4e2a\u4e0d\u9700\u8981\u7ed1\u5b9a GameObject \u5bf9\u8c61\u7684\u53ef\u7f16\u7a0b\u57fa\u7c7b\uff0c\u5176\u52a8\u4f5c\u7684\u5b9e\u73b0\u7531\u5176\u5b50\u7c7b\u5b9e\u73b0Update\u4e2d\u7684\u5185\u5bb9\u5b9e\u73b0\uff0c\u8fd9\u4e2a\u5728\u540e\u9762\u7684MoveAction\u5c31\u6709\u4f53\u73b0\uff0c\u6240\u6709\u7684SSAction\u5bf9\u8c61\u53d7ActionManager\u7ba1\u7406\u3002 public class SSAction : ScriptableObject { public bool enable = true ; public bool destroy = false ; public GameObject gameObject ; public Transform transform ; public ActionCallback callback ; public virtual void Start () { throw new System . NotImplementedException (); } public virtual void Update () { throw new System . NotImplementedException (); } } MoveAction MoveAction\u5c31\u662f\u4e0a\u9762SSAction\u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u6839\u636e\u7528\u6237\u6240\u63d0\u4f9b\u7684\u76ee\u7684\u5730\u548c\u901f\u5ea6\uff0c\u4f7f\u5f97\u7269\u4f53\u5b8c\u6210\u4e00\u5b9a\u901f\u5ea6\u7684\u5411\u67d0\u4e00\u76ee\u7684\u5730\u7684\u76f4\u7ebf\u8fd0\u52a8\u3002\u5176\u901a\u8fc7Update\u7684\u5b9e\u73b0\u6765\u5b8c\u6210\u9010\u5e27\u7684\u5bf9\u4e8e\u7269\u4f53\u4f4d\u7f6e\u7684\u53d8\u52a8\uff0c\u5b9e\u73b0\u4e00\u4e2a\u6240\u8c13\u7684\u7269\u4f53\u7684\"\u52a8\u4f5c\"\u3002 public class MoveAction : SSAction { public Vector3 target ; public float speed ; private MoveAction (){ } public static MoveAction getAction ( Vector3 target , float speed ) { MoveAction action = ScriptableObject . CreateInstance < MoveAction > (); action . target = target ; action . speed = speed ; return action ; } // Use this for initialization public override void Start () { } // Update is called once per frame public override void Update () { transform . position = Vector3 . MoveTowards ( transform . position , target , speed * Time . deltaTime ); if ( transform . transform . position == target ) { destroy = true ; callback . actionDone ( this ); } } } CCSequenceAction \u8fd9\u662f\u4e00\u4e2a\u52a8\u4f5c\u987a\u5e8f\u6267\u884c\u5e8f\u5217\u7684\u662fSSAction\u7684\u5b50\u7c7b\uff0c\u5176\u901a\u8fc7\u4e00\u4e2aAction\u7684List\uff0c\u548cactionDone\u5bf9\u4e8eList\u7684\u7ef4\u62a4\u4ee5\u53caUpdate\u5bf9\u4e8e\u8c03\u7528\u54ea\u4e2aAction\u7684Update\u65b9\u6cd5\u7684\u63a7\u5236\uff0c\u5b9e\u73b0\u4e86\u4e00\u4e2a\u52a8\u4f5c\u987a\u5e8f\u6267\u884c\u7684\u6548\u679c\u3002\u5341\u5206\u65b9\u4fbf\u4e86\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u7eed\u52a8\u4f5c\u7684\u7f16\u7a0b\u3002 public class CCSequenceAction : SSAction , ActionCallback { public List < SSAction > sequence ; public int repeat = 1 ; // 1->only do it for once, -1->repeat forever public int currentActionIndex = 0 ; public static CCSequenceAction getAction ( int repeat , int currentActionIndex , List < SSAction > sequence ) { CCSequenceAction action = ScriptableObject . CreateInstance < CCSequenceAction >(); action . sequence = sequence ; action . repeat = repeat ; action . currentActionIndex = currentActionIndex ; return action ; } public override void Update () { if ( sequence . Count == 0 ) return ; if ( currentActionIndex < sequence . Count ) { sequence [ currentActionIndex ]. Update (); } } public void actionDone ( SSAction source ) { source . destroy = false ; this . currentActionIndex ++; if ( this . currentActionIndex >= sequence . Count ) { this . currentActionIndex = 0 ; if ( repeat > 0 ) repeat --; if ( repeat == 0 ) { this . destroy = true ; this . callback . actionDone ( this ); } } } public override void Start () { foreach ( SSAction action in sequence ) { action . gameObject = this . gameObject ; action . transform = this . transform ; action . callback = this ; action . Start (); } } void OnDestroy () { foreach ( SSAction action in sequence ) { DestroyObject ( action ); } } } SSActionManager \u8fd9\u4e2a\u5c31\u662f\u6211\u4eec\u8fd9\u4e00\u671f\u7684\u4e3b\u89d2ActionManager\u4e86\uff0c\u5176\u8d1f\u8d23\u4e86action\u7684\u589e\u52a0\u3001\u5220\u9664\u3001\u6267\u884c\u3002\u5b83\u901a\u8fc7\u5728Update\u4e2d\u8c03\u7528SSAction\u7684Update\u65b9\u6cd5\uff0c\u5b9e\u73b0\u5bf9\u4e8e\u52a8\u4f5c\u7684\u4e00\u4e2a\u8c03\u5ea6\uff0c\u7ba1\u7406\u52a8\u4f5c\u7684\u81ea\u52a8\u6267\u884c\u3002 public class SSActionManager : MonoBehaviour , ActionCallback { private Dictionary < int , SSAction > actions = new Dictionary < int , SSAction >(); private List < SSAction > waitingToAdd = new List < SSAction >(); private List < int > watingToDelete = new List < int >(); protected void Update () { foreach ( SSAction ac in waitingToAdd ) { actions [ ac . GetInstanceID ()] = ac ; } waitingToAdd . Clear (); foreach ( KeyValuePair < int , SSAction > kv in actions ) { SSAction ac = kv . Value ; if ( ac . destroy ) { watingToDelete . Add ( ac . GetInstanceID ()); } else if ( ac . enable ) { ac . Update (); } } foreach ( int key in watingToDelete ) { SSAction ac = actions [ key ]; actions . Remove ( key ); DestroyObject ( ac ); } watingToDelete . Clear (); } public void addAction ( GameObject gameObject , SSAction action , ActionCallback callback ) { action . gameObject = gameObject ; action . transform = gameObject . transform ; action . callback = callback ; waitingToAdd . Add ( action ); action . Start (); } public void actionDone ( SSAction source ) { } } FirstSceneActionManager FirstSceneActionManager\u5c31\u662f\u6211\u4eec\u4e0a\u9762SSActionManager\u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5bf9\u4e8e\u6211\u4eec\u573a\u666f\u4e2d\u5177\u4f53\u7684\u52a8\u4f5c\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728FirstSceneController\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6211\u4eec\u4e4b\u524d\u7684Move\u4e86\uff0c\u5341\u5206\u65b9\u4fbf\u4e86\u6211\u4eec\u7684\u7f16\u7a0b\u3002 public class FirstSceneActionManager : SSActionManager { public void toggleBoat ( BoatController boat ) { MoveAction action = MoveAction . getAction ( boat . getTarget (), boat . speed ); this . addAction ( boat . getBoat (), action , this ); boat . toggle (); } public void moveCharacter ( ICharacterController character , Vector3 target ) { Vector3 nowPos = character . getPos (); Vector3 tmpPos = nowPos ; if ( target . y > nowPos . y ) { tmpPos . y = target . y ; } else { tmpPos . x = target . x ; } SSAction action1 = MoveAction . getAction ( tmpPos , character . speed ); SSAction action2 = MoveAction . getAction ( target , character . speed ); SSAction sequenceAction = CCSequenceAction . getAction ( 1 , 0 , new List < SSAction >{ action1 , action2 }); this . addAction ( character . getInstance (), sequenceAction , this ); } } FirstController \u5728\u5b8c\u6210\u4e86FirstSceneActionManager\u540e\uff0c\u6211\u4eec\u628aGameObjectController\u4e2d\u4ee5\u53caFirstController\u4e2d\u4e00\u4e9b\u5173\u4e8e\u52a8\u4f5c\u7684\u90e8\u5206\u5220\u9664\uff0c\u7136\u540e\u5728\u539f\u6765\u52a8\u4f5c\u7684\u90e8\u5206\u8c03\u7528FirstSceneActionManager\u63d0\u4f9b\u65b0\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u4e86\u3002(\u4e0d\u8fc7\u56e0\u4e3a\u4e00\u5f00\u59cb\u8bbe\u8ba1\u67b6\u6784\u7684\u65f6\u5019\u6ca1\u6709\u8003\u8651\u52a0\u5165\u52a8\u4f5c\u7ba1\u7406\u5668\uff0c\u52a0\u4e4b\u6700\u8fd1\u65f6\u95f4\u8f83\u7d27\uff0c\u6ca1\u6709\u592a\u591a\u65f6\u95f4\u5bf9\u6e38\u620f\u8fdb\u884c\u91cd\u6784\uff0c\u6240\u4ee5FirstController\u4e2d\u4ecd\u7136\u6709\u7740\u90e8\u5206\u5173\u4e8e\u5224\u65ad\u7269\u4f53\u8fd0\u52a8\u7684\u903b\u8f91) public class FirstController : MonoBehaviour , ISceneController , IUserAction { UserGUI userGUI ; public LandController rightLand ; public LandController leftLand ; public BoatController boat ; public ICharacterController [] characters ; private FirstSceneActionManager actionManager ; void Awake () { GameDirector director = GameDirector . getInstance (); director . currentSceneController = this ; userGUI = gameObject . AddComponent < UserGUI >() as UserGUI ; genGameObjects (); } void Start () { actionManager = GetComponent < FirstSceneActionManager > (); } public void genGameObjects () { characters = new ICharacterController [ 6 ]; boat = new BoatController (); leftLand = new LandController (- 1 ); rightLand = new LandController ( 1 ); for ( int i = 0 ; i < 3 ; i ++) { ICharacterController priest = new ICharacterController ( 0 , \"priest\" + i ); priest . setPosition ( rightLand . getEmptyPosition ()); priest . getOnLand ( rightLand ); rightLand . getOnLand ( priest ); characters [ i ] = priest ; } for ( int i = 0 ; i < 3 ; i ++) { ICharacterController demon = new ICharacterController ( 1 , \"demon\" + i ); demon . setPosition ( rightLand . getEmptyPosition ()); demon . getOnLand ( rightLand ); rightLand . getOnLand ( demon ); characters [ i + 3 ] = demon ; } } public void ClickCharacter ( ICharacterController character ) { if ( userGUI . status != 0 || ! boat . available ()) { return ; } if ( character . isOnBoat ()) { LandController land ; if ( boat . getBoatPos () == 0 ) { land = leftLand ; } else { land = rightLand ; } boat . getOffBoat ( character . getName ()); actionManager . moveCharacter ( character , land . getEmptyPosition ()); character . getOnLand ( land ); land . getOnLand ( character ); } else { LandController land = character . getLandController (); if ( boat . getEmptyIndex () == - 1 ) return ; int landPos = land . getType (), boatPos = ( boat . getBoatPos () == 0 ) ? - 1 : 1 ; if ( landPos != boatPos ) return ; land . getOffLand ( character . getName ()); actionManager . moveCharacter ( character , boat . getEmptyPosition ()); character . getOnBoat ( boat , boat . getEmptyIndex ()); boat . getOnBoat ( character ); } userGUI . status = checkResult (); } public void ToggleBoat () { if ( userGUI . status != 0 || boat . isEmpty () || ! boat . available ()) return ; actionManager . toggleBoat ( boat ); userGUI . status = checkResult (); } int checkResult () { int leftPriests = 0 ; int rightPriests = 0 ; int leftDemons = 0 ; int rightDemons = 0 ; int [] leftStatus = leftLand . getStatus (); leftPriests += leftStatus [ 0 ]; leftDemons += leftStatus [ 1 ]; if ( leftPriests + leftDemons == 6 ) return 2 ; int [] rightStatus = rightLand . getStatus (); rightPriests += rightStatus [ 0 ]; rightDemons += rightStatus [ 1 ]; int [] boatStatus = boat . getBoatStatus (); if ( boat . getBoatPos () == 0 ) { leftPriests += boatStatus [ 0 ]; leftDemons += boatStatus [ 1 ]; } else { rightPriests += boatStatus [ 0 ]; rightDemons += boatStatus [ 1 ]; } if ( leftPriests > 0 && leftPriests < leftDemons ) return 1 ; if ( rightPriests > 0 && rightPriests < rightDemons ) return 1 ; return 0 ; } public void restart () { boat . reset (); leftLand . reset (); rightLand . reset (); for ( int i = 0 ; i < characters . Length ; i ++) characters [ i ]. reset (); } } \u5230\u8fd9\u91cc\uff0c\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u5b8c\u6210\u5566\uff0c\u4e0d\u8bf4\u4e86\uff0c\u5148\u53bb\u809d\u73b0\u64cd\u4e86(\u9003\ud83c\udf1a \u611f\u8c22\u9605\u8bfb\u6211\u7684\u535a\u5ba2\uff01\ud83d\ude0b","title":"\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#homework3","text":"","title":"Homework3\u7f16\u7a0b\u5b9e\u8df5"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#_1","text":"\u5728\u4e0a\u4e00\u5468\u7684\u7f16\u7a0b\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u4e00\u4e2a\u5177\u6709MVC\u67b6\u6784\u7684\u7267\u5e08\u4e0e\u9b54\u9b3c\u7684\u7248\u672c\uff0c\u800c\u6211\u4eec\u8fd9\u5468\u7684\u4efb\u52a1\u5c31\u662f\u5b9e\u73b0\u4e00\u4e2a\u52a8\u4f5c\u7ba1\u7406\u5668\uff0c\u628a\u6211\u4eec\u4e0a\u5468\u5199\u5728GameObjectController\u548cSceneController\u91cc\u7684\u5bf9\u4e8eGameObject\u52a8\u4f5c\u7684\u5904\u7406\u5199\u51fa\u6765\uff0c\u901a\u8fc7\u4e00\u4e2aSceneActionManager\u7684\u5b9e\u4f8b\u6765\u7ba1\u7406\uff0c\u8ba9\u5176\u4e13\u95e8\u8d1f\u8d23GameObject\u7684\u52a8\u4f5c\u3002\u4e0b\u9762\u6211\u4eec\u6765\u8c08\u8c08\u52a8\u4f5c\u7ba1\u7406\u5668\u3002","title":"\u7267\u5e08\u4e0e\u9b54\u9b3c \u52a8\u4f5c\u5206\u79bb\u7248"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#_2","text":"\u6839\u636e\u4e0a\u8bfe\u5b66\u5230\u7684\u5185\u5bb9\uff0c\u7ed9Camera\u52a0\u4e0a\u4e86SkyBox\uff0c\u7f8e\u5316\u4e86\u7a0b\u5e8f\u7684UI \u7ed9\u6e38\u620f\u6dfb\u52a0\u4e86\u5207\u6362\u89c6\u89d2\u7684\u529f\u80fd\uff0c\u73a9\u5bb6\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u559c\u597d\u5728\u5168\u5c40\u89c6\u89d2\u4ee5\u53ca\u8239\u53ea\u8ddf\u968f\u89c6\u89d2\u4e4b\u95f4\u4efb\u610f\u5207\u6362\uff0c\u6e38\u620f\u7684\u4f53\u9a8c\u66f4\u4f73","title":"\u9664\u4e86\u52a0\u5165\u52a8\u4f5c\u7ba1\u7406\u5668\u5916\u7684\u6539\u8fdb"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#_3","text":"","title":"\u6e38\u620f\u6548\u679c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#_4","text":"","title":"\u5efa\u7acb\u52a8\u4f5c\u7ba1\u7406\u5668"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#_5","text":"\u5728\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u7b80\u5355\u7684\u7267\u5e08\u4e0e\u6076\u9b54\u7684\u6e38\u620f\u4e2d\uff0c\u6211\u4e3a\u4e86\u907f\u514dFirstSceneController\u4e2d\u5bf9\u4e8e\u7269\u4f53\u79fb\u52a8\u64cd\u4f5c\u7684\u4ee3\u7801\u91cf\u8fc7\u591a\uff0c\u628a\u7269\u4f53\u7684\u52a8\u4f5c\u5c01\u88c5\u5728GameObjectController\u91cc\u9762\uff0c\u901a\u8fc7\u8fd9\u79cd\u505a\u6cd5\uff0cFirstSceneController\u7684\u4ee3\u7801\u91cf\u7684\u786e\u5f97\u5230\u4e86\u4e00\u5b9a\u7684\u51cf\u5c11\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u6211\u6bcf\u5199\u4e00\u4e2aGameObjectController\u6211\u5c31\u8981\u591a\u5199\u4e00\u4e2a\u7269\u4f53\u8fd0\u52a8\u7684\u51fd\u6570\uff0c\u4e00\u65e6\u9700\u8981\u79fb\u52a8\u7684GameObject\u591a\u8d77\u6765\uff0c\u53ef\u80fd\u5197\u4f59\u7684\u4ee3\u7801\u91cf\u5c31\u4f1a\u5927\u91cf\u589e\u591a\u4e86\uff0c\u800c\u4e14\u4e00\u65e6\u6211\u4eec\u9700\u8981\u4fee\u6539Move\uff0c\u6211\u4eec\u53ef\u80fd\u5c31\u6bcf\u4e00\u4e2a\u7c7b\u90fd\u8981\u8fdb\u884c\u4fee\u6539\u4e86\uff0c\u663e\u7136\u8fd9\u5bf9\u4e8e\u5f00\u53d1\u8005\u975e\u5e38\u4e0d\u53cb\u597d\u3002 \u8fd9\u4e2a\u65f6\u5019\uff0c\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u610f\u4e49\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\uff0c\u5c31\u4ee5\u6211\u4eec\u8fd9\u6b21\u7684\u4f5c\u4e1a\u4e3a\u4f8b\u5b50\uff0cMove\u7684\u4e00\u7c7b\u7684\u52a8\u4f5c\u62bd\u8c61\u6210\u4e00\u4e2a\u52a8\u4f5c\u7c7bMoveAction\uff0c\u7136\u540e\u901a\u8fc7ActionManager\u5bf9\u5176\u8fdb\u884c\u7ba1\u7406\u3002\u6211\u4eec\u5728\u9700\u8981\u7269\u4f53\u8fdb\u884c\u79fb\u52a8\u65f6\uff0c\u53ea\u9700\u8981\u65b0\u5efa\u4e00\u4e2aMoveAction\uff0c\u8c03\u7528ActionManaer\u7684addAction\uff0c\u628a\u5177\u4f53\u7684\u53c2\u6570\u4f20\u7ed9\u5b83\uff0cActionManager\u5c31\u4f1a\u6267\u884c\u6211\u4eec\u7684\u52a8\u4f5c\uff0c\u6211\u4eec\u518d\u4e5f\u4e0d\u7528\u5c06Move\u8fd9\u7c7b\u7684\u52a8\u4f5c\u4e00\u4e2a\u4e00\u4e2a\u5199\u5728\u6211\u4eec\u7684GameObjController\u4e2d\uff0c\u5927\u5927\u51cf\u5c11\u4e86\u6211\u4eec\u7684\u4ee3\u7801\u91cf\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u6211\u4eec\u4ee3\u7801\u7684\u590d\u7528\u6027\uff0c\u4e00\u65e6\u52a8\u4f5c\u65b9\u9762\u7684\u9700\u6c42\u4fee\u6539\uff0c\u6211\u4eec\u4e5f\u53ea\u9700\u8981\u4fee\u6539\u8be5Action\u7c7b\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u76f8\u5173\u8c03\u7528\u521b\u5efa\u8be5Action\u7684\u5730\u65b9\uff0c\u66f4\u52a0 \u5229\u4e8e\u6211\u4eec\u7684\u7ef4\u62a4\u4ee5\u53ca\u8ba9\u7a0b\u5e8f\u66f4\u80fd\u9002\u5e94\u9700\u6c42\u53d8\u5316 \u3002 \u5728\u4e86\u89e3\u4e86\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u610f\u4e49\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u6211\u4eec\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u7f16\u5199\u4e86\uff0c\u6211\u4eec\u5148\u753b\u4e00\u4e2a\u52a8\u4f5c\u7ba1\u7406\u5668\u7684UML\u56fe\u7406\u6e05\u4e00\u4e0b\u601d\u8def \u7136\u540e\u4e0e\u4e0a\u4e00\u8282\u8bfe\u7684UML\u56fe\u7ed3\u5408\u8d77\u6765\u53d8\u6210\u6574\u4e2a\u7a0b\u5e8f\u7684UML\u56fe\uff0c\u753b\u51fa\u6765UML\u56fe\u4e4b\u540e\uff0c\u6211\u4eec\u7a0b\u5e8f\u7684\u67b6\u6784\u5c31\u5f88\u6e05\u6670\u4e86\u3002 \u4e0b\u9762\u6211\u4eec\u5206\u7c7b\u8fdb\u884c\u63cf\u8ff0","title":"\u5efa\u7acb\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u610f\u4e49"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#actioncallback","text":"\u8fd9\u4e2a\u65b9\u6cd5\u4e3b\u8981\u662f\u63d0\u4f9b\u4e00\u4e2a\u8ba9\u52a8\u4f5c\u5b8c\u6210\u65f6\u8c03\u7528\u7684\u63a5\u53e3\uff0c\u4e00\u65e6\u52a8\u4f5c\u5b8c\u6210\uff0c\u8be5\u63a5\u53e3\u5bf9\u5e94\u5b9e\u73b0\u7684\u65b9\u6cd5\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u52a8\u4f5c\u7ba1\u7406\u5668\u53ef\u4ee5\u5bf9\u52a8\u4f5c\u7684\u5b8c\u6210\u8fdb\u884c\u54cd\u5e94\u3002 public interface ActionCallback { void actionDone ( SSAction source ); }","title":"ActionCallBack"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#ssaction","text":"SSAction\u8fd9\u4e2a\u7c7b\u5c31\u662f\u6240\u6709\u52a8\u4f5c\u5bf9\u8c61\u7c7b\u62bd\u8c61\u51fa\u6765\u7684\u4e00\u4e2a\u4e0d\u9700\u8981\u7ed1\u5b9a GameObject \u5bf9\u8c61\u7684\u53ef\u7f16\u7a0b\u57fa\u7c7b\uff0c\u5176\u52a8\u4f5c\u7684\u5b9e\u73b0\u7531\u5176\u5b50\u7c7b\u5b9e\u73b0Update\u4e2d\u7684\u5185\u5bb9\u5b9e\u73b0\uff0c\u8fd9\u4e2a\u5728\u540e\u9762\u7684MoveAction\u5c31\u6709\u4f53\u73b0\uff0c\u6240\u6709\u7684SSAction\u5bf9\u8c61\u53d7ActionManager\u7ba1\u7406\u3002 public class SSAction : ScriptableObject { public bool enable = true ; public bool destroy = false ; public GameObject gameObject ; public Transform transform ; public ActionCallback callback ; public virtual void Start () { throw new System . NotImplementedException (); } public virtual void Update () { throw new System . NotImplementedException (); } }","title":"SSAction"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#moveaction","text":"MoveAction\u5c31\u662f\u4e0a\u9762SSAction\u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u6839\u636e\u7528\u6237\u6240\u63d0\u4f9b\u7684\u76ee\u7684\u5730\u548c\u901f\u5ea6\uff0c\u4f7f\u5f97\u7269\u4f53\u5b8c\u6210\u4e00\u5b9a\u901f\u5ea6\u7684\u5411\u67d0\u4e00\u76ee\u7684\u5730\u7684\u76f4\u7ebf\u8fd0\u52a8\u3002\u5176\u901a\u8fc7Update\u7684\u5b9e\u73b0\u6765\u5b8c\u6210\u9010\u5e27\u7684\u5bf9\u4e8e\u7269\u4f53\u4f4d\u7f6e\u7684\u53d8\u52a8\uff0c\u5b9e\u73b0\u4e00\u4e2a\u6240\u8c13\u7684\u7269\u4f53\u7684\"\u52a8\u4f5c\"\u3002 public class MoveAction : SSAction { public Vector3 target ; public float speed ; private MoveAction (){ } public static MoveAction getAction ( Vector3 target , float speed ) { MoveAction action = ScriptableObject . CreateInstance < MoveAction > (); action . target = target ; action . speed = speed ; return action ; } // Use this for initialization public override void Start () { } // Update is called once per frame public override void Update () { transform . position = Vector3 . MoveTowards ( transform . position , target , speed * Time . deltaTime ); if ( transform . transform . position == target ) { destroy = true ; callback . actionDone ( this ); } } }","title":"MoveAction"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#ccsequenceaction","text":"\u8fd9\u662f\u4e00\u4e2a\u52a8\u4f5c\u987a\u5e8f\u6267\u884c\u5e8f\u5217\u7684\u662fSSAction\u7684\u5b50\u7c7b\uff0c\u5176\u901a\u8fc7\u4e00\u4e2aAction\u7684List\uff0c\u548cactionDone\u5bf9\u4e8eList\u7684\u7ef4\u62a4\u4ee5\u53caUpdate\u5bf9\u4e8e\u8c03\u7528\u54ea\u4e2aAction\u7684Update\u65b9\u6cd5\u7684\u63a7\u5236\uff0c\u5b9e\u73b0\u4e86\u4e00\u4e2a\u52a8\u4f5c\u987a\u5e8f\u6267\u884c\u7684\u6548\u679c\u3002\u5341\u5206\u65b9\u4fbf\u4e86\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u7eed\u52a8\u4f5c\u7684\u7f16\u7a0b\u3002 public class CCSequenceAction : SSAction , ActionCallback { public List < SSAction > sequence ; public int repeat = 1 ; // 1->only do it for once, -1->repeat forever public int currentActionIndex = 0 ; public static CCSequenceAction getAction ( int repeat , int currentActionIndex , List < SSAction > sequence ) { CCSequenceAction action = ScriptableObject . CreateInstance < CCSequenceAction >(); action . sequence = sequence ; action . repeat = repeat ; action . currentActionIndex = currentActionIndex ; return action ; } public override void Update () { if ( sequence . Count == 0 ) return ; if ( currentActionIndex < sequence . Count ) { sequence [ currentActionIndex ]. Update (); } } public void actionDone ( SSAction source ) { source . destroy = false ; this . currentActionIndex ++; if ( this . currentActionIndex >= sequence . Count ) { this . currentActionIndex = 0 ; if ( repeat > 0 ) repeat --; if ( repeat == 0 ) { this . destroy = true ; this . callback . actionDone ( this ); } } } public override void Start () { foreach ( SSAction action in sequence ) { action . gameObject = this . gameObject ; action . transform = this . transform ; action . callback = this ; action . Start (); } } void OnDestroy () { foreach ( SSAction action in sequence ) { DestroyObject ( action ); } } }","title":"CCSequenceAction"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#ssactionmanager","text":"\u8fd9\u4e2a\u5c31\u662f\u6211\u4eec\u8fd9\u4e00\u671f\u7684\u4e3b\u89d2ActionManager\u4e86\uff0c\u5176\u8d1f\u8d23\u4e86action\u7684\u589e\u52a0\u3001\u5220\u9664\u3001\u6267\u884c\u3002\u5b83\u901a\u8fc7\u5728Update\u4e2d\u8c03\u7528SSAction\u7684Update\u65b9\u6cd5\uff0c\u5b9e\u73b0\u5bf9\u4e8e\u52a8\u4f5c\u7684\u4e00\u4e2a\u8c03\u5ea6\uff0c\u7ba1\u7406\u52a8\u4f5c\u7684\u81ea\u52a8\u6267\u884c\u3002 public class SSActionManager : MonoBehaviour , ActionCallback { private Dictionary < int , SSAction > actions = new Dictionary < int , SSAction >(); private List < SSAction > waitingToAdd = new List < SSAction >(); private List < int > watingToDelete = new List < int >(); protected void Update () { foreach ( SSAction ac in waitingToAdd ) { actions [ ac . GetInstanceID ()] = ac ; } waitingToAdd . Clear (); foreach ( KeyValuePair < int , SSAction > kv in actions ) { SSAction ac = kv . Value ; if ( ac . destroy ) { watingToDelete . Add ( ac . GetInstanceID ()); } else if ( ac . enable ) { ac . Update (); } } foreach ( int key in watingToDelete ) { SSAction ac = actions [ key ]; actions . Remove ( key ); DestroyObject ( ac ); } watingToDelete . Clear (); } public void addAction ( GameObject gameObject , SSAction action , ActionCallback callback ) { action . gameObject = gameObject ; action . transform = gameObject . transform ; action . callback = callback ; waitingToAdd . Add ( action ); action . Start (); } public void actionDone ( SSAction source ) { } }","title":"SSActionManager"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#firstsceneactionmanager","text":"FirstSceneActionManager\u5c31\u662f\u6211\u4eec\u4e0a\u9762SSActionManager\u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5bf9\u4e8e\u6211\u4eec\u573a\u666f\u4e2d\u5177\u4f53\u7684\u52a8\u4f5c\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728FirstSceneController\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6211\u4eec\u4e4b\u524d\u7684Move\u4e86\uff0c\u5341\u5206\u65b9\u4fbf\u4e86\u6211\u4eec\u7684\u7f16\u7a0b\u3002 public class FirstSceneActionManager : SSActionManager { public void toggleBoat ( BoatController boat ) { MoveAction action = MoveAction . getAction ( boat . getTarget (), boat . speed ); this . addAction ( boat . getBoat (), action , this ); boat . toggle (); } public void moveCharacter ( ICharacterController character , Vector3 target ) { Vector3 nowPos = character . getPos (); Vector3 tmpPos = nowPos ; if ( target . y > nowPos . y ) { tmpPos . y = target . y ; } else { tmpPos . x = target . x ; } SSAction action1 = MoveAction . getAction ( tmpPos , character . speed ); SSAction action2 = MoveAction . getAction ( target , character . speed ); SSAction sequenceAction = CCSequenceAction . getAction ( 1 , 0 , new List < SSAction >{ action1 , action2 }); this . addAction ( character . getInstance (), sequenceAction , this ); } }","title":"FirstSceneActionManager"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb05-Priests & Devils\u52a8\u4f5c\u5206\u79bb\u7248/#firstcontroller","text":"\u5728\u5b8c\u6210\u4e86FirstSceneActionManager\u540e\uff0c\u6211\u4eec\u628aGameObjectController\u4e2d\u4ee5\u53caFirstController\u4e2d\u4e00\u4e9b\u5173\u4e8e\u52a8\u4f5c\u7684\u90e8\u5206\u5220\u9664\uff0c\u7136\u540e\u5728\u539f\u6765\u52a8\u4f5c\u7684\u90e8\u5206\u8c03\u7528FirstSceneActionManager\u63d0\u4f9b\u65b0\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u4e86\u3002(\u4e0d\u8fc7\u56e0\u4e3a\u4e00\u5f00\u59cb\u8bbe\u8ba1\u67b6\u6784\u7684\u65f6\u5019\u6ca1\u6709\u8003\u8651\u52a0\u5165\u52a8\u4f5c\u7ba1\u7406\u5668\uff0c\u52a0\u4e4b\u6700\u8fd1\u65f6\u95f4\u8f83\u7d27\uff0c\u6ca1\u6709\u592a\u591a\u65f6\u95f4\u5bf9\u6e38\u620f\u8fdb\u884c\u91cd\u6784\uff0c\u6240\u4ee5FirstController\u4e2d\u4ecd\u7136\u6709\u7740\u90e8\u5206\u5173\u4e8e\u5224\u65ad\u7269\u4f53\u8fd0\u52a8\u7684\u903b\u8f91) public class FirstController : MonoBehaviour , ISceneController , IUserAction { UserGUI userGUI ; public LandController rightLand ; public LandController leftLand ; public BoatController boat ; public ICharacterController [] characters ; private FirstSceneActionManager actionManager ; void Awake () { GameDirector director = GameDirector . getInstance (); director . currentSceneController = this ; userGUI = gameObject . AddComponent < UserGUI >() as UserGUI ; genGameObjects (); } void Start () { actionManager = GetComponent < FirstSceneActionManager > (); } public void genGameObjects () { characters = new ICharacterController [ 6 ]; boat = new BoatController (); leftLand = new LandController (- 1 ); rightLand = new LandController ( 1 ); for ( int i = 0 ; i < 3 ; i ++) { ICharacterController priest = new ICharacterController ( 0 , \"priest\" + i ); priest . setPosition ( rightLand . getEmptyPosition ()); priest . getOnLand ( rightLand ); rightLand . getOnLand ( priest ); characters [ i ] = priest ; } for ( int i = 0 ; i < 3 ; i ++) { ICharacterController demon = new ICharacterController ( 1 , \"demon\" + i ); demon . setPosition ( rightLand . getEmptyPosition ()); demon . getOnLand ( rightLand ); rightLand . getOnLand ( demon ); characters [ i + 3 ] = demon ; } } public void ClickCharacter ( ICharacterController character ) { if ( userGUI . status != 0 || ! boat . available ()) { return ; } if ( character . isOnBoat ()) { LandController land ; if ( boat . getBoatPos () == 0 ) { land = leftLand ; } else { land = rightLand ; } boat . getOffBoat ( character . getName ()); actionManager . moveCharacter ( character , land . getEmptyPosition ()); character . getOnLand ( land ); land . getOnLand ( character ); } else { LandController land = character . getLandController (); if ( boat . getEmptyIndex () == - 1 ) return ; int landPos = land . getType (), boatPos = ( boat . getBoatPos () == 0 ) ? - 1 : 1 ; if ( landPos != boatPos ) return ; land . getOffLand ( character . getName ()); actionManager . moveCharacter ( character , boat . getEmptyPosition ()); character . getOnBoat ( boat , boat . getEmptyIndex ()); boat . getOnBoat ( character ); } userGUI . status = checkResult (); } public void ToggleBoat () { if ( userGUI . status != 0 || boat . isEmpty () || ! boat . available ()) return ; actionManager . toggleBoat ( boat ); userGUI . status = checkResult (); } int checkResult () { int leftPriests = 0 ; int rightPriests = 0 ; int leftDemons = 0 ; int rightDemons = 0 ; int [] leftStatus = leftLand . getStatus (); leftPriests += leftStatus [ 0 ]; leftDemons += leftStatus [ 1 ]; if ( leftPriests + leftDemons == 6 ) return 2 ; int [] rightStatus = rightLand . getStatus (); rightPriests += rightStatus [ 0 ]; rightDemons += rightStatus [ 1 ]; int [] boatStatus = boat . getBoatStatus (); if ( boat . getBoatPos () == 0 ) { leftPriests += boatStatus [ 0 ]; leftDemons += boatStatus [ 1 ]; } else { rightPriests += boatStatus [ 0 ]; rightDemons += boatStatus [ 1 ]; } if ( leftPriests > 0 && leftPriests < leftDemons ) return 1 ; if ( rightPriests > 0 && rightPriests < rightDemons ) return 1 ; return 0 ; } public void restart () { boat . reset (); leftLand . reset (); rightLand . reset (); for ( int i = 0 ; i < characters . Length ; i ++) characters [ i ]. reset (); } } \u5230\u8fd9\u91cc\uff0c\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u5b8c\u6210\u5566\uff0c\u4e0d\u8bf4\u4e86\uff0c\u5148\u53bb\u809d\u73b0\u64cd\u4e86(\u9003\ud83c\udf1a \u611f\u8c22\u9605\u8bfb\u6211\u7684\u535a\u5ba2\uff01\ud83d\ude0b","title":"FirstController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/","text":"Homework4 HitUFO\uff01 \u6e38\u620f\u7f16\u7a0b\u5b9e\u8df5 \u4f5c\u4e1a\u8981\u6c42 \u5185\u5bb9\u8981\u6c42 \u6e38\u620f\u6709 n \u4e2a round\uff0c\u6bcf\u4e2a round \u90fd\u5305\u62ec10 \u6b21 trial \u6bcf\u4e2a trial \u7684\u98de\u789f\u7684\u8272\u5f69\u3001\u5927\u5c0f\u3001\u53d1\u5c04\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u89d2\u5ea6\u3001\u540c\u65f6\u51fa\u73b0\u7684\u4e2a\u6570\u90fd\u53ef\u80fd\u4e0d\u540c\u3002\u5b83\u4eec\u7531\u8be5 round \u7684 ruler \u63a7\u5236 \u6bcf\u4e2a trial \u7684\u98de\u789f\u6709\u968f\u673a\u6027\uff0c\u603b\u4f53\u96be\u5ea6\u968f round \u4e0a\u5347 \u9f20\u6807\u70b9\u4e2d\u5f97\u5206\uff0c\u5f97\u5206\u89c4\u5219\u6309\u8272\u5f69\u3001\u5927\u5c0f\u3001\u901f\u5ea6\u4e0d\u540c\u8ba1\u7b97\uff0c\u89c4\u5219\u53ef\u81ea\u7531\u8bbe\u5b9a \u6e38\u620f\u8981\u6c42 \u4f7f\u7528\u5e26\u7f13\u5b58\u7684\u5de5\u5382\u6a21\u5f0f\u7ba1\u7406\u4e0d\u540c\u98de\u789f\u7684\u751f\u4ea7\u4e0e\u56de\u6536\uff0c\u8be5\u5de5\u5382\u5fc5\u987b\u662f\u573a\u666f\u5355\u5b9e\u4f8b\u7684\uff01\u5177\u4f53\u5b9e\u73b0\u89c1\u53c2\u8003\u8d44\u6e90 Singleton \u6a21\u677f\u7c7b \u5c3d\u53ef\u80fd\u4f7f\u7528\u524d\u9762 MVC \u7ed3\u6784\u5b9e\u73b0\u4eba\u673a\u4ea4\u4e92\u4e0e\u6e38\u620f\u6a21\u578b\u5206\u79bb \u4f5c\u4e1a\u5b9e\u73b0 \u672c\u5468\u7684\u5185\u5bb9\u5728\u6709\u4e86\u4e4b\u524dMVC\u67b6\u6784\u4ee5\u53ca\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u5176\u5b9e\u672c\u6b21\u4f5c\u4e1a\u7684\u5b9e\u73b0\u8f83\u4e3a\u7b80\u5355\u3002\u6309\u7167\u4e4b\u524d\u7684\u60ef\u4f8b\uff0c\u4e3a\u4e86\u7f16\u7a0b\u7684\u6761\u7406\u6027\uff0c\u6211\u4eec\u5148\u8bbe\u8ba1\u51fa\u6211\u4eec\u8fd9\u6b21\u4f5c\u4e1a\u7684UML\u56fe \u89c6\u9891\u6f14\u793a Hit UFO! Hit UFO! (With GUN) UML\u56fe \u5176\u4e2dFirstCharacterController\u7c7b\u662f\u4e3aGUN\u7248\u672c\u521b\u5efa\u7684\u3002 \u5206\u7c7b\u4ecb\u7ecd \u9996\u5148\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u6b21\u4f5c\u4e1a\u7684\u91cd\u4e2d\u4e4b\u91cd\uff0c\u5de5\u5382\u7c7b\u7684\u5b9e\u73b0\uff0c\u8fd9\u6b21\u7684\u4f5c\u4e1a\u4e00\u5171\u6709\u4e24\u4e2a\u5de5\u5382\u7c7b\uff0c\u4e00\u4e2a\u662fUFO\u751f\u6210\u7684\u5de5\u5382\uff0c\u4e00\u4e2a\u662f\u7206\u70b8\u751f\u6210\u7684\u5de5\u5382\uff0c \u901a\u8fc7\u5e26\u7f13\u5b58\u7684\u5de5\u5382\u5bf9\u8c61\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u51cf\u5c11\u4e86\u6e38\u620f\u5bf9\u8c61\u7684\u521b\u5efa\u4ee5\u53ca\u9500\u6bc1\u7684\u6b21\u6570\uff0c\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u6e38\u620f\u7684\u5f00\u9500\uff0c\u5e76\u4e14\u6e38\u620f\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u9500\u6bc1\u7531\u4e00\u4e2a\u5bf9\u8c61\u7edf\u4e00\u7ba1\u7406\uff0c\u4f7f\u5f97\u4e1a\u52a1\u903b\u8f91\u66f4\u52a0\u660e\u786e\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u7684\u7a0b\u5e8f\u66f4\u52a0\u5bb9\u6613\u6269\u5c55\u3002 \u4e0b\u9762\u6211\u4eec\u5148\u6765\u770b\u770b\u8fd9\u4e24\u4e2a\u7c7b UFOFactory public class UFOFactory : MonoBehaviour { Queue < UFOController > waitingQueue ; List < UFOController > runningList ; GameObject basic ; private void Awake () { waitingQueue = new Queue < UFOController >(); runningList = new List < UFOController >(); basic = Instantiate ( Resources . Load ( \"Prefabs/UFO\" , typeof ( GameObject ))) as GameObject ; basic . SetActive ( false ); } public UFOController GetUFO ( UFOData data ) { UFOController ufo ; if ( waitingQueue . Count > 0 ) ufo = waitingQueue . Dequeue (); else { GameObject newUFO = GameObject . Instantiate ( basic ); ufo = new UFOController ( newUFO ); newUFO . transform . position += Vector3 . forward * Random . value * 10 ; } ufo . setAttribute ( data ); runningList . Add ( ufo ); ufo . appear (); return ufo ; } public List < UFOController > GetRunningList () { return this . runningList ; } public UFOController [] initAll ( UFOData data , int num ) { UFOController [] list = new UFOController [ num ]; for ( int i = 0 ; i < num ; i ++) { list [ i ] = GetUFO ( data ); } return list ; } public void recycle ( UFOController ufo ) { ufo . disappear (); waitingQueue . Enqueue ( ufo ); runningList . Remove ( ufo ); } public void recycleAll () { while ( runningList . Count != 0 ) { recycle ( runningList [ 0 ]); } } } ExplosionFactory public class ExplosionFactory : MonoBehaviour { Queue < GameObject > waitingQueue ; List < GameObject > runningList ; GameObject basic ; private void Awake () { waitingQueue = new Queue < GameObject >(); runningList = new List < GameObject >(); basic = Instantiate ( Resources . Load ( \"Prefabs/Explosion\" , typeof ( GameObject ))) as GameObject ; basic . SetActive ( false ); } public void explode ( Vector3 pos ) { GameObject explosion ; if ( waitingQueue . Count == 0 ) { explosion = GameObject . Instantiate ( basic ); explosion . AddComponent < SelfRecycle > (). factory = this ; } else { explosion = waitingQueue . Dequeue (); } runningList . Add ( explosion ); explosion . GetComponent < SelfRecycle > (). startTimer ( 0.2f ); explosion . SetActive ( true ); explosion . transform . position = pos ; } public void recycle ( GameObject explosion ) { explosion . SetActive ( false ); waitingQueue . Enqueue ( explosion ); runningList . Remove ( explosion ); } } FlyAction \u5728\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u662f\u6211\u4eec\u7b2c\u4e00\u4e2a\u661f\u671f\u6240\u5199\u7684\u629b\u7269\u7ebf\u8fd0\u52a8\u7684\u4ee3\u7801\uff0c\u5916\u90e8\u901a\u8fc7getAction\u63d0\u4f9bUFO\u7684x, y\u7684\u521d\u901f\u5ea6\uff0c\u751f\u6210\u7269\u4f53\u7684\u901f\u5ea6\u5411\u91cf\uff0c\u7136\u540e\u6bcf\u4e00\u5e27\u90fd\u7ed9\u7269\u4f53\u52a0\u4e0a\u5bf9\u5e94\u91cd\u529b\u7684\u79fb\u52a8\u548c\u521d\u901f\u5ea6\u7684\u79fb\u52a8\u5373\u53ef\u5f97\u5230\u7269\u4f53\u7684\u629b\u7269\u7ebf\u3002 public class FlyAction : SSAction { public float Vx ; public float Vy ; public Vector3 speed ; public Vector3 gravity ; private FlyAction () { } public static FlyAction getAction ( float vx , float vy ) { FlyAction action = ScriptableObject . CreateInstance < FlyAction > (); action . gravity = Vector3 . zero ; action . Vx = vx ; action . Vy = vy ; return action ; } // Use this for initialization public override void Start () { speed = new Vector3 ( Vx , Vy , 0 ); } // Update is called once per frame public override void Update () { if ( 2 * Vy + gravity . y > 0.00001 ) { gravity . y -= 10 * Time . fixedDeltaTime ; transform . Translate ( speed * Time . fixedDeltaTime ); transform . Translate ( gravity * Time . fixedDeltaTime ); } else { destroy = true ; callback . actionDone ( this ); } } } Fire Fire\u7c7b\u662f\u6e38\u620f\u7684\u63d0\u4f9b\u5f00\u706b\u64cd\u4f5c\u7684\u7c7b\uff0c\u901a\u8fc7\u8be5\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u7528\u6237\u7684\u8f93\u5165\uff0c\u5e76\u4e14\u5bf9\u4e8e\u7528\u6237\u64cd\u4f5c\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\uff0c\u6211\u4eec\u672c\u6b21\u5b9e\u9a8c\u4e3b\u8981\u7528\u5230\u4e86Ray\u6765\u5b9e\u73b0\u7528\u6237\u7684\u5c04\u51fb\u64cd\u4f5c\uff0c\u901a\u8fc7Raycast\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u5c04\u7ebf\u51fb\u4e2d\u7684\u7269\u4f53\uff0c\u5e76\u4e14\u628a\u5176\u901a\u8fc7\u76f8\u5e94\u7684\u63a5\u53e3\u4f20\u7ed9\u6211\u4eec\u7684\u573a\u8bb0(SceneControll)\uff0c\u5b8c\u6210\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 public class Fire : MonoBehaviour { public new Camera camera ; public FirstController sceneController ; LayerMask layer ; void Awake () { layer = LayerMask . GetMask ( \"UFO\" , \"Terrian\" ); } // Use this for initialization void Start () { camera = Camera . main ; sceneController = GameDirector . getInstance (). currentSceneController as FirstController ; } // Update is called once per frame void Update () { if ( Input . GetButton ( \"Fire1\" )) { Ray ray = camera . ScreenPointToRay ( Input . mousePosition ); RaycastHit hit ; if ( Physics . Raycast ( ray , out hit , Mathf . Infinity , layer )) { if ( hit . transform . gameObject . layer == 8 ) { sceneController . shootUFO ( hit . transform . gameObject . GetComponent < UFOCtrl >(). ufoController ); } else if ( hit . transform . gameObject . layer == 9 ) { sceneController . shootGround ( hit . point ); } } } } } ScoreRecorder ScoreRecorder\u7684\u4f5c\u7528\u5c31\u662f\u6211\u4eec\u6e38\u620f\u7684\u8ba1\u5206\u5458\uff0c\u6211\u4eec\u79ef\u5206\u6570\u636e\u7ef4\u62a4\u6ca1\u6709\u653e\u5728\u573a\u8bb0\u91cc\u9762\uff0c\u800c\u662f\u628a\u5176\u5206\u79bb\u4e86\u51fa\u6765\u505a\u4e86\u4e00\u4e2a\u8bb0\u5206\u5458\uff0c\u7531\u8bb0\u5206\u5458\u6765\u7ef4\u62a4\u6211\u4eec\u7684\u79ef\u5206 public class ScoreRecorder { private int score ; Text gameInfo ; private static ScoreRecorder instance ; public static ScoreRecorder getInstance () { if ( instance == null ) { instance = new ScoreRecorder (); } return instance ; } private ScoreRecorder () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/ScoreInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text >(); gameInfo . text = \"\" + score ; } public void record ( int difficulty ) { score += difficulty + 1 ; gameInfo . text = \"\" + score ; } public int getScore () { return score ; } } FirstController FirstController\u7c7b\u5c31\u662f\u6211\u4eec\u8fd9\u6b21\u6e38\u620f\u573a\u666f\u7684\u573a\u8bb0\u4e86\uff0c\u5728\u4e4b\u524d\u5b66\u4e60\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u8fd9\u4e00\u6b21\u6e38\u620f\u67b6\u6784\u7684\u8bbe\u8ba1\u66f4\u52a0\u5408\u7406\uff0c\u573a\u8bb0\u76f8\u6bd4\u4e0a\u4e00\u6b21\u7684\u6e38\u620f\u66f4\u52a0\u7b80\u6d01\u6613\u770b\uff0c\u53ef\u8bfb\u6027\u66f4\u5f3a\u3002 public class FirstController : MonoBehaviour , ISceneController { GameDirector gameDirector ; FirstSceneActionManager actionManager ; public UFOFactory ufoFactory ; ExplosionFactory explosionFactory ; ScoreRecorder scoreRecorder ; TimerController timerController ; DifficultyController difficulty ; int gameStatus ; int round = 1 ; int emitNum ; int scoreInRound ; int fpsCount ; bool running ; GUIStyle headerStyle ; GUIStyle buttonStyle ; Text roundText ; void Awake () { gameDirector = GameDirector . getInstance (); gameDirector . currentSceneController = this ; actionManager = gameObject . AddComponent < FirstSceneActionManager >(); ufoFactory = gameObject . AddComponent < UFOFactory >(); explosionFactory = gameObject . AddComponent < ExplosionFactory > (); difficulty = DifficultyController . getInstance (); timerController = gameObject . AddComponent < TimerController >(); scoreRecorder = ScoreRecorder . getInstance (); loadResources (); } public void Start () { gameStatus = 0 ; difficulty . setDifficulty ( 0 ); round = 1 ; roundText = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/RoundInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text >(); roundText . text = \"\" + round ; fpsCount = 0 ; headerStyle = new GUIStyle (); headerStyle . fontSize = 40 ; headerStyle . alignment = TextAnchor . MiddleCenter ; buttonStyle = new GUIStyle ( \"button\" ); buttonStyle . fontSize = 30 ; running = false ; } void OnGUI () { if ( gameStatus == 0 ) { GUI . Label ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 - 90 , 100 , 50 ), \"Hit the UFO!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 , 100 , 50 ), \"Play!\" , buttonStyle )) { replay (); } } else if ( gameStatus == 2 ) { GUI . Label ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 - 90 , 100 , 50 ), \"You get \" + scoreRecorder . getScore ()+ \" points in this game!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 90 , Screen . height / 2 , 200 , 50 ), \"Play Again\" , buttonStyle )) { replay (); } } } void Update () { if ( running && gameStatus == 1 ) { fpsCount ++; if ( fpsCount == 60 ) { if ( emitNum < difficulty . getEmitNum ()) { emitUFO (); fpsCount = 0 ; emitNum ++; } else if ( emitNum == difficulty . getEmitNum ()) { if ( scoreInRound < difficulty . getSuccessScore ()) { gameStatus = 2 ; } else { Invoke ( \"startRound\" , 3 ); timerController . setTime ( 3 ); difficulty . setDifficultyByScore ( scoreRecorder . getScore ()); } } } } else { if ( Input . GetKeyDown ( \"enter\" ) || Input . GetKeyDown ( \"return\" )) replay (); } } public void loadResources () { Instantiate ( Resources . Load ( \"Prefabs/Land\" )); } void startRound () { running = true ; roundText . text = \"\" + round ++; emitNum = 0 ; scoreInRound = 0 ; fpsCount = 0 ; } void emitUFO () { UFOController ufoCtrl = ufoFactory . GetUFO ( difficulty . getUFOAttributes ()); ufoCtrl . appear (); actionManager . addActionToUFO ( ufoCtrl . GetObject (), difficulty . getUFOAttributes (). speed ); } public void shootUFO ( UFOController ufo ) { scoreInRound ++; scoreRecorder . record ( difficulty . getDifficulty ()); actionManager . removeActionByObj ( ufo . GetObject ()); explosionFactory . explode ( ufo . GetObject (). transform . position ); ufoFactory . recycle ( ufo ); } public void shootGround ( Vector3 pos ) { explosionFactory . explode ( pos ); } public void replay () { gameStatus = 1 ; ufoFactory . recycleAll (); round = 1 ; roundText . text = \"\" + round ++; Invoke ( \"startRound\" , 3 ); timerController . setTime ( 3 ); difficulty . resetDifficulty (); scoreRecorder . reset (); } } \u6e38\u620f\u6548\u679c\u56fe \u603b\u7ed3 \u901a\u8fc7\u5b8c\u6210\u8fd9\u4e00\u6b21\u7684\u6e38\u620f\uff0c\u6211\u4f53\u4f1a\u5230\u4e86\u4e4b\u524d\u6211\u4eec\u6240\u5199\u7684MVC\u3001\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u5de8\u5927\u4f5c\u7528\uff0c\u6709\u4e86\u8fd9\u4e9b\u57fa\u672c\u7684\u67b6\u6784\uff0c\u6211\u4eec\u6e38\u620f\u7684\u5b9e\u73b0\u66f4\u52a0\u7b80\u6613\uff0c\u57fa\u672c\u53ea\u7528\u5b9e\u73b0\u6211\u4eec\u7684\u6e38\u620f\u7269\u4f53\u7684Controller\u3001\u5404\u4e2a\u6e38\u620f\u529f\u80fd\"\u8d1f\u8d23\u4eba\"\u7684Controller\uff0c\u7136\u540e\u901a\u8fc7\u573a\u8bb0\u5bf9\u4e8e\u5404\u4e2aController\u8fdb\u884c\u6574\u5408\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u6211\u4eec\u7684\u6574\u4e2a\u6e38\u620f\uff0c\u53ea\u8981\u6211\u4eec\u8bbe\u8ba1\u597d\u4e86\u6211\u4eec\u7684UML\u56fe\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u53ef\u4ee5\u5b9e\u73b0\u51fa\u6211\u4eec\u7684\u6574\u4e2a\u6e38\u620f\u3002","title":"\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#homework4-hitufo","text":"","title":"Homework4 HitUFO\uff01 \u6e38\u620f\u7f16\u7a0b\u5b9e\u8df5"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#_1","text":"\u5185\u5bb9\u8981\u6c42 \u6e38\u620f\u6709 n \u4e2a round\uff0c\u6bcf\u4e2a round \u90fd\u5305\u62ec10 \u6b21 trial \u6bcf\u4e2a trial \u7684\u98de\u789f\u7684\u8272\u5f69\u3001\u5927\u5c0f\u3001\u53d1\u5c04\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u89d2\u5ea6\u3001\u540c\u65f6\u51fa\u73b0\u7684\u4e2a\u6570\u90fd\u53ef\u80fd\u4e0d\u540c\u3002\u5b83\u4eec\u7531\u8be5 round \u7684 ruler \u63a7\u5236 \u6bcf\u4e2a trial \u7684\u98de\u789f\u6709\u968f\u673a\u6027\uff0c\u603b\u4f53\u96be\u5ea6\u968f round \u4e0a\u5347 \u9f20\u6807\u70b9\u4e2d\u5f97\u5206\uff0c\u5f97\u5206\u89c4\u5219\u6309\u8272\u5f69\u3001\u5927\u5c0f\u3001\u901f\u5ea6\u4e0d\u540c\u8ba1\u7b97\uff0c\u89c4\u5219\u53ef\u81ea\u7531\u8bbe\u5b9a \u6e38\u620f\u8981\u6c42 \u4f7f\u7528\u5e26\u7f13\u5b58\u7684\u5de5\u5382\u6a21\u5f0f\u7ba1\u7406\u4e0d\u540c\u98de\u789f\u7684\u751f\u4ea7\u4e0e\u56de\u6536\uff0c\u8be5\u5de5\u5382\u5fc5\u987b\u662f\u573a\u666f\u5355\u5b9e\u4f8b\u7684\uff01\u5177\u4f53\u5b9e\u73b0\u89c1\u53c2\u8003\u8d44\u6e90 Singleton \u6a21\u677f\u7c7b \u5c3d\u53ef\u80fd\u4f7f\u7528\u524d\u9762 MVC \u7ed3\u6784\u5b9e\u73b0\u4eba\u673a\u4ea4\u4e92\u4e0e\u6e38\u620f\u6a21\u578b\u5206\u79bb","title":"\u4f5c\u4e1a\u8981\u6c42"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#_2","text":"\u672c\u5468\u7684\u5185\u5bb9\u5728\u6709\u4e86\u4e4b\u524dMVC\u67b6\u6784\u4ee5\u53ca\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u5176\u5b9e\u672c\u6b21\u4f5c\u4e1a\u7684\u5b9e\u73b0\u8f83\u4e3a\u7b80\u5355\u3002\u6309\u7167\u4e4b\u524d\u7684\u60ef\u4f8b\uff0c\u4e3a\u4e86\u7f16\u7a0b\u7684\u6761\u7406\u6027\uff0c\u6211\u4eec\u5148\u8bbe\u8ba1\u51fa\u6211\u4eec\u8fd9\u6b21\u4f5c\u4e1a\u7684UML\u56fe","title":"\u4f5c\u4e1a\u5b9e\u73b0"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#_3","text":"Hit UFO! Hit UFO! (With GUN)","title":"\u89c6\u9891\u6f14\u793a"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#uml","text":"\u5176\u4e2dFirstCharacterController\u7c7b\u662f\u4e3aGUN\u7248\u672c\u521b\u5efa\u7684\u3002","title":"UML\u56fe"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#_4","text":"\u9996\u5148\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u6b21\u4f5c\u4e1a\u7684\u91cd\u4e2d\u4e4b\u91cd\uff0c\u5de5\u5382\u7c7b\u7684\u5b9e\u73b0\uff0c\u8fd9\u6b21\u7684\u4f5c\u4e1a\u4e00\u5171\u6709\u4e24\u4e2a\u5de5\u5382\u7c7b\uff0c\u4e00\u4e2a\u662fUFO\u751f\u6210\u7684\u5de5\u5382\uff0c\u4e00\u4e2a\u662f\u7206\u70b8\u751f\u6210\u7684\u5de5\u5382\uff0c \u901a\u8fc7\u5e26\u7f13\u5b58\u7684\u5de5\u5382\u5bf9\u8c61\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u51cf\u5c11\u4e86\u6e38\u620f\u5bf9\u8c61\u7684\u521b\u5efa\u4ee5\u53ca\u9500\u6bc1\u7684\u6b21\u6570\uff0c\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u6e38\u620f\u7684\u5f00\u9500\uff0c\u5e76\u4e14\u6e38\u620f\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u9500\u6bc1\u7531\u4e00\u4e2a\u5bf9\u8c61\u7edf\u4e00\u7ba1\u7406\uff0c\u4f7f\u5f97\u4e1a\u52a1\u903b\u8f91\u66f4\u52a0\u660e\u786e\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u7684\u7a0b\u5e8f\u66f4\u52a0\u5bb9\u6613\u6269\u5c55\u3002 \u4e0b\u9762\u6211\u4eec\u5148\u6765\u770b\u770b\u8fd9\u4e24\u4e2a\u7c7b","title":"\u5206\u7c7b\u4ecb\u7ecd"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#ufofactory","text":"public class UFOFactory : MonoBehaviour { Queue < UFOController > waitingQueue ; List < UFOController > runningList ; GameObject basic ; private void Awake () { waitingQueue = new Queue < UFOController >(); runningList = new List < UFOController >(); basic = Instantiate ( Resources . Load ( \"Prefabs/UFO\" , typeof ( GameObject ))) as GameObject ; basic . SetActive ( false ); } public UFOController GetUFO ( UFOData data ) { UFOController ufo ; if ( waitingQueue . Count > 0 ) ufo = waitingQueue . Dequeue (); else { GameObject newUFO = GameObject . Instantiate ( basic ); ufo = new UFOController ( newUFO ); newUFO . transform . position += Vector3 . forward * Random . value * 10 ; } ufo . setAttribute ( data ); runningList . Add ( ufo ); ufo . appear (); return ufo ; } public List < UFOController > GetRunningList () { return this . runningList ; } public UFOController [] initAll ( UFOData data , int num ) { UFOController [] list = new UFOController [ num ]; for ( int i = 0 ; i < num ; i ++) { list [ i ] = GetUFO ( data ); } return list ; } public void recycle ( UFOController ufo ) { ufo . disappear (); waitingQueue . Enqueue ( ufo ); runningList . Remove ( ufo ); } public void recycleAll () { while ( runningList . Count != 0 ) { recycle ( runningList [ 0 ]); } } }","title":"UFOFactory"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#explosionfactory","text":"public class ExplosionFactory : MonoBehaviour { Queue < GameObject > waitingQueue ; List < GameObject > runningList ; GameObject basic ; private void Awake () { waitingQueue = new Queue < GameObject >(); runningList = new List < GameObject >(); basic = Instantiate ( Resources . Load ( \"Prefabs/Explosion\" , typeof ( GameObject ))) as GameObject ; basic . SetActive ( false ); } public void explode ( Vector3 pos ) { GameObject explosion ; if ( waitingQueue . Count == 0 ) { explosion = GameObject . Instantiate ( basic ); explosion . AddComponent < SelfRecycle > (). factory = this ; } else { explosion = waitingQueue . Dequeue (); } runningList . Add ( explosion ); explosion . GetComponent < SelfRecycle > (). startTimer ( 0.2f ); explosion . SetActive ( true ); explosion . transform . position = pos ; } public void recycle ( GameObject explosion ) { explosion . SetActive ( false ); waitingQueue . Enqueue ( explosion ); runningList . Remove ( explosion ); } }","title":"ExplosionFactory"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#flyaction","text":"\u5728\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u662f\u6211\u4eec\u7b2c\u4e00\u4e2a\u661f\u671f\u6240\u5199\u7684\u629b\u7269\u7ebf\u8fd0\u52a8\u7684\u4ee3\u7801\uff0c\u5916\u90e8\u901a\u8fc7getAction\u63d0\u4f9bUFO\u7684x, y\u7684\u521d\u901f\u5ea6\uff0c\u751f\u6210\u7269\u4f53\u7684\u901f\u5ea6\u5411\u91cf\uff0c\u7136\u540e\u6bcf\u4e00\u5e27\u90fd\u7ed9\u7269\u4f53\u52a0\u4e0a\u5bf9\u5e94\u91cd\u529b\u7684\u79fb\u52a8\u548c\u521d\u901f\u5ea6\u7684\u79fb\u52a8\u5373\u53ef\u5f97\u5230\u7269\u4f53\u7684\u629b\u7269\u7ebf\u3002 public class FlyAction : SSAction { public float Vx ; public float Vy ; public Vector3 speed ; public Vector3 gravity ; private FlyAction () { } public static FlyAction getAction ( float vx , float vy ) { FlyAction action = ScriptableObject . CreateInstance < FlyAction > (); action . gravity = Vector3 . zero ; action . Vx = vx ; action . Vy = vy ; return action ; } // Use this for initialization public override void Start () { speed = new Vector3 ( Vx , Vy , 0 ); } // Update is called once per frame public override void Update () { if ( 2 * Vy + gravity . y > 0.00001 ) { gravity . y -= 10 * Time . fixedDeltaTime ; transform . Translate ( speed * Time . fixedDeltaTime ); transform . Translate ( gravity * Time . fixedDeltaTime ); } else { destroy = true ; callback . actionDone ( this ); } } }","title":"FlyAction"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#fire","text":"Fire\u7c7b\u662f\u6e38\u620f\u7684\u63d0\u4f9b\u5f00\u706b\u64cd\u4f5c\u7684\u7c7b\uff0c\u901a\u8fc7\u8be5\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u7528\u6237\u7684\u8f93\u5165\uff0c\u5e76\u4e14\u5bf9\u4e8e\u7528\u6237\u64cd\u4f5c\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\uff0c\u6211\u4eec\u672c\u6b21\u5b9e\u9a8c\u4e3b\u8981\u7528\u5230\u4e86Ray\u6765\u5b9e\u73b0\u7528\u6237\u7684\u5c04\u51fb\u64cd\u4f5c\uff0c\u901a\u8fc7Raycast\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u5c04\u7ebf\u51fb\u4e2d\u7684\u7269\u4f53\uff0c\u5e76\u4e14\u628a\u5176\u901a\u8fc7\u76f8\u5e94\u7684\u63a5\u53e3\u4f20\u7ed9\u6211\u4eec\u7684\u573a\u8bb0(SceneControll)\uff0c\u5b8c\u6210\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 public class Fire : MonoBehaviour { public new Camera camera ; public FirstController sceneController ; LayerMask layer ; void Awake () { layer = LayerMask . GetMask ( \"UFO\" , \"Terrian\" ); } // Use this for initialization void Start () { camera = Camera . main ; sceneController = GameDirector . getInstance (). currentSceneController as FirstController ; } // Update is called once per frame void Update () { if ( Input . GetButton ( \"Fire1\" )) { Ray ray = camera . ScreenPointToRay ( Input . mousePosition ); RaycastHit hit ; if ( Physics . Raycast ( ray , out hit , Mathf . Infinity , layer )) { if ( hit . transform . gameObject . layer == 8 ) { sceneController . shootUFO ( hit . transform . gameObject . GetComponent < UFOCtrl >(). ufoController ); } else if ( hit . transform . gameObject . layer == 9 ) { sceneController . shootGround ( hit . point ); } } } } }","title":"Fire"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#scorerecorder","text":"ScoreRecorder\u7684\u4f5c\u7528\u5c31\u662f\u6211\u4eec\u6e38\u620f\u7684\u8ba1\u5206\u5458\uff0c\u6211\u4eec\u79ef\u5206\u6570\u636e\u7ef4\u62a4\u6ca1\u6709\u653e\u5728\u573a\u8bb0\u91cc\u9762\uff0c\u800c\u662f\u628a\u5176\u5206\u79bb\u4e86\u51fa\u6765\u505a\u4e86\u4e00\u4e2a\u8bb0\u5206\u5458\uff0c\u7531\u8bb0\u5206\u5458\u6765\u7ef4\u62a4\u6211\u4eec\u7684\u79ef\u5206 public class ScoreRecorder { private int score ; Text gameInfo ; private static ScoreRecorder instance ; public static ScoreRecorder getInstance () { if ( instance == null ) { instance = new ScoreRecorder (); } return instance ; } private ScoreRecorder () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/ScoreInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text >(); gameInfo . text = \"\" + score ; } public void record ( int difficulty ) { score += difficulty + 1 ; gameInfo . text = \"\" + score ; } public int getScore () { return score ; } }","title":"ScoreRecorder"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#firstcontroller","text":"FirstController\u7c7b\u5c31\u662f\u6211\u4eec\u8fd9\u6b21\u6e38\u620f\u573a\u666f\u7684\u573a\u8bb0\u4e86\uff0c\u5728\u4e4b\u524d\u5b66\u4e60\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u8fd9\u4e00\u6b21\u6e38\u620f\u67b6\u6784\u7684\u8bbe\u8ba1\u66f4\u52a0\u5408\u7406\uff0c\u573a\u8bb0\u76f8\u6bd4\u4e0a\u4e00\u6b21\u7684\u6e38\u620f\u66f4\u52a0\u7b80\u6d01\u6613\u770b\uff0c\u53ef\u8bfb\u6027\u66f4\u5f3a\u3002 public class FirstController : MonoBehaviour , ISceneController { GameDirector gameDirector ; FirstSceneActionManager actionManager ; public UFOFactory ufoFactory ; ExplosionFactory explosionFactory ; ScoreRecorder scoreRecorder ; TimerController timerController ; DifficultyController difficulty ; int gameStatus ; int round = 1 ; int emitNum ; int scoreInRound ; int fpsCount ; bool running ; GUIStyle headerStyle ; GUIStyle buttonStyle ; Text roundText ; void Awake () { gameDirector = GameDirector . getInstance (); gameDirector . currentSceneController = this ; actionManager = gameObject . AddComponent < FirstSceneActionManager >(); ufoFactory = gameObject . AddComponent < UFOFactory >(); explosionFactory = gameObject . AddComponent < ExplosionFactory > (); difficulty = DifficultyController . getInstance (); timerController = gameObject . AddComponent < TimerController >(); scoreRecorder = ScoreRecorder . getInstance (); loadResources (); } public void Start () { gameStatus = 0 ; difficulty . setDifficulty ( 0 ); round = 1 ; roundText = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/RoundInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text >(); roundText . text = \"\" + round ; fpsCount = 0 ; headerStyle = new GUIStyle (); headerStyle . fontSize = 40 ; headerStyle . alignment = TextAnchor . MiddleCenter ; buttonStyle = new GUIStyle ( \"button\" ); buttonStyle . fontSize = 30 ; running = false ; } void OnGUI () { if ( gameStatus == 0 ) { GUI . Label ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 - 90 , 100 , 50 ), \"Hit the UFO!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 , 100 , 50 ), \"Play!\" , buttonStyle )) { replay (); } } else if ( gameStatus == 2 ) { GUI . Label ( new Rect ( Screen . width / 2 - 45 , Screen . height / 2 - 90 , 100 , 50 ), \"You get \" + scoreRecorder . getScore ()+ \" points in this game!\" , headerStyle ); if ( GUI . Button ( new Rect ( Screen . width / 2 - 90 , Screen . height / 2 , 200 , 50 ), \"Play Again\" , buttonStyle )) { replay (); } } } void Update () { if ( running && gameStatus == 1 ) { fpsCount ++; if ( fpsCount == 60 ) { if ( emitNum < difficulty . getEmitNum ()) { emitUFO (); fpsCount = 0 ; emitNum ++; } else if ( emitNum == difficulty . getEmitNum ()) { if ( scoreInRound < difficulty . getSuccessScore ()) { gameStatus = 2 ; } else { Invoke ( \"startRound\" , 3 ); timerController . setTime ( 3 ); difficulty . setDifficultyByScore ( scoreRecorder . getScore ()); } } } } else { if ( Input . GetKeyDown ( \"enter\" ) || Input . GetKeyDown ( \"return\" )) replay (); } } public void loadResources () { Instantiate ( Resources . Load ( \"Prefabs/Land\" )); } void startRound () { running = true ; roundText . text = \"\" + round ++; emitNum = 0 ; scoreInRound = 0 ; fpsCount = 0 ; } void emitUFO () { UFOController ufoCtrl = ufoFactory . GetUFO ( difficulty . getUFOAttributes ()); ufoCtrl . appear (); actionManager . addActionToUFO ( ufoCtrl . GetObject (), difficulty . getUFOAttributes (). speed ); } public void shootUFO ( UFOController ufo ) { scoreInRound ++; scoreRecorder . record ( difficulty . getDifficulty ()); actionManager . removeActionByObj ( ufo . GetObject ()); explosionFactory . explode ( ufo . GetObject (). transform . position ); ufoFactory . recycle ( ufo ); } public void shootGround ( Vector3 pos ) { explosionFactory . explode ( pos ); } public void replay () { gameStatus = 1 ; ufoFactory . recycleAll (); round = 1 ; roundText . text = \"\" + round ++; Invoke ( \"startRound\" , 3 ); timerController . setTime ( 3 ); difficulty . resetDifficulty (); scoreRecorder . reset (); } }","title":"FirstController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#_5","text":"","title":"\u6e38\u620f\u6548\u679c\u56fe"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb06-Hit UFO\u7f16\u7a0b\u5b9e\u8df5/#_6","text":"\u901a\u8fc7\u5b8c\u6210\u8fd9\u4e00\u6b21\u7684\u6e38\u620f\uff0c\u6211\u4f53\u4f1a\u5230\u4e86\u4e4b\u524d\u6211\u4eec\u6240\u5199\u7684MVC\u3001\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u5de8\u5927\u4f5c\u7528\uff0c\u6709\u4e86\u8fd9\u4e9b\u57fa\u672c\u7684\u67b6\u6784\uff0c\u6211\u4eec\u6e38\u620f\u7684\u5b9e\u73b0\u66f4\u52a0\u7b80\u6613\uff0c\u57fa\u672c\u53ea\u7528\u5b9e\u73b0\u6211\u4eec\u7684\u6e38\u620f\u7269\u4f53\u7684Controller\u3001\u5404\u4e2a\u6e38\u620f\u529f\u80fd\"\u8d1f\u8d23\u4eba\"\u7684Controller\uff0c\u7136\u540e\u901a\u8fc7\u573a\u8bb0\u5bf9\u4e8e\u5404\u4e2aController\u8fdb\u884c\u6574\u5408\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u6211\u4eec\u7684\u6574\u4e2a\u6e38\u620f\uff0c\u53ea\u8981\u6211\u4eec\u8bbe\u8ba1\u597d\u4e86\u6211\u4eec\u7684UML\u56fe\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u53ef\u4ee5\u5b9e\u73b0\u51fa\u6211\u4eec\u7684\u6574\u4e2a\u6e38\u620f\u3002","title":"\u603b\u7ed3"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb07-\u81ea\u5b9a\u4e49Component(Editor)/","text":"\u81ea\u5b9a\u4e49Component \u5236\u4f5c\u4e00\u4e2aUnity\u7684Inspector\u754c\u9762\u4e2d\u7684Editor \u64cd\u4f5c\u7ec4\u4ef6 \u5236\u4f5c\u8fc7\u7a0b \u65b0\u5efa\u4e00\u4e2aInspector\u7c7b, \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aInspector\u7c7b\u7684\u7b80\u5355\u6837\u4f8b [CustomEditor(typeof(XX))] public class xxEditor : Editor { public override void OnInspectorGUI () { var target = ( XX )( serializedObject . targetObject ); target . speed = EditorGUILayout . Slider ( \"Speed\" , target . speed , 0 , 100 ); ProgressBar ( target . speed , \"Speed\" ); target . color = EditorGUILayout . ColorField ( \"Color\" , target . color ); } private void ProgressBar ( float value , string label ) { Rect rect = GUILayoutUtility . GetRect ( 20 , 20 , \"TextField\" ); EditorGUI . ProgressBar ( rect , value , label ); EditorGUILayout . Space (); } } \u7136\u540e\uff0c\u6211\u4eec\u53ea\u8981\u628aXX ADD\u5230\u4e00\u4e2aGameObject\u4e0a\uff0cInspector\u4e2d\u5c31\u4f1a\u51fa\u73b0\u6211\u4eec\u521a\u521a\u5199\u7684Editor\u4e86\u3002","title":"\u5b66\u4e60\u7b14\u8bb07-\u81ea\u5b9a\u4e49Component(Editor)"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb07-\u81ea\u5b9a\u4e49Component(Editor)/#component","text":"","title":"\u81ea\u5b9a\u4e49Component"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb07-\u81ea\u5b9a\u4e49Component(Editor)/#unityinspectoreditor","text":"","title":"\u5236\u4f5c\u4e00\u4e2aUnity\u7684Inspector\u754c\u9762\u4e2d\u7684Editor \u64cd\u4f5c\u7ec4\u4ef6"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb07-\u81ea\u5b9a\u4e49Component(Editor)/#_1","text":"\u65b0\u5efa\u4e00\u4e2aInspector\u7c7b, \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2aInspector\u7c7b\u7684\u7b80\u5355\u6837\u4f8b [CustomEditor(typeof(XX))] public class xxEditor : Editor { public override void OnInspectorGUI () { var target = ( XX )( serializedObject . targetObject ); target . speed = EditorGUILayout . Slider ( \"Speed\" , target . speed , 0 , 100 ); ProgressBar ( target . speed , \"Speed\" ); target . color = EditorGUILayout . ColorField ( \"Color\" , target . color ); } private void ProgressBar ( float value , string label ) { Rect rect = GUILayoutUtility . GetRect ( 20 , 20 , \"TextField\" ); EditorGUI . ProgressBar ( rect , value , label ); EditorGUILayout . Space (); } } \u7136\u540e\uff0c\u6211\u4eec\u53ea\u8981\u628aXX ADD\u5230\u4e00\u4e2aGameObject\u4e0a\uff0cInspector\u4e2d\u5c31\u4f1a\u51fa\u73b0\u6211\u4eec\u521a\u521a\u5199\u7684Editor\u4e86\u3002","title":"\u5236\u4f5c\u8fc7\u7a0b"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f/","text":"Homework5-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f \u8fd9\u5468\u7684\u4efb\u52a1\u4e3b\u8981\u5c31\u662f\u901a\u8fc7\u7ed9\u6253\u98de\u789f\u6e38\u620f\u52a0\u4e0aadapter\u6a21\u5f0f\u8ba9\u6211\u4eec\u719f\u6089adapter\u6a21\u5f0f\uff0c\u4f53\u4f1a\u5230Apapter\u6a21\u5f0f\u7ed9\u6211\u4eec\u7f16\u7a0b\u5e26\u6765\u7684\u4f5c\u7528\uff0c\u63d0\u5347\u6211\u4eec\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u6280\u5de7\u3002 \u6f14\u793a\u89c6\u9891 \u89c6\u9891\u6f14\u793a\u7f51\u7ad9: Hit UFO! \u672c\u5468\u7684\u6e38\u620f\u6548\u679c\u548c\u4e0a\u5468\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u591a\u4e86\u4e00\u4e2a\u53f3\u952e\u70b9\u51fb\u9f20\u6807\u5207\u6362\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u529f\u80fd\u3002 \u5b8c\u6210\u7684\u7c7b \u5176\u5b9e\u5728\u4e0a\u4e00\u5468\u5df2\u5b8c\u6210\u4f5c\u4e1a\u7684\u57fa\u7840\u4e0a\uff0c\u8fd9\u4e00\u5468\u5e76\u4e0d\u7528\u52a0\u4ec0\u4e48\u7279\u522b\u7684\u4e1c\u897f\u3002\u53ea\u9700\u8981\u5199\u51fa\u4e00\u4e2a\u57fa\u672c\u7684ActionManagerTarget\u7684\u63a5\u53e3(\u7c7b\u4f3c\u4e0a\u56fe\u4e2d\u7684IActionManager), \u7136\u540e\u5b9e\u73b0\u4e00\u4e2a\u4f9b\u573a\u666f\u63a7\u5236\u5668\u8c03\u7528\u7684ActionManagerAdapter,\u7136\u540e\u5b9e\u73b0\u6211\u4eec\u8fd9\u6b21\u9700\u8981\u5b9e\u73b0\u7684PhysicsActionManager, \u628a\u539f\u6765\u8c03\u7528FirstSceneActionController\u7684\u5730\u65b9\u6362\u6210\u8c03\u7528\u6211\u4eec\u65b0\u5b9e\u73b0\u7684ActionManagerAdapter\uff0c\u90a3\u4e48\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u5b8c\u6210\u4e86\u3002\u4e0b\u9762\u6211\u4eec\u5206\u7c7b\u6765\u8bf4\u8bf4 ActionManagerTarget \u8fd9\u4e2a\u63a5\u53e3\u91cc\u58f0\u660e\u7684\u5c31\u662f\u6211\u4eec\u52a8\u4f5c\u7ba1\u7406\u5668\u6240\u9700\u7684\u57fa\u672c\u51fd\u6570\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5207\u6362\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u529f\u80fd\u3002\u901a\u8fc7\u4f7f\u7528\u8fd9\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u591a\u4e2a\u52a8\u4f5c\u7ba1\u7406\u5668\u4e4b\u95f4\u65e0\u7f1d\u5207\u6362. public interface ActionManagerTarget { int getMode (); void switchActionManager (); void addAction ( GameObject ufo , float speed ); void removeActionOf ( GameObject ufo ); } ActionManagerAdapter \u8fd9\u91cc\u5c31\u662f\u5bf9\u4e8e\u6211\u4eec\u58f0\u660e\u7684\u4e00\u4e2a\u63a5\u53e3\u7684\u5b9e\u73b0\uff0c\u901a\u8fc7\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u4ee5\u4f9b\u573a\u666f\u63a7\u5236\u5668\u8c03\u7528\uff0c\u6211\u4eec\u7ed9\u6e38\u620f\u52a0\u4e0a\u7684Adapter\u6a21\u5f0f\u7684\u5de5\u4f5c\u5c31\u5b8c\u6210\u4e00\u5927\u534a\u4e86\uff0c\u5269\u4e0b\u7684\u57fa\u672c\u5c31\u662f\u5b8c\u6210PhysicsActionManager\u4e86\u3002 public class ActionManagerAdapter : ActionManagerTarget { FirstSceneActionManager firstSceneActionManager ; PhysicsActionManager physicsActionManager ; int mode = 0 ; // 0: firstSceneActionManager, 1: physicsActionManager public int getMode () { return mode ; } public void switchActionManager () { mode = 1 - mode ; } public ActionManagerAdapter ( GameObject main ) { firstSceneActionManager = main . AddComponent < FirstSceneActionManager > (); physicsActionManager = main . AddComponent < PhysicsActionManager > (); mode = 0 ; } public void addAction ( GameObject ufo , float speed ) { if ( mode == 0 ) { firstSceneActionManager . addActionToUFO ( ufo , speed ); } else { physicsActionManager . addForceToObj ( ufo , speed ); } } public void removeActionOf ( GameObject ufo ) { if ( mode == 0 ) { firstSceneActionManager . removeActionByObj ( ufo ); } else { physicsActionManager . removeForceOfObj ( ufo ); } } } PhysicsActionManage \u5728\u8fd9\u91cc\u56e0\u4e3a\u7ed9\u6211\u4eec\u7684ufo\u52a0\u4e0a\u4e86\u521a\u4f53\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u52a0\u4e0a\u529b\u3001\u521d\u901f\u5ea6\uff0c\u53bb\u6389\u529b\u7684\u65b9\u5f0f\uff0c\u7ed9\u52a8\u4f5c\u52a0\u4e0a\u5bf9\u5e94\u7684\u52a8\u4f5c\uff0c\u8bbe\u901f\u5ea6\u4e3a0\u7684\u64cd\u4f5c\u5b9e\u73b0\u52a8\u4f5c\u7684\u7ba1\u7406\u3002 public class PhysicsActionManager : MonoBehaviour { public void addForceToObj ( GameObject ufo , float speed ) { int position = ( Random . Range ( 1 , 3 ) < 2 ) ? - 1 : 1 ; ufo . transform . position = new Vector3 (- 10 * position , Random . Range ( 4 , 6 ), 5 ); Vector3 speedVector = new Vector3 ( Random . Range (( int ) speed , ( int )( 1.5 * speed )) * position , Random . Range (( int ) speed , ( int )( 1.2 * speed )), 0 ); ufo . GetComponent < Rigidbody > (). useGravity = true ; ufo . GetComponent < Rigidbody > (). velocity = speedVector ; } public void removeForceOfObj ( GameObject ufo ) { ufo . GetComponent < Rigidbody > (). useGravity = false ; ufo . GetComponent < Rigidbody > (). velocity = Vector3 . zero ; } } \u5b9e\u73b0\u4e86\u8fd9\u4e9b\u7c7b\u4e4b\u540e\uff0c\u52a0\u4e0a\u5176\u4ed6\u4ee3\u7801\u7684\u4e00\u4e9b\u5fae\u5c0f\u7684\u4fee\u6574\uff0c\u5373\u4e00\u4e9b\u5730\u65b9\u5bf9\u4e8e\u5207\u6362\u573a\u666f\u63a7\u5236\u5668\u529f\u80fd\u7684\u8c03\u7528\u7684\u8bbe\u7f6e(\u6e38\u620f\u573a\u666f\u5185\u53f3\u952e\u70b9\u51fb)\u4ee5\u53ca\u4e00\u4e9b\u52a0\u5165\u4e86\u65b0\u7684PhysicsActionManager\u540e\u51fa\u4e86\u4e00\u4e9b\u5c0fBug\u7684\u4fee\u590d\u548c\u52a0\u4e86\u4e00\u4e9b\u6e38\u620f\u7684\u5f69\u86cb(\u98de\u789f\u76f8\u649e\u4f1a\ud83d\udca5\uff0c\u4f60\u6253\u5f97\u4e0d\u5feb\u7684\u8bdd\u6709\u65f6\u5c31\u6253\u4e0d\u5230\u4e86\uff0c\u54c8\u54c8)\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u8fd9\u5468\u7684\u4f5c\u4e1a\u4e86\uff0c\u8fd9\u5468\u7684\u8fd9\u4e2a\u4f5c\u4e1a\u76f8\u5bf9\u524d\u51e0\u5468\u5176\u5b9e\u4efb\u52a1\u91cf\u5e76\u4e0d\u5927\uff0c\u6240\u4ee5\uff0c\u7ee7\u7eed\u809d\u5c04\u7bad\u5c0f\u6e38\u620f\u53bb\u5566\ud83c\udf1a!","title":"\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f/#homework5-adapter","text":"\u8fd9\u5468\u7684\u4efb\u52a1\u4e3b\u8981\u5c31\u662f\u901a\u8fc7\u7ed9\u6253\u98de\u789f\u6e38\u620f\u52a0\u4e0aadapter\u6a21\u5f0f\u8ba9\u6211\u4eec\u719f\u6089adapter\u6a21\u5f0f\uff0c\u4f53\u4f1a\u5230Apapter\u6a21\u5f0f\u7ed9\u6211\u4eec\u7f16\u7a0b\u5e26\u6765\u7684\u4f5c\u7528\uff0c\u63d0\u5347\u6211\u4eec\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u6280\u5de7\u3002","title":"Homework5-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f/#_1","text":"\u89c6\u9891\u6f14\u793a\u7f51\u7ad9: Hit UFO! \u672c\u5468\u7684\u6e38\u620f\u6548\u679c\u548c\u4e0a\u5468\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u591a\u4e86\u4e00\u4e2a\u53f3\u952e\u70b9\u51fb\u9f20\u6807\u5207\u6362\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u529f\u80fd\u3002","title":"\u6f14\u793a\u89c6\u9891"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f/#_2","text":"\u5176\u5b9e\u5728\u4e0a\u4e00\u5468\u5df2\u5b8c\u6210\u4f5c\u4e1a\u7684\u57fa\u7840\u4e0a\uff0c\u8fd9\u4e00\u5468\u5e76\u4e0d\u7528\u52a0\u4ec0\u4e48\u7279\u522b\u7684\u4e1c\u897f\u3002\u53ea\u9700\u8981\u5199\u51fa\u4e00\u4e2a\u57fa\u672c\u7684ActionManagerTarget\u7684\u63a5\u53e3(\u7c7b\u4f3c\u4e0a\u56fe\u4e2d\u7684IActionManager), \u7136\u540e\u5b9e\u73b0\u4e00\u4e2a\u4f9b\u573a\u666f\u63a7\u5236\u5668\u8c03\u7528\u7684ActionManagerAdapter,\u7136\u540e\u5b9e\u73b0\u6211\u4eec\u8fd9\u6b21\u9700\u8981\u5b9e\u73b0\u7684PhysicsActionManager, \u628a\u539f\u6765\u8c03\u7528FirstSceneActionController\u7684\u5730\u65b9\u6362\u6210\u8c03\u7528\u6211\u4eec\u65b0\u5b9e\u73b0\u7684ActionManagerAdapter\uff0c\u90a3\u4e48\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u5b8c\u6210\u4e86\u3002\u4e0b\u9762\u6211\u4eec\u5206\u7c7b\u6765\u8bf4\u8bf4","title":"\u5b8c\u6210\u7684\u7c7b"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f/#actionmanagertarget","text":"\u8fd9\u4e2a\u63a5\u53e3\u91cc\u58f0\u660e\u7684\u5c31\u662f\u6211\u4eec\u52a8\u4f5c\u7ba1\u7406\u5668\u6240\u9700\u7684\u57fa\u672c\u51fd\u6570\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5207\u6362\u52a8\u4f5c\u7ba1\u7406\u5668\u7684\u529f\u80fd\u3002\u901a\u8fc7\u4f7f\u7528\u8fd9\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u591a\u4e2a\u52a8\u4f5c\u7ba1\u7406\u5668\u4e4b\u95f4\u65e0\u7f1d\u5207\u6362. public interface ActionManagerTarget { int getMode (); void switchActionManager (); void addAction ( GameObject ufo , float speed ); void removeActionOf ( GameObject ufo ); }","title":"ActionManagerTarget"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f/#actionmanageradapter","text":"\u8fd9\u91cc\u5c31\u662f\u5bf9\u4e8e\u6211\u4eec\u58f0\u660e\u7684\u4e00\u4e2a\u63a5\u53e3\u7684\u5b9e\u73b0\uff0c\u901a\u8fc7\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u4ee5\u4f9b\u573a\u666f\u63a7\u5236\u5668\u8c03\u7528\uff0c\u6211\u4eec\u7ed9\u6e38\u620f\u52a0\u4e0a\u7684Adapter\u6a21\u5f0f\u7684\u5de5\u4f5c\u5c31\u5b8c\u6210\u4e00\u5927\u534a\u4e86\uff0c\u5269\u4e0b\u7684\u57fa\u672c\u5c31\u662f\u5b8c\u6210PhysicsActionManager\u4e86\u3002 public class ActionManagerAdapter : ActionManagerTarget { FirstSceneActionManager firstSceneActionManager ; PhysicsActionManager physicsActionManager ; int mode = 0 ; // 0: firstSceneActionManager, 1: physicsActionManager public int getMode () { return mode ; } public void switchActionManager () { mode = 1 - mode ; } public ActionManagerAdapter ( GameObject main ) { firstSceneActionManager = main . AddComponent < FirstSceneActionManager > (); physicsActionManager = main . AddComponent < PhysicsActionManager > (); mode = 0 ; } public void addAction ( GameObject ufo , float speed ) { if ( mode == 0 ) { firstSceneActionManager . addActionToUFO ( ufo , speed ); } else { physicsActionManager . addForceToObj ( ufo , speed ); } } public void removeActionOf ( GameObject ufo ) { if ( mode == 0 ) { firstSceneActionManager . removeActionByObj ( ufo ); } else { physicsActionManager . removeForceOfObj ( ufo ); } } }","title":"ActionManagerAdapter"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb08-adapter\u6a21\u5f0f\u7684\u6253\u98de\u789f\u6e38\u620f/#physicsactionmanage","text":"\u5728\u8fd9\u91cc\u56e0\u4e3a\u7ed9\u6211\u4eec\u7684ufo\u52a0\u4e0a\u4e86\u521a\u4f53\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u52a0\u4e0a\u529b\u3001\u521d\u901f\u5ea6\uff0c\u53bb\u6389\u529b\u7684\u65b9\u5f0f\uff0c\u7ed9\u52a8\u4f5c\u52a0\u4e0a\u5bf9\u5e94\u7684\u52a8\u4f5c\uff0c\u8bbe\u901f\u5ea6\u4e3a0\u7684\u64cd\u4f5c\u5b9e\u73b0\u52a8\u4f5c\u7684\u7ba1\u7406\u3002 public class PhysicsActionManager : MonoBehaviour { public void addForceToObj ( GameObject ufo , float speed ) { int position = ( Random . Range ( 1 , 3 ) < 2 ) ? - 1 : 1 ; ufo . transform . position = new Vector3 (- 10 * position , Random . Range ( 4 , 6 ), 5 ); Vector3 speedVector = new Vector3 ( Random . Range (( int ) speed , ( int )( 1.5 * speed )) * position , Random . Range (( int ) speed , ( int )( 1.2 * speed )), 0 ); ufo . GetComponent < Rigidbody > (). useGravity = true ; ufo . GetComponent < Rigidbody > (). velocity = speedVector ; } public void removeForceOfObj ( GameObject ufo ) { ufo . GetComponent < Rigidbody > (). useGravity = false ; ufo . GetComponent < Rigidbody > (). velocity = Vector3 . zero ; } } \u5b9e\u73b0\u4e86\u8fd9\u4e9b\u7c7b\u4e4b\u540e\uff0c\u52a0\u4e0a\u5176\u4ed6\u4ee3\u7801\u7684\u4e00\u4e9b\u5fae\u5c0f\u7684\u4fee\u6574\uff0c\u5373\u4e00\u4e9b\u5730\u65b9\u5bf9\u4e8e\u5207\u6362\u573a\u666f\u63a7\u5236\u5668\u529f\u80fd\u7684\u8c03\u7528\u7684\u8bbe\u7f6e(\u6e38\u620f\u573a\u666f\u5185\u53f3\u952e\u70b9\u51fb)\u4ee5\u53ca\u4e00\u4e9b\u52a0\u5165\u4e86\u65b0\u7684PhysicsActionManager\u540e\u51fa\u4e86\u4e00\u4e9b\u5c0fBug\u7684\u4fee\u590d\u548c\u52a0\u4e86\u4e00\u4e9b\u6e38\u620f\u7684\u5f69\u86cb(\u98de\u789f\u76f8\u649e\u4f1a\ud83d\udca5\uff0c\u4f60\u6253\u5f97\u4e0d\u5feb\u7684\u8bdd\u6709\u65f6\u5c31\u6253\u4e0d\u5230\u4e86\uff0c\u54c8\u54c8)\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u8fd9\u5468\u7684\u4f5c\u4e1a\u4e86\uff0c\u8fd9\u5468\u7684\u8fd9\u4e2a\u4f5c\u4e1a\u76f8\u5bf9\u524d\u51e0\u5468\u5176\u5b9e\u4efb\u52a1\u91cf\u5e76\u4e0d\u5927\uff0c\u6240\u4ee5\uff0c\u7ee7\u7eed\u809d\u5c04\u7bad\u5c0f\u6e38\u620f\u53bb\u5566\ud83c\udf1a!","title":"PhysicsActionManage"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/","text":"Homework5-\u5c04\u7bad\u5c0f\u6e38\u620f \u6e38\u620f\u8981\u6c42 \u9776\u5bf9\u8c61\u4e3a 5 \u73af\uff0c\u6309\u73af\u8ba1\u5206\uff1b \u7bad\u5bf9\u8c61\uff0c\u5c04\u4e2d\u540e\u8981\u63d2\u5728\u9776\u4e0a \u589e\u5f3a\u8981\u6c42\uff1a\u5c04\u4e2d\u540e\uff0c\u7bad\u5bf9\u8c61\u4ea7\u751f\u98a4\u6296\u6548\u679c\uff0c\u5230\u4e0b\u4e00\u6b21\u5c04\u51fb \u6216 1\u79d2\u4ee5\u540e\uff08\u672a\u5b9e\u73b0\uff09 \u6e38\u620f\u4ec5\u4e00\u8f6e\uff0c\u65e0\u9650 trials\uff1b \u589e\u5f3a\u8981\u6c42\uff1a\u6dfb\u52a0\u4e00\u4e2a\u98ce\u5411\u548c\u5f3a\u5ea6\u6807\u5fd7\uff0c\u63d0\u9ad8\u96be\u5ea6 \u5b9e\u73b0\u6548\u679c \u89c6\u9891\u6f14\u793a\u7f51\u7ad9\u4e3a ArrowGame \u4e0b\u9762\u662f\u6e38\u620f\u7684\u622a\u56fe UML\u56fe \u6e38\u620f\u5b9e\u73b0 \u505a\u4e86\u8fd9\u51e0\u6b21\u7684\u4f5c\u4e1a\u4ee5\u540e\uff0c\u6211\u53d1\u73b0\u57fa\u672c\u67b6\u6784\u7684\u4ee3\u7801\u90fd\u51e0\u4e4e\u53ef\u4ee5\u590d\u7528\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u628a\u4e00\u4e9b\u57fa\u672c\u7684\u6bcf\u6b21\u7528\u5230\u7684\u4ee3\u7801\u5f04\u4e86\u4e00\u4e2aBasicCode\u6587\u4ef6\u5939\uff0cActionManager\u4e5f\u6446\u653e\u5728\u5185\uff0c\u7f16\u5199\u6e38\u620f\u7684\u65f6\u5019\uff0c\u5728\u5176\u57fa\u7840\u4e0a\u589e\u52a0\u5c31\u597d\u4e86\u3002 \u6839\u636e\u6211\u4eec\u753b\u51fa\u7684UML\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8fd9\u6b21\u9700\u8981\u5b8c\u6210\u7684\u7c7b\u4e0d\u7b97\u591a, \u57fa\u7840\u7684\u4ee3\u7801\u90fd\u6709\uff0c\u4e0d\u4e0d\u4e0d\u8fc7\u8fd9\u6b21\u4f5c\u4e1a\u4e2d\u7684PhysicsActionManager\uff0c\u6211\u7ecf\u8fc7\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u7684\u7f16\u8f91\uff0c\u7ecf\u8fc7\u601d\u8003\uff0c\u89c9\u5f97\u5176\u5e94\u8be5\u7ee7\u627f\u6211\u4eec\u7684SSActionManager\uff0c\u8fd9\u6837\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u6211\u4eec\u51cf\u5c11\u4e86\u4e00\u4e2a\u63a5\u53e3\u7c7b\u7684\u4e66\u5199\uff0c\u8fd8\u628a\u5176\u6574\u5408\u5230\u6574\u4e2aActionManager\u7684\u7cfb\u7edf\u4e2d\uff0c\u62e5\u6709ActionCallback\u7b49\u7684\u529f\u80fd\uff0c\u52a8\u4f5c\u7684\u5b8c\u6210\u7684\u5224\u65ad\u53ef\u4ee5\u76f4\u63a5\u5728\u81ea\u8eab\u7684Update\u91cc\u5b8c\u6210\uff0c\u6bd4\u8d77\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u4f18\u5316\u4e86\u633a\u591a\u3002 \u73b0\u5728\u6211\u4eec\u5206\u7c7b\u8bf4\u8bf4 ArrowFlyAction \u8fd9\u6b21\u4f5c\u4e1a\u6700\u57fa\u672c\u7684\u80af\u5b9a\u5c31\u662f\u6211\u4eec\u7bad\u7684\u52a8\u4f5c\u4e86\uff0c\u8fd9\u91cc\u6211\u4e0d\u4ec5\u5305\u542b\u4e86\u5c04\u7bad\u51fa\u53bb\u7684\u52a8\u4f5c\uff0c\u8fd8\u5305\u542b\u4e86\u98ce\u5411\u5bf9\u4e8e\u7bad\u4ea7\u751f\u7684\u52a8\u4f5c\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u6211\u4f1a\u628a\u98ce\u529b\u5bf9\u7bad\u7684\u5f71\u54cd\u5b9e\u4f53\u5316\u6210\u52a8\u4f5c\u5728\u6e38\u620f\u4e2d\u5462\uff0c\u56e0\u4e3a\u901a\u8fc7\u4f7f\u7528ActionManager\u53bb\u7ba1\u7406\u98ce\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u573a\u666f\u63a7\u5236\u5668\u4e2d\u51cf\u5c11\u76f8\u5e94\u7684\u4ee3\u7801\u3002 ArrowFlyAction\u5b9e\u73b0\u5982\u4e0b public class ArrowFlyAction : SSAction { public int type ; // 0: windAction, 1: shootAction public Vector3 speed ; bool firstTime = false ; private ArrowFlyAction () {} public static ArrowFlyAction GetSSAction ( int type , Vector3 speed ) { ArrowFlyAction arrowFlyAction = ScriptableObject . CreateInstance < ArrowFlyAction > (); arrowFlyAction . speed = speed ; arrowFlyAction . firstTime = true ; arrowFlyAction . type = type ; return arrowFlyAction ; } public override void Start () {} public override void Update () { if ( firstTime ) { if ( type == 0 ) { // wind this . gameObject . GetComponent < Rigidbody > (). AddForce ( speed , ForceMode . Force ); } else { // shoot this . gameObject . GetComponent < Rigidbody > (). AddForce ( speed , ForceMode . VelocityChange ); } firstTime = false ; } if ( this . gameObject . transform . position . z > 50 ) { this . destroy = true ; this . callback . actionDone ( this ); } if ( this . gameObject . GetComponent < ArrowControl > (). arrowController . available == false ) { this . destroy = true ; } } } PhysicsActionManager \u548c\u6211\u4e00\u5f00\u59cb\u8bf4\u7684\u4e00\u6837\uff0c\u6211\u7684PhysicsActionManager\u7ee7\u627f\u4e86SSActionManager\u7c7b,\u5e76\u5b9e\u73b0\u4e86ActionCallback\u63a5\u53e3\u4ee5\u5b8c\u6210\u4e8b\u4ef6\u7ed3\u675f\u7684\u5904\u7406\u3002\u8be5\u7c7b\u5b9e\u73b0\u633a\u7b80\u5355\uff0c\u8fd9\u91cc\u4e0d\u591aBB public class PhysicsActionManager : SSActionManager , ActionCallback { public FirstController firstController ; public void Start () { firstController = ( FirstController ) GameDirector . getInstance (). currentSceneController ; firstController . physicsActionManager = this ; } public void Update () { base . Update (); } public void actionDone ( SSAction source ) { if ((( ArrowFlyAction ) source ). type == 1 ) { firstController . arrowFactory . recycle ((( ArrowFlyAction ) source ). gameObject . GetComponent < ArrowControl > (). arrowController ); firstController . shootFinish = true ; } } } \u5230\u8fd9\u91cc\uff0c\u57fa\u7840\u7684\u90e8\u5206\u5c31\u5dee\u4e0d\u591a\u4e86\uff0c\u8fd8\u5269\u4e0b\u8d1f\u8d23\u5177\u4f53\u529f\u80fd\u7684\u5404\u4e2a\u7c7b\u4e0e\u6211\u4eec\u7684\u573a\u666f\u63a7\u5236\u5668\u3002 CheckCrack \u6211\u4eec\u5148\u6765\u770b\u770b\u6211\u7528\u4e8e\u68c0\u67e5\u7269\u4f53\u78b0\u649e\u4ee5\u63d0\u4f9b\u7ed9\u8ba1\u5206\u5668\uff0c\u5e76\u4e14\u4f7f\u5f97\u7bad\u4f53\u78b0\u5230\u9776\u5b50\u540e\u63d2\u5728\u9776\u4e0a(\u505c\u4f4f)\u7684\u7c7b \u8fd9\u91cc\u4e3b\u8981\u7528\u5230\u4e86OnTriggerEnter\u6765\u786e\u5b9a\u7bad\u4f53\u78b0\u5230\u9776\u5b50\u8fd9\u4e00\u4e8b\u4ef6\uff0c\u53ea\u8981\u6211\u4eec\u7684CheckCrack Add\u5230\u5404\u4e2a\u5206\u6570\u5bf9\u5e94\u7684GameObject\u4e2d\uff0c\u6211\u4eec\u7684\u9776\u5b50\u5c31\u80fd\u83b7\u53d6\u7bad\u5c04\u5230\u7684\u4f4d\u7f6e\uff0c\u4ea4\u7ed9\u8ba1\u5206\u5458\u8ba1\u5206\u3002 \u5728\u8fd9\u91cc\uff0c\u53ef\u80fd\u56e0\u4e3a\u6211\u9776\u5b50\u5b9e\u73b0\u7684\u4e0d\u592a\u597d\uff0c\u6211\u7684\u7bad\u5728\u5c04\u4e2d\u9776\u5b50\u540e\uff0c\u63d2\u5165\u9776\u5b50\u91cc\u9762\uff0c\u4ece\u800c\u4e5f\u4f1a\u89e6\u53d1\u540e\u9762\u9776\u5b50\u7684\u89e6\u53d1\u5668\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u7684ArrowController\u91cc\u52a0\u5165\u4e86\u4e00\u4e2aavailable\uff0c\u8fd9\u6837\u4fdd\u8bc1\u7bad\u4e00\u65e6\u63d2\u5165\u5c31\u4e0d\u518d\u5904\u7406\u5bf9\u5e94\u7684\u89e6\u53d1\u4e8b\u4ef6\u3002 public class CheckCrack : MonoBehaviour { public FirstController firstController ; public ScoreRecorder scoreRecorder ; void Start () { firstController = ( FirstController ) GameDirector . getInstance (). currentSceneController ; scoreRecorder = ScoreRecorder . getInstance (); } void OnTriggerEnter ( Collider arrow ) { if ( arrow . gameObject . GetComponent < ArrowControl > (). arrowController . available == true ) { arrow . gameObject . GetComponent < Rigidbody > (). velocity = Vector3 . zero ; arrow . gameObject . GetComponent < Rigidbody > (). isKinematic = true ; arrow . gameObject . GetComponent < ArrowControl > (). arrowController . available = false ; arrow . gameObject . transform . GetComponent < Collider > (). enabled = false ; firstController . shootFinish = true ; firstController . showCamera . showCamera (); scoreRecorder . record ( gameObject ); } } } ScoreRecorder \u8ba1\u5206\u5458\u7684\u5b9e\u73b0\u548c\u4e0a\u6b21\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u8fd9\u4e00\u6b21\u662f\u6839\u636eGameObbject\u7684\u540d\u5b57\u6765\u52a0\u5206 public class ScoreRecorder { public int score = 0 ; Text gameInfo ; private static ScoreRecorder instance ; public static ScoreRecorder getInstance () { if ( instance == null ) { instance = new ScoreRecorder (); } return instance ; } private ScoreRecorder () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/ScoreInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text > (); gameInfo . text = \"\" + score ; } public void record ( GameObject hitObj ) { switch ( hitObj . name ) { case \"1\" : score += 1 ; break ; case \"2\" : score += 2 ; break ; case \"3\" : score += 3 ; break ; case \"4\" : score += 4 ; break ; case \"5\" : score += 5 ; break ; } gameInfo . text = \"\" + score ; } public int getScore () { return score ; } public void reset () { score = 0 ; gameInfo . text = \"\" + score ; } } showSubCamera \u8fd9\u91cc\u6211\u52a0\u4e86\u4e2a\u5b50\u6444\u50cf\u5934\u7684\u529f\u80fd\uff0c\u82e5\u73a9\u5bb6\u5c04\u4e2d\u9776\u5b50\uff0c\u6211\u4f1a\u6fc0\u6d3b\u8be5\u6444\u50cf\u5934\uff0c\u4f7f\u73a9\u5bb6\u6e05\u6670\u770b\u5230\u7bad\u5c04\u4e2d\u7684\u4f4d\u7f6e public class showSubCamera : MonoBehaviour { private float time = 0 ; private bool show = false ; GameObject cameraObj ; // Use this for initialization void Start () { show = false ; cameraObj = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/SubCamera\" )) as GameObject ); cameraObj . SetActive ( false ); } public void showCamera () { cameraObj . SetActive ( true ); show = true ; time = 1 ; } // Update is called once per frame void Update () { if ( show ) { time -= Time . deltaTime ; if ( time <= 0 ) { show = false ; cameraObj . SetActive ( false ); } } } } WindMake \u6e38\u620f\u4e2d\u6211\u76f4\u63a5\u5b9e\u73b0\u4e86\u4e00\u4e2aWindMake\u7c7b\u6765\u7ba1\u7406\u98ce\u7684\u751f\u6210\uff0c\u6bcf240\u5e27\u6570\u66f4\u6362\u4e00\u4e2a\u98ce\u5411\uff0c\u5e76\u4e14\u628a\u5176\u5b9e\u65f6\u7684\u98ce\u5411\u663e\u793a\u5230\u6e38\u620f\u753b\u9762\u7684\u5de6\u4e0a\u89d2 public class WindMake : MonoBehaviour { public Vector3 Wind ; Text gameInfo ; int fpsCount = 0 ; void Awake () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/WindInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text > (); makeWind (); fpsCount = 0 ; } void Update () { fpsCount ++; if ( fpsCount == 240 ) { Wind = makeWind (); fpsCount = 0 ; } // 240\u5e27\u6362\u4e00\u4e2a\u98ce\u5411 } public Vector3 makeWind () { float y = Random . Range (- 100 , 100 ); float z = Random . Range (- 30 , 0 ); float x = Random . Range (- 50 , 50 ); gameInfo . text = \"(\" + x + \",\" + y + \",\" + z + \")\" ; return new Vector3 ( x , y , z ); } public Vector3 getWind () { return Wind ; } } \u8bf4\u5230\u8fd9\u91cc\uff0c\u7a81\u7136\u770b\u5230\u8fd8\u6709\u6211\u4eec\u7684ArrowFactory\u6ca1\u6709\u8bb2\ud83c\udf1a ArrowFactory \u5b9e\u73b0\u548c\u57fa\u672c\u7684Factory\u7c7b\u4f3c\uff0c\u6ca1\u6709\u4ec0\u4e48\u53ef\u8bb2\u7684, \u5c31\u662f\u52a0\u4e0a\u4e86\u5bf9\u4e8e\u521a\u4f53\u7684\u521d\u59cb\u5316\u7b49\u7684\u4e00\u4e9b\u5185\u5bb9 public class ArrowFactory : MonoBehaviour { Queue < ArrowController > waitingQueue ; List < ArrowController > runningList ; private FirstController firstController ; GameObject basic ; private void Awake () { waitingQueue = new Queue < ArrowController > (); runningList = new List < ArrowController > (); basic = Instantiate ( Resources . Load ( \"Prefabs/Arrow\" , typeof ( GameObject )) as GameObject ); basic . SetActive ( false ); } public ArrowController getArrow () { ArrowController arrow ; if ( waitingQueue . Count == 0 ) { GameObject newArrow = GameObject . Instantiate ( basic ); arrow = new ArrowController ( newArrow ); } else { arrow = waitingQueue . Dequeue (); } arrow . getObject (). transform . parent = (( FirstController ) GameDirector . getInstance (). currentSceneController ). Bow . transform ; arrow . getObject (). GetComponent < Rigidbody > (). velocity = Vector3 . zero ; arrow . getObject (). transform . localPosition = new Vector3 ( 0 , 2 , 1 ); arrow . getObject (). GetComponent < Rigidbody > (). isKinematic = true ; arrow . getObject (). transform . GetComponent < Collider > (). enabled = true ; arrow . appear (); runningList . Add ( arrow ); return arrow ; } public void recycle ( ArrowController arrow ) { arrow . disappear (); arrow . getObject (). transform . position = new Vector3 ( 0 , 0 , - 8 ); arrow . getObject (). transform . GetComponent < Collider > (). enabled = false ; runningList . Remove ( arrow ); waitingQueue . Enqueue ( arrow ); } public void recycleAll () { while ( runningList . Count != 0 ) { recycle ( runningList [ 0 ]); } } } ArrowController \u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbfArrow\u7684\u5b9e\u73b0\uff0c\u6211\u5728\u8fd9\u6b21\u4f5c\u4e1a\u4e2d\u4e5f\u4e00\u6837\u5b9e\u73b0\u4e86ArrowController\u7c7b\uff0c\u52a0\u5165\u4e86\u7bad\u4f53\u7684\u57fa\u672c\u72b6\u6001\u7684\u4fe1\u606f\uff0c\u5e76\u65b9\u4fbf\u4e86\u4e4b\u540e\u7684\u62d3\u5c55\u3002 public class ArrowController { GameObject arrow ; ArrowControl arrowControl ; public bool available = false ; public ArrowController ( GameObject gameObject ) { this . arrow = gameObject ; arrowControl = gameObject . AddComponent < ArrowControl > (); arrowControl . arrowController = this ; } public void appear () { available = true ; arrow . SetActive ( true ); } public void disappear () { arrow . SetActive ( false ); } public GameObject getObject () { return arrow ; } } ArrowControl\u7c7b \u8fd9\u4e2a\u7c7b\u4e3b\u8981\u662f\u7528\u4e8eGameObject\u83b7\u53d6\u5176\u5bf9\u5e94\u7684Controller public class ArrowControl : MonoBehaviour { public ArrowController arrowController ; } FirstController\u7c7b \u5199\u5b8c\u5404\u4e2a\u529f\u80fd\u7684\u7c7b\u540e\uff0c\u5c31\u5269\u4e0b\u6211\u4eec\u7684\u6e38\u620f\u573a\u666f\u63a7\u5236\u5668\u4e86,\u8fd9\u91cc\u57fa\u672c\u5c31\u662f\u5404\u4e2a\u7c7b\u7684\u6574\u5408\u4ee5\u53ca\u7528\u6237\u4ea4\u4e92\u7684\u5b9e\u73b0\uff0c\u5b9e\u73b0\u4e0d\u96be\u3002 public class FirstController : MonoBehaviour , ISceneController { public PhysicsActionManager physicsActionManager ; public GameDirector gameDirector ; public GameObject Bow ; public ArrowController arrow ; public ScoreRecorder scoreRecorder ; public ArrowFactory arrowFactory ; public WindMake windMake ; public showSubCamera showCamera ; GUIStyle gameInfoStyle ; public bool shootFinish = true ; // whether arrow hit success void Awake () { arrowFactory = gameObject . AddComponent < ArrowFactory > (); windMake = gameObject . AddComponent < WindMake > (); physicsActionManager = gameObject . AddComponent < PhysicsActionManager > (); scoreRecorder = ScoreRecorder . getInstance (); showCamera = gameObject . AddComponent < showSubCamera > (); gameDirector = GameDirector . getInstance (); gameDirector . currentSceneController = this ; } // Use this for initialization void Start () { loadResources (); Cursor . lockState = CursorLockMode . Locked ; Cursor . visible = false ; gameInfoStyle = new GUIStyle (); gameInfoStyle . fontSize = 25 ; } void OnGUI () { GUI . Label ( new Rect ( 20 , 80 , 200 , 50 ), \"Press space to restart!\" , gameInfoStyle ); } // Update is called once per frame void Update () { float offsetX = Input . GetAxis ( \"Mouse X\" ); float offsetY = Input . GetAxis ( \"Mouse Y\" ); moveBow ( offsetX , offsetY ); if ( Input . GetKeyDown ( \"escape\" )) { Cursor . visible = true ; Cursor . lockState = CursorLockMode . None ; } if ( Input . GetButton ( \"Fire1\" )) { Cursor . lockState = CursorLockMode . Locked ; Cursor . visible = false ; shootArrow (); } if ( Input . GetKeyDown ( \"space\" )) { reset (); } if ( shootFinish && arrow == null ) { arrow = arrowFactory . getArrow (); } } public void moveBow ( float offsetX , float offsetY ) { float posy = Mathf . Clamp ( Bow . transform . position . y + offsetY , 1 , 30 ); Bow . transform . position = new Vector3 ( Bow . transform . position . x + offsetX , posy , Bow . transform . position . z ); } public void shootArrow () { if ( arrow != null ) { GameObject arrowObj = arrow . getObject (); arrowObj . GetComponent < Rigidbody > (). isKinematic = false ; Vector3 dir = arrowObj . transform . up * - 1 ; ArrowFlyAction arrowAction = ArrowFlyAction . GetSSAction ( 1 , dir * 30 ); ArrowFlyAction windAction = ArrowFlyAction . GetSSAction ( 0 , windMake . getWind ()); physicsActionManager . addAction ( arrowObj , arrowAction , physicsActionManager ); physicsActionManager . addAction ( arrowObj , windAction , physicsActionManager ); arrowObj . transform . parent = null ; arrow = null ; shootFinish = false ; } } public void loadResources () { Instantiate ( Resources . Load ( \"Prefabs/Land\" )); Instantiate ( Resources . Load ( \"Prefabs/Target\" )); Bow = Instantiate ( Resources . Load ( \"Prefabs/Bow\" )) as GameObject ; arrow = arrowFactory . getArrow (); } void reset () { arrow = null ; shootFinish = true ; scoreRecorder . reset (); arrowFactory . recycleAll (); } } \u5230\u8fd9\u91cc\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u5b8c\u6210\u4e86\uff0c\u96be\u5ea6\u4e0d\u7b97\u592a\u5927\uff0c\u5728\u5b66\u4e60\u4e86\u7269\u7406\u5f15\u64ce\u7684\u4f7f\u7528\u540e\uff0c\u6211\u4eecAction\u7684\u4f7f\u7528\u66f4\u52a0\u7b80\u5355\uff0c\u53ea\u9700\u8981\u52a0\u4e0a\u5bf9\u5e94\u7684\u529b\u5c31\u53ef\u4ee5\u4e86\uff0c\u5e76\u4e0d\u9700\u8981\u4e00\u4e9b\u590d\u6742\u7684\u8bed\u53e5\uff0c\u800c\u4e14\u6709\u4e86\u4e4b\u524d\u51e0\u5468\u5b8c\u6210\u7684\u57fa\u7840\u7684\u6e38\u620f\u67b6\u6784\uff0c\u6211\u4eec\u57fa\u672c\u5c31\u662f\u5b8c\u6210\u8d1f\u8d23\u6e38\u620f\u5bf9\u8c61\u7684\u521b\u5efa\u529f\u80fd\u7684\u7c7b\uff0c\u5b8c\u6210\u5bf9\u8c61\u57fa\u672c\u52a8\u4f5c\u7684\u7c7b\uff0c\u4ee5\u53ca\u6e38\u620f\u573a\u666f\u4e2d\u5bf9\u5e94\u529f\u80fd\u89e3\u8026\u51fa\u6765\u7684\u7c7b\u3002\u53ea\u8981\u6709\u4e86\u8fd9\u4e9b\u57fa\u672c\u7684\u610f\u8bc6\u540e\uff0c\u6211\u4eec\u5bf9\u4e8e\u5199\u6e38\u620f\u7684\u4e0a\u624b\u8fd8\u662f\u5f88\u5feb\u7684\u3002","title":"\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#homework5-","text":"","title":"Homework5-\u5c04\u7bad\u5c0f\u6e38\u620f"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#_1","text":"\u9776\u5bf9\u8c61\u4e3a 5 \u73af\uff0c\u6309\u73af\u8ba1\u5206\uff1b \u7bad\u5bf9\u8c61\uff0c\u5c04\u4e2d\u540e\u8981\u63d2\u5728\u9776\u4e0a \u589e\u5f3a\u8981\u6c42\uff1a\u5c04\u4e2d\u540e\uff0c\u7bad\u5bf9\u8c61\u4ea7\u751f\u98a4\u6296\u6548\u679c\uff0c\u5230\u4e0b\u4e00\u6b21\u5c04\u51fb \u6216 1\u79d2\u4ee5\u540e\uff08\u672a\u5b9e\u73b0\uff09 \u6e38\u620f\u4ec5\u4e00\u8f6e\uff0c\u65e0\u9650 trials\uff1b \u589e\u5f3a\u8981\u6c42\uff1a\u6dfb\u52a0\u4e00\u4e2a\u98ce\u5411\u548c\u5f3a\u5ea6\u6807\u5fd7\uff0c\u63d0\u9ad8\u96be\u5ea6","title":"\u6e38\u620f\u8981\u6c42"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#_2","text":"\u89c6\u9891\u6f14\u793a\u7f51\u7ad9\u4e3a ArrowGame \u4e0b\u9762\u662f\u6e38\u620f\u7684\u622a\u56fe","title":"\u5b9e\u73b0\u6548\u679c"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#uml","text":"","title":"UML\u56fe"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#_3","text":"\u505a\u4e86\u8fd9\u51e0\u6b21\u7684\u4f5c\u4e1a\u4ee5\u540e\uff0c\u6211\u53d1\u73b0\u57fa\u672c\u67b6\u6784\u7684\u4ee3\u7801\u90fd\u51e0\u4e4e\u53ef\u4ee5\u590d\u7528\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u628a\u4e00\u4e9b\u57fa\u672c\u7684\u6bcf\u6b21\u7528\u5230\u7684\u4ee3\u7801\u5f04\u4e86\u4e00\u4e2aBasicCode\u6587\u4ef6\u5939\uff0cActionManager\u4e5f\u6446\u653e\u5728\u5185\uff0c\u7f16\u5199\u6e38\u620f\u7684\u65f6\u5019\uff0c\u5728\u5176\u57fa\u7840\u4e0a\u589e\u52a0\u5c31\u597d\u4e86\u3002 \u6839\u636e\u6211\u4eec\u753b\u51fa\u7684UML\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8fd9\u6b21\u9700\u8981\u5b8c\u6210\u7684\u7c7b\u4e0d\u7b97\u591a, \u57fa\u7840\u7684\u4ee3\u7801\u90fd\u6709\uff0c\u4e0d\u4e0d\u4e0d\u8fc7\u8fd9\u6b21\u4f5c\u4e1a\u4e2d\u7684PhysicsActionManager\uff0c\u6211\u7ecf\u8fc7\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u7684\u7f16\u8f91\uff0c\u7ecf\u8fc7\u601d\u8003\uff0c\u89c9\u5f97\u5176\u5e94\u8be5\u7ee7\u627f\u6211\u4eec\u7684SSActionManager\uff0c\u8fd9\u6837\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u6211\u4eec\u51cf\u5c11\u4e86\u4e00\u4e2a\u63a5\u53e3\u7c7b\u7684\u4e66\u5199\uff0c\u8fd8\u628a\u5176\u6574\u5408\u5230\u6574\u4e2aActionManager\u7684\u7cfb\u7edf\u4e2d\uff0c\u62e5\u6709ActionCallback\u7b49\u7684\u529f\u80fd\uff0c\u52a8\u4f5c\u7684\u5b8c\u6210\u7684\u5224\u65ad\u53ef\u4ee5\u76f4\u63a5\u5728\u81ea\u8eab\u7684Update\u91cc\u5b8c\u6210\uff0c\u6bd4\u8d77\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u4f18\u5316\u4e86\u633a\u591a\u3002 \u73b0\u5728\u6211\u4eec\u5206\u7c7b\u8bf4\u8bf4","title":"\u6e38\u620f\u5b9e\u73b0"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#arrowflyaction","text":"\u8fd9\u6b21\u4f5c\u4e1a\u6700\u57fa\u672c\u7684\u80af\u5b9a\u5c31\u662f\u6211\u4eec\u7bad\u7684\u52a8\u4f5c\u4e86\uff0c\u8fd9\u91cc\u6211\u4e0d\u4ec5\u5305\u542b\u4e86\u5c04\u7bad\u51fa\u53bb\u7684\u52a8\u4f5c\uff0c\u8fd8\u5305\u542b\u4e86\u98ce\u5411\u5bf9\u4e8e\u7bad\u4ea7\u751f\u7684\u52a8\u4f5c\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u6211\u4f1a\u628a\u98ce\u529b\u5bf9\u7bad\u7684\u5f71\u54cd\u5b9e\u4f53\u5316\u6210\u52a8\u4f5c\u5728\u6e38\u620f\u4e2d\u5462\uff0c\u56e0\u4e3a\u901a\u8fc7\u4f7f\u7528ActionManager\u53bb\u7ba1\u7406\u98ce\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u573a\u666f\u63a7\u5236\u5668\u4e2d\u51cf\u5c11\u76f8\u5e94\u7684\u4ee3\u7801\u3002 ArrowFlyAction\u5b9e\u73b0\u5982\u4e0b public class ArrowFlyAction : SSAction { public int type ; // 0: windAction, 1: shootAction public Vector3 speed ; bool firstTime = false ; private ArrowFlyAction () {} public static ArrowFlyAction GetSSAction ( int type , Vector3 speed ) { ArrowFlyAction arrowFlyAction = ScriptableObject . CreateInstance < ArrowFlyAction > (); arrowFlyAction . speed = speed ; arrowFlyAction . firstTime = true ; arrowFlyAction . type = type ; return arrowFlyAction ; } public override void Start () {} public override void Update () { if ( firstTime ) { if ( type == 0 ) { // wind this . gameObject . GetComponent < Rigidbody > (). AddForce ( speed , ForceMode . Force ); } else { // shoot this . gameObject . GetComponent < Rigidbody > (). AddForce ( speed , ForceMode . VelocityChange ); } firstTime = false ; } if ( this . gameObject . transform . position . z > 50 ) { this . destroy = true ; this . callback . actionDone ( this ); } if ( this . gameObject . GetComponent < ArrowControl > (). arrowController . available == false ) { this . destroy = true ; } } }","title":"ArrowFlyAction"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#physicsactionmanager","text":"\u548c\u6211\u4e00\u5f00\u59cb\u8bf4\u7684\u4e00\u6837\uff0c\u6211\u7684PhysicsActionManager\u7ee7\u627f\u4e86SSActionManager\u7c7b,\u5e76\u5b9e\u73b0\u4e86ActionCallback\u63a5\u53e3\u4ee5\u5b8c\u6210\u4e8b\u4ef6\u7ed3\u675f\u7684\u5904\u7406\u3002\u8be5\u7c7b\u5b9e\u73b0\u633a\u7b80\u5355\uff0c\u8fd9\u91cc\u4e0d\u591aBB public class PhysicsActionManager : SSActionManager , ActionCallback { public FirstController firstController ; public void Start () { firstController = ( FirstController ) GameDirector . getInstance (). currentSceneController ; firstController . physicsActionManager = this ; } public void Update () { base . Update (); } public void actionDone ( SSAction source ) { if ((( ArrowFlyAction ) source ). type == 1 ) { firstController . arrowFactory . recycle ((( ArrowFlyAction ) source ). gameObject . GetComponent < ArrowControl > (). arrowController ); firstController . shootFinish = true ; } } } \u5230\u8fd9\u91cc\uff0c\u57fa\u7840\u7684\u90e8\u5206\u5c31\u5dee\u4e0d\u591a\u4e86\uff0c\u8fd8\u5269\u4e0b\u8d1f\u8d23\u5177\u4f53\u529f\u80fd\u7684\u5404\u4e2a\u7c7b\u4e0e\u6211\u4eec\u7684\u573a\u666f\u63a7\u5236\u5668\u3002","title":"PhysicsActionManager"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#checkcrack","text":"\u6211\u4eec\u5148\u6765\u770b\u770b\u6211\u7528\u4e8e\u68c0\u67e5\u7269\u4f53\u78b0\u649e\u4ee5\u63d0\u4f9b\u7ed9\u8ba1\u5206\u5668\uff0c\u5e76\u4e14\u4f7f\u5f97\u7bad\u4f53\u78b0\u5230\u9776\u5b50\u540e\u63d2\u5728\u9776\u4e0a(\u505c\u4f4f)\u7684\u7c7b \u8fd9\u91cc\u4e3b\u8981\u7528\u5230\u4e86OnTriggerEnter\u6765\u786e\u5b9a\u7bad\u4f53\u78b0\u5230\u9776\u5b50\u8fd9\u4e00\u4e8b\u4ef6\uff0c\u53ea\u8981\u6211\u4eec\u7684CheckCrack Add\u5230\u5404\u4e2a\u5206\u6570\u5bf9\u5e94\u7684GameObject\u4e2d\uff0c\u6211\u4eec\u7684\u9776\u5b50\u5c31\u80fd\u83b7\u53d6\u7bad\u5c04\u5230\u7684\u4f4d\u7f6e\uff0c\u4ea4\u7ed9\u8ba1\u5206\u5458\u8ba1\u5206\u3002 \u5728\u8fd9\u91cc\uff0c\u53ef\u80fd\u56e0\u4e3a\u6211\u9776\u5b50\u5b9e\u73b0\u7684\u4e0d\u592a\u597d\uff0c\u6211\u7684\u7bad\u5728\u5c04\u4e2d\u9776\u5b50\u540e\uff0c\u63d2\u5165\u9776\u5b50\u91cc\u9762\uff0c\u4ece\u800c\u4e5f\u4f1a\u89e6\u53d1\u540e\u9762\u9776\u5b50\u7684\u89e6\u53d1\u5668\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u7684ArrowController\u91cc\u52a0\u5165\u4e86\u4e00\u4e2aavailable\uff0c\u8fd9\u6837\u4fdd\u8bc1\u7bad\u4e00\u65e6\u63d2\u5165\u5c31\u4e0d\u518d\u5904\u7406\u5bf9\u5e94\u7684\u89e6\u53d1\u4e8b\u4ef6\u3002 public class CheckCrack : MonoBehaviour { public FirstController firstController ; public ScoreRecorder scoreRecorder ; void Start () { firstController = ( FirstController ) GameDirector . getInstance (). currentSceneController ; scoreRecorder = ScoreRecorder . getInstance (); } void OnTriggerEnter ( Collider arrow ) { if ( arrow . gameObject . GetComponent < ArrowControl > (). arrowController . available == true ) { arrow . gameObject . GetComponent < Rigidbody > (). velocity = Vector3 . zero ; arrow . gameObject . GetComponent < Rigidbody > (). isKinematic = true ; arrow . gameObject . GetComponent < ArrowControl > (). arrowController . available = false ; arrow . gameObject . transform . GetComponent < Collider > (). enabled = false ; firstController . shootFinish = true ; firstController . showCamera . showCamera (); scoreRecorder . record ( gameObject ); } } }","title":"CheckCrack"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#scorerecorder","text":"\u8ba1\u5206\u5458\u7684\u5b9e\u73b0\u548c\u4e0a\u6b21\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u8fd9\u4e00\u6b21\u662f\u6839\u636eGameObbject\u7684\u540d\u5b57\u6765\u52a0\u5206 public class ScoreRecorder { public int score = 0 ; Text gameInfo ; private static ScoreRecorder instance ; public static ScoreRecorder getInstance () { if ( instance == null ) { instance = new ScoreRecorder (); } return instance ; } private ScoreRecorder () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/ScoreInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text > (); gameInfo . text = \"\" + score ; } public void record ( GameObject hitObj ) { switch ( hitObj . name ) { case \"1\" : score += 1 ; break ; case \"2\" : score += 2 ; break ; case \"3\" : score += 3 ; break ; case \"4\" : score += 4 ; break ; case \"5\" : score += 5 ; break ; } gameInfo . text = \"\" + score ; } public int getScore () { return score ; } public void reset () { score = 0 ; gameInfo . text = \"\" + score ; } }","title":"ScoreRecorder"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#showsubcamera","text":"\u8fd9\u91cc\u6211\u52a0\u4e86\u4e2a\u5b50\u6444\u50cf\u5934\u7684\u529f\u80fd\uff0c\u82e5\u73a9\u5bb6\u5c04\u4e2d\u9776\u5b50\uff0c\u6211\u4f1a\u6fc0\u6d3b\u8be5\u6444\u50cf\u5934\uff0c\u4f7f\u73a9\u5bb6\u6e05\u6670\u770b\u5230\u7bad\u5c04\u4e2d\u7684\u4f4d\u7f6e public class showSubCamera : MonoBehaviour { private float time = 0 ; private bool show = false ; GameObject cameraObj ; // Use this for initialization void Start () { show = false ; cameraObj = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/SubCamera\" )) as GameObject ); cameraObj . SetActive ( false ); } public void showCamera () { cameraObj . SetActive ( true ); show = true ; time = 1 ; } // Update is called once per frame void Update () { if ( show ) { time -= Time . deltaTime ; if ( time <= 0 ) { show = false ; cameraObj . SetActive ( false ); } } } }","title":"showSubCamera"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#windmake","text":"\u6e38\u620f\u4e2d\u6211\u76f4\u63a5\u5b9e\u73b0\u4e86\u4e00\u4e2aWindMake\u7c7b\u6765\u7ba1\u7406\u98ce\u7684\u751f\u6210\uff0c\u6bcf240\u5e27\u6570\u66f4\u6362\u4e00\u4e2a\u98ce\u5411\uff0c\u5e76\u4e14\u628a\u5176\u5b9e\u65f6\u7684\u98ce\u5411\u663e\u793a\u5230\u6e38\u620f\u753b\u9762\u7684\u5de6\u4e0a\u89d2 public class WindMake : MonoBehaviour { public Vector3 Wind ; Text gameInfo ; int fpsCount = 0 ; void Awake () { gameInfo = ( GameObject . Instantiate ( Resources . Load ( \"Prefabs/WindInfo\" )) as GameObject ). transform . Find ( \"Text\" ). GetComponent < Text > (); makeWind (); fpsCount = 0 ; } void Update () { fpsCount ++; if ( fpsCount == 240 ) { Wind = makeWind (); fpsCount = 0 ; } // 240\u5e27\u6362\u4e00\u4e2a\u98ce\u5411 } public Vector3 makeWind () { float y = Random . Range (- 100 , 100 ); float z = Random . Range (- 30 , 0 ); float x = Random . Range (- 50 , 50 ); gameInfo . text = \"(\" + x + \",\" + y + \",\" + z + \")\" ; return new Vector3 ( x , y , z ); } public Vector3 getWind () { return Wind ; } } \u8bf4\u5230\u8fd9\u91cc\uff0c\u7a81\u7136\u770b\u5230\u8fd8\u6709\u6211\u4eec\u7684ArrowFactory\u6ca1\u6709\u8bb2\ud83c\udf1a","title":"WindMake"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#arrowfactory","text":"\u5b9e\u73b0\u548c\u57fa\u672c\u7684Factory\u7c7b\u4f3c\uff0c\u6ca1\u6709\u4ec0\u4e48\u53ef\u8bb2\u7684, \u5c31\u662f\u52a0\u4e0a\u4e86\u5bf9\u4e8e\u521a\u4f53\u7684\u521d\u59cb\u5316\u7b49\u7684\u4e00\u4e9b\u5185\u5bb9 public class ArrowFactory : MonoBehaviour { Queue < ArrowController > waitingQueue ; List < ArrowController > runningList ; private FirstController firstController ; GameObject basic ; private void Awake () { waitingQueue = new Queue < ArrowController > (); runningList = new List < ArrowController > (); basic = Instantiate ( Resources . Load ( \"Prefabs/Arrow\" , typeof ( GameObject )) as GameObject ); basic . SetActive ( false ); } public ArrowController getArrow () { ArrowController arrow ; if ( waitingQueue . Count == 0 ) { GameObject newArrow = GameObject . Instantiate ( basic ); arrow = new ArrowController ( newArrow ); } else { arrow = waitingQueue . Dequeue (); } arrow . getObject (). transform . parent = (( FirstController ) GameDirector . getInstance (). currentSceneController ). Bow . transform ; arrow . getObject (). GetComponent < Rigidbody > (). velocity = Vector3 . zero ; arrow . getObject (). transform . localPosition = new Vector3 ( 0 , 2 , 1 ); arrow . getObject (). GetComponent < Rigidbody > (). isKinematic = true ; arrow . getObject (). transform . GetComponent < Collider > (). enabled = true ; arrow . appear (); runningList . Add ( arrow ); return arrow ; } public void recycle ( ArrowController arrow ) { arrow . disappear (); arrow . getObject (). transform . position = new Vector3 ( 0 , 0 , - 8 ); arrow . getObject (). transform . GetComponent < Collider > (). enabled = false ; runningList . Remove ( arrow ); waitingQueue . Enqueue ( arrow ); } public void recycleAll () { while ( runningList . Count != 0 ) { recycle ( runningList [ 0 ]); } } }","title":"ArrowFactory"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#arrowcontroller","text":"\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbfArrow\u7684\u5b9e\u73b0\uff0c\u6211\u5728\u8fd9\u6b21\u4f5c\u4e1a\u4e2d\u4e5f\u4e00\u6837\u5b9e\u73b0\u4e86ArrowController\u7c7b\uff0c\u52a0\u5165\u4e86\u7bad\u4f53\u7684\u57fa\u672c\u72b6\u6001\u7684\u4fe1\u606f\uff0c\u5e76\u65b9\u4fbf\u4e86\u4e4b\u540e\u7684\u62d3\u5c55\u3002 public class ArrowController { GameObject arrow ; ArrowControl arrowControl ; public bool available = false ; public ArrowController ( GameObject gameObject ) { this . arrow = gameObject ; arrowControl = gameObject . AddComponent < ArrowControl > (); arrowControl . arrowController = this ; } public void appear () { available = true ; arrow . SetActive ( true ); } public void disappear () { arrow . SetActive ( false ); } public GameObject getObject () { return arrow ; } }","title":"ArrowController"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#arrowcontrol","text":"\u8fd9\u4e2a\u7c7b\u4e3b\u8981\u662f\u7528\u4e8eGameObject\u83b7\u53d6\u5176\u5bf9\u5e94\u7684Controller public class ArrowControl : MonoBehaviour { public ArrowController arrowController ; }","title":"ArrowControl\u7c7b"},{"location":"unity3D-learning/\u5b66\u4e60\u7b14\u8bb09-\u5c04\u7bad\u5c0f\u6e38\u620f/#firstcontroller","text":"\u5199\u5b8c\u5404\u4e2a\u529f\u80fd\u7684\u7c7b\u540e\uff0c\u5c31\u5269\u4e0b\u6211\u4eec\u7684\u6e38\u620f\u573a\u666f\u63a7\u5236\u5668\u4e86,\u8fd9\u91cc\u57fa\u672c\u5c31\u662f\u5404\u4e2a\u7c7b\u7684\u6574\u5408\u4ee5\u53ca\u7528\u6237\u4ea4\u4e92\u7684\u5b9e\u73b0\uff0c\u5b9e\u73b0\u4e0d\u96be\u3002 public class FirstController : MonoBehaviour , ISceneController { public PhysicsActionManager physicsActionManager ; public GameDirector gameDirector ; public GameObject Bow ; public ArrowController arrow ; public ScoreRecorder scoreRecorder ; public ArrowFactory arrowFactory ; public WindMake windMake ; public showSubCamera showCamera ; GUIStyle gameInfoStyle ; public bool shootFinish = true ; // whether arrow hit success void Awake () { arrowFactory = gameObject . AddComponent < ArrowFactory > (); windMake = gameObject . AddComponent < WindMake > (); physicsActionManager = gameObject . AddComponent < PhysicsActionManager > (); scoreRecorder = ScoreRecorder . getInstance (); showCamera = gameObject . AddComponent < showSubCamera > (); gameDirector = GameDirector . getInstance (); gameDirector . currentSceneController = this ; } // Use this for initialization void Start () { loadResources (); Cursor . lockState = CursorLockMode . Locked ; Cursor . visible = false ; gameInfoStyle = new GUIStyle (); gameInfoStyle . fontSize = 25 ; } void OnGUI () { GUI . Label ( new Rect ( 20 , 80 , 200 , 50 ), \"Press space to restart!\" , gameInfoStyle ); } // Update is called once per frame void Update () { float offsetX = Input . GetAxis ( \"Mouse X\" ); float offsetY = Input . GetAxis ( \"Mouse Y\" ); moveBow ( offsetX , offsetY ); if ( Input . GetKeyDown ( \"escape\" )) { Cursor . visible = true ; Cursor . lockState = CursorLockMode . None ; } if ( Input . GetButton ( \"Fire1\" )) { Cursor . lockState = CursorLockMode . Locked ; Cursor . visible = false ; shootArrow (); } if ( Input . GetKeyDown ( \"space\" )) { reset (); } if ( shootFinish && arrow == null ) { arrow = arrowFactory . getArrow (); } } public void moveBow ( float offsetX , float offsetY ) { float posy = Mathf . Clamp ( Bow . transform . position . y + offsetY , 1 , 30 ); Bow . transform . position = new Vector3 ( Bow . transform . position . x + offsetX , posy , Bow . transform . position . z ); } public void shootArrow () { if ( arrow != null ) { GameObject arrowObj = arrow . getObject (); arrowObj . GetComponent < Rigidbody > (). isKinematic = false ; Vector3 dir = arrowObj . transform . up * - 1 ; ArrowFlyAction arrowAction = ArrowFlyAction . GetSSAction ( 1 , dir * 30 ); ArrowFlyAction windAction = ArrowFlyAction . GetSSAction ( 0 , windMake . getWind ()); physicsActionManager . addAction ( arrowObj , arrowAction , physicsActionManager ); physicsActionManager . addAction ( arrowObj , windAction , physicsActionManager ); arrowObj . transform . parent = null ; arrow = null ; shootFinish = false ; } } public void loadResources () { Instantiate ( Resources . Load ( \"Prefabs/Land\" )); Instantiate ( Resources . Load ( \"Prefabs/Target\" )); Bow = Instantiate ( Resources . Load ( \"Prefabs/Bow\" )) as GameObject ; arrow = arrowFactory . getArrow (); } void reset () { arrow = null ; shootFinish = true ; scoreRecorder . reset (); arrowFactory . recycleAll (); } } \u5230\u8fd9\u91cc\u8fd9\u5468\u7684\u4f5c\u4e1a\u5c31\u5b8c\u6210\u4e86\uff0c\u96be\u5ea6\u4e0d\u7b97\u592a\u5927\uff0c\u5728\u5b66\u4e60\u4e86\u7269\u7406\u5f15\u64ce\u7684\u4f7f\u7528\u540e\uff0c\u6211\u4eecAction\u7684\u4f7f\u7528\u66f4\u52a0\u7b80\u5355\uff0c\u53ea\u9700\u8981\u52a0\u4e0a\u5bf9\u5e94\u7684\u529b\u5c31\u53ef\u4ee5\u4e86\uff0c\u5e76\u4e0d\u9700\u8981\u4e00\u4e9b\u590d\u6742\u7684\u8bed\u53e5\uff0c\u800c\u4e14\u6709\u4e86\u4e4b\u524d\u51e0\u5468\u5b8c\u6210\u7684\u57fa\u7840\u7684\u6e38\u620f\u67b6\u6784\uff0c\u6211\u4eec\u57fa\u672c\u5c31\u662f\u5b8c\u6210\u8d1f\u8d23\u6e38\u620f\u5bf9\u8c61\u7684\u521b\u5efa\u529f\u80fd\u7684\u7c7b\uff0c\u5b8c\u6210\u5bf9\u8c61\u57fa\u672c\u52a8\u4f5c\u7684\u7c7b\uff0c\u4ee5\u53ca\u6e38\u620f\u573a\u666f\u4e2d\u5bf9\u5e94\u529f\u80fd\u89e3\u8026\u51fa\u6765\u7684\u7c7b\u3002\u53ea\u8981\u6709\u4e86\u8fd9\u4e9b\u57fa\u672c\u7684\u610f\u8bc6\u540e\uff0c\u6211\u4eec\u5bf9\u4e8e\u5199\u6e38\u620f\u7684\u4e0a\u624b\u8fd8\u662f\u5f88\u5feb\u7684\u3002","title":"FirstController\u7c7b"}]}